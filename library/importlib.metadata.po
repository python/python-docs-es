# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-10-04 22:03-0300\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language-Team: JuliKM@gmail.com\n"
"Language: es_AR\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/importlib.metadata.rst:5
msgid "Using importlib.metadata"
msgstr "Usando importlib.metadata"

#: ../Doc/library/importlib.metadata.rst:8
msgid ""
"This functionality is provisional and may deviate from the usual version "
"semantics of the standard library."
msgstr ""
"Esta funcionalidad es provisional y puede desviarse de la versión habitual "
"de la semántica de la librería estándar."

#: ../Doc/library/importlib.metadata.rst:11
msgid ""
"``importlib.metadata`` is a library that provides for access to installed "
"package metadata.  Built in part on Python's import system, this library "
"intends to replace similar functionality in the `entry point API`_ and "
"`metadata API`_ of ``pkg_resources``.  Along with ``importlib.resources`` in "
"`Python 3.7 and newer`_ (backported as `importlib_resources`_ for older "
"versions of Python), this can eliminate the need to use the older and less "
"efficient ``pkg_resources`` package."
msgstr ""
"``importlib.metadata`` es una biblioteca que proporciona acceso a los "
"metadatos del paquete instalado. Construida en parte sobre el sistema de "
"importación de Python, esta biblioteca tiene la intención de reemplazar una "
"funcionalidad similar ofrecida por la `API del punto de entrada`_ y la `API "
"de metadatos`_ de ``pkg_resources``. Junto con ``importlib.resources`` en "
"`Python 3.7 y versiones posteriores`_ (retroimportada como "
"`importlib_resources`_ para versiones anteriores de Python), esto puede "
"eliminar la necesidad de usar el paquete ``pkg_resources``, antiguo y menos "
"eficiente."

#: ../Doc/library/importlib.metadata.rst:20
msgid ""
"By \"installed package\" we generally mean a third-party package installed "
"into Python's ``site-packages`` directory via tools such as `pip <https://"
"pypi.org/project/pip/>`_.  Specifically, it means a package with either a "
"discoverable ``dist-info`` or ``egg-info`` directory, and metadata defined "
"by `PEP 566`_ or its older specifications. By default, package metadata can "
"live on the file system or in zip archives on ``sys.path``.  Through an "
"extension mechanism, the metadata can live almost anywhere."
msgstr ""
"Por \"paquete instalado\" generalmente nos referimos a un paquete de "
"terceros instalado en el directorio ``site-packages`` de Python a través de "
"herramientas como `pip <https://pypi.org/project/pip/>`_. Específicamente, "
"significa un paquete con un directorio reconocible ``dist-info`` o ``egg-"
"info`` y metadatos definidos por `PEP 566`_ o sus especificaciones "
"anteriores. De forma predeterminada, los metadatos del paquete pueden vivir "
"en el sistema de archivos o en archivos zip en ``sys.path``. A través de un "
"mecanismo de extensión, los metadatos pueden vivir casi en cualquier lugar."

#: ../Doc/library/importlib.metadata.rst:31
msgid "Overview"
msgstr "Descripción general"

#: ../Doc/library/importlib.metadata.rst:33
msgid ""
"Let's say you wanted to get the version string for a package you've "
"installed using ``pip``.  We start by creating a virtual environment and "
"installing something into it:"
msgstr ""
"Supongamos que desea obtener la cadena de versión para un paquete que ha "
"instalado con ``pip``.  Comenzamos creando un entorno virtual e instalando "
"algo en él:"

#: ../Doc/library/importlib.metadata.rst:43
msgid "You can get the version string for ``wheel`` by running the following:"
msgstr ""
"Se puede obtener la cadena de versión para ``wheel`` ejecutando lo siguiente:"

#: ../Doc/library/importlib.metadata.rst:52
msgid ""
"You can also get the set of entry points keyed by group, such as "
"``console_scripts``, ``distutils.commands`` and others.  Each group contains "
"a sequence of :ref:`EntryPoint <entry-points>` objects."
msgstr ""
"También se puede obtener el conjunto de los puntos de entrada clasificados "
"usando el grupo, como ``console_scripts``, ``distutils.commands`` y otros, "
"como claves. Cada grupo contiene una secuencia de objetos :ref:`EntryPoint "
"<entry-points>`."

#: ../Doc/library/importlib.metadata.rst:56
msgid "You can get the :ref:`metadata for a distribution <metadata>`::"
msgstr ""
"Se pueden obtener los :ref:`metadatos para una distribución <metadata>`:"

#: ../Doc/library/importlib.metadata.rst:61
msgid ""
"You can also get a :ref:`distribution's version number <version>`, list its :"
"ref:`constituent files <files>`, and get a list of the distribution's :ref:"
"`requirements`."
msgstr ""
"También se puede obtener el :ref:`número de versión de una distribución "
"<version>`, enumerar sus :ref:`archivos constituyentes <files>` y obtener "
"una lista de los :ref:`requirements` de la distribución."

#: ../Doc/library/importlib.metadata.rst:67
msgid "Functional API"
msgstr "API funcional"

#: ../Doc/library/importlib.metadata.rst:69
msgid "This package provides the following functionality via its public API."
msgstr ""
"Este paquete provee la siguiente funcionalidad a través de su API pública."

#: ../Doc/library/importlib.metadata.rst:75
msgid "Entry points"
msgstr "Puntos de entrada"

#: ../Doc/library/importlib.metadata.rst:77
msgid ""
"The ``entry_points()`` function returns a dictionary of all entry points, "
"keyed by group.  Entry points are represented by ``EntryPoint`` instances; "
"each ``EntryPoint`` has a ``.name``, ``.group``, and ``.value`` attributes "
"and a ``.load()`` method to resolve the value."
msgstr ""
"La función ``entry_points()`` retorna un diccionario con todos los puntos de "
"entrada, utilizando el grupo como claves. Los puntos de entrada están "
"representados por instancias de ``EntryPoint``. Cada ``EntryPoint`` tiene "
"los atributos ``.name``, ``.group`` y ``.value``, y un método ``.load()`` "
"para resolver el valor."

#: ../Doc/library/importlib.metadata.rst:93
msgid ""
"The ``group`` and ``name`` are arbitrary values defined by the package "
"author and usually a client will wish to resolve all entry points for a "
"particular group.  Read `the setuptools docs <https://setuptools.readthedocs."
"io/en/latest/setuptools.html#dynamic-discovery-of-services-and-plugins>`_ "
"for more information on entrypoints, their definition, and usage."
msgstr ""
"``group`` y ``name`` son valores arbitrarios definidos por el autor del "
"paquete y, en general, un cliente deseará resolver todos los puntos de "
"entrada para un grupo en particular. Lee `la documentación de setuptools "
"<https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-"
"discovery-of-services-and-plugins>`_ para obtener más información sobre los "
"puntos de entrada, su definición y uso."

#: ../Doc/library/importlib.metadata.rst:103
msgid "Distribution metadata"
msgstr "Metadatos de distribución"

#: ../Doc/library/importlib.metadata.rst:105
msgid ""
"Every distribution includes some metadata, which you can extract using the "
"``metadata()`` function::"
msgstr ""
"Cada distribución incluye algunos metadatos, que puede extraer utilizando la "
"función ``metadata()``:"

#: ../Doc/library/importlib.metadata.rst:110
msgid ""
"The keys of the returned data structure [#f1]_ name the metadata keywords, "
"and their values are returned unparsed from the distribution metadata::"
msgstr ""
"Las claves de la estructura de datos retornada [#f1]_ nombran las palabras "
"clave de los metadatos y sus valores se retornan sin analizar de los "
"metadatos de distribución:"

#: ../Doc/library/importlib.metadata.rst:120
msgid "Distribution versions"
msgstr "Versiones de distribución"

#: ../Doc/library/importlib.metadata.rst:122
msgid ""
"The ``version()`` function is the quickest way to get a distribution's "
"version number, as a string::"
msgstr ""
"La función ``version()`` es la forma más rápida para obtener el número de "
"versión de una distribución, como una cadena de caracteres:"

#: ../Doc/library/importlib.metadata.rst:132
msgid "Distribution files"
msgstr "Archivos de distribución"

#: ../Doc/library/importlib.metadata.rst:134
msgid ""
"You can also get the full set of files contained within a distribution.  The "
"``files()`` function takes a distribution package name and returns all of "
"the files installed by this distribution.  Each file object returned is a "
"``PackagePath``, a `pathlib.Path`_ derived object with additional ``dist``, "
"``size``, and ``hash`` properties as indicated by the metadata.  For "
"example::"
msgstr ""
"También se puede obtener el conjunto completo de archivos contenidos dentro "
"de una distribución. La función ``files()`` toma el nombre de un paquete de "
"distribución y retorna todos los archivos instalados por esta distribución. "
"Cada objeto de archivo retornado es un ``PackagePath``, un objeto derivado "
"de `pathlib.Path`_ con las propiedades adicionales ``dist``, ``size`` y "
"``hash`` según indican los metadatos. Por ejemplo:"

#: ../Doc/library/importlib.metadata.rst:150
msgid "Once you have the file, you can also read its contents::"
msgstr "Una vez que se tiene el archivo, también se puede leer su contenido:"

#: ../Doc/library/importlib.metadata.rst:161
msgid ""
"In the case where the metadata file listing files (RECORD or SOURCES.txt) is "
"missing, ``files()`` will return ``None``. The caller may wish to wrap calls "
"to ``files()`` in `always_iterable <https://more-itertools.readthedocs.io/en/"
"stable/api.html#more_itertools.always_iterable>`_ or otherwise guard against "
"this condition if the target distribution is not known to have the metadata "
"present."
msgstr ""
"En el caso de que el archivo de metadatos que enumera los archivos (RECORD o "
"SOURCES.txt) falte, ``files()`` retornará ``None``. Para evitar esta "
"condición, si no se sabe si la distribución de destino contiene los "
"metadatos, se puede envolver las llamadas a ``files()`` con `always_iterable "
"<https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools."
"always_iterable>`_ u otra protección similar."

#: ../Doc/library/importlib.metadata.rst:172
msgid "Distribution requirements"
msgstr "Requerimientos de la distribución"

#: ../Doc/library/importlib.metadata.rst:174
msgid ""
"To get the full set of requirements for a distribution, use the "
"``requires()`` function::"
msgstr ""
"Para obtener el conjunto completo de los requerimientos de una distribución, "
"usa la función ``requires()``:"

#: ../Doc/library/importlib.metadata.rst:182
msgid "Distributions"
msgstr "Distribuciones"

#: ../Doc/library/importlib.metadata.rst:184
msgid ""
"While the above API is the most common and convenient usage, you can get all "
"of that information from the ``Distribution`` class.  A ``Distribution`` is "
"an abstract object that represents the metadata for a Python package.  You "
"can get the ``Distribution`` instance::"
msgstr ""
"Si bien la API de arriba es el uso más común y conveniente, se puede obtener "
"toda esa información de la clase ``Distribution``. Una instancia de "
"``Distribution`` es un objeto abstracto que representa los metadatos de un "
"paquete de Python. Se puede obtener la instancia de ``Distribución`` de la "
"siguiente forma:"

#: ../Doc/library/importlib.metadata.rst:192
msgid ""
"Thus, an alternative way to get the version number is through the "
"``Distribution`` instance::"
msgstr ""
"Por lo tanto, una forma alternativa de obtener el número de versión es "
"mediante la instancia de ``Distribución``:"

#: ../Doc/library/importlib.metadata.rst:198
msgid ""
"There are all kinds of additional metadata available on the ``Distribution`` "
"instance::"
msgstr ""
"Hay todo tipo de metadatos disponibles adicionales en la instancia de "
"``Distribution``:"

#: ../Doc/library/importlib.metadata.rst:206
msgid ""
"The full set of available metadata is not described here.  See `PEP 566 "
"<https://www.python.org/dev/peps/pep-0566/>`_ for additional details."
msgstr ""
"El conjunto completo de metadatos disponible no está descripto aquí. "
"Consultar `PEP 566 <https://www.python.org/dev/peps/pep-0566/>`_ para "
"detalles adicionales."

#: ../Doc/library/importlib.metadata.rst:211
msgid "Extending the search algorithm"
msgstr "Extendiendo el algoritmo de búsqueda"

#: ../Doc/library/importlib.metadata.rst:213
msgid ""
"Because package metadata is not available through ``sys.path`` searches, or "
"package loaders directly, the metadata for a package is found through import "
"system `finders`_.  To find a distribution package's metadata, ``importlib."
"metadata`` queries the list of `meta path finders`_ on `sys.meta_path`_."
msgstr ""
"Debido a que los metadatos de los paquetes no están disponibles a través de "
"las búsquedas de ``sys.path`` o directamente de los cargadores de paquetes, "
"los metadatos de un paquete se encuentran a través de los `finders`_ del "
"sistema de importación. Para encontrar los metadatos de un paquete de "
"distribución, ``importlib.metadata`` consulta la lista de `meta buscadores "
"de ruta`_ en `sys.meta_path`_."

#: ../Doc/library/importlib.metadata.rst:219
msgid ""
"The default ``PathFinder`` for Python includes a hook that calls into "
"``importlib.metadata.MetadataPathFinder`` for finding distributions loaded "
"from typical file-system-based paths."
msgstr ""
"El ``PathFinder`` predeterminado para Python incluye un enlace que llama a "
"``importlib.metadata.MetadataPathFinder`` para encontrar distribuciones "
"cargadas desde rutas basadas en sistemas de archivos típicos."

#: ../Doc/library/importlib.metadata.rst:223
msgid ""
"The abstract class :py:class:`importlib.abc.MetaPathFinder` defines the "
"interface expected of finders by Python's import system. ``importlib."
"metadata`` extends this protocol by looking for an optional "
"``find_distributions`` callable on the finders from ``sys.meta_path`` and "
"presents this extended interface as the ``DistributionFinder`` abstract base "
"class, which defines this abstract method::"
msgstr ""
"La clase abstracta :py:class:`importlib.abc.MetaPathFinder` define la "
"interfaz que se espera de los buscadores por el sistema de importación de "
"Python. ``importlib.metadata`` amplía este protocolo buscando una "
"``find_distributions`` opcional invocable en los buscadores desde ``sys."
"meta_path`` y presenta esta interfaz extendida como la clase base abstracta "
"``DistributionFinder``, que define este método abstracto:"

#: ../Doc/library/importlib.metadata.rst:237
msgid ""
"The ``DistributionFinder.Context`` object provides ``.path`` and ``.name`` "
"properties indicating the path to search and names to match and may supply "
"other relevant context."
msgstr ""
"El objeto ``DistributionFinder.Context`` proporciona propiedades ``.path`` y "
"``.name`` que indican la ruta de búsqueda y los nombres que deben coincidir "
"y puede proporcionar otro contexto relevante."

#: ../Doc/library/importlib.metadata.rst:241
msgid ""
"What this means in practice is that to support finding distribution package "
"metadata in locations other than the file system, subclass ``Distribution`` "
"and implement the abstract methods. Then from a custom finder, return "
"instances of this derived ``Distribution`` in the ``find_distributions()`` "
"method."
msgstr ""
"Lo que esto significa en la práctica es que, para soportar la búsqueda de "
"metadatos en paquetes de distribución en ubicaciones distintas al sistema de "
"archivos, se debe subclasificar ``Distribution`` e implementar sus métodos "
"abstractos. Luego, en el método ``find_distributions()`` de un buscador "
"personalizado no hay más que retornar instancias de esta ``Distribution`` "
"derivada."

#: ../Doc/library/importlib.metadata.rst:260
msgid "Footnotes"
msgstr "Notas al pie"

#: ../Doc/library/importlib.metadata.rst:261
msgid ""
"Technically, the returned distribution metadata object is an `email.message."
"Message <https://docs.python.org/3/library/email.message.html#email.message."
"EmailMessage>`_ instance, but this is an implementation detail, and not part "
"of the stable API.  You should only use dictionary-like methods and syntax "
"to access the metadata contents."
msgstr ""
"Técnicamente, el objeto de metadatos de distribución retornado es una "
"instancia de `email.message.Message <https://docs.python.org/3/library/email."
"message.html#email.message.EmailMessage>`_, pero esto es un detalle de "
"implementación y no parte de la API estable. Solo se deben usar métodos y "
"sintaxis similares a los de un diccionario para acceder al contenido de los "
"metadatos."

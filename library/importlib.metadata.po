# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2021-10-29 07:47-0300\n"
"Last-Translator: diecristher@gmail.com\n"
"Language: es_AR\n"
"Language-Team: JuliKM@gmail.com\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../Doc/library/importlib.metadata.rst:5
msgid "Using :mod:`!importlib.metadata`"
msgstr "Usando :mod:`!importlib.metadata`"

#: ../Doc/library/importlib.metadata.rst:11
msgid "``importlib.metadata`` is no longer provisional."
msgstr "``importlib.metadata`` ya no es provisional."

#: ../Doc/library/importlib.metadata.rst:14
#, fuzzy
msgid "**Source code:** :source:`Lib/importlib/metadata/__init__.py`"
msgstr "**Código fuente:** :source:`Lib/importlib/metadata.py`"

#: ../Doc/library/importlib.metadata.rst:16
#, fuzzy
msgid ""
"``importlib.metadata`` is a library that provides for access to installed "
"package metadata.  Built in part on Python's import system, this library "
"intends to replace similar functionality in the `entry point API`_ and "
"`metadata API`_ of ``pkg_resources``.  Along with :mod:`importlib.resources` "
"(with new features backported to the `importlib_resources`_ package), this "
"can eliminate the need to use the older and less efficient ``pkg_resources`` "
"package."
msgstr ""
"``importlib.metadata`` es una biblioteca que proporciona acceso a los "
"metadatos del paquete instalado. Construida en parte sobre el sistema de "
"importación de Python, esta biblioteca tiene la intención de reemplazar una "
"funcionalidad similar ofrecida por la `API del punto de entrada`_ y la `API "
"de metadatos`_ de ``pkg_resources``. Junto con :mod:`importlib.resources` en "
"Python 3.7 y versiones posteriores (respaldada como `importlib_resources`_ "
"para versiones anteriores de Python), esto puede eliminar la necesidad de "
"usar el paquete ``pkg_resources``, antiguo y menos eficiente."

#: ../Doc/library/importlib.metadata.rst:25
msgid ""
"By \"installed package\" we generally mean a third-party package installed "
"into Python's ``site-packages`` directory via tools such as `pip <https://"
"pypi.org/project/pip/>`_.  Specifically, it means a package with either a "
"discoverable ``dist-info`` or ``egg-info`` directory, and metadata defined "
"by :pep:`566` or its older specifications. By default, package metadata can "
"live on the file system or in zip archives on :data:`sys.path`.  Through an "
"extension mechanism, the metadata can live almost anywhere."
msgstr ""
"Por \"paquete instalado\" generalmente nos referimos a un paquete de "
"terceros instalado en el directorio ``site-packages`` de Python a través de "
"herramientas como `pip <https://pypi.org/project/pip/>`_. Específicamente, "
"significa un paquete con un directorio reconocible ``dist-info`` o ``egg-"
"info`` y metadatos definidos por :pep:`566` o sus especificaciones "
"anteriores. De forma predeterminada, los metadatos del paquete pueden vivir "
"en el sistema de archivos o en archivos zip en :data:`sys.path`. A través de "
"un mecanismo de extensión, los metadatos pueden vivir casi en cualquier "
"lugar."

#: ../Doc/library/importlib.metadata.rst:36
msgid "Overview"
msgstr "Descripción general"

#: ../Doc/library/importlib.metadata.rst:38
msgid ""
"Let's say you wanted to get the version string for a package you've "
"installed using ``pip``.  We start by creating a virtual environment and "
"installing something into it:"
msgstr ""
"Supongamos que desea obtener la cadena de versión para un paquete que ha "
"instalado con ``pip``.  Comenzamos creando un entorno virtual e instalando "
"algo en él:"

#: ../Doc/library/importlib.metadata.rst:48
msgid "You can get the version string for ``wheel`` by running the following:"
msgstr ""
"Se puede obtener la cadena de versión para ``wheel`` ejecutando lo siguiente:"

#: ../Doc/library/importlib.metadata.rst:57
msgid ""
"You can also get the set of entry points keyed by group, such as "
"``console_scripts``, ``distutils.commands`` and others.  Each group contains "
"a sequence of :ref:`EntryPoint <entry-points>` objects."
msgstr ""
"También se puede obtener el conjunto de los puntos de entrada clasificados "
"usando el grupo, como ``console_scripts``, ``distutils.commands`` y otros, "
"como claves. Cada grupo contiene una secuencia de objetos :ref:`EntryPoint "
"<entry-points>`."

#: ../Doc/library/importlib.metadata.rst:61
msgid "You can get the :ref:`metadata for a distribution <metadata>`::"
msgstr ""
"Se pueden obtener los :ref:`metadatos para una distribución <metadata>`::"

#: ../Doc/library/importlib.metadata.rst:66
msgid ""
"You can also get a :ref:`distribution's version number <version>`, list its :"
"ref:`constituent files <files>`, and get a list of the distribution's :ref:"
"`requirements`."
msgstr ""
"También se puede obtener el :ref:`número de versión de una distribución "
"<version>`, enumerar sus :ref:`archivos constituyentes <files>` y obtener "
"una lista de los :ref:`requirements` de la distribución."

#: ../Doc/library/importlib.metadata.rst:72
msgid "Functional API"
msgstr "API funcional"

#: ../Doc/library/importlib.metadata.rst:74
msgid "This package provides the following functionality via its public API."
msgstr ""
"Este paquete provee la siguiente funcionalidad a través de su API pública."

#: ../Doc/library/importlib.metadata.rst:80
msgid "Entry points"
msgstr "Puntos de entrada"

#: ../Doc/library/importlib.metadata.rst:82
msgid ""
"The ``entry_points()`` function returns a collection of entry points. Entry "
"points are represented by ``EntryPoint`` instances; each ``EntryPoint`` has "
"a ``.name``, ``.group``, and ``.value`` attributes and a ``.load()`` method "
"to resolve the value.  There are also ``.module``, ``.attr``, and ``."
"extras`` attributes for getting the components of the ``.value`` attribute."
msgstr ""
"La función ``entry_points()`` retorna una colección de todos los puntos de "
"entrada. Los puntos de entrada están representados por instancias de "
"``EntryPoint``. Cada ``EntryPoint`` tiene los atributos ``.name``, ``."
"group`` y ``.value``, y un método ``.load()`` para resolver el valor. "
"También hay atributos ``.module``, ``.attr`` y ``.extras`` para obtener los "
"componentes del atributo ``.value``."

#: ../Doc/library/importlib.metadata.rst:89
msgid "Query all entry points::"
msgstr "Consultar todos los puntos de entrada::"

#: ../Doc/library/importlib.metadata.rst:93
msgid ""
"The ``entry_points()`` function returns an ``EntryPoints`` object, a "
"sequence of all ``EntryPoint`` objects with ``names`` and ``groups`` "
"attributes for convenience::"
msgstr ""
"La función ``entry_points()`` retorna un objeto ``EntryPoints``, una "
"secuencia de todos los objetos ``EntryPoint`` con atributos ``names`` y "
"``groups`` por conveniencia::"

#: ../Doc/library/importlib.metadata.rst:100
msgid ""
"``EntryPoints`` has a ``select`` method to select entry points matching "
"specific properties. Select entry points in the ``console_scripts`` group::"
msgstr ""
"``EntryPoints`` tiene un método ``select`` para seleccionar puntos de "
"entrada que coincidan con propiedades específicas. Seleccione los puntos de "
"entrada en el grupo ``console_scripts``::"

#: ../Doc/library/importlib.metadata.rst:106
msgid ""
"Equivalently, since ``entry_points`` passes keyword arguments through to "
"select::"
msgstr ""
"De manera equivalente, ya que ``entry_points`` para argumentos de palabra "
"clave para seleccionar::"

#: ../Doc/library/importlib.metadata.rst:111
msgid ""
"Pick out a specific script named \"wheel\" (found in the wheel project)::"
msgstr ""
"Elige un script específico llamado \"wheel\" (que se encuentra en el "
"proyecto *wheel*)::"

#: ../Doc/library/importlib.metadata.rst:117
msgid "Equivalently, query for that entry point during selection::"
msgstr ""
"De manera equivalente, consulta por ese punto de entrada durante la "
"selección::"

#: ../Doc/library/importlib.metadata.rst:122
msgid "Inspect the resolved entry point::"
msgstr "Inspeccionar el punto de entrada resuelto::"

#: ../Doc/library/importlib.metadata.rst:136
#, fuzzy
msgid ""
"The ``group`` and ``name`` are arbitrary values defined by the package "
"author and usually a client will wish to resolve all entry points for a "
"particular group.  Read `the setuptools docs <https://setuptools.pypa.io/en/"
"latest/userguide/entry_point.html>`_ for more information on entry points, "
"their definition, and usage."
msgstr ""
"``group`` y ``name`` son valores arbitrarios definidos por el autor del "
"paquete y, en general, un cliente deseará resolver todos los puntos de "
"entrada para un grupo en particular. Lee `la documentación de *setuptools* "
"<https://setuptools.readthedocs.io/en/latest/setuptools.html#dynamic-"
"discovery-of-services-and-plugins>`_ para obtener más información sobre los "
"puntos de entrada, su definición y uso."

#: ../Doc/library/importlib.metadata.rst:142
msgid "*Compatibility Note*"
msgstr "*Nota de compatibilidad*"

# keyed by group lo traduje como cifrados, pero no se si hay algo más adecuado
#: ../Doc/library/importlib.metadata.rst:144
msgid ""
"The \"selectable\" entry points were introduced in ``importlib_metadata`` "
"3.6 and Python 3.10. Prior to those changes, ``entry_points`` accepted no "
"parameters and always returned a dictionary of entry points, keyed by group. "
"For compatibility, if no parameters are passed to entry_points, a "
"``SelectableGroups`` object is returned, implementing that dict interface. "
"In the future, calling ``entry_points`` with no parameters will return an "
"``EntryPoints`` object. Users should rely on the selection interface to "
"retrieve entry points by group."
msgstr ""
"Los puntos de entrada \"seleccionables\" se introdujeron en "
"``importlib_metadata`` 3.6 y Python 3.10. Antes de esos cambios, "
"``entry_points`` no aceptaba parámetros y siempre retornaba un diccionario "
"de puntos de entrada, cifrados por grupo. Para la compatibilidad, si no se "
"pasa ningún parámetro a *entry_points*, se retorna un objeto "
"``SelectableGroups``, implementando esa interfaz de diccionario. En el "
"futuro, llamar a ``entry_points`` sin parámetros retornará un objeto "
"``EntryPoints``. Los usuarios deberían confiar en la interfaz de selección "
"para recuperar los puntos de entrada por grupo."

#: ../Doc/library/importlib.metadata.rst:157
msgid "Distribution metadata"
msgstr "Metadatos de distribución"

#: ../Doc/library/importlib.metadata.rst:159
msgid ""
"Every distribution includes some metadata, which you can extract using the "
"``metadata()`` function::"
msgstr ""
"Cada distribución incluye algunos metadatos, que se pueden extraer "
"utilizando la función ``metadata()``:"

#: ../Doc/library/importlib.metadata.rst:164
msgid ""
"The keys of the returned data structure, a ``PackageMetadata``, name the "
"metadata keywords, and the values are returned unparsed from the "
"distribution metadata::"
msgstr ""
"Las claves de la estructura de datos retornada un ``PackageMetadata``, "
"nombran las palabras clave de los metadatos y sus valores se retornan sin "
"analizar de los metadatos de distribución::"

#: ../Doc/library/importlib.metadata.rst:171
msgid ""
"``PackageMetadata`` also presents a ``json`` attribute that returns all the "
"metadata in a JSON-compatible form per :PEP:`566`::"
msgstr ""
"``PackageMetadata`` también presenta un atributo ``json`` que retorna todos "
"los metadatos en un formulario compatible con JSON por :PEP:`566`::"

#: ../Doc/library/importlib.metadata.rst:177
msgid ""
"The ``Description`` is now included in the metadata when presented through "
"the payload. Line continuation characters have been removed."
msgstr ""
"La ``Descripción`` ahora se incluye en los metadatos cuando se presenta a "
"través de la carga útil. Se han eliminado los caracteres de continuación de "
"línea."

#: ../Doc/library/importlib.metadata.rst:181
msgid "The ``json`` attribute was added."
msgstr "El atributo ``json`` fue añadido."

#: ../Doc/library/importlib.metadata.rst:188
msgid "Distribution versions"
msgstr "Versiones de distribución"

#: ../Doc/library/importlib.metadata.rst:190
msgid ""
"The ``version()`` function is the quickest way to get a distribution's "
"version number, as a string::"
msgstr ""
"La función ``version()`` es la forma más rápida para obtener el número de "
"versión de una distribución, como una cadena de caracteres:"

#: ../Doc/library/importlib.metadata.rst:200
msgid "Distribution files"
msgstr "Archivos de distribución"

#: ../Doc/library/importlib.metadata.rst:202
msgid ""
"You can also get the full set of files contained within a distribution.  The "
"``files()`` function takes a distribution package name and returns all of "
"the files installed by this distribution.  Each file object returned is a "
"``PackagePath``, a :class:`pathlib.PurePath` derived object with additional "
"``dist``, ``size``, and ``hash`` properties as indicated by the metadata.  "
"For example::"
msgstr ""
"También se puede obtener el conjunto completo de archivos contenidos dentro "
"de una distribución. La función ``files()`` toma el nombre de un paquete de "
"distribución y retorna todos los archivos instalados por esta distribución. "
"Cada objeto de archivo retornado es un ``PackagePath``, un objeto derivado "
"de :class:`pathlib.PurePath` con las propiedades adicionales ``dist``, "
"``size`` y ``hash`` según indican los metadatos. Por ejemplo::"

#: ../Doc/library/importlib.metadata.rst:218
msgid "Once you have the file, you can also read its contents::"
msgstr "Una vez que se tiene el archivo, también se puede leer su contenido::"

#: ../Doc/library/importlib.metadata.rst:229
msgid ""
"You can also use the ``locate`` method to get a the absolute path to the "
"file::"
msgstr ""
"También puede usar el método ``locate`` para obtener la ruta absoluta al "
"archivo:"

#: ../Doc/library/importlib.metadata.rst:235
msgid ""
"In the case where the metadata file listing files (RECORD or SOURCES.txt) is "
"missing, ``files()`` will return ``None``. The caller may wish to wrap calls "
"to ``files()`` in `always_iterable <https://more-itertools.readthedocs.io/en/"
"stable/api.html#more_itertools.always_iterable>`_ or otherwise guard against "
"this condition if the target distribution is not known to have the metadata "
"present."
msgstr ""
"En el caso de que el archivo de metadatos que enumera los archivos (RECORD o "
"SOURCES.txt) falte, ``files()`` retornará ``None``. Para evitar esta "
"condición, si no se sabe si la distribución de destino contiene los "
"metadatos, se puede envolver las llamadas a ``files()`` con `always_iterable "
"<https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools."
"always_iterable>`_ u otra protección similar."

#: ../Doc/library/importlib.metadata.rst:246
msgid "Distribution requirements"
msgstr "Requerimientos de la distribución"

#: ../Doc/library/importlib.metadata.rst:248
msgid ""
"To get the full set of requirements for a distribution, use the "
"``requires()`` function::"
msgstr ""
"Para obtener el conjunto completo de los requerimientos de una distribución, "
"usa la función ``requires()``:"

#: ../Doc/library/importlib.metadata.rst:256
msgid "Package distributions"
msgstr "Distribuciones de paquetes"

#: ../Doc/library/importlib.metadata.rst:258
msgid ""
"A convenience method to resolve the distribution or distributions (in the "
"case of a namespace package) for top-level Python packages or modules::"
msgstr ""
"Un método conveniente para resolver la distribución o distribuciones (en el "
"caso de un paquete de espacio de nombres) para paquetes o módulos de Python "
"de nivel superior:"

#: ../Doc/library/importlib.metadata.rst:270
msgid "Distributions"
msgstr "Distribuciones"

#: ../Doc/library/importlib.metadata.rst:272
msgid ""
"While the above API is the most common and convenient usage, you can get all "
"of that information from the ``Distribution`` class.  A ``Distribution`` is "
"an abstract object that represents the metadata for a Python package.  You "
"can get the ``Distribution`` instance::"
msgstr ""
"Si bien la API de arriba es el uso más común y conveniente, se puede obtener "
"toda esa información de la clase ``Distribution``. Una instancia de "
"``Distribution`` es un objeto abstracto que representa los metadatos de un "
"paquete de Python. Se puede obtener la instancia de ``Distribución`` de la "
"siguiente forma:"

#: ../Doc/library/importlib.metadata.rst:280
msgid ""
"Thus, an alternative way to get the version number is through the "
"``Distribution`` instance::"
msgstr ""
"Por lo tanto, una forma alternativa de obtener el número de versión es "
"mediante la instancia de ``Distribución``:"

#: ../Doc/library/importlib.metadata.rst:286
msgid ""
"There are all kinds of additional metadata available on the ``Distribution`` "
"instance::"
msgstr ""
"Hay todo tipo de metadatos disponibles adicionales en la instancia de "
"``Distribution``:"

#: ../Doc/library/importlib.metadata.rst:294
msgid ""
"The full set of available metadata is not described here.  See :pep:`566` "
"for additional details."
msgstr ""
"El conjunto completo de metadatos disponible no está descripto aquí. "
"Consultar :pep:`566` para detalles adicionales."

#: ../Doc/library/importlib.metadata.rst:299
msgid "Extending the search algorithm"
msgstr "Extendiendo el algoritmo de búsqueda"

#: ../Doc/library/importlib.metadata.rst:301
msgid ""
"Because package metadata is not available through :data:`sys.path` searches, "
"or package loaders directly, the metadata for a package is found through "
"import system :ref:`finders <finders-and-loaders>`.  To find a distribution "
"package's metadata, ``importlib.metadata`` queries the list of :term:`meta "
"path finders <meta path finder>` on :data:`sys.meta_path`."
msgstr ""
"Debido a que los metadatos de los paquetes no están disponibles a través de "
"las búsquedas en :data:`sys.path`, o en los cargadores de paquetes "
"directamente, los metadatos de un paquete se encuentran a través del sistema "
"de importación :ref:`finders <finders-and-loaders>`.  Para encontrar los "
"metadatos de un paquete de distribución, ``importlib.metadata`` consulta la "
"lista de :term:`meta path finders <meta path finder>` en :data:`sys."
"meta_path`."

#: ../Doc/library/importlib.metadata.rst:307
msgid ""
"The default ``PathFinder`` for Python includes a hook that calls into "
"``importlib.metadata.MetadataPathFinder`` for finding distributions loaded "
"from typical file-system-based paths."
msgstr ""
"El ``PathFinder`` predeterminado para Python incluye un enlace que llama a "
"``importlib.metadata.MetadataPathFinder`` para encontrar distribuciones "
"cargadas desde rutas basadas en sistemas de archivos típicos."

#: ../Doc/library/importlib.metadata.rst:311
msgid ""
"The abstract class :py:class:`importlib.abc.MetaPathFinder` defines the "
"interface expected of finders by Python's import system. ``importlib."
"metadata`` extends this protocol by looking for an optional "
"``find_distributions`` callable on the finders from :data:`sys.meta_path` "
"and presents this extended interface as the ``DistributionFinder`` abstract "
"base class, which defines this abstract method::"
msgstr ""
"La clase abstracta :py:class:`importlib.abc.MetaPathFinder` define la "
"interfaz que se espera de los buscadores por el sistema de importación de "
"Python. ``importlib.metadata`` amplía este protocolo buscando una "
"``find_distributions`` opcional invocable en los buscadores desde :data:`sys."
"meta_path` y presenta esta interfaz extendida como la clase base abstracta "
"``DistributionFinder``, que define este método abstracto::"

#: ../Doc/library/importlib.metadata.rst:325
msgid ""
"The ``DistributionFinder.Context`` object provides ``.path`` and ``.name`` "
"properties indicating the path to search and name to match and may supply "
"other relevant context."
msgstr ""
"El objeto ``DistributionFinder.Context`` proporciona propiedades ``.path`` y "
"``.name`` que indican la ruta de búsqueda y los nombres que deben coincidir "
"y puede proporcionar otro contexto relevante."

#: ../Doc/library/importlib.metadata.rst:329
msgid ""
"What this means in practice is that to support finding distribution package "
"metadata in locations other than the file system, subclass ``Distribution`` "
"and implement the abstract methods. Then from a custom finder, return "
"instances of this derived ``Distribution`` in the ``find_distributions()`` "
"method."
msgstr ""
"Lo que esto significa en la práctica es que, para soportar la búsqueda de "
"metadatos en paquetes de distribución en ubicaciones distintas al sistema de "
"archivos, se debe subclasificar ``Distribution`` e implementar sus métodos "
"abstractos. Luego, en el método ``find_distributions()`` de un buscador "
"personalizado no hay más que retornar instancias de esta ``Distribution`` "
"derivada."

#~ msgid "Footnotes"
#~ msgstr "Notas al pie"

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/PyCampES/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ""

#: ../Doc/library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr ""

#: ../Doc/library/venv.rst:18
msgid ""
"The :mod:`venv` module provides support for creating lightweight \"virtual "
"environments\" with their own site directories, optionally isolated from "
"system site directories.  Each virtual environment has its own Python binary "
"(which matches the version of the binary that was used to create this "
"environment) and can have its own independent set of installed Python "
"packages in its site directories."
msgstr ""

#: ../Doc/library/venv.rst:25
msgid "See :pep:`405` for more information about Python virtual environments."
msgstr ""

#: ../Doc/library/venv.rst:29
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/installing/#creating-virtual-environments>`__"
msgstr ""

#: ../Doc/library/venv.rst:34
msgid "Creating virtual environments"
msgstr ""

#: ../Doc/using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"command ``venv``::"
msgstr ""

#: ../Doc/using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it "
"with a ``home`` key pointing to the Python installation from which the "
"command was run (a common name for the target directory is ``.venv``).  It "
"also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory containing a "
"copy/symlink of the Python binary/binaries (as appropriate for the platform "
"or arguments used at environment creation time). It also creates an "
"(initially empty) ``lib/pythonX.Y/site-packages`` subdirectory (on Windows, "
"this is ``Lib\\site-packages``). If an existing directory is specified, it "
"will be re-used."
msgstr ""

#: ../Doc/using/venv-create.inc:17
msgid ""
"``pyvenv`` was the recommended tool for creating virtual environments for "
"Python 3.3 and 3.4, and is `deprecated in Python 3.6 <https://docs.python."
"org/dev/whatsnew/3.6.html#deprecated-features>`_."
msgstr ""

#: ../Doc/using/venv-create.inc:22
msgid ""
"The use of ``venv`` is now recommended for creating virtual environments."
msgstr ""

#: ../Doc/using/venv-create.inc:27
msgid "On Windows, invoke the ``venv`` command as follows::"
msgstr ""

#: ../Doc/using/venv-create.inc:31
msgid ""
"Alternatively, if you configured the ``PATH`` and ``PATHEXT`` variables for "
"your :ref:`Python installation <using-on-windows>`::"
msgstr ""

#: ../Doc/using/venv-create.inc:36
msgid "The command, if run with ``-h``, will show the available options::"
msgstr ""

#: ../Doc/using/venv-create.inc:68
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr ""

#: ../Doc/using/venv-create.inc:72
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided."
msgstr ""

#: ../Doc/using/venv-create.inc:77
msgid ""
"While symlinks are supported on Windows, they are not recommended. Of "
"particular note is that double-clicking ``python.exe`` in File Explorer will "
"resolve the symlink eagerly and ignore the virtual environment."
msgstr ""

#: ../Doc/using/venv-create.inc:82
msgid ""
"On Microsoft Windows, it may be required to enable the ``Activate.ps1`` "
"script by setting the execution policy for the user. You can do this by "
"issuing the following PowerShell command:"
msgstr ""

#: ../Doc/using/venv-create.inc:86
msgid ""
"PS C:\\> Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser"
msgstr ""

#: ../Doc/using/venv-create.inc:88
msgid ""
"See `About Execution Policies <ttps:/go.microsoft.com/fwlink/?"
"LinkID=135170>`_ for more information."
msgstr ""

#: ../Doc/using/venv-create.inc:92
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr ""

#: ../Doc/using/venv-create.inc:96
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr ""

#: ../Doc/using/venv-create.inc:99
msgid ""
"Multiple paths can be given to ``venv``, in which case an identical virtual "
"environment will be created, according to the given options, at each "
"provided path."
msgstr ""

#: ../Doc/using/venv-create.inc:103
msgid ""
"Once a virtual environment has been created, it can be \"activated\" using a "
"script in the virtual environment's binary directory. The invocation of the "
"script is platform-specific (`<venv>` must be replaced by the path of the "
"directory containing the virtual environment):"
msgstr ""

#: ../Doc/using/venv-create.inc:109
msgid "Platform"
msgstr ""

#: ../Doc/using/venv-create.inc:109
msgid "Shell"
msgstr ""

#: ../Doc/using/venv-create.inc:109
msgid "Command to activate virtual environment"
msgstr ""

#: ../Doc/using/venv-create.inc:111
msgid "POSIX"
msgstr ""

#: ../Doc/using/venv-create.inc:111
msgid "bash/zsh"
msgstr ""

#: ../Doc/using/venv-create.inc:111
msgid "$ source <venv>/bin/activate"
msgstr ""

#: ../Doc/using/venv-create.inc:113
msgid "fish"
msgstr ""

#: ../Doc/using/venv-create.inc:113
msgid "$ . <venv>/bin/activate.fish"
msgstr ""

#: ../Doc/using/venv-create.inc:115
msgid "csh/tcsh"
msgstr ""

#: ../Doc/using/venv-create.inc:115
msgid "$ source <venv>/bin/activate.csh"
msgstr ""

#: ../Doc/using/venv-create.inc:117
msgid "PowerShell Core"
msgstr ""

#: ../Doc/using/venv-create.inc:117
msgid "$ <venv>/bin/Activate.ps1"
msgstr ""

#: ../Doc/using/venv-create.inc:119
msgid "Windows"
msgstr ""

#: ../Doc/using/venv-create.inc:119
msgid "cmd.exe"
msgstr ""

#: ../Doc/using/venv-create.inc:119
msgid "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"
msgstr ""

#: ../Doc/using/venv-create.inc:121
msgid "PowerShell"
msgstr ""

#: ../Doc/using/venv-create.inc:121
msgid "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"
msgstr ""

#: ../Doc/using/venv-create.inc:124
msgid ""
"You don't specifically *need* to activate an environment; activation just "
"prepends the virtual environment's binary directory to your path, so that "
"\"python\" invokes the virtual environment's Python interpreter and you can "
"run installed scripts without having to use their full path. However, all "
"scripts installed in a virtual environment should be runnable without "
"activating it, and run with the virtual environment's Python automatically."
msgstr ""

#: ../Doc/using/venv-create.inc:131
msgid ""
"You can deactivate a virtual environment by typing \"deactivate\" in your "
"shell. The exact mechanism is platform-specific and is an internal "
"implementation detail (typically a script or shell function will be used)."
msgstr ""

#: ../Doc/using/venv-create.inc:135
msgid "``fish`` and ``csh`` activation scripts."
msgstr ""

#: ../Doc/using/venv-create.inc:138
msgid ""
"PowerShell activation scripts installed under POSIX for PowerShell Core "
"support."
msgstr ""

#: ../Doc/library/venv.rst:41
msgid ""
"A virtual environment is a Python environment such that the Python "
"interpreter, libraries and scripts installed into it are isolated from those "
"installed in other virtual environments, and (by default) any libraries "
"installed in a \"system\" Python, i.e., one which is installed as part of "
"your operating system."
msgstr ""

#: ../Doc/library/venv.rst:47
msgid ""
"A virtual environment is a directory tree which contains Python executable "
"files and other files which indicate that it is a virtual environment."
msgstr ""

#: ../Doc/library/venv.rst:50
msgid ""
"Common installation tools such as setuptools_ and pip_ work as expected with "
"virtual environments. In other words, when a virtual environment is active, "
"they install Python packages into the virtual environment without needing to "
"be told to do so explicitly."
msgstr ""

#: ../Doc/library/venv.rst:55
msgid ""
"When a virtual environment is active (i.e., the virtual environment's Python "
"interpreter is running), the attributes :attr:`sys.prefix` and :attr:`sys."
"exec_prefix` point to the base directory of the virtual environment, "
"whereas :attr:`sys.base_prefix` and :attr:`sys.base_exec_prefix` point to "
"the non-virtual environment Python installation which was used to create the "
"virtual environment. If a virtual environment is not active, then :attr:`sys."
"prefix` is the same as :attr:`sys.base_prefix` and :attr:`sys.exec_prefix` "
"is the same as :attr:`sys.base_exec_prefix` (they all point to a non-virtual "
"environment Python installation)."
msgstr ""

#: ../Doc/library/venv.rst:66
msgid ""
"When a virtual environment is active, any options that change the "
"installation path will be ignored from all :mod:`distutils` configuration "
"files to prevent projects being inadvertently installed outside of the "
"virtual environment."
msgstr ""

#: ../Doc/library/venv.rst:71
msgid ""
"When working in a command shell, users can make a virtual environment active "
"by running an ``activate`` script in the virtual environment's executables "
"directory (the precise filename and command to use the file is shell-"
"dependent), which prepends the virtual environment's directory for "
"executables to the ``PATH`` environment variable for the running shell. "
"There should be no need in other circumstances to activate a virtual "
"environment; scripts installed into virtual environments have a \"shebang\" "
"line which points to the virtual environment's Python interpreter. This "
"means that the script will run with that interpreter regardless of the value "
"of ``PATH``. On Windows, \"shebang\" line processing is supported if you "
"have the Python Launcher for Windows installed (this was added to Python in "
"3.3 - see :pep:`397` for more details). Thus, double-clicking an installed "
"script in a Windows Explorer window should run the script with the correct "
"interpreter without there needing to be any reference to its virtual "
"environment in ``PATH``."
msgstr ""

#: ../Doc/library/venv.rst:91
msgid "API"
msgstr ""

#: ../Doc/library/venv.rst:95
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the :class:"
"`EnvBuilder` class."
msgstr ""

#: ../Doc/library/venv.rst:103
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr ""

#: ../Doc/library/venv.rst:106
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr ""

#: ../Doc/library/venv.rst:109
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of any "
"existing target directory, before creating the environment."
msgstr ""

#: ../Doc/library/venv.rst:112
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink the "
"Python binary rather than copying."
msgstr ""

#: ../Doc/library/venv.rst:115
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr ""

#: ../Doc/library/venv.rst:119
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed in "
"the virtual environment. This uses :mod:`ensurepip` with the ``--default-"
"pip`` option."
msgstr ""

#: ../Doc/library/venv.rst:123
msgid ""
"``prompt`` -- a String to be used after virtual environment is activated "
"(defaults to ``None`` which means directory name of the environment would be "
"used)."
msgstr ""

#: ../Doc/library/venv.rst:127 ../Doc/library/venv.rst:245
msgid "Added the ``with_pip`` parameter"
msgstr ""

#: ../Doc/library/venv.rst:130 ../Doc/library/venv.rst:248
msgid "Added the ``prompt`` parameter"
msgstr ""

#: ../Doc/library/venv.rst:133
msgid ""
"Creators of third-party virtual environment tools will be free to use the "
"provided :class:`EnvBuilder` class as a base class."
msgstr ""

#: ../Doc/library/venv.rst:136
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr ""

#: ../Doc/library/venv.rst:140
msgid ""
"Create a virtual environment by specifying the target directory (absolute or "
"relative to the current directory) which is to contain the virtual "
"environment.  The ``create`` method will either create the environment in "
"the specified directory, or raise an appropriate exception."
msgstr ""

#: ../Doc/library/venv.rst:146
msgid ""
"The ``create`` method of the :class:`EnvBuilder` class illustrates the hooks "
"available for subclass customization::"
msgstr ""

#: ../Doc/library/venv.rst:161
msgid ""
"Each of the methods :meth:`ensure_directories`, :meth:"
"`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts` and :"
"meth:`post_setup` can be overridden."
msgstr ""

#: ../Doc/library/venv.rst:167
msgid ""
"Creates the environment directory and all necessary directories, and returns "
"a context object.  This is just a holder for attributes (such as paths), for "
"use by the other methods. The directories are allowed to exist already, as "
"long as either ``clear`` or ``upgrade`` were specified to allow operating on "
"an existing environment directory."
msgstr ""

#: ../Doc/library/venv.rst:175
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr ""

#: ../Doc/library/venv.rst:179
msgid ""
"Creates a copy or symlink to the Python executable in the environment. On "
"POSIX systems, if a specific executable ``python3.x`` was used, symlinks to "
"``python`` and ``python3`` will be created pointing to that executable, "
"unless files with those names already exist."
msgstr ""

#: ../Doc/library/venv.rst:186
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment."
msgstr ""

#: ../Doc/library/venv.rst:191
msgid ""
"A placeholder method which can be overridden in third party implementations "
"to pre-install packages in the virtual environment or perform other post-"
"creation steps."
msgstr ""

#: ../Doc/library/venv.rst:195
msgid ""
"Windows now uses redirector scripts for ``python[w].exe`` instead of copying "
"the actual binaries. In 3.7.2 only :meth:`setup_python` does nothing unless "
"running from a build in the source tree."
msgstr ""

#: ../Doc/library/venv.rst:200
msgid ""
"Windows copies the redirector scripts as part of :meth:`setup_python` "
"instead of :meth:`setup_scripts`. This was not the case in 3.7.2. When using "
"symlinks, the original executables will be linked."
msgstr ""

#: ../Doc/library/venv.rst:205
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be "
"called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to "
"assist in installing custom scripts into the virtual environment."
msgstr ""

#: ../Doc/library/venv.rst:211
msgid ""
"*path* is the path to a directory that should contain subdirectories \"common"
"\", \"posix\", \"nt\", each containing scripts destined for the bin "
"directory in the environment.  The contents of \"common\" and the directory "
"corresponding to :data:`os.name` are copied after some text replacement of "
"placeholders:"
msgstr ""

#: ../Doc/library/venv.rst:217
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr ""

#: ../Doc/library/venv.rst:220
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path segment "
"of environment directory)."
msgstr ""

#: ../Doc/library/venv.rst:223
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr ""

#: ../Doc/library/venv.rst:226
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory (either "
"``bin`` or ``Scripts``)."
msgstr ""

#: ../Doc/library/venv.rst:229
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the environment's "
"executable."
msgstr ""

#: ../Doc/library/venv.rst:232
msgid ""
"The directories are allowed to exist (for when an existing environment is "
"being upgraded)."
msgstr ""

#: ../Doc/library/venv.rst:235
msgid "There is also a module-level convenience function:"
msgstr ""

#: ../Doc/library/venv.rst:240
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call "
"its :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ""

#: ../Doc/library/venv.rst:252
msgid "An example of extending ``EnvBuilder``"
msgstr ""

#: ../Doc/library/venv.rst:254
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by implementing "
"a subclass which installs setuptools and pip into a created virtual "
"environment::"
msgstr ""

#: ../Doc/library/venv.rst:473
msgid ""
"This script is also available for download `online <https://gist.github.com/"
"vsajip/4673395>`_."
msgstr ""

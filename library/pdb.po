# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-06-22 22:35-0500\n"
"Last-Translator: \n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/library/pdb.rst:4
msgid ":mod:`pdb` --- The Python Debugger"
msgstr ":mod:`pdb` --- El Depurador de Python"

#: ../Doc/library/pdb.rst:9
msgid "**Source code:** :source:`Lib/pdb.py`"
msgstr "**Código fuente:** :source:`Lib/unittest/mock.py`"

#: ../Doc/library/pdb.rst:15
msgid ""
"The module :mod:`pdb` defines an interactive source code debugger for Python "
"programs.  It supports setting (conditional) breakpoints and single stepping "
"at the source line level, inspection of stack frames, source code listing, "
"and evaluation of arbitrary Python code in the context of any stack frame.  "
"It also supports post-mortem debugging and can be called under program "
"control."
msgstr ""
"El módulo :mod:`pdb` define un depurador de código fuente interactivo para "
"programas Python.  Soporta el establecimiento de puntos de ruptura "
"(condicionales) y pasos sencillos a nivel de línea de código fuente, "
"inspección de marcos de pila, listado de código fuente, y evaluación de "
"código Python arbitrario en el contexto de cualquier marco de pila.  También "
"soporta depuración post-mortem y puede ser llamado bajo control del programa."

#: ../Doc/library/pdb.rst:26
msgid ""
"The debugger is extensible -- it is actually defined as the class :class:"
"`Pdb`. This is currently undocumented but easily understood by reading the "
"source.  The extension interface uses the modules :mod:`bdb` and :mod:`cmd`."
msgstr ""
"El depurador es extensible -- en realidad se define como la clase :class:"
"`Pdb`. Esto no está actualmente documentado pero se entiende fácilmente "
"leyendo la fuente.  La interfaz de extensión usa los módulos :mod:`bdb` y :"
"mod:`cmd`."

#: ../Doc/library/pdb.rst:30
msgid ""
"The debugger's prompt is ``(Pdb)``. Typical usage to run a program under "
"control of the debugger is::"
msgstr ""
"El mensaje del depurador es ``(Pdb)``. El uso típico para ejecutar un "
"programa bajo el control del depurador es::"

#: ../Doc/library/pdb.rst:44
msgid ""
"Tab-completion via the :mod:`readline` module is available for commands and "
"command arguments, e.g. the current global and local names are offered as "
"arguments of the ``p`` command."
msgstr ""
"La finalización de tabulación a través del módulo :mod:`readline` está "
"disponible para comandos y argumentos de comando, por ejemplo. Los nombres "
"globales y locales actuales se ofrecen como argumentos del comando ``p``."

#: ../Doc/library/pdb.rst:49
msgid ""
":file:`pdb.py` can also be invoked as a script to debug other scripts.  For "
"example::"
msgstr ""
":file:`pdb.py` también puede ser invocado como un script para depurar otros "
"scripts.  Por ejemplo::"

#: ../Doc/library/pdb.rst:54
msgid ""
"When invoked as a script, pdb will automatically enter post-mortem debugging "
"if the program being debugged exits abnormally.  After post-mortem debugging "
"(or after normal exit of the program), pdb will restart the program.  "
"Automatic restarting preserves pdb's state (such as breakpoints) and in most "
"cases is more useful than quitting the debugger upon program's exit."
msgstr ""
"Cuando se invoca como script, pdb entrará automáticamente en la depuración "
"post-mortem si el programa que se depura sale de forma anormal.  Después de "
"la depuración post-mortem (o después de la salida normal del programa), pdb "
"reiniciará el programa.  El reinicio automático preserva el estado de pdb "
"(como los puntos de ruptura) y en la mayoría de los casos es más útil que "
"abandonar el depurador al salir del programa."

#: ../Doc/library/pdb.rst:60
msgid ""
":file:`pdb.py` now accepts a ``-c`` option that executes commands as if "
"given in a :file:`.pdbrc` file, see :ref:`debugger-commands`."
msgstr ""
":file:`pdb.py` ahora acepta una opción ``-c`` que ejecuta comandos como si "
"se dieran en un archivo :file:`.pdbrc`, ver :ref:`debugger-commands`."

#: ../Doc/library/pdb.rst:64
msgid ""
":file:`pdb.py` now accepts a ``-m`` option that execute modules similar to "
"the way ``python3 -m`` does. As with a script, the debugger will pause "
"execution just before the first line of the module."
msgstr ""
":file:`pdb.py` ahora acepta una opción ``-m`` que ejecuta módulos similares "
"a los que ``python3 -m`` hace. Como con un script, el depurador detendrá la "
"ejecución justo antes de la primera línea del módulo."

#: ../Doc/library/pdb.rst:70
msgid ""
"The typical usage to break into the debugger from a running program is to "
"insert ::"
msgstr ""
"El uso típico para entrar en el depurador de un programa en ejecución es "
"insertar::"

#: ../Doc/library/pdb.rst:75
msgid ""
"at the location you want to break into the debugger.  You can then step "
"through the code following this statement, and continue running without the "
"debugger using the :pdbcmd:`continue` command."
msgstr ""
"En el lugar donde quieres ingresar en el depurador.  Entonces puedes pasar a "
"través del código siguiendo esta declaración, y continuar corriendo sin el "
"depurador usando el comando :pdbcmd:`continue`."

#: ../Doc/library/pdb.rst:79
msgid ""
"The built-in :func:`breakpoint()`, when called with defaults, can be used "
"instead of ``import pdb; pdb.set_trace()``."
msgstr ""
"La :func:`breakpoint()` incorporada cuando se llama con los valores por "
"defecto, puede ser usado en lugar del ``import pdb; pdb.set_trace()``."

#: ../Doc/library/pdb.rst:83
msgid "The typical usage to inspect a crashed program is::"
msgstr "El uso típico para inspeccionar un programa que se ha estrellado es:"

#: ../Doc/library/pdb.rst:101
msgid ""
"The module defines the following functions; each enters the debugger in a "
"slightly different way:"
msgstr ""
"El módulo define las siguientes funciones; cada una de ellas entra en el "
"depurador de una manera ligeramente diferente:"

#: ../Doc/library/pdb.rst:106
msgid ""
"Execute the *statement* (given as a string or a code object) under debugger "
"control.  The debugger prompt appears before any code is executed; you can "
"set breakpoints and type :pdbcmd:`continue`, or you can step through the "
"statement using :pdbcmd:`step` or :pdbcmd:`next` (all these commands are "
"explained below).  The optional *globals* and *locals* arguments specify the "
"environment in which the code is executed; by default the dictionary of the "
"module :mod:`__main__` is used.  (See the explanation of the built-in :func:"
"`exec` or :func:`eval` functions.)"
msgstr ""
"Ejecutar el *statement* (dado como una cadena o un objeto de código) bajo el "
"control del depurador.  El prompt del depurador aparece antes de que se "
"ejecute cualquier código; puedes establecer puntos de ruptura y escribir :"
"pdbcmd:`continue`, o puedes pasar por la declaración usando :pdbcmd:`step` "
"o :pdbcmd:`next` (todos estos comandos se explican más abajo).  Los "
"argumentos opcionales *globals* y *locals* especifican el entorno en el que "
"se ejecuta el código; por defecto se utiliza el diccionario del módulo :mod:"
"`__main__`.  (Ver la explicación de las funciones incorporadas :func:`exec` "
"o :func:`eval`)."

#: ../Doc/library/pdb.rst:118
msgid ""
"Evaluate the *expression* (given as a string or a code object) under "
"debugger control.  When :func:`runeval` returns, it returns the value of the "
"expression.  Otherwise this function is similar to :func:`run`."
msgstr ""
"Evalúa la *expression* (dada como una cadena o un objeto de código) bajo el "
"control del depurador.  Cuando vuelve :func:`runeval`, retorna el valor de "
"la expresión.  En caso contrario, esta función es similar a :func:`run`."

#: ../Doc/library/pdb.rst:125
msgid ""
"Call the *function* (a function or method object, not a string) with the "
"given arguments.  When :func:`runcall` returns, it returns whatever the "
"function call returned.  The debugger prompt appears as soon as the function "
"is entered."
msgstr ""
"Llama a la *function* (un objeto de función o método, no una cadena) con los "
"argumentos dados.  Cuando :func:`runcall` retorna, retorna lo que sea que la "
"llamada de la función haya retornado.  El aviso del depurador aparece tan "
"pronto como se introduce la función."

#: ../Doc/library/pdb.rst:133
msgid ""
"Enter the debugger at the calling stack frame.  This is useful to hard-code "
"a breakpoint at a given point in a program, even if the code is not "
"otherwise being debugged (e.g. when an assertion fails).  If given, *header* "
"is printed to the console just before debugging begins."
msgstr ""
"Entra en el depurador en el marco de la pila de llamadas.  Esto es útil para "
"codificar duramente un punto de interrupción en un punto dado de un "
"programa, incluso si el código no se depura de otra manera (por ejemplo, "
"cuando una afirmación falla).  Si se da, se imprime el *header* en la "
"consola justo antes de que comience la depuración."

#: ../Doc/library/pdb.rst:138
msgid "The keyword-only argument *header*."
msgstr "El argumento de la palabra clave *header*."

#: ../Doc/library/pdb.rst:144
msgid ""
"Enter post-mortem debugging of the given *traceback* object.  If no "
"*traceback* is given, it uses the one of the exception that is currently "
"being handled (an exception must be being handled if the default is to be "
"used)."
msgstr ""
"Ingresa a la depuración post-mortem del objeto *traceback* dado.  Si no se "
"da un *traceback*, utiliza el de la excepción que se está manejando "
"actualmente (una excepción debe ser manejada si se va a utilizar el "
"predeterminado)."

#: ../Doc/library/pdb.rst:152
msgid ""
"Enter post-mortem debugging of the traceback found in :data:`sys."
"last_traceback`."
msgstr ""
"Ingresa a la depuración post-mortem de la traza encontrada en :data:`sys."
"last_traceback`."

#: ../Doc/library/pdb.rst:156
msgid ""
"The ``run*`` functions and :func:`set_trace` are aliases for instantiating "
"the :class:`Pdb` class and calling the method of the same name.  If you want "
"to access further features, you have to do this yourself:"
msgstr ""
"Las funciones ``run*`` y :func:`set_trace` son alias para instanciar la "
"clase :class:`Pdb` y llamar al método del mismo nombre.  Si quieres acceder "
"a más funciones, tienes que hacerlo tú mismo:"

#: ../Doc/library/pdb.rst:163
msgid ":class:`Pdb` is the debugger class."
msgstr ":class:`Pdb` es la clase de depuración."

#: ../Doc/library/pdb.rst:165
msgid ""
"The *completekey*, *stdin* and *stdout* arguments are passed to the "
"underlying :class:`cmd.Cmd` class; see the description there."
msgstr ""
"Los argumentos *completekey*, *stdin* y *stdout* se pasan a la subyacente :"
"class:`cmd.Cmd` class; ver la descripción allí."

#: ../Doc/library/pdb.rst:168
msgid ""
"The *skip* argument, if given, must be an iterable of glob-style module name "
"patterns.  The debugger will not step into frames that originate in a module "
"that matches one of these patterns. [1]_"
msgstr ""
"El argumento *skip*, si se da, debe ser un iterable de los patrones de "
"nombre de los módulos de estilo global.  El depurador no entrará en marcos "
"que se originen en un módulo que coincida con uno de estos patrones. [1]_"

#: ../Doc/library/pdb.rst:172
msgid ""
"By default, Pdb sets a handler for the SIGINT signal (which is sent when the "
"user presses :kbd:`Ctrl-C` on the console) when you give a ``continue`` "
"command. This allows you to break into the debugger again by pressing :kbd:"
"`Ctrl-C`.  If you want Pdb not to touch the SIGINT handler, set *nosigint* "
"to true."
msgstr ""
"Por defecto, Pdb establece un manejador para la señal de SIGINT (que se "
"envía cuando el usuario presiona :kbd:`Ctrl-C` en la consola) cuando da un "
"comando de ``continue``. Esto te permite entrar en el depurador de nuevo "
"presionando :kbd:`Ctrl-C`.  Si quieres que Pdb no toque el manejador de "
"SIGINT, pon *nosigint* en true."

#: ../Doc/library/pdb.rst:177
msgid ""
"The *readrc* argument defaults to true and controls whether Pdb will load ."
"pdbrc files from the filesystem."
msgstr ""
"El argumento * readrc * por defecto es verdadero y controla si Pdb cargará "
"archivos .pdbrc desde el sistema de archivos."

#: ../Doc/library/pdb.rst:180
msgid "Example call to enable tracing with *skip*::"
msgstr "Ejemplo de llamada para permitir el rastreo con *skip*::"

#: ../Doc/library/pdb.rst:184
msgid ""
"Raises an :ref:`auditing event <auditing>` ``pdb.Pdb`` with no arguments."
msgstr ""
"Levanta una :ref:`auditing event <auditing>` ``pdb.Pdb`` sin argumentos."

#: ../Doc/library/pdb.rst:186
msgid "The *skip* argument."
msgstr "El argumento *skip*."

#: ../Doc/library/pdb.rst:189
msgid ""
"The *nosigint* argument.  Previously, a SIGINT handler was never set by Pdb."
msgstr ""
"El argumento del *nosigint*.  Anteriormente, un manejador SIGINT nunca fue "
"establecido por Pdb."

#: ../Doc/library/pdb.rst:193
msgid "The *readrc* argument."
msgstr "El argumento *readrc*."

#: ../Doc/library/pdb.rst:201
msgid "See the documentation for the functions explained above."
msgstr "Véase la documentación para las funciones explicadas anteriormente."

#: ../Doc/library/pdb.rst:207
msgid "Debugger Commands"
msgstr "Comandos del depurador"

#: ../Doc/library/pdb.rst:209
msgid ""
"The commands recognized by the debugger are listed below.  Most commands can "
"be abbreviated to one or two letters as indicated; e.g. ``h(elp)`` means "
"that either ``h`` or ``help`` can be used to enter the help command (but not "
"``he`` or ``hel``, nor ``H`` or ``Help`` or ``HELP``).  Arguments to "
"commands must be separated by whitespace (spaces or tabs).  Optional "
"arguments are enclosed in square brackets (``[]``) in the command syntax; "
"the square brackets must not be typed.  Alternatives in the command syntax "
"are separated by a vertical bar (``|``)."
msgstr ""
"Los comandos reconocidos por el depurador se enumeran a continuación.  La "
"mayoría de los comandos pueden abreviarse a una o dos letras como se indica; "
"por ejemplo, ``h(elp)`` significa que se puede usar ``h`` o ``help`` para "
"introducir el comando de ayuda (pero no ``he`` o ``hel``, ni ``H`` o "
"``Help`` o ``HELP``).  Los argumentos de los comandos deben estar separados "
"por espacios en blanco (espacios o tabulaciones).  Los argumentos opcionales "
"están encerrados entre corchetes (``[]``) en la sintaxis del comando; los "
"corchetes no deben escribirse.  Las alternativas en la sintaxis de los "
"comandos están separadas por una barra vertical (``|``)."

#: ../Doc/library/pdb.rst:218
msgid ""
"Entering a blank line repeats the last command entered.  Exception: if the "
"last command was a :pdbcmd:`list` command, the next 11 lines are listed."
msgstr ""
"Introducir una línea en blanco repite el último comando introducido.  "
"Excepción: si el último comando fue un :pdbcmd:`list` comando, las "
"siguientes 11 líneas están listadas."

#: ../Doc/library/pdb.rst:221
msgid ""
"Commands that the debugger doesn't recognize are assumed to be Python "
"statements and are executed in the context of the program being debugged.  "
"Python statements can also be prefixed with an exclamation point (``!``).  "
"This is a powerful way to inspect the program being debugged; it is even "
"possible to change a variable or call a function.  When an exception occurs "
"in such a statement, the exception name is printed but the debugger's state "
"is not changed."
msgstr ""
"Se supone que los comandos que el depurador no reconoce son declaraciones en "
"Python y se ejecutan en el contexto del programa que se está depurando.  Las "
"declaraciones en Python también pueden ser precedidas por un signo de "
"exclamación (``!``).  Esta es una manera poderosa de inspeccionar el "
"programa que se está depurando; incluso es posible cambiar una variable o "
"llamar a una función.  Cuando se produce una excepción en una sentencia de "
"este tipo, se imprime el nombre de la excepción pero no se cambia el estado "
"del depurador."

#: ../Doc/library/pdb.rst:229
msgid ""
"The debugger supports :ref:`aliases <debugger-aliases>`.  Aliases can have "
"parameters which allows one a certain level of adaptability to the context "
"under examination."
msgstr ""
"El depurador soporta :ref:`aliases <debugger-aliases>`.  Los alias pueden "
"tener parámetros que permiten un cierto nivel de adaptabilidad al contexto "
"que se está examinando."

#: ../Doc/library/pdb.rst:233
msgid ""
"Multiple commands may be entered on a single line, separated by ``;;``.  (A "
"single ``;`` is not used as it is the separator for multiple commands in a "
"line that is passed to the Python parser.)  No intelligence is applied to "
"separating the commands; the input is split at the first ``;;`` pair, even "
"if it is in the middle of a quoted string."
msgstr ""
"Se pueden introducir múltiples comandos en una sola línea, separados por ``;;"
"``.  (No se usa un solo ``;`` ya que es el separador de múltiples comandos "
"en una línea que se pasa al analizador de Python).  No se aplica ninguna "
"inteligencia para separar los comandos; la entrada se divide en el primer "
"par ``;;``, incluso si está en medio de una cadena citada."

#: ../Doc/library/pdb.rst:243
msgid ""
"If a file :file:`.pdbrc` exists in the user's home directory or in the "
"current directory, it is read in and executed as if it had been typed at the "
"debugger prompt.  This is particularly useful for aliases.  If both files "
"exist, the one in the home directory is read first and aliases defined there "
"can be overridden by the local file."
msgstr ""
"Si un archivo :file:`.pdbrc` existe en el directorio principal del usuario o "
"en el directorio actual, se lee y se ejecuta como si se hubiera escrito en "
"el prompt del depurador.  Esto es particularmente útil para los alias.  Si "
"ambos archivos existen, el del directorio principal se lee primero y los "
"alias definidos allí pueden ser anulados por el archivo local."

#: ../Doc/library/pdb.rst:249
msgid ""
":file:`.pdbrc` can now contain commands that continue debugging, such as :"
"pdbcmd:`continue` or :pdbcmd:`next`.  Previously, these commands had no "
"effect."
msgstr ""
":file:`.pdbrc` puede ahora contener comandos que continúan depurando, como :"
"pdbcmd:`continue` o :pdbcmd:`next`.  Anteriormente, estos comandos no tenían "
"ningún efecto."

#: ../Doc/library/pdb.rst:257
msgid ""
"Without argument, print the list of available commands.  With a *command* as "
"argument, print help about that command.  ``help pdb`` displays the full "
"documentation (the docstring of the :mod:`pdb` module).  Since the *command* "
"argument must be an identifier, ``help exec`` must be entered to get help on "
"the ``!`` command."
msgstr ""
"Sin argumento, imprime la lista de comandos disponibles.  Con un *command* "
"como argumento, imprime la ayuda sobre ese comando.  ``help pdb`` muestra la "
"documentación completa (el docstring del módulo :mod:`pdb`).  Como el "
"argumento *command* debe ser un identificador, hay que introducir ``help "
"exec`` para obtener ayuda sobre el comando ``!``."

#: ../Doc/library/pdb.rst:265
msgid ""
"Print a stack trace, with the most recent frame at the bottom.  An arrow "
"indicates the current frame, which determines the context of most commands."
msgstr ""
"Imprime un rastro de la pila (*stack trace*), con el marco más reciente en "
"la parte inferior.  Una flecha indica el marco actual, que determina el "
"contexto de la mayoría de los comandos."

#: ../Doc/library/pdb.rst:270
msgid ""
"Move the current frame *count* (default one) levels down in the stack trace "
"(to a newer frame)."
msgstr ""
"Mueve los niveles del marco actual *count* (por defecto uno) hacia abajo en "
"el trazado de la pila (*stack trace*) (a un marco más nuevo)."

#: ../Doc/library/pdb.rst:275
msgid ""
"Move the current frame *count* (default one) levels up in the stack trace "
"(to an older frame)."
msgstr ""
"Mueve el marco actual *count* (por defecto uno) niveles hacia arriba en el "
"trazado de la pila (*stack trace*) (a un marco más antiguo)."

#: ../Doc/library/pdb.rst:280
msgid ""
"With a *lineno* argument, set a break there in the current file.  With a "
"*function* argument, set a break at the first executable statement within "
"that function.  The line number may be prefixed with a filename and a colon, "
"to specify a breakpoint in another file (probably one that hasn't been "
"loaded yet).  The file is searched on :data:`sys.path`.  Note that each "
"breakpoint is assigned a number to which all the other breakpoint commands "
"refer."
msgstr ""
"Con un argumento *lineno*, establece una ruptura allí en el archivo actual.  "
"Con un argumento *function*, establece una ruptura en la primera declaración "
"ejecutable dentro de esa función.  El número de línea puede ir precedido de "
"un nombre de archivo y dos puntos, para especificar un punto de interrupción "
"en otro archivo (probablemente uno que aún no se haya cargado).  El archivo "
"se busca en :data:`sys.path`.  Observe que a cada punto de interrupción se "
"le asigna un número al que se refieren todos los demás comandos de puntos de "
"interrupción."

#: ../Doc/library/pdb.rst:287
msgid ""
"If a second argument is present, it is an expression which must evaluate to "
"true before the breakpoint is honored."
msgstr ""
"Si un segundo argumento está presente, es una expresión que debe ser "
"evaluada como verdadera antes de que el punto de ruptura sea honrado."

#: ../Doc/library/pdb.rst:290
msgid ""
"Without argument, list all breaks, including for each breakpoint, the number "
"of times that breakpoint has been hit, the current ignore count, and the "
"associated condition if any."
msgstr ""
"Sin argumento, enumere todas las interrupciones, incluyendo para cada punto "
"de interrupción, el número de veces que se ha alcanzado ese punto de "
"interrupción, el conteo de ignorancia actual y la condición asociada, si la "
"hay."

#: ../Doc/library/pdb.rst:296
msgid ""
"Temporary breakpoint, which is removed automatically when it is first hit. "
"The arguments are the same as for :pdbcmd:`break`."
msgstr ""
"Punto de interrupción temporal, que se elimina automáticamente cuando se "
"ejecuta por primera vez. Los argumentos son los mismos que para :pdbcmd:"
"`break`."

#: ../Doc/library/pdb.rst:301
msgid ""
"With a *filename:lineno* argument, clear all the breakpoints at this line. "
"With a space separated list of breakpoint numbers, clear those breakpoints. "
"Without argument, clear all breaks (but first ask confirmation)."
msgstr ""
"Con el argumento *filename:lineno*, despeja todos los puntos de interrupción "
"en esta línea. Con una lista de números de puntos de interrupción separados "
"por espacios, despeja esos puntos de interrupción. Sin el argumento, despeja "
"todos los puntos de interrupción (pero primero pide confirmación)."

#: ../Doc/library/pdb.rst:307
msgid ""
"Disable the breakpoints given as a space separated list of breakpoint "
"numbers.  Disabling a breakpoint means it cannot cause the program to stop "
"execution, but unlike clearing a breakpoint, it remains in the list of "
"breakpoints and can be (re-)enabled."
msgstr ""
"Deshabilitar los puntos de ruptura interrupción como una lista de números de "
"puntos de ruptura separados por espacios.  Desactivar un punto de "
"interrupción significa que no puede hacer que el programa detenga la "
"ejecución, pero a diferencia de borrar un punto de interrupción, permanece "
"en la lista de puntos de interrupción y puede ser (re)activado."

#: ../Doc/library/pdb.rst:314
msgid "Enable the breakpoints specified."
msgstr "Habilitar los puntos de interrupción especificados."

#: ../Doc/library/pdb.rst:318
msgid ""
"Set the ignore count for the given breakpoint number.  If count is omitted, "
"the ignore count is set to 0.  A breakpoint becomes active when the ignore "
"count is zero.  When non-zero, the count is decremented each time the "
"breakpoint is reached and the breakpoint is not disabled and any associated "
"condition evaluates to true."
msgstr ""
"Establece el conteo de ignorar el número de punto de interrupción dado.  Si "
"se omite el recuento, el recuento de ignorar se establece en 0. Un punto de "
"interrupción se activa cuando el recuento de ignorar es cero.  Cuando no es "
"cero, el conteo se decrementa cada vez que se alcanza el punto de ruptura y "
"el punto de ruptura no se desactiva y cualquier condición asociada se evalúa "
"como verdadera."

#: ../Doc/library/pdb.rst:326
msgid ""
"Set a new *condition* for the breakpoint, an expression which must evaluate "
"to true before the breakpoint is honored.  If *condition* is absent, any "
"existing condition is removed; i.e., the breakpoint is made unconditional."
msgstr ""
"Establece una nueva *condition* para el punto de interrupción, una expresión "
"que debe evaluarse como verdadera antes de que el punto de ruptura sea "
"honrado.  Si la condición está ausente, se elimina cualquier condición "
"existente, es decir, el punto de ruptura se hace incondicional."

#: ../Doc/library/pdb.rst:332
msgid ""
"Specify a list of commands for breakpoint number *bpnumber*.  The commands "
"themselves appear on the following lines.  Type a line containing just "
"``end`` to terminate the commands. An example::"
msgstr ""
"Especifique una lista de comandos para el número del punto de interrupción "
"*bpnumber*.  Los comandos mismos aparecen en las siguientes líneas.  Escriba "
"una línea que contenga sólo ``end`` para terminar los comandos. Un ejemplo::"

#: ../Doc/library/pdb.rst:341
msgid ""
"To remove all commands from a breakpoint, type ``commands`` and follow it "
"immediately with ``end``; that is, give no commands."
msgstr ""
"Para eliminar todos los comandos de un punto de interrupción, escribe "
"``commands``  y sigue inmediatamente con ``end`` , es decir, no des órdenes."

#: ../Doc/library/pdb.rst:344
msgid ""
"With no *bpnumber* argument, ``commands`` refers to the last breakpoint set."
msgstr ""
"Sin el argumento *bpnumber*, ``commands`` se refiere al último punto de "
"interrupción establecido."

#: ../Doc/library/pdb.rst:346
msgid ""
"You can use breakpoint commands to start your program up again.  Simply use "
"the :pdbcmd:`continue` command, or :pdbcmd:`step`, or any other command that "
"resumes execution."
msgstr ""
"Puede utilizar los comandos de punto de interrupción para iniciar el "
"programa de nuevo.  Simplemente usa el comando :pdbcmd:`continue`, o :pdbcmd:"
"`step`, o cualquier otro comando que reanude la ejecución."

#: ../Doc/library/pdb.rst:350
msgid ""
"Specifying any command resuming execution (currently :pdbcmd:`continue`, :"
"pdbcmd:`step`, :pdbcmd:`next`, :pdbcmd:`return`, :pdbcmd:`jump`, :pdbcmd:"
"`quit` and their abbreviations) terminates the command list (as if that "
"command was immediately followed by end). This is because any time you "
"resume execution (even with a simple next or step), you may encounter "
"another breakpoint—which could have its own command list, leading to "
"ambiguities about which list to execute."
msgstr ""
"Al especificar cualquier comando que reanude la ejecución (actualmente :"
"pdbcmd:`continue`, :pdbcmd:`step`, :pdbcmd:`next`, :pdbcmd:`return`, :pdbcmd:"
"`jump`, :pdbcmd:`quit` y sus abreviaturas) se termina la lista de comandos "
"(como si ese comando fuera inmediatamente seguido de end.) Esto se debe a "
"que cada vez que se reanuda la ejecución (incluso con un simple siguiente o "
"paso), puede encontrarse con otro punto de interrupción, que podría tener su "
"propia lista de comandos, lo que conduce a ambigüedades sobre qué lista "
"ejecutar."

#: ../Doc/library/pdb.rst:359
msgid ""
"If you use the 'silent' command in the command list, the usual message about "
"stopping at a breakpoint is not printed.  This may be desirable for "
"breakpoints that are to print a specific message and then continue.  If none "
"of the other commands print anything, you see no sign that the breakpoint "
"was reached."
msgstr ""
"Si utiliza el comando 'silent' en la lista de comandos, no se imprime el "
"mensaje habitual sobre la parada en un punto de interrupción.  Esto puede "
"ser deseable para los puntos de interrupción que deben imprimir un mensaje "
"específico y luego continuar.  Si ninguno de los otros comandos imprime "
"nada, no se ve ninguna señal de que se haya alcanzado el punto de "
"interrupción."

#: ../Doc/library/pdb.rst:366
msgid ""
"Execute the current line, stop at the first possible occasion (either in a "
"function that is called or on the next line in the current function)."
msgstr ""
"Ejecutar la línea actual, detenerse en la primera ocasión posible (ya sea en "
"una función que se llame o en la siguiente línea de la función actual)."

#: ../Doc/library/pdb.rst:371
msgid ""
"Continue execution until the next line in the current function is reached or "
"it returns.  (The difference between :pdbcmd:`next` and :pdbcmd:`step` is "
"that :pdbcmd:`step` stops inside a called function, while :pdbcmd:`next` "
"executes called functions at (nearly) full speed, only stopping at the next "
"line in the current function.)"
msgstr ""
"Continúe la ejecución hasta que se alcance la siguiente línea de la función "
"actual o vuelva.  (La diferencia entre :pdbcmd:`next` y :pdbcmd:`step` es "
"que :pdbcmd:`step` se detiene dentro de una función llamada, mientras que :"
"pdbcmd:`next` ejecuta las funciones llamadas a (casi) toda velocidad, "
"deteniéndose sólo en la siguiente línea de la función actual)."

#: ../Doc/library/pdb.rst:379
msgid ""
"Without argument, continue execution until the line with a number greater "
"than the current one is reached."
msgstr ""
"Sin argumento, continúe la ejecución hasta que se alcance la línea con un "
"número mayor que el actual."

#: ../Doc/library/pdb.rst:382
msgid ""
"With a line number, continue execution until a line with a number greater or "
"equal to that is reached.  In both cases, also stop when the current frame "
"returns."
msgstr ""
"Con un número de línea, continúe la ejecución hasta que se alcance una línea "
"con un número mayor o igual a ese.  En ambos casos, también se detiene "
"cuando vuelve la trama actual."

#: ../Doc/library/pdb.rst:386
msgid "Allow giving an explicit line number."
msgstr "Permita dar un número de línea explícito."

#: ../Doc/library/pdb.rst:391
msgid "Continue execution until the current function returns."
msgstr "Continúe la ejecución hasta que vuelva la función actual."

#: ../Doc/library/pdb.rst:395
msgid "Continue execution, only stop when a breakpoint is encountered."
msgstr ""
"Continúa la ejecución, sólo se detiene cuando se encuentra un punto de "
"ruptura."

#: ../Doc/library/pdb.rst:399
msgid ""
"Set the next line that will be executed.  Only available in the bottom-most "
"frame.  This lets you jump back and execute code again, or jump forward to "
"skip code that you don't want to run."
msgstr ""
"Establezca la siguiente línea que será ejecutada.  Sólo disponible en el "
"marco de más bajo.  Esto te permite saltar hacia atrás y ejecutar el código "
"de nuevo, o saltar hacia adelante para saltar el código que no quieres "
"ejecutar."

#: ../Doc/library/pdb.rst:403
msgid ""
"It should be noted that not all jumps are allowed -- for instance it is not "
"possible to jump into the middle of a :keyword:`for` loop or out of a :"
"keyword:`finally` clause."
msgstr ""
"Cabe señalar que no todos los saltos están permitidos -- por ejemplo, no es "
"posible saltar en medio de un bucle :keyword:`for` o fuera de una cláusula :"
"keyword:`finally`."

#: ../Doc/library/pdb.rst:409
msgid ""
"List source code for the current file.  Without arguments, list 11 lines "
"around the current line or continue the previous listing.  With ``.`` as "
"argument, list 11 lines around the current line.  With one argument, list 11 "
"lines around at that line.  With two arguments, list the given range; if the "
"second argument is less than the first, it is interpreted as a count."
msgstr ""
"Enumere el código fuente del archivo actual.  Sin argumentos, enumere 11 "
"líneas alrededor de la línea actual o continúe la lista anterior.  Con ``.`` "
"como argumento, enumere 11 líneas alrededor de la línea actual.  Con un "
"argumento, enumere 11 líneas alrededor de esa línea.  Con dos argumentos, "
"enumere el rango dado; si el segundo argumento es menor que el primero, se "
"interpreta como un conteo."

#: ../Doc/library/pdb.rst:415
msgid ""
"The current line in the current frame is indicated by ``->``.  If an "
"exception is being debugged, the line where the exception was originally "
"raised or propagated is indicated by ``>>``, if it differs from the current "
"line."
msgstr ""
"La línea actual en el cuadro actual se indica con ``->``.  Si se está "
"depurando una excepción, la línea donde la excepción fue originalmente "
"planteada o propagada se indica con ``>>``, si difiere de la línea actual."

#: ../Doc/library/pdb.rst:420
msgid "The ``>>`` marker."
msgstr "El marcador ``>>`` ."

#: ../Doc/library/pdb.rst:425
msgid ""
"List all source code for the current function or frame.  Interesting lines "
"are marked as for :pdbcmd:`list`."
msgstr ""
"Enumere todos los códigos fuente de la función o marco actual.  Las líneas "
"interesantes están marcadas como :pdbcmd:`list`."

#: ../Doc/library/pdb.rst:432
msgid "Print the argument list of the current function."
msgstr "Imprime la lista de argumentos de la función actual."

#: ../Doc/library/pdb.rst:436
msgid "Evaluate the *expression* in the current context and print its value."
msgstr "Evalúa la *expression* en el contexto actual e imprime su valor."

#: ../Doc/library/pdb.rst:440
msgid ""
"``print()`` can also be used, but is not a debugger command --- this "
"executes the Python :func:`print` function."
msgstr ""
"``print()`` también se puede usar, pero no es un comando de depuración --- "
"esto ejecuta la función Python :func:`print`."

#: ../Doc/library/pdb.rst:446
msgid ""
"Like the :pdbcmd:`p` command, except the value of the expression is pretty-"
"printed using the :mod:`pprint` module."
msgstr ""
"Como el comando :pdbcmd:`p`, excepto que el valor de la expresión se imprime "
"bastante usando el módulo :mod:`pprint`."

#: ../Doc/library/pdb.rst:451
msgid "Print the type of the *expression*."
msgstr "Imprime el tipo de la *expression*."

#: ../Doc/library/pdb.rst:455
msgid "Try to get source code for the given object and display it."
msgstr "Intenta obtener el código fuente del objeto dado y mostrarlo."

#: ../Doc/library/pdb.rst:461
msgid ""
"Display the value of the expression if it changed, each time execution stops "
"in the current frame."
msgstr ""
"Muestra el valor de la expresión si ha cambiado, cada vez que se detenga la "
"ejecución en el marco actual."

#: ../Doc/library/pdb.rst:464
msgid "Without expression, list all display expressions for the current frame."
msgstr ""
"Sin expresión, enumere todas las expresiones de visualización para el cuadro "
"actual."

#: ../Doc/library/pdb.rst:470
msgid ""
"Do not display the expression any more in the current frame.  Without "
"expression, clear all display expressions for the current frame."
msgstr ""
"No muestren más la expresión en el cuadro actual.  Sin la expresión, borre "
"todas las expresiones de la pantalla para el marco actual."

#: ../Doc/library/pdb.rst:477
msgid ""
"Start an interactive interpreter (using the :mod:`code` module) whose global "
"namespace contains all the (global and local) names found in the current "
"scope."
msgstr ""
"Inicie un intérprete interactivo (usando el módulo :mod:`code`) cuyo espacio "
"de nombres global contiene todos los nombres (globales y locales) que se "
"encuentran en el ámbito actual."

#: ../Doc/library/pdb.rst:487
msgid ""
"Create an alias called *name* that executes *command*.  The command must "
"*not* be enclosed in quotes.  Replaceable parameters can be indicated by ``"
"%1``, ``%2``, and so on, while ``%*`` is replaced by all the parameters. If "
"no command is given, the current alias for *name* is shown. If no arguments "
"are given, all aliases are listed."
msgstr ""
"Crear un alias llamado *name* que ejecute el *command*.  El comando no debe "
"estar entre comillas.  Los parámetros reemplazables pueden ser indicados por "
"``%1``, ``%2``, y así sucesivamente, mientras que ``%*`` es reemplazado por "
"todos los parámetros. Si no se da ningún comando, se muestra el alias actual "
"de *name*. Si no se dan argumentos, se muestran todos los alias."

#: ../Doc/library/pdb.rst:493
msgid ""
"Aliases may be nested and can contain anything that can be legally typed at "
"the pdb prompt.  Note that internal pdb commands *can* be overridden by "
"aliases.  Such a command is then hidden until the alias is removed.  "
"Aliasing is recursively applied to the first word of the command line; all "
"other words in the line are left alone."
msgstr ""
"Los alias pueden anidarse y pueden contener cualquier cosa que se pueda "
"teclear legalmente en el prompt de pdb.  Tenga en cuenta que los comandos "
"internos de pdb *pueden* ser anulados por los alias.  Dicho comando se "
"oculta hasta que se elimina el alias.  El alias se aplica de forma recursiva "
"a la primera palabra de la línea de comandos; todas las demás palabras de la "
"línea se dejan en paz."

#: ../Doc/library/pdb.rst:499
msgid ""
"As an example, here are two useful aliases (especially when placed in the :"
"file:`.pdbrc` file)::"
msgstr ""
"Como ejemplo, aquí hay dos alias útiles (especialmente cuando se colocan en "
"el archivo :file:`.pdbrc`)::"

#: ../Doc/library/pdb.rst:509
msgid "Delete the specified alias."
msgstr "Elimine el alias especificado."

#: ../Doc/library/pdb.rst:513
msgid ""
"Execute the (one-line) *statement* in the context of the current stack "
"frame. The exclamation point can be omitted unless the first word of the "
"statement resembles a debugger command.  To set a global variable, you can "
"prefix the assignment command with a :keyword:`global` statement on the same "
"line, e.g.::"
msgstr ""
"Ejecute (una línea) *statement* en el contexto del marco de la pila actual. "
"El signo de exclamación puede ser omitido a menos que la primera palabra de "
"la declaración se parezca a un comando de depuración.  Para establecer una "
"variable global, puede anteponer al comando de asignación una declaración :"
"keyword:`global` en la misma línea, por ejemplo::"

#: ../Doc/library/pdb.rst:525
msgid ""
"Restart the debugged Python program.  If an argument is supplied, it is "
"split with :mod:`shlex` and the result is used as the new :data:`sys.argv`. "
"History, breakpoints, actions and debugger options are preserved. :pdbcmd:"
"`restart` is an alias for :pdbcmd:`run`."
msgstr ""
"Reinicie el programa Python depurado.  Si se suministra un argumento, se "
"divide con :mod:`shlex` y el resultado se utiliza como el nuevo :data:`sys."
"argv`. Se conservan el historial, los puntos de interrupción, las acciones y "
"las opciones del depurador. :pdbcmd:`restart` es un alias de :pdbcmd:`run`."

#: ../Doc/library/pdb.rst:532
msgid "Quit from the debugger.  The program being executed is aborted."
msgstr "Salga del depurador.  El programa que se está ejecutando fue abortado."

#: ../Doc/library/pdb.rst:536
msgid ""
"Enter a recursive debugger that steps through the code argument (which is an "
"arbitrary expression or statement to be executed in the current environment)."
msgstr ""
"Introduce un depurador recursivo que pasa por el argumento del código (que "
"es una expresión o declaración arbitraria que debe ejecutarse en el entorno "
"actual)."

#: ../Doc/library/pdb.rst:542
msgid "Print the return value for the last return of a function."
msgstr ""

#: ../Doc/library/pdb.rst:545
msgid "Footnotes"
msgstr "Notas de pie de página"

#: ../Doc/library/pdb.rst:546
msgid ""
"Whether a frame is considered to originate in a certain module is determined "
"by the ``__name__`` in the frame globals."
msgstr ""
"Si se considera que un marco se origina en un determinado módulo se "
"determina por el ``__name__`` en el marcos globales."

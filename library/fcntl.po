# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-10-07 11:40+0200\n"
"Last-Translator: \n"
"Language: es_ES\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/library/fcntl.rst:2
msgid ":mod:`fcntl` --- The ``fcntl`` and ``ioctl`` system calls"
msgstr ":mod:`fcntl` --- Las llamadas a sistema ``fcntl`` y ``ioctl``"

#: ../Doc/library/fcntl.rst:16
msgid ""
"This module performs file control and I/O control on file descriptors. It is "
"an interface to the :c:func:`fcntl` and :c:func:`ioctl` Unix routines.  For "
"a complete description of these calls, see :manpage:`fcntl(2)` and :manpage:"
"`ioctl(2)` Unix manual pages."
msgstr ""
"Este módulo realiza control de archivos y control de E/S en descriptores de "
"ficheros. Es una interfaz para las rutinas de Unix :c:func:`fcntl` y :c:func:"
"`ioctl`. Para una completa descripción de estas llamadas, ver las páginas "
"del manual de Unix :manpage:`fcntl(2)` y :manpage:`ioctl(2)`."

#: ../Doc/library/fcntl.rst:21
msgid ""
"All functions in this module take a file descriptor *fd* as their first "
"argument.  This can be an integer file descriptor, such as returned by ``sys."
"stdin.fileno()``, or an :class:`io.IOBase` object, such as ``sys.stdin`` "
"itself, which provides a :meth:`~io.IOBase.fileno` that returns a genuine "
"file descriptor."
msgstr ""
"Todas las funciones de este módulo toman un descriptor de fichero *fd* como "
"su primer argumento.  Puede ser un descriptor de fichero entero, como el "
"retornado por ``sys.stdin.fileno()``, o un objeto :class:`io.IOBase`, como "
"`sys.stdin``, que proporciona un :meth:`~io.IOBase.fileno` que retornan un "
"descriptor de fichero original."

#: ../Doc/library/fcntl.rst:27
msgid ""
"Operations in this module used to raise an :exc:`IOError` where they now "
"raise an :exc:`OSError`."
msgstr ""
"Las operaciones en este módulo solían lanzar un :exc:`IOError` donde ahora "
"lanzan un :exc:`OSError`."

#: ../Doc/library/fcntl.rst:31
msgid ""
"The fcntl module now contains ``F_ADD_SEALS``, ``F_GET_SEALS``, and "
"``F_SEAL_*`` constants for sealing of :func:`os.memfd_create` file "
"descriptors."
msgstr ""
"El módulo *fcntl* ahora contiene las constantes ``F_ADD_SEALS``, "
"``F_GET_SEALS``, y ``F_SEAL_*`` para sellar los descriptores de fichero :"
"func:`os.memfd_create`."

#: ../Doc/library/fcntl.rst:36
msgid ""
"On macOS, the fcntl module exposes the ``F_GETPATH`` constant, which obtains "
"the path of a file from a file descriptor. On Linux(>=3.15), the fcntl "
"module exposes the ``F_OFD_GETLK``, ``F_OFD_SETLK`` and ``F_OFD_SETLKW`` "
"constants, which working with open file description locks."
msgstr ""

#: ../Doc/library/fcntl.rst:42
msgid "The module defines the following functions:"
msgstr "El módulo define las siguientes funciones:"

#: ../Doc/library/fcntl.rst:47
msgid ""
"Perform the operation *cmd* on file descriptor *fd* (file objects providing "
"a :meth:`~io.IOBase.fileno` method are accepted as well).  The values used "
"for *cmd* are operating system dependent, and are available as constants in "
"the :mod:`fcntl` module, using the same names as used in the relevant C "
"header files. The argument *arg* can either be an integer value, or a :class:"
"`bytes` object. With an integer value, the return value of this function is "
"the integer return value of the C :c:func:`fcntl` call.  When the argument "
"is bytes it represents a binary structure, e.g. created by :func:`struct."
"pack`. The binary data is copied to a buffer whose address is passed to the "
"C :c:func:`fcntl` call.  The return value after a successful call is the "
"contents of the buffer, converted to a :class:`bytes` object. The length of "
"the returned object will be the same as the length of the *arg* argument. "
"This is limited to 1024 bytes. If the information returned in the buffer by "
"the operating system is larger than 1024 bytes, this is most likely to "
"result in a segmentation violation or a more subtle data corruption."
msgstr ""
"Realice la operación *cmd* en el descriptor de fichero *fd* (los objetos de "
"fichero que proporcionan un método :meth:`~io.IOBase.fileno` también son "
"aceptados). Los valores utilizados para *cmd* dependen del sistema operativo "
"y están disponibles como constantes en el módulo :mod:`fcntl`, utilizando "
"los mismos nombres que se utilizan en los archivos de cabecera C relevantes. "
"El argumento *arg* puede ser un valor entero o un objeto :class:`bytes`. Con "
"un valor entero, el valor retorno de esta función es el valor entero "
"retornado por la llamada en C :c:func:`fcntl` . Cuando el argumento son "
"bytes representa una estructura binaria, e.g. creada por :func:`struct."
"pack`. Los datos binarios se copian en un búfer cuya dirección se pasa a la "
"llamada en C ::c:func:`fcntl`. El valor de retorno después de una llamada "
"correcta es el contenido del búfer, convertido en un objeto :class:`bytes`. "
"La longitud del objeto retornado será la misma que la longitud del argumento "
"*arg*. Esta longitud está limitada a 1024 bytes. Si la información retornada "
"en el búfer por el sistema operativo es mayor que 1024 bytes, lo más "
"probable es que se produzca una violación de segmento o a una corrupción de "
"datos más sutil."

#: ../Doc/library/fcntl.rst:64
msgid "If the :c:func:`fcntl` fails, an :exc:`OSError` is raised."
msgstr "Si se produce un error en :c:func:`fcntl`, se lanza un :exc:`OSError`."

#: ../Doc/library/fcntl.rst:66
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.fcntl`` with arguments "
"``fd``, ``cmd``, ``arg``."
msgstr ""
"Lanza un :ref:`auditing event <auditing>` ``fcntl.fcntl`` con argumentos "
"``fd``, ``cmd``, ``arg``."

#: ../Doc/library/fcntl.rst:71
msgid ""
"This function is identical to the :func:`~fcntl.fcntl` function, except that "
"the argument handling is even more complicated."
msgstr ""
"Esta función es idéntica a la función :func:`~fcntl.fcntl`, excepto por el "
"manejo de los argumentos que es aún más complicado."

#: ../Doc/library/fcntl.rst:74
msgid ""
"The *request* parameter is limited to values that can fit in 32-bits. "
"Additional constants of interest for use as the *request* argument can be "
"found in the :mod:`termios` module, under the same names as used in the "
"relevant C header files."
msgstr ""
"El parámetro *request* se encuentra limitado a valores que encajen en 32-"
"bits. Se pueden encontrar constantes adicionales de interés para usar como "
"argumento *request* en el módulo :mod:`termios`, con los mismos nombres que "
"se usan en los archivos de cabecera C relevantes."

#: ../Doc/library/fcntl.rst:79
msgid ""
"The parameter *arg* can be one of an integer, an object supporting the read-"
"only buffer interface (like :class:`bytes`) or an object supporting the read-"
"write buffer interface (like :class:`bytearray`)."
msgstr ""
"El parámetro *arg* puede ser un entero, un objeto que admita una interfaz de "
"búfer de solo lectura (como :class:`bytes`) o un objeto que admita una "
"interfaz de búfer de lectura-escritura (como: clase :class:`bytearray`)."

#: ../Doc/library/fcntl.rst:83
msgid ""
"In all but the last case, behaviour is as for the :func:`~fcntl.fcntl` "
"function."
msgstr ""
"En todos los casos excepto en el último, el comportamiento es el de la "
"función :func:`~fcntl.fcntl`."

#: ../Doc/library/fcntl.rst:86
msgid ""
"If a mutable buffer is passed, then the behaviour is determined by the value "
"of the *mutate_flag* parameter."
msgstr ""
"Si se pasa un búfer mutable, el comportamiento estará determinado por el "
"valor del parámetro *mutate_flag*."

#: ../Doc/library/fcntl.rst:89
msgid ""
"If it is false, the buffer's mutability is ignored and behaviour is as for a "
"read-only buffer, except that the 1024 byte limit mentioned above is avoided "
"-- so long as the buffer you pass is at least as long as what the operating "
"system wants to put there, things should work."
msgstr ""
"Si es falso, la mutabilidad del búfer se ignorará y el comportamiento será "
"como el de un búfer de solo lectura, excepto por el límite de 1024 bytes "
"mencionado arriba, que será evitado -- siempre que el búfer que pase sea al "
"menos tan largo como el sistema operativo quiera colocar allí, las cosas "
"deberían funcionar."

#: ../Doc/library/fcntl.rst:94
msgid ""
"If *mutate_flag* is true (the default), then the buffer is (in effect) "
"passed to the underlying :func:`ioctl` system call, the latter's return code "
"is passed back to the calling Python, and the buffer's new contents reflect "
"the action of the :func:`ioctl`.  This is a slight simplification, because "
"if the supplied buffer is less than 1024 bytes long it is first copied into "
"a static buffer 1024 bytes long which is then passed to :func:`ioctl` and "
"copied back into the supplied buffer."
msgstr ""
"Si *mutate_flag* es verdadero (valor predeterminado), entonces el búfer se "
"pasa (en efecto) a la llamada al sistema subyacente :func:`ioctl`, el código "
"de retorno de éste último se retorna al Python que llama, y ​​el nuevo "
"contenido del búfer refleja la acción de :func:`ioctl`. Esto es una ligera "
"simplificación, porque si el búfer proporcionado tiene menos de 1024 bytes "
"de longitud, primero se copia en un búfer estático de 1024 bytes de longitud "
"que luego se pasa a :func:`ioctl` y se copia de nuevo en el búfer "
"proporcionado."

#: ../Doc/library/fcntl.rst:102
msgid "If the :c:func:`ioctl` fails, an :exc:`OSError` exception is raised."
msgstr "Si :c:func:`ioctl` falla, se lanza la excepción :exc:`OSError`."

#: ../Doc/library/fcntl.rst:104
msgid "An example::"
msgstr "Un ejemplo:"

#: ../Doc/library/fcntl.rst:117
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.ioctl`` with arguments "
"``fd``, ``request``, ``arg``."
msgstr ""
"Lanza un evento :ref:`auditing event <auditing>` ``fcntl.ioctl`` con "
"argumentos ``fd``, ``request``, ``arg``."

#: ../Doc/library/fcntl.rst:122
msgid ""
"Perform the lock operation *operation* on file descriptor *fd* (file objects "
"providing a :meth:`~io.IOBase.fileno` method are accepted as well). See the "
"Unix manual :manpage:`flock(2)` for details.  (On some systems, this "
"function is emulated using :c:func:`fcntl`.)"
msgstr ""
"Realiza la operación de bloqueo *operation* sobre el descriptor de fichero "
"*fd* (los objetos de fichero que proporcionan un método :meth:`~io.IOBase."
"fileno` también son aceptados). Ver el manual de Unix :manpage:`flock(2)` "
"para más detalles. (En algunos sistemas, esta función es emulada usando :c:"
"func:`fcntl`.)"

#: ../Doc/library/fcntl.rst:127
msgid "If the :c:func:`flock` fails, an :exc:`OSError` exception is raised."
msgstr "Si :c:func:`flock` falla, una excepción :exc:`OSError` se lanza."

#: ../Doc/library/fcntl.rst:129
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.flock`` with arguments "
"``fd``, ``operation``."
msgstr ""
"Lanza un :ref:`auditing event <auditing>` ``fcntl.flock`` con argumentos "
"``fd``, ``operation``."

#: ../Doc/library/fcntl.rst:134
msgid ""
"This is essentially a wrapper around the :func:`~fcntl.fcntl` locking calls. "
"*fd* is the file descriptor (file objects providing a :meth:`~io.IOBase."
"fileno` method are accepted as well) of the file to lock or unlock, and "
"*cmd* is one of the following values:"
msgstr ""
"Esto es esencialmente un \"wrapper\" de las llamadas de bloqueo :func:"
"`~fcntl.fcntl` . * fd * es el descriptor de fichero (los objetos de fichero "
"que proporcionan un método :meth:`~io.IOBase.fileno` también se aceptan) del "
"archivo para bloquear o desbloquear, y *cmd* es uno de los siguientes "
"valores:"

#: ../Doc/library/fcntl.rst:139
msgid ":const:`LOCK_UN` -- unlock"
msgstr ":const:`LOCK_UN` -- desbloquear"

#: ../Doc/library/fcntl.rst:140
msgid ":const:`LOCK_SH` -- acquire a shared lock"
msgstr ":const:`LOCK_SH` -- adquirir un bloqueo compartido"

#: ../Doc/library/fcntl.rst:141
msgid ":const:`LOCK_EX` -- acquire an exclusive lock"
msgstr ":const:`LOCK_EX` -- adquirir un bloqueo exclusivo"

#: ../Doc/library/fcntl.rst:143
msgid ""
"When *cmd* is :const:`LOCK_SH` or :const:`LOCK_EX`, it can also be bitwise "
"ORed with :const:`LOCK_NB` to avoid blocking on lock acquisition. If :const:"
"`LOCK_NB` is used and the lock cannot be acquired, an :exc:`OSError` will be "
"raised and the exception will have an *errno* attribute set to :const:"
"`EACCES` or :const:`EAGAIN` (depending on the operating system; for "
"portability, check for both values).  On at least some systems, :const:"
"`LOCK_EX` can only be used if the file descriptor refers to a file opened "
"for writing."
msgstr ""
"Cuando *cmd* es :const:`LOCK_SH` o :const:`LOCK_EX`, también se puede usar "
"OR bit a bit con :const:`LOCK_NB` para evitar el bloqueo en la adquisición "
"de bloqueos. Si se usa :const:`LOCK_NB` y no se puede adquirir el bloqueo, "
"se generará un :const:`LOCK_NB` y la excepción tendrá un atributo *errno* "
"establecido a :const:`EACCES` o :const:`EAGAIN` (según el sistema operativo; "
"para la portabilidad, compruebe ambos valores). En al menos algunos "
"sistemas, :const:`LOCK_EX` solo se puede usar si el descriptor de fichero se "
"refiere a un archivo abierto para escritura."

#: ../Doc/library/fcntl.rst:152
msgid ""
"*len* is the number of bytes to lock, *start* is the byte offset at which "
"the lock starts, relative to *whence*, and *whence* is as with :func:`io."
"IOBase.seek`, specifically:"
msgstr ""
"*len* es el número de bytes a bloquear, *start* es el byte de \"offset\" en "
"el cual comienza el bloqueo, relativo a *whence*, y *whence* es como con :"
"func:`io.IOBase.seek`, específicamente:"

#: ../Doc/library/fcntl.rst:156
msgid ":const:`0` -- relative to the start of the file (:data:`os.SEEK_SET`)"
msgstr ":const:`0` -- relativo al comienzo del archivo (:data:`os.SEEK_SET`)"

#: ../Doc/library/fcntl.rst:157
msgid ""
":const:`1` -- relative to the current buffer position (:data:`os.SEEK_CUR`)"
msgstr ""
":const:`1` -- relativa a la posición actual del búfer (:data:`os.SEEK_CUR`)"

#: ../Doc/library/fcntl.rst:158
msgid ":const:`2` -- relative to the end of the file (:data:`os.SEEK_END`)"
msgstr ":const:`2` -- relativo al final del archivo (:data:`os.SEEK_END`)"

#: ../Doc/library/fcntl.rst:160
msgid ""
"The default for *start* is 0, which means to start at the beginning of the "
"file. The default for *len* is 0 which means to lock to the end of the "
"file.  The default for *whence* is also 0."
msgstr ""
"El valor por defecto de*start* es 0, lo que significa que comienza al inicio "
"del archivo. El valor por defecto para *len* es 0 lo que significa bloquear "
"hasta el final del archivo. El valor por defecto para *whence* también es 0."

#: ../Doc/library/fcntl.rst:164
msgid ""
"Raises an :ref:`auditing event <auditing>` ``fcntl.lockf`` with arguments "
"``fd``, ``cmd``, ``len``, ``start``, ``whence``."
msgstr ""
"Lanza un :ref:`auditing event <auditing>` ``fcntl.lockf`` con argumentos "
"``fd``, ``cmd``, ``len``, ``start``, ``whence``."

#: ../Doc/library/fcntl.rst:166
msgid "Examples (all on a SVR4 compliant system)::"
msgstr "Ejemplos (todos en un sistema compatible con SVR4)::"

#: ../Doc/library/fcntl.rst:176
msgid ""
"Note that in the first example the return value variable *rv* will hold an "
"integer value; in the second example it will hold a :class:`bytes` object.  "
"The structure lay-out for the *lockdata* variable is system dependent --- "
"therefore using the :func:`flock` call may be better."
msgstr ""
"Tenga en cuenta que en el primer ejemplo, la variable de valor de retorno "
"*rv* contendrá un valor entero; en el segundo ejemplo contendrá un objeto :"
"class:`bytes`. El diseño de la estructura para la variable *lockdata* "
"depende del sistema --- por lo tanto, usar la llamada :func:`flock` puede "
"ser mejor."

#: ../Doc/library/fcntl.rst:187
msgid "Module :mod:`os`"
msgstr "Módulo  :mod:`os`"

#: ../Doc/library/fcntl.rst:185
msgid ""
"If the locking flags :data:`~os.O_SHLOCK` and :data:`~os.O_EXLOCK` are "
"present in the :mod:`os` module (on BSD only), the :func:`os.open` function "
"provides an alternative to the :func:`lockf` and :func:`flock` functions."
msgstr ""
"Si los flags de bloqueo :data:`~os.O_SHLOCK` y :data:`~os.O_EXLOCK` están "
"presentes en el módulo :mod:`os` (sólo en BSD), la función :func:`os.open` "
"proporciona una alternativa a las funciones :func:`lockf` y :func:`flock`."

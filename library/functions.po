# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2023-01-15 09:36-0500\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language-Team: python-doc-esMIME-Version: 1.0\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.10.3\n"
"X-Generator: Poedit 3.0.1\n"

#: ../Doc/library/functions.rst:5 ../Doc/library/functions.rst:11
msgid "Built-in Functions"
msgstr "Funciones Built-in"

#: ../Doc/library/functions.rst:7
msgid ""
"The Python interpreter has a number of functions and types built into it "
"that are always available.  They are listed here in alphabetical order."
msgstr ""
"El intérprete de Python tiene una serie de funciones y tipos incluidos en él "
"que están siempre disponibles.  Están listados aquí en orden alfabético."

#: ../Doc/library/functions.rst
msgid "**A**"
msgstr "**A**"

#: ../Doc/library/functions.rst
msgid ":func:`abs`"
msgstr ":func:`abs`"

#: ../Doc/library/functions.rst
msgid ":func:`aiter`"
msgstr ":func:`aiter`"

#: ../Doc/library/functions.rst
msgid ":func:`all`"
msgstr ":func:`all`"

#: ../Doc/library/functions.rst
msgid ":func:`any`"
msgstr ":func:`any`"

#: ../Doc/library/functions.rst
msgid ":func:`anext`"
msgstr ":func:`anext`"

#: ../Doc/library/functions.rst
msgid ":func:`ascii`"
msgstr ":func:`ascii`"

#: ../Doc/library/functions.rst
msgid "**B**"
msgstr "**B**"

#: ../Doc/library/functions.rst
msgid ":func:`bin`"
msgstr ":func:`bin`"

#: ../Doc/library/functions.rst
msgid ":func:`bool`"
msgstr ":func:`bool`"

#: ../Doc/library/functions.rst
msgid ":func:`breakpoint`"
msgstr ":func:`breakpoint`"

#: ../Doc/library/functions.rst
msgid "|func-bytearray|_"
msgstr "|func-bytearray|_"

#: ../Doc/library/functions.rst
msgid "|func-bytes|_"
msgstr "|func-bytes|_"

#: ../Doc/library/functions.rst
msgid "**C**"
msgstr "**C**"

#: ../Doc/library/functions.rst
msgid ":func:`callable`"
msgstr ":func:`callable`"

#: ../Doc/library/functions.rst
msgid ":func:`chr`"
msgstr ":func:`chr`"

#: ../Doc/library/functions.rst
msgid ":func:`classmethod`"
msgstr ":func:`classmethod`"

#: ../Doc/library/functions.rst
msgid ":func:`compile`"
msgstr ":func:`compile`"

#: ../Doc/library/functions.rst
msgid ":func:`complex`"
msgstr ":func:`complex`"

#: ../Doc/library/functions.rst
msgid "**D**"
msgstr "**D**"

#: ../Doc/library/functions.rst
msgid ":func:`delattr`"
msgstr ":func:`delattr`"

#: ../Doc/library/functions.rst
msgid "|func-dict|_"
msgstr "|func-dict|_"

#: ../Doc/library/functions.rst
msgid ":func:`dir`"
msgstr ":func:`dir`"

#: ../Doc/library/functions.rst
msgid ":func:`divmod`"
msgstr ":func:`divmod`"

#: ../Doc/library/functions.rst
msgid "**E**"
msgstr "**E**"

#: ../Doc/library/functions.rst
msgid ":func:`enumerate`"
msgstr ":func:`enumerate`"

#: ../Doc/library/functions.rst
msgid ":func:`eval`"
msgstr ":func:`eval`"

#: ../Doc/library/functions.rst
msgid ":func:`exec`"
msgstr ":func:`exec`"

#: ../Doc/library/functions.rst
msgid "**F**"
msgstr "**F**"

#: ../Doc/library/functions.rst
msgid ":func:`filter`"
msgstr ":func:`filter`"

#: ../Doc/library/functions.rst
msgid ":func:`float`"
msgstr ":func:`float`"

#: ../Doc/library/functions.rst
msgid ":func:`format`"
msgstr ":func:`format`"

#: ../Doc/library/functions.rst
msgid "|func-frozenset|_"
msgstr "|func-frozenset|_"

#: ../Doc/library/functions.rst
msgid "**G**"
msgstr "**G**"

#: ../Doc/library/functions.rst
msgid ":func:`getattr`"
msgstr ":func:`getattr`"

#: ../Doc/library/functions.rst
msgid ":func:`globals`"
msgstr ":func:`globals`"

#: ../Doc/library/functions.rst
msgid "**H**"
msgstr "**H**"

#: ../Doc/library/functions.rst
msgid ":func:`hasattr`"
msgstr ":func:`hasattr`"

#: ../Doc/library/functions.rst
msgid ":func:`hash`"
msgstr ":func:`hash`"

#: ../Doc/library/functions.rst
msgid ":func:`help`"
msgstr ":func:`help`"

#: ../Doc/library/functions.rst
msgid ":func:`hex`"
msgstr ":func:`hex`"

#: ../Doc/library/functions.rst
msgid "**I**"
msgstr "**I**"

#: ../Doc/library/functions.rst
msgid ":func:`id`"
msgstr ":func:`id`"

#: ../Doc/library/functions.rst
msgid ":func:`input`"
msgstr ":func:`input`"

#: ../Doc/library/functions.rst
msgid ":func:`int`"
msgstr ":func:`int`"

#: ../Doc/library/functions.rst
msgid ":func:`isinstance`"
msgstr ":func:`isinstance`"

#: ../Doc/library/functions.rst
msgid ":func:`issubclass`"
msgstr ":func:`issubclass`"

#: ../Doc/library/functions.rst
msgid ":func:`iter`"
msgstr ":func:`iter`"

#: ../Doc/library/functions.rst
msgid "**L**"
msgstr "**L**"

#: ../Doc/library/functions.rst
msgid ":func:`len`"
msgstr ":func:`len`"

#: ../Doc/library/functions.rst
msgid "|func-list|_"
msgstr "|func-list|_"

#: ../Doc/library/functions.rst
msgid ":func:`locals`"
msgstr ":func:`locals`"

#: ../Doc/library/functions.rst
msgid "**M**"
msgstr "**M**"

#: ../Doc/library/functions.rst
msgid ":func:`map`"
msgstr ":func:`map`"

#: ../Doc/library/functions.rst
msgid ":func:`max`"
msgstr ":func:`max`"

#: ../Doc/library/functions.rst
msgid "|func-memoryview|_"
msgstr "|func-memoryview|_"

#: ../Doc/library/functions.rst
msgid ":func:`min`"
msgstr ":func:`min`"

#: ../Doc/library/functions.rst
msgid "**N**"
msgstr "**N**"

#: ../Doc/library/functions.rst
msgid ":func:`next`"
msgstr ":func:`next`"

#: ../Doc/library/functions.rst
msgid "**O**"
msgstr "**O**"

#: ../Doc/library/functions.rst
msgid ":func:`object`"
msgstr ":func:`object`"

#: ../Doc/library/functions.rst
msgid ":func:`oct`"
msgstr ":func:`oct`"

#: ../Doc/library/functions.rst
msgid ":func:`open`"
msgstr ":func:`open`"

#: ../Doc/library/functions.rst
msgid ":func:`ord`"
msgstr ":func:`ord`"

#: ../Doc/library/functions.rst
msgid "**P**"
msgstr "**P**"

#: ../Doc/library/functions.rst
msgid ":func:`pow`"
msgstr ":func:`pow`"

#: ../Doc/library/functions.rst
msgid ":func:`print`"
msgstr ":func:`print`"

#: ../Doc/library/functions.rst
msgid ":func:`property`"
msgstr ":func:`property`"

#: ../Doc/library/functions.rst
msgid "**R**"
msgstr "**R**"

#: ../Doc/library/functions.rst
msgid "|func-range|_"
msgstr "|func-range|_"

#: ../Doc/library/functions.rst
msgid ":func:`repr`"
msgstr ":func:`repr`"

#: ../Doc/library/functions.rst
msgid ":func:`reversed`"
msgstr ":func:`reversed`"

#: ../Doc/library/functions.rst
msgid ":func:`round`"
msgstr ":func:`round`"

#: ../Doc/library/functions.rst
msgid "**S**"
msgstr "**S**"

#: ../Doc/library/functions.rst
msgid "|func-set|_"
msgstr "|func-set|_"

#: ../Doc/library/functions.rst
msgid ":func:`setattr`"
msgstr ":func:`setattr`"

#: ../Doc/library/functions.rst
msgid ":func:`slice`"
msgstr ":func:`slice`"

#: ../Doc/library/functions.rst
msgid ":func:`sorted`"
msgstr ":func:`sorted`"

#: ../Doc/library/functions.rst
msgid ":func:`staticmethod`"
msgstr ":func:`staticmethod`"

#: ../Doc/library/functions.rst
msgid "|func-str|_"
msgstr "|func-str|_"

#: ../Doc/library/functions.rst
msgid ":func:`sum`"
msgstr ":func:`sum`"

#: ../Doc/library/functions.rst
msgid ":func:`super`"
msgstr ":func:`super`"

#: ../Doc/library/functions.rst
msgid "**T**"
msgstr "**T**"

#: ../Doc/library/functions.rst
msgid "|func-tuple|_"
msgstr "|func-tuple|_"

#: ../Doc/library/functions.rst
msgid ":func:`type`"
msgstr ":func:`type`"

#: ../Doc/library/functions.rst
msgid "**V**"
msgstr "**V**"

#: ../Doc/library/functions.rst
msgid ":func:`vars`"
msgstr ":func:`vars`"

#: ../Doc/library/functions.rst
msgid "**Z**"
msgstr "**Z**"

#: ../Doc/library/functions.rst
msgid ":func:`zip`"
msgstr ":func:`zip`"

#: ../Doc/library/functions.rst
msgid "**_**"
msgstr "**_**"

#: ../Doc/library/functions.rst
msgid ":func:`__import__`"
msgstr ":func:`__import__`"

#: ../Doc/library/functions.rst:59
msgid ""
"Return the absolute value of a number.  The argument may be an integer, a "
"floating point number, or an object implementing :meth:`__abs__`. If the "
"argument is a complex number, its magnitude is returned."
msgstr ""
"Retorna el valor absoluto de un número. El argumento puede ser un número "
"entero, un número de coma flotante o un objeto que implemente :meth:"
"`__abs__`. Si el argumento es un número complejo, se retorna su magnitud."

#: ../Doc/library/functions.rst:66
msgid ""
"Return an :term:`asynchronous iterator` for an :term:`asynchronous "
"iterable`. Equivalent to calling ``x.__aiter__()``."
msgstr ""
"Retorna un :term:`asynchronous iterator` para un :term:`asynchronous "
"iterable`. Equivalente a llamar ``x.__aiter__()``."

#: ../Doc/library/functions.rst:69
msgid "Note: Unlike :func:`iter`, :func:`aiter` has no 2-argument variant."
msgstr ""
"Nota: A diferencia de :func:`iter`, :func:`aiter` no tiene una variante con "
"2 argumentos."

#: ../Doc/library/functions.rst:75
msgid ""
"Return ``True`` if all elements of the *iterable* are true (or if the "
"iterable is empty).  Equivalent to::"
msgstr ""
"Retorna  ``True``  si todos los elementos del *iterable* son verdaderos (o "
"si el iterable está vacío). Equivalente a::"

#: ../Doc/library/functions.rst:88
msgid ""
"When awaited, return the next item from the given :term:`asynchronous "
"iterator`, or *default* if given and the iterator is exhausted."
msgstr ""
"Cuando está esperado, retorna el siguiente elemento del :term:`asynchronous "
"iterator` otorgado, o *default* (por defecto) si se da y el iterador está "
"agotado."

#: ../Doc/library/functions.rst:91
msgid ""
"This is the async variant of the :func:`next` builtin, and behaves similarly."
msgstr ""
"Esta es la variante asincrónica del :func:`next` incorporado, y se comporta "
"de manera similar."

#: ../Doc/library/functions.rst:94
msgid ""
"This calls the :meth:`~object.__anext__` method of *async_iterator*, "
"returning an :term:`awaitable`. Awaiting this returns the next value of the "
"iterator. If *default* is given, it is returned if the iterator is "
"exhausted, otherwise :exc:`StopAsyncIteration` is raised."
msgstr ""
"Esto llama al método :meth:`~object.__anext__` de *async_iterator*, "
"retornando un :term:`awaitable`. A la espera de esto se retorna el siguiente "
"valor del iterador. Si se otorga *default* (por defecto), se retorna si el "
"iterador está agotado, de lo contrario se lanza :exc:`StopAsyncIteration`."

#: ../Doc/library/functions.rst:103
msgid ""
"Return ``True`` if any element of the *iterable* is true.  If the iterable "
"is empty, return ``False``.  Equivalent to::"
msgstr ""
"Retorna  ``True`` si un elemento cualquiera del *iterable* es verdadero. Si "
"el iterable está vacío, retorna ``False``. Equivalente a::"

#: ../Doc/library/functions.rst:115
msgid ""
"As :func:`repr`, return a string containing a printable representation of an "
"object, but escape the non-ASCII characters in the string returned by :func:"
"`repr` using ``\\x``, ``\\u``, or ``\\U`` escapes.  This generates a string "
"similar to that returned by :func:`repr` in Python 2."
msgstr ""
"Como :func:`repr`, retorna una cadena que contiene una representación "
"imprimible de un objeto, pero que escapa los caracteres no ASCII que :func:"
"`repr` retorna usando ``\\x``, ``\\u`` or ``\\U``. Esto genera una cadena "
"similar a la retornada por :func:`repr` en Python 2."

#: ../Doc/library/functions.rst:123
msgid ""
"Convert an integer number to a binary string prefixed with \"0b\". The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`__index__` method that returns an "
"integer. Some examples:"
msgstr ""
"Convierte un número entero a una cadena binaria con prefijo \"0b\". El "
"resultado es una expresión de Python válida. Si *x* no es un objeto de "
"clase :class:`int`  en Python, tiene que definir un método :meth:"
"`__index__`  que retorne un entero. Algunos ejemplos:"

#: ../Doc/library/functions.rst:133
msgid ""
"If the prefix \"0b\" is desired or not, you can use either of the following "
"ways."
msgstr ""
"Según se desee o no el prefijo \"0b\", se puede usar uno u otro de las "
"siguientes maneras."

#: ../Doc/library/functions.rst:140 ../Doc/library/functions.rst:831
#: ../Doc/library/functions.rst:1144
msgid "See also :func:`format` for more information."
msgstr "Véase también :func:`format` para más información."

#: ../Doc/library/functions.rst:145
msgid ""
"Return a Boolean value, i.e. one of ``True`` or ``False``.  *x* is converted "
"using the standard :ref:`truth testing procedure <truth>`.  If *x* is false "
"or omitted, this returns ``False``; otherwise, it returns ``True``.  The :"
"class:`bool` class is a subclass of :class:`int` (see :ref:`typesnumeric`). "
"It cannot be subclassed further.  Its only instances are ``False`` and "
"``True`` (see :ref:`bltin-boolean-values`)."
msgstr ""
"Retorna un booleano, es decir, o bien ``True`` o ``False``. *x* es "
"convertido usando el estándar :ref:`truth testing procedure <truth>`. Si *x* "
"es falso u omitido, retorna ``False``; en caso contrario retorna  ``True``.  "
"La clase  :class:`bool` es una subclase de :class:`int` (véase :ref:"
"`typesnumeric`). De ella no pueden derivarse más subclases. Sus únicas "
"instancias son ``False`` y ``True`` (véase :ref:`bltin-boolean-values`)."

#: ../Doc/library/functions.rst:154 ../Doc/library/functions.rst:696
#: ../Doc/library/functions.rst:916
msgid "*x* is now a positional-only parameter."
msgstr "*x* es ahora un argumento solo de posición."

#: ../Doc/library/functions.rst:159
msgid ""
"This function drops you into the debugger at the call site.  Specifically, "
"it calls :func:`sys.breakpointhook`, passing ``args`` and ``kws`` straight "
"through.  By default, ``sys.breakpointhook()`` calls :func:`pdb.set_trace()` "
"expecting no arguments.  In this case, it is purely a convenience function "
"so you don't have to explicitly import :mod:`pdb` or type as much code to "
"enter the debugger.  However, :func:`sys.breakpointhook` can be set to some "
"other function and :func:`breakpoint` will automatically call that, allowing "
"you to drop into the debugger of choice. If :func:`sys.breakpointhook` is "
"not accessible, this function will raise :exc:`RuntimeError`."
msgstr ""
"Esta función te lleva al depurador en el sitio donde se produce la llamada. "
"Específicamente, llama a :func:`sys.breakpointhook`, pasando ``args`` y "
"``kws`` directamente. Por defecto, ``sys.breakpointhook()`` llama a :func:"
"`pdb.set_trace()`  sin esperar argumentos. En este caso, es puramente una "
"función de conveniencia para evitar el importe explícito de :mod:`pdb` o "
"tener que escribir tanto código para entrar al depurador. Sin embargo, :func:"
"`sys.breakpointhook` puede ser configurado a otra función y :func:"
"`breakpoint` llamará automáticamente a esta, permitiendo entrar al depurador "
"elegido. Si no se puede acceder a :func:`sys.breakpointhook()`, esta función "
"lanza :exc:`RuntimeError`."

#: ../Doc/library/functions.rst:171
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.breakpoint`` with "
"argument ``breakpointhook``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``builtins.breakpoint`` con "
"``breakpointhook`` como argumento."

#: ../Doc/library/functions.rst:181
msgid ""
"Return a new array of bytes.  The :class:`bytearray` class is a mutable "
"sequence of integers in the range 0 <= x < 256.  It has most of the usual "
"methods of mutable sequences, described in :ref:`typesseq-mutable`, as well "
"as most methods that the :class:`bytes` type has, see :ref:`bytes-methods`."
msgstr ""
"Retorna un nuevo array de bytes. La clase  :class:`bytearray` es una "
"secuencia mutable de enteros en el rango 0 <= x < 256. Tiene la mayoría de "
"los métodos comunes en las secuencias mutables, descritos en :ref:`typesseq-"
"mutable`, así como la mayoría de los métodos que la clase :class:`bytes` "
"tiene, véase :ref:`bytes-methods`."

#: ../Doc/library/functions.rst:186
msgid ""
"The optional *source* parameter can be used to initialize the array in a few "
"different ways:"
msgstr ""
"El parámetro opcional *source* puede ser empleado para inicializar el vector "
"(*array*) de varias maneras distintas:"

#: ../Doc/library/functions.rst:189
msgid ""
"If it is a *string*, you must also give the *encoding* (and optionally, "
"*errors*) parameters; :func:`bytearray` then converts the string to bytes "
"using :meth:`str.encode`."
msgstr ""
"Si es una *string*, debes proporcionar también el parámetro *encoding* (y "
"opcionalmente, *errors*; entonces :func:`bytearray` convierte la cadena a "
"bytes empleando :meth:`str.encode`."

#: ../Doc/library/functions.rst:193
msgid ""
"If it is an *integer*, the array will have that size and will be initialized "
"with null bytes."
msgstr ""
"Si es un *integer*, el array tendrá ese tamaño y será inicializado con bytes "
"nulos."

#: ../Doc/library/functions.rst:196
msgid ""
"If it is an object conforming to the :ref:`buffer interface "
"<bufferobjects>`, a read-only buffer of the object will be used to "
"initialize the bytes array."
msgstr ""
"Si es un objeto conforme a :ref:`interfaz de búfer <bufferobjects>`, se "
"utilizará un búfer de solo lectura del objeto para inicializar el arreglo de "
"bytes."

#: ../Doc/library/functions.rst:199
msgid ""
"If it is an *iterable*, it must be an iterable of integers in the range ``0 "
"<= x < 256``, which are used as the initial contents of the array."
msgstr ""
"Si es un *iterable*, debe ser un iterable de enteros en el rango ``0 <= x < "
"256``, que son usados como los contenidos iniciales del array."

#: ../Doc/library/functions.rst:202
msgid "Without an argument, an array of size 0 is created."
msgstr "Sin argumento, se crea un array de tamaño 0."

#: ../Doc/library/functions.rst:204
msgid "See also :ref:`binaryseq` and :ref:`typebytearray`."
msgstr "Ver también: :ref:`binaryseq` y :ref:`typebytearray`."

#: ../Doc/library/functions.rst:213
msgid ""
"Return a new \"bytes\" object which is an immutable sequence of integers in "
"the range ``0 <= x < 256``.  :class:`bytes` is an immutable version of :"
"class:`bytearray` -- it has the same non-mutating methods and the same "
"indexing and slicing behavior."
msgstr ""
"Retorna un nuevo objeto \"bytes\", que es una secuencia inmutable de enteros "
"en el rango ``0 <= x < 256``. :class:`bytes` es una versión inmutable de :"
"class:`bytearray` -- tiene los mismos métodos no mutables y el mismo "
"comportamiento en términos de indexación y segmentación."

#: ../Doc/library/functions.rst:218
msgid ""
"Accordingly, constructor arguments are interpreted as for :func:`bytearray`."
msgstr ""
"En consecuencia, los argumentos del constructor son interpretados como los "
"de :func:`bytearray`."

#: ../Doc/library/functions.rst:220
msgid "Bytes objects can also be created with literals, see :ref:`strings`."
msgstr ""
"Los objetos de bytes también pueden ser creados con literales, ver :ref:"
"`strings`."

#: ../Doc/library/functions.rst:222
msgid "See also :ref:`binaryseq`, :ref:`typebytes`, and :ref:`bytes-methods`."
msgstr ""
"Ver también :ref:`binaryseq`, :ref:`typebytes`, y :ref:`bytes-methods`."

#: ../Doc/library/functions.rst:227
msgid ""
"Return :const:`True` if the *object* argument appears callable, :const:"
"`False` if not.  If this returns ``True``, it is still possible that a call "
"fails, but if it is ``False``, calling *object* will never succeed. Note "
"that classes are callable (calling a class returns a new instance); "
"instances are callable if their class has a :meth:`__call__` method."
msgstr ""
"Retorna :const:`True` si el argumento *object* parece invocable, y :const:"
"`False` sino. Si retorna ``True``, aun es posible que la invocación falle, "
"pero si es ``False``, invocar el *object* no funcionará nunca.  Hay que "
"tener en cuenta que las clases son invocables (ya que llamarlas retorna una "
"instancia nueva); y que las instancias lo serán si su clase tiene un método :"
"meth:`__call__`."

#: ../Doc/library/functions.rst:233
msgid ""
"This function was first removed in Python 3.0 and then brought back in "
"Python 3.2."
msgstr ""
"Está función fue eliminada en Python 3.0 pero traída de vuelta en Python 3.2."

#: ../Doc/library/functions.rst:240
msgid ""
"Return the string representing a character whose Unicode code point is the "
"integer *i*.  For example, ``chr(97)`` returns the string ``'a'``, while "
"``chr(8364)`` returns the string ``'€'``. This is the inverse of :func:`ord`."
msgstr ""
"Retorna la cadena que representa un carácter cuyo código Unicode es el "
"entero *i*. Por ejemplo, ``chr(97)`` retorna la cadena ``’a’``, mientras que "
"``chr(8364)`` retorna la cadena ``’€’``. Esta función es la inversa de :func:"
"`ord`."

#: ../Doc/library/functions.rst:244
msgid ""
"The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in "
"base 16).  :exc:`ValueError` will be raised if *i* is outside that range."
msgstr ""
"El rango válido para el argumento *i* es desde 0 a 1,114,111 (0x10FFFF en "
"base 16). Se lanzará una excepción :exc:`ValueError` si *i* está fuera de "
"ese rango."

#: ../Doc/library/functions.rst:250
msgid "Transform a method into a class method."
msgstr "Transforma un método en un método de clase."

#: ../Doc/library/functions.rst:252
msgid ""
"A class method receives the class as an implicit first argument, just like "
"an instance method receives the instance. To declare a class method, use "
"this idiom::"
msgstr ""
"Un método de clase recibe la clase como primer argumento implícito, de la "
"misma forma que un método de instancia recibe la instancia. Para declarar un "
"método de clase, emplea la siguiente expresión:"

#: ../Doc/library/functions.rst:260
msgid ""
"The ``@classmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"La forma ``@classmethod`` es una función :term:`decorator` — ver :ref:"
"`function` para más detalles."

#: ../Doc/library/functions.rst:263
msgid ""
"A class method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``).  The instance is ignored except for its "
"class. If a class method is called for a derived class, the derived class "
"object is passed as the implied first argument."
msgstr ""
"Un método de clase puede ser llamado en la clase (como ``C.f()``) o en la "
"instancia (como ``C().f()``). La instancia es ignorada salvo por su clase. "
"Si un método de clase es llamado desde una clase derivada, entonces el "
"objeto de la clase derivada se pasa como primer argumento implícito."

#: ../Doc/library/functions.rst:268
msgid ""
"Class methods are different than C++ or Java static methods. If you want "
"those, see :func:`staticmethod` in this section. For more information on "
"class methods, see :ref:`types`."
msgstr ""
"Los métodos de clase son diferentes a los métodos estáticos de C++ o Java. "
"Si los desea, consulte :func:`staticmethod` en esta sección. Para obtener "
"más información sobre los métodos de clase, consulte :ref:`types`."

#: ../Doc/library/functions.rst:272
msgid ""
"Class methods can now wrap other :term:`descriptors <descriptor>` such as :"
"func:`property`."
msgstr ""
"Los métodos de clase ahora pueden envolver otros :term:`descriptores "
"<descriptor>` como :func:`property`."

#: ../Doc/library/functions.rst:276
msgid ""
"Class methods now inherit the method attributes (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` and ``__annotations__``) and "
"have a new ``__wrapped__`` attribute."
msgstr ""
"Los métodos de clase ahora heredan los atributos de método (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` and ``__annotations__``) y "
"tienen un nuevo atributo ``__wrapped__``."

#: ../Doc/library/functions.rst:281
msgid ""
"Class methods can no longer wrap other :term:`descriptors <descriptor>` such "
"as :func:`property`."
msgstr ""
"Los métodos de clase ya no pueden envolver otros :term:`descriptores "
"<descriptor>` como :func:`property`."

#: ../Doc/library/functions.rst:288
msgid ""
"Compile the *source* into a code or AST object.  Code objects can be "
"executed by :func:`exec` or :func:`eval`.  *source* can either be a normal "
"string, a byte string, or an AST object.  Refer to the :mod:`ast` module "
"documentation for information on how to work with AST objects."
msgstr ""
"Compila el *source* en código o en un objeto AST (*Abstract Syntax Tree*, "
"árbol de sintaxis abstracta). Los objetos código pueden ser ejecutados por "
"las funciones :func:`exec` or :func:`eval`. *source* puede ser una cadena "
"normal, una cadena de bytes o un objeto AST. Para más información sobre cómo "
"trabajar con objetos AST, revisa la documentación del módulo :mod:`ast`."

#: ../Doc/library/functions.rst:293
msgid ""
"The *filename* argument should give the file from which the code was read; "
"pass some recognizable value if it wasn't read from a file (``'<string>'`` "
"is commonly used)."
msgstr ""
"El argumento *filename* debería dar el fichero desde el que el código fue "
"leído; pasará un valor reconocible en caso este no fuera leído de un "
"fichero  (``’<string>’`` es usado comúnmente para esto)."

#: ../Doc/library/functions.rst:297
msgid ""
"The *mode* argument specifies what kind of code must be compiled; it can be "
"``'exec'`` if *source* consists of a sequence of statements, ``'eval'`` if "
"it consists of a single expression, or ``'single'`` if it consists of a "
"single interactive statement (in the latter case, expression statements that "
"evaluate to something other than ``None`` will be printed)."
msgstr ""
"El argumento *mode* especifica que tipo de código debe ser compilado; puede "
"ser  ``’exec’`` si *source* consiste en una secuencia de declaraciones, "
"``’eval’`` si consiste de una expresión sencilla, o ``’single’`` si consiste "
"en una declaración única interactiva (en este último caso, las declaraciones "
"de expresiones que evalúen a algo distinto de ``None`` serán impresas)."

#: ../Doc/library/functions.rst:303
msgid ""
"The optional arguments *flags* and *dont_inherit* control which :ref:"
"`compiler options <ast-compiler-flags>` should be activated and which :ref:"
"`future features <future>` should be allowed. If neither is present (or both "
"are zero) the code is compiled with the same flags that affect the code that "
"is calling :func:`compile`. If the *flags* argument is given and "
"*dont_inherit* is not (or is zero) then the compiler options and the future "
"statements specified by the *flags* argument are used in addition to those "
"that would be used anyway. If *dont_inherit* is a non-zero integer then the "
"*flags* argument is it -- the flags (future features and compiler options) "
"in the surrounding code are ignored."
msgstr ""
"Los argumentos opcionales *flags* y *dont_inherit* controlan qué :ref:"
"`opciones del compilador <ast-compiler-flags>` deben activarse y cuáles :ref:"
"`características futuras <future>` deben permitirse. Si ninguno está "
"presente (o ambos son cero), el código se compila con los mismos flags que "
"afectan al código que llama :func:`compile`. Si se proporciona el argumento "
"*flags* y *dont_inherit* no es (o es cero), las opciones del compilador y "
"las declaraciones futuras especificadas por el argumento *flags* se utilizan "
"además de las que se utilizarían de todos modos. Si *dont_inherit* es un "
"número entero distinto de cero, entonces el argumento *flags* lo es: los "
"indicadores (características futuras y opciones del compilador) en el código "
"circundante se ignoran."

#: ../Doc/library/functions.rst:314
msgid ""
"Compiler options and future statements are specified by bits which can be "
"bitwise ORed together to specify multiple options. The bitfield required to "
"specify a given future feature can be found as the :attr:`~__future__."
"_Feature.compiler_flag` attribute on the :class:`~__future__._Feature` "
"instance in the :mod:`__future__` module. :ref:`Compiler flags <ast-compiler-"
"flags>` can be found in :mod:`ast` module, with ``PyCF_`` prefix."
msgstr ""
"Las opciones del compilador y las declaraciones futuras se especifican "
"mediante bits que pueden combinarse mediante OR bit a bit para especificar "
"varias opciones. El campo de bits requerido para especificar una "
"característica futura dada se puede encontrar como el atributo :attr:"
"`~__future__._Feature.compiler_flag` en la instancia :class:`~__future__."
"_Feature` en el módulo :mod:`__future__`. :ref:`Las flags del compilador "
"<ast-compiler-flags>` se pueden encontrar en el módulo :mod:`ast`, con el "
"prefijo ``PyCF_``."

#: ../Doc/library/functions.rst:322
msgid ""
"The argument *optimize* specifies the optimization level of the compiler; "
"the default value of ``-1`` selects the optimization level of the "
"interpreter as given by :option:`-O` options.  Explicit levels are ``0`` (no "
"optimization; ``__debug__`` is true), ``1`` (asserts are removed, "
"``__debug__`` is false) or ``2`` (docstrings are removed too)."
msgstr ""
"El argumento *optimize* especifica el nivel de optimización del compilador; "
"el valor por defecto de ``-1`` selecciona el nivel de optimización del "
"intérprete de la misma forma que las opciones :option:`-O`. Los niveles "
"explícitos son ``0`` (sin optimización; ``__debug__`` es true), ``1`` (se "
"eliminan los asserts, ``__debug__`` es false) or ``2`` (las *docstrings* "
"también son eliminadas)."

#: ../Doc/library/functions.rst:328
msgid ""
"This function raises :exc:`SyntaxError` if the compiled source is invalid, "
"and :exc:`ValueError` if the source contains null bytes."
msgstr ""
"Esta función lanza un :exc:`SyntaxError` si el código compilado es inválido, "
"y un :exc:`ValueError`  si contiene bytes nulos."

#: ../Doc/library/functions.rst:331
msgid ""
"If you want to parse Python code into its AST representation, see :func:`ast."
"parse`."
msgstr ""
"Si quieres transformar código Python a su representación AST, revisa :func:"
"`ast.parse`."

#: ../Doc/library/functions.rst:334
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source``, ``filename``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``compile`` con argumentos "
"``source``, ``filename``."

#: ../Doc/library/functions.rst:336
msgid ""
"Raises an :ref:`auditing event <auditing>` ``compile`` with arguments "
"``source`` and ``filename``. This event may also be raised by implicit "
"compilation."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``compile`` con argumentos "
"``source`` y ``filename``. Este evento también puede ser lanzado por la "
"compilación implícita."

#: ../Doc/library/functions.rst:342
msgid ""
"When compiling a string with multi-line code in ``'single'`` or ``'eval'`` "
"mode, input must be terminated by at least one newline character.  This is "
"to facilitate detection of incomplete and complete statements in the :mod:"
"`code` module."
msgstr ""
"Cuando se compile una cadena multilínea de código en los modos ``’single’`` "
"o ``’eval’``, la entrada debe terminar con un carácter de nueva línea como "
"mínimo. Esto facilita la detección de declaraciones completas e incompletas "
"en el módulo :mod:`code`."

#: ../Doc/library/functions.rst:349
msgid ""
"It is possible to crash the Python interpreter with a sufficiently large/"
"complex string when compiling to an AST object due to stack depth "
"limitations in Python's AST compiler."
msgstr ""
"Con una cadena lo suficientemente larga o compleja, al compilar a un objeto "
"AST es posible que el intérprete de Python pare inesperadamente debido a las "
"limitaciones de la profundidad de la pila en el compilador del AST de Python."

#: ../Doc/library/functions.rst:353
msgid ""
"Allowed use of Windows and Mac newlines.  Also, input in ``'exec'`` mode "
"does not have to end in a newline anymore.  Added the *optimize* parameter."
msgstr ""
"Permite el uso de caracteres de nueva línea de Windows y Mac. También, la "
"entrada en el modo ``’exec’`` ya no tiene que terminar necesariamente en una "
"nueva línea. Se añade el parámetro *optimize*."

#: ../Doc/library/functions.rst:357
msgid ""
"Previously, :exc:`TypeError` was raised when null bytes were encountered in "
"*source*."
msgstr ""
"Anteriormente, un :exc:`TypeError` era lanzado cuando se encontraban bytes "
"nulos en *source*."

#: ../Doc/library/functions.rst:361
msgid ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT`` can now be passed in flags to enable "
"support for top-level ``await``, ``async for``, and ``async with``."
msgstr ""
"``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT``  puede ahora ser pasado en *flags* para "
"permitir el soporte de ``await``, ``async for``, y ``async with`` en niveles "
"superiores."

#: ../Doc/library/functions.rst:369
msgid ""
"Return a complex number with the value *real* + *imag*\\*1j or convert a "
"string or number to a complex number.  If the first parameter is a string, "
"it will be interpreted as a complex number and the function must be called "
"without a second parameter.  The second parameter can never be a string. "
"Each argument may be any numeric type (including complex).  If *imag* is "
"omitted, it defaults to zero and the constructor serves as a numeric "
"conversion like :class:`int` and :class:`float`.  If both arguments are "
"omitted, returns ``0j``."
msgstr ""
"Retorna el número complejo con el valor *real* + *imag*\\*1j  o convierte "
"una cadena o un número a un número complejo. Si el primer parámetro es una "
"cadena, será interpretada como un número complejo y la función debe ser "
"llamada sin un segundo parámetro. El segundo parámetro nunca puede ser una "
"cadena. Cada argumento puede ser de cualquier tipo numérico (incluyendo "
"*complex*). Si se omite *imag*, su valor por defecto es cero y el "
"constructor sirve como un conversor numérico como :class:`int` y :class:"
"`float`. Si ambos argumentos son omitidos, retorna ``0j``."

#: ../Doc/library/functions.rst:378
msgid ""
"For a general Python object ``x``, ``complex(x)`` delegates to ``x."
"__complex__()``.  If ``__complex__()`` is not defined then it falls back to :"
"meth:`__float__`.  If ``__float__()`` is not defined then it falls back to :"
"meth:`__index__`."
msgstr ""
"Para un objeto general de Python ``x``, ``complex(x)`` delega a ``x."
"__complex__()``. Si ``__complex__()`` no está definida, entonces llama a  :"
"meth:`__float__`.  Si ``__float__()`` no está definida, entonces llama a :"
"meth:`__index__`."

#: ../Doc/library/functions.rst:385
msgid ""
"When converting from a string, the string must not contain whitespace around "
"the central ``+`` or ``-`` operator.  For example, ``complex('1+2j')`` is "
"fine, but ``complex('1 + 2j')`` raises :exc:`ValueError`."
msgstr ""
"Cuando se convierte desde una cadena, la cadena no debe contener espacios en "
"blanco alrededor de los operadores centrales ``+`` or ``-``. Por ejemplo, "
"``complex(‘1+2j’)`` es correcto, pero ``complex(‘1 + 2j’)`` lanza :exc:"
"`ValueError`."

#: ../Doc/library/functions.rst:390
msgid "The complex type is described in :ref:`typesnumeric`."
msgstr "El tipo complejo está descrito en :ref:`typesnumeric`."

#: ../Doc/library/functions.rst:392 ../Doc/library/functions.rst:693
#: ../Doc/library/functions.rst:913
msgid "Grouping digits with underscores as in code literals is allowed."
msgstr ""
"Agrupar dígitos con guiones bajos como en los literales de código está "
"permitido."

#: ../Doc/library/functions.rst:395
msgid ""
"Falls back to :meth:`__index__` if :meth:`__complex__` and :meth:`__float__` "
"are not defined."
msgstr ""
"Recurre a :meth:`__index__` si :meth:`__complex__` y :meth:`__float__` no "
"están definidos."

#: ../Doc/library/functions.rst:402
msgid ""
"This is a relative of :func:`setattr`.  The arguments are an object and a "
"string.  The string must be the name of one of the object's attributes.  The "
"function deletes the named attribute, provided the object allows it.  For "
"example, ``delattr(x, 'foobar')`` is equivalent to ``del x.foobar``. *name* "
"need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"Esta función es relativa a :func:`setattr`. Los argumentos son un objeto y "
"una cadena. La cadena debe ser el mismo nombre que alguno de los atributos "
"del objeto. La función elimina el atributo nombrado, si es que el objeto lo "
"permite. Por ejemplo ``delattr(x, ‘foobar’)`` es equivalente a ``del x."
"foobar``. *name* necesita no ser un identificador Python (ver :func:"
"`setattr`)."

#: ../Doc/library/functions.rst:415
msgid ""
"Create a new dictionary.  The :class:`dict` object is the dictionary class. "
"See :class:`dict` and :ref:`typesmapping` for documentation about this class."
msgstr ""
"Crea un nuevo diccionario. El objeto :class:`dict` es la clase diccionario. "
"Véase :class:`dict`  y :ref:`typesmapping` para más información sobre esta "
"clase."

#: ../Doc/library/functions.rst:418
msgid ""
"For other containers see the built-in :class:`list`, :class:`set`, and :"
"class:`tuple` classes, as well as the :mod:`collections` module."
msgstr ""
"Para otros contenedores véase las clases incorporadas (*built-in*) :class:"
"`list`, :class:`set`, y :class:`tuple`, así como el módulo :mod:"
"`collections`."

#: ../Doc/library/functions.rst:425
msgid ""
"Without arguments, return the list of names in the current local scope.  "
"With an argument, attempt to return a list of valid attributes for that "
"object."
msgstr ""
"Sin argumentos, retorna la lista de nombres en el ámbito local. Con un "
"argumento, intenta retornar una lista de atributos válidos para ese objeto."

#: ../Doc/library/functions.rst:428
msgid ""
"If the object has a method named :meth:`__dir__`, this method will be called "
"and must return the list of attributes. This allows objects that implement a "
"custom :func:`__getattr__` or :func:`__getattribute__` function to customize "
"the way :func:`dir` reports their attributes."
msgstr ""
"Si el objeto tiene un método llamado :meth:`__dir__`, éste será llamado y "
"debe retornar la lista de atributos. Esto permite que los objetos que "
"implementan una función personalizada :func:`__getattr__` o :func:"
"`__getattribute__` puedan decidir la manera en la que :func:`dir` reporta "
"sus atributos."

#: ../Doc/library/functions.rst:433
msgid ""
"If the object does not provide :meth:`__dir__`, the function tries its best "
"to gather information from the object's :attr:`~object.__dict__` attribute, "
"if defined, and from its type object.  The resulting list is not necessarily "
"complete and may be inaccurate when the object has a custom :func:"
"`__getattr__`."
msgstr ""
"Si el objeto no provee de un método :meth:`__dir__`, la función intenta "
"obtener la información del atributo  :attr:`~object.__dict__` del objeto, si "
"está definido, y de su objeto tipo. La lista resultante no está "
"necesariamente completa, y puede ser inexacta cuando el objeto tiene una "
"función :func:`__getattr__` personalizada."

#: ../Doc/library/functions.rst:438
msgid ""
"The default :func:`dir` mechanism behaves differently with different types "
"of objects, as it attempts to produce the most relevant, rather than "
"complete, information:"
msgstr ""
"El mecanismo por defecto de :func:`dir`  se comporta de forma distinta con "
"diferentes tipos de objeto, ya que intenta producir la información más "
"relevante en vez de la más completa:"

#: ../Doc/library/functions.rst:442
msgid ""
"If the object is a module object, the list contains the names of the "
"module's attributes."
msgstr ""
"Si el objeto es un módulo, la lista contiene los nombres de los atributos "
"del módulo."

#: ../Doc/library/functions.rst:445
msgid ""
"If the object is a type or class object, the list contains the names of its "
"attributes, and recursively of the attributes of its bases."
msgstr ""
"Si el objeto es un tipo o una clase, la lista contiene los nombres de sus "
"atributos, y recursivamente la de los atributos de sus clases base."

#: ../Doc/library/functions.rst:448
msgid ""
"Otherwise, the list contains the object's attributes' names, the names of "
"its class's attributes, and recursively of the attributes of its class's "
"base classes."
msgstr ""
"En cualquier otro caso, la lista contiene los nombres de los atributos del "
"objeto, los nombres de los atributos de su clase, y recursivamente los "
"atributos de sus clases base."

#: ../Doc/library/functions.rst:452
msgid "The resulting list is sorted alphabetically.  For example:"
msgstr "La lista resultante está ordenada alfabéticamente. Por ejemplo:"

#: ../Doc/library/functions.rst:471
msgid ""
"Because :func:`dir` is supplied primarily as a convenience for use at an "
"interactive prompt, it tries to supply an interesting set of names more than "
"it tries to supply a rigorously or consistently defined set of names, and "
"its detailed behavior may change across releases.  For example, metaclass "
"attributes are not in the result list when the argument is a class."
msgstr ""
"Ya que :func:`dir`  se ofrece como una herramienta para uso en una terminal "
"de forma interactiva, intenta ofrecer un grupo interesante de nombres más "
"que un uno rigurosamente definido, y su comportamiento detallado puede "
"cambiar entre versiones. Por ejemplo, los atributos de metaclase no están en "
"la lista resultante cuando el argumento es una clase."

#: ../Doc/library/functions.rst:481
msgid ""
"Take two (non-complex) numbers as arguments and return a pair of numbers "
"consisting of their quotient and remainder when using integer division.  "
"With mixed operand types, the rules for binary arithmetic operators apply.  "
"For integers, the result is the same as ``(a // b, a % b)``. For floating "
"point numbers the result is ``(q, a % b)``, where *q* is usually ``math."
"floor(a / b)`` but may be 1 less than that.  In any case ``q * b + a % b`` "
"is very close to *a*, if ``a % b`` is non-zero it has the same sign as *b*, "
"and ``0 <= abs(a % b) < abs(b)``."
msgstr ""
"Toma dos números (no complejos) como argumentos y retorna un par de números "
"consistentes en su cociente y su resto al emplear división de enteros. Con "
"operandos de tipos diferentes, se aplican las reglas de los operadores "
"aritméticos binarios. Para enteros, el resultado es el mismo que ``(a // b, "
"a % b)``. Para números de punto flotante el resultado es ``(q, a % b)``, "
"donde *q* normalmente es ``math.floor(a / b)`` pero puede ser 1 menos que "
"eso. En cualquier caso ``q * b + a % b`` es muy cercano a *a*, si ``a % b`` "
"es distinto de cero y tiene el mismo signo que *b*, y ``0 <= abs(a % b) < "
"abs(b)``."

#: ../Doc/library/functions.rst:493
msgid ""
"Return an enumerate object. *iterable* must be a sequence, an :term:"
"`iterator`, or some other object which supports iteration. The :meth:"
"`~iterator.__next__` method of the iterator returned by :func:`enumerate` "
"returns a tuple containing a count (from *start* which defaults to 0) and "
"the values obtained from iterating over *iterable*."
msgstr ""
"Retorna un objeto enumerador. *iterable* tiene que ser una secuencia, un :"
"term:`iterator`, o algún otro objeto que soporte la iteración. El método :"
"meth:`~iterator.__next__` del iterador retornado por la función :func:"
"`enumerate` retorna una tupla que contiene un contador (desde *start*, cuyo "
"valor por defecto es 0) y los valores obtenidos al iterar sobre *iterable*."

#: ../Doc/library/functions.rst:505
msgid "Equivalent to::"
msgstr "Equivalente a::"

#: ../Doc/library/functions.rst:517
msgid ""
"The arguments are a string and optional globals and locals.  If provided, "
"*globals* must be a dictionary.  If provided, *locals* can be any mapping "
"object."
msgstr ""
"Los argumentos son una cadena y opcionalmente, globales y locales. Si se "
"introduce, *globals* tiene que ser un diccionario, y *locals* puede ser "
"cualquier objeto de mapeo."

#: ../Doc/library/functions.rst:521
msgid ""
"The *expression* argument is parsed and evaluated as a Python expression "
"(technically speaking, a condition list) using the *globals* and *locals* "
"dictionaries as global and local namespace.  If the *globals* dictionary is "
"present and does not contain a value for the key ``__builtins__``, a "
"reference to the dictionary of the built-in module :mod:`builtins` is "
"inserted under that key before *expression* is parsed.  That way you can "
"control what builtins are available to the executed code by inserting your "
"own ``__builtins__`` dictionary into *globals* before passing it to :func:"
"`eval`.  If the *locals* dictionary is omitted it defaults to the *globals* "
"dictionary.  If both dictionaries are omitted, the expression is executed "
"with the *globals* and *locals* in the environment where :func:`eval` is "
"called.  Note, *eval()* does not have access to the :term:`nested scopes "
"<nested scope>` (non-locals) in the enclosing environment."
msgstr ""
"El argumento *expression* se analiza y evalúa como una expresión de Python "
"(técnicamente hablando, una lista de condiciones), usando los diccionarios "
"*globals* y *locals* como espacios de nombres globales y locales. Si el "
"diccionario *globals* está presente y no contiene un valor para la clave "
"``__builtins__``, se inserta bajo esa clave una referencia al diccionario "
"del módulo incorporado :mod:`builtins` antes de que la *expression* sea "
"analizada. De esa forma se puede controlar qué módulos incorporados están "
"disponibles para el código ejecutado insertando un diccionario propio "
"``__builtins__`` dentro de *globals* antes de pasarlo a la :func:`eval`. Si "
"el diccionario *locals* es omitido entonces su valor por defecto es el "
"diccionario *globals*. Si ambos diccionarios son omitidos, la expresión es "
"ejecutada con las *globals* y *locals* del entorno en el que :func:`eval` es "
"llamada. Tener en cuenta que *eval()* no tiene acceso al :term:`nested "
"scopes <nested scope>` (no locales) en el entorno que lo contiene."

#: ../Doc/library/functions.rst:536
msgid ""
"The return value is the result of the evaluated expression. Syntax errors "
"are reported as exceptions.  Example:"
msgstr ""
"El valor que retorna es el resultado de la expresión evaluada. Los errores "
"de sintaxis son reportados como excepciones. Por ejemplo:"

#: ../Doc/library/functions.rst:543
msgid ""
"This function can also be used to execute arbitrary code objects (such as "
"those created by :func:`compile`).  In this case, pass a code object instead "
"of a string.  If the code object has been compiled with ``'exec'`` as the "
"*mode* argument, :func:`eval`\\'s return value will be ``None``."
msgstr ""
"Esta función también puede ser utilizada para ejecutar objetos de código "
"arbitrario (como los que crea la función :func:`compile`). En este caso, se "
"pasa un objeto de código en vez de una cadena de caracteres. Si el objeto de "
"código ha sido compilado usando ``'exec'`` como el argumento *mode*, el "
"valor que retornará :func:`eval`\\ será ``None``."

#: ../Doc/library/functions.rst:548
msgid ""
"Hints: dynamic execution of statements is supported by the :func:`exec` "
"function.  The :func:`globals` and :func:`locals` functions return the "
"current global and local dictionary, respectively, which may be useful to "
"pass around for use by :func:`eval` or :func:`exec`."
msgstr ""
"Consejos: la ejecución dinámica de declaraciones está soportada por la "
"función :func:`exec`. Las funciones :func:`globals` y :func:`locals` "
"retornan los diccionarios global y local en ese momento, respectivamente, lo "
"cual puede ser útil para su uso en :func:`eval` o :func:`exec`."

#: ../Doc/library/functions.rst:553
msgid ""
"If the given source is a string, then leading and trailing spaces and tabs "
"are stripped."
msgstr ""
"Si la fuente dada es una cadena de caracteres, se eliminan los espacios y "
"tabulaciones principales y finales."

#: ../Doc/library/functions.rst:556
msgid ""
"See :func:`ast.literal_eval` for a function that can safely evaluate strings "
"with expressions containing only literals."
msgstr ""
"Véase :func:`ast.literal_eval`, una función que puede evaluar de forma "
"segura cadenas con expresiones que contienen solo literales."

#: ../Doc/library/functions.rst:559 ../Doc/library/functions.rst:600
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with argument "
"``code_object``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``exec`` con un argumento "
"``code_object``."

#: ../Doc/library/functions.rst:561 ../Doc/library/functions.rst:602
msgid ""
"Raises an :ref:`auditing event <auditing>` ``exec`` with the code object as "
"the argument. Code compilation events may also be raised."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``exec`` con el objeto código "
"como el argumento. También podrían ser lanzados eventos de compilación de "
"código."

#: ../Doc/library/functions.rst:568
msgid ""
"This function supports dynamic execution of Python code. *object* must be "
"either a string or a code object.  If it is a string, the string is parsed "
"as a suite of Python statements which is then executed (unless a syntax "
"error occurs). [#]_ If it is a code object, it is simply executed.  In all "
"cases, the code that's executed is expected to be valid as file input (see "
"the section :ref:`file-input` in the Reference Manual). Be aware that the :"
"keyword:`nonlocal`, :keyword:`yield`,  and :keyword:`return` statements may "
"not be used outside of function definitions even within the context of code "
"passed to the :func:`exec` function. The return value is ``None``."
msgstr ""
"Esta función admite la ejecución dinámica de código Python. *object* debe "
"ser una cadena o un objeto código. Si es una cadena de caracteres, la cadena "
"de caracteres se analiza como un conjunto de declaraciones de Python que "
"luego se ejecuta (a menos que ocurra un error de sintaxis). [#]_ Si es un "
"objeto código, simplemente se ejecuta. En todos los casos, se espera que el "
"código que se ejecuta sea válido como entrada de archivo (consulte la "
"sección :ref:`file-input` en el Manual de referencia). Tenga en cuenta que "
"las declaraciones :keyword:`nonlocal`, :keyword:`yield` y :keyword:`return` "
"no pueden utilizarse fuera de las definiciones de función, incluso dentro "
"del contexto del código pasado a la función :func:`exec` . El valor de "
"retorno es ``None``."

#: ../Doc/library/functions.rst:579
msgid ""
"In all cases, if the optional parts are omitted, the code is executed in the "
"current scope.  If only *globals* is provided, it must be a dictionary (and "
"not a subclass of dictionary), which will be used for both the global and "
"the local variables.  If *globals* and *locals* are given, they are used for "
"the global and local variables, respectively.  If provided, *locals* can be "
"any mapping object.  Remember that at the module level, globals and locals "
"are the same dictionary. If exec gets two separate objects as *globals* and "
"*locals*, the code will be executed as if it were embedded in a class "
"definition."
msgstr ""
"En todos los casos, si las partes opcionales son omitidas, el código es "
"ejecutado en el ámbito actual. Si solo se indica *globals*, debe ser un "
"diccionario (y no una subclase de diccionario), que será usada tanto para "
"las variables locales como las globales. Si se indican tanto *globals* como "
"*locals*, son usadas para las variables globales y locales respectivamente. "
"Si se indican, *locals* puede ser cualquier objeto de mapeo. Recuerda que a "
"nivel de módulo, *globals* y *locals* son el mismo diccionario. Si *exec* "
"recibe dos objetos separados como *globals* y *locals*, el código será "
"ejecutado como si estuviera incorporado en una definición de clase."

#: ../Doc/library/functions.rst:589
msgid ""
"If the *globals* dictionary does not contain a value for the key "
"``__builtins__``, a reference to the dictionary of the built-in module :mod:"
"`builtins` is inserted under that key.  That way you can control what "
"builtins are available to the executed code by inserting your own "
"``__builtins__`` dictionary into *globals* before passing it to :func:`exec`."
msgstr ""
"Si el diccionario *globals* no contiene un valor para la clave "
"``__builtins__``, una referencia al diccionario del módulo built-in :mod:"
"`builtins` se inserta bajo esa clave. De esta forma puedes controlar que "
"*builtins* están disponibles para el código ejecutado insertando tu propio "
"diccionario ``__builtins__`` en *globals* antes de pasárselo a :func:`exec`."

#: ../Doc/library/functions.rst:595
msgid ""
"The *closure* argument specifies a closure--a tuple of cellvars. It's only "
"valid when the *object* is a code object containing free variables. The "
"length of the tuple must exactly match the number of free variables "
"referenced by the code object."
msgstr ""
"El argumento *closure* especifica un closure: una tupla de celdas. Solo es "
"válido cuando el *objeto* es un objeto de código que contiene variables "
"libres. La longitud de la tupla debe coincidir exactamente con el número de "
"variables libres a las que hace referencia el objeto de código."

#: ../Doc/library/functions.rst:607
msgid ""
"The built-in functions :func:`globals` and :func:`locals` return the current "
"global and local dictionary, respectively, which may be useful to pass "
"around for use as the second and third argument to :func:`exec`."
msgstr ""
"Las funciones built-in :func:`globals` y :func:`locals` Retornan el "
"diccionario local y global actual, respectivamente, lo que puede ser útil "
"para pasarlo y emplearlo como el segundo y el tercer argumento de :func:"
"`exec`."

#: ../Doc/library/functions.rst:613
msgid ""
"The default *locals* act as described for function :func:`locals` below: "
"modifications to the default *locals* dictionary should not be attempted. "
"Pass an explicit *locals* dictionary if you need to see effects of the code "
"on *locals* after function :func:`exec` returns."
msgstr ""
"El *locals* por defecto actúa de la forma descrita para la función :func:"
"`locals` más abajo: no se deben intentar modificaciones sobre el diccionario "
"*locals* por defecto. Pasa un diccionario explícito *locals* si necesitas "
"ver los efectos del código en *locals* después de que la función :func:"
"`exec` retorne."

#: ../Doc/library/functions.rst:618
msgid "Added the *closure* parameter."
msgstr "Añadido el parámetro *closure*."

#: ../Doc/library/functions.rst:624
msgid ""
"Construct an iterator from those elements of *iterable* for which *function* "
"returns true.  *iterable* may be either a sequence, a container which "
"supports iteration, or an iterator.  If *function* is ``None``, the identity "
"function is assumed, that is, all elements of *iterable* that are false are "
"removed."
msgstr ""
"Construye un iterador a partir de aquellos elementos de *iterable* para los "
"cuales *function* retorna true. *iterable* puede ser una secuencia, un "
"contenedor que soporta iteración, o un iterador. Si *function* es ``None``, "
"se asume la función identidad, es decir, todos los elementos de *iterable* "
"que son false son eliminados."

#: ../Doc/library/functions.rst:630
msgid ""
"Note that ``filter(function, iterable)`` is equivalent to the generator "
"expression ``(item for item in iterable if function(item))`` if function is "
"not ``None`` and ``(item for item in iterable if item)`` if function is "
"``None``."
msgstr ""
"Ten en cuenta que ``filter(function, iterable)`` es equivalente a la "
"expresión de un generador ``(item for item in iterable if function(item))`` "
"si *function* no es ``None`` y a ``(item for item in iterable if item)`` si "
"*function* es ``None``."

#: ../Doc/library/functions.rst:635
msgid ""
"See :func:`itertools.filterfalse` for the complementary function that "
"returns elements of *iterable* for which *function* returns false."
msgstr ""
"Ver :func:`itertools.filterfalse` para la función complementaria que retorna "
"los elementos de *iterable* para los cuales *function* retorna false."

#: ../Doc/library/functions.rst:645
msgid "Return a floating point number constructed from a number or string *x*."
msgstr ""
"Retorna un número de punto flotante construido a partir de un número o una "
"cadena *x*."

#: ../Doc/library/functions.rst:647
msgid ""
"If the argument is a string, it should contain a decimal number, optionally "
"preceded by a sign, and optionally embedded in whitespace.  The optional "
"sign may be ``'+'`` or ``'-'``; a ``'+'`` sign has no effect on the value "
"produced.  The argument may also be a string representing a NaN (not-a-"
"number), or positive or negative infinity.  More precisely, the input must "
"conform to the following grammar after leading and trailing whitespace "
"characters are removed:"
msgstr ""
"Si el argumento es una cadena de caracteres, debe contener un número "
"decimal, opcionalmente precedido de un signo, y opcionalmente entre espacios "
"en blanco. El signo opcional puede ser ``’+’`` o ``’-‘``; un signo ``’+’`` "
"no tiene efecto en el valor producido. El argumento puede ser también una "
"cadena de caracteres representando un NaN (*not-a-number*), o un infinito "
"positivo o negativo. Más concretamente, el argumento debe adecuarse a la "
"siguiente gramática una vez eliminados de la cadena los caracteres en blanco "
"por delante o detrás:"

#: ../Doc/library/functions.rst:662
msgid ""
"Here ``floatnumber`` is the form of a Python floating-point literal, "
"described in :ref:`floating`.  Case is not significant, so, for example, "
"\"inf\", \"Inf\", \"INFINITY\", and \"iNfINity\" are all acceptable "
"spellings for positive infinity."
msgstr ""
"Aquí ``floatnumber`` es el formato de un literal de punto flotante de "
"Python, tal y como está descrito en :ref:`floating`. No es relevante si los "
"caracteres son mayúsculas o minúsculas, de forma que \"inf\", \"Inf\", "
"\"INFINITY\" e \"iNfINity\" son todas formas aceptables de escribir el "
"infinito positivo."

#: ../Doc/library/functions.rst:667
msgid ""
"Otherwise, if the argument is an integer or a floating point number, a "
"floating point number with the same value (within Python's floating point "
"precision) is returned.  If the argument is outside the range of a Python "
"float, an :exc:`OverflowError` will be raised."
msgstr ""
"Sino, en caso de que el argumento sea un entero o un decimal de punto "
"flotante, se retorna un número de punto flotante del mismo valor (dentro de "
"la precisión de punto flotante de Python). Si el argumento está fuera del "
"rango de un punto flotante de Python, se lanzará una excepción :exc:"
"`OverflowError`."

#: ../Doc/library/functions.rst:672
msgid ""
"For a general Python object ``x``, ``float(x)`` delegates to ``x."
"__float__()``.  If ``__float__()`` is not defined then it falls back to :"
"meth:`__index__`."
msgstr ""
"Para el objeto general de Python ``x``, ``float(x)`` delega a ``x."
"__float__()``. Si ``__float__()`` no está definido entonces recurre a :meth:"
"`__index__`."

#: ../Doc/library/functions.rst:676
msgid "If no argument is given, ``0.0`` is returned."
msgstr "Si no se le da un argumento, retorna ``0.0``."

#: ../Doc/library/functions.rst:678
msgid "Examples::"
msgstr "Ejemplos::"

#: ../Doc/library/functions.rst:691
msgid "The float type is described in :ref:`typesnumeric`."
msgstr "El tipo float está descrito en :ref:`typesnumeric`."

#: ../Doc/library/functions.rst:699
msgid "Falls back to :meth:`__index__` if :meth:`__float__` is not defined."
msgstr "Recurre a :meth:`__index__` si :meth:`__float__` no está definido."

#: ../Doc/library/functions.rst:709
msgid ""
"Convert a *value* to a \"formatted\" representation, as controlled by "
"*format_spec*.  The interpretation of *format_spec* will depend on the type "
"of the *value* argument; however, there is a standard formatting syntax that "
"is used by most built-in types: :ref:`formatspec`."
msgstr ""
"Convierte *value* a su representación \"con formato\", de forma controlada "
"por *format_spec*. La interpretación de *format_spec* dependerá del tipo del "
"argumento *value*. Sin embargo, hay una sintaxis estándar de formato que "
"emplean la mayoría de los tipos incorporados: :ref:`formatspec`."

#: ../Doc/library/functions.rst:714
msgid ""
"The default *format_spec* is an empty string which usually gives the same "
"effect as calling :func:`str(value) <str>`."
msgstr ""
"El *format_spec* por defecto es una cadena vacía que normalmente produce el "
"mismo efecto que llamar a :func:`str(value) <str>`."

#: ../Doc/library/functions.rst:717
msgid ""
"A call to ``format(value, format_spec)`` is translated to ``type(value)."
"__format__(value, format_spec)`` which bypasses the instance dictionary when "
"searching for the value's :meth:`__format__` method.  A :exc:`TypeError` "
"exception is raised if the method search reaches :mod:`object` and the "
"*format_spec* is non-empty, or if either the *format_spec* or the return "
"value are not strings."
msgstr ""
"Una llamada a ``format(value, format_spec)`` se traduce a  ``type(value)."
"__format__(value, format_spec)`` , que sortea el diccionario de la instancia "
"cuando busca por el método  :meth:`__format__` del valor. Una excepción :exc:"
"`TypeError` será lanzada si la búsqueda del método llega a :mod:`object` y "
"*format_spec* no está vacío, o si *format_spec* o el valor de retorno no son "
"cadenas."

#: ../Doc/library/functions.rst:724
msgid ""
"``object().__format__(format_spec)`` raises :exc:`TypeError` if "
"*format_spec* is not an empty string."
msgstr ""
"``object().__format__(format_spec)`` lanza :exc:`TypeError` si *format_spec* "
"no es una cadena vacía."

#: ../Doc/library/functions.rst:733
msgid ""
"Return a new :class:`frozenset` object, optionally with elements taken from "
"*iterable*.  ``frozenset`` is a built-in class.  See :class:`frozenset` and :"
"ref:`types-set` for documentation about this class."
msgstr ""
"Retorna un nuevo objeto :class:`frozenset` , opcionalmente con elementos "
"tomados de  *iterable*.  ``frozenset`` es una clase built-in.  Ver :class:"
"`frozenset` y :ref:`types-set` para documentación sobre esta clase."

#: ../Doc/library/functions.rst:737
msgid ""
"For other containers see the built-in :class:`set`, :class:`list`, :class:"
"`tuple`, and :class:`dict` classes, as well as the :mod:`collections` module."
msgstr ""
"Para otro tipo de contenedores, ver las clases built-in  :class:`set`, :"
"class:`list`, :class:`tuple`, y :class:`dict`, así como el módulo :mod:"
"`collections`."

#: ../Doc/library/functions.rst:745
msgid ""
"Return the value of the named attribute of *object*.  *name* must be a "
"string. If the string is the name of one of the object's attributes, the "
"result is the value of that attribute.  For example, ``getattr(x, "
"'foobar')`` is equivalent to ``x.foobar``.  If the named attribute does not "
"exist, *default* is returned if provided, otherwise :exc:`AttributeError` is "
"raised. *name* need not be a Python identifier (see :func:`setattr`)."
msgstr ""
"Retorna el valor del atributo nombrado de *object*. *name* debe ser una "
"cadena. Si la cadena es el nombre de uno de los atributos del objeto, el "
"resultado es el valor de ese atributo. Por ejemplo, ``getattr(x, ‘foobar’)`` "
"es equivalente a ``x.foobar``. Si el atributo nombrado no existe, se retorna "
"*default* si ha sido proporcionado como argumento, y sino se lanza una "
"excepción :exc:`AttributeError`. *name* no necesita ser un identificador de "
"Python (ver :func:`setattr`)."

#: ../Doc/library/functions.rst:754
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to retrieve it with :func:"
"`getattr`."
msgstr ""
"Dado que :ref:`private name mangling <private-name-mangling>` ocurre en el "
"momento de la compilación, uno debe enredar manualmente el nombre de un "
"atributo privado (atributos con dos guiones bajos principales) para "
"recuperarlo con :func:`getattr`."

#: ../Doc/library/functions.rst:762
msgid ""
"Return the dictionary implementing the current module namespace. For code "
"within functions, this is set when the function is defined and remains the "
"same regardless of where the function is called."
msgstr ""
"Retorna un diccionario que implementa el espacio de nombres del módulo "
"actual. Para el código dentro de las funciones, esto se establece cuando se "
"define la función y permanece igual independientemente de dónde se llame a "
"la función."

#: ../Doc/library/functions.rst:769
msgid ""
"The arguments are an object and a string.  The result is ``True`` if the "
"string is the name of one of the object's attributes, ``False`` if not. "
"(This is implemented by calling ``getattr(object, name)`` and seeing whether "
"it raises an :exc:`AttributeError` or not.)"
msgstr ""
"Los argumentos son un objeto y una cadena. El resultado es ``True``  si la "
"cadena es el nombre de uno de los atributos del objeto, y ``False`` en caso "
"contrario. (Está implementado mediante una llamada a ``getattr(object, "
"name)`` que comprueba si se lanza una excepción :exc:`AttributeError`  o no)."

#: ../Doc/library/functions.rst:777
msgid ""
"Return the hash value of the object (if it has one).  Hash values are "
"integers.  They are used to quickly compare dictionary keys during a "
"dictionary lookup.  Numeric values that compare equal have the same hash "
"value (even if they are of different types, as is the case for 1 and 1.0)."
msgstr ""
"Retorna el valor hash del objeto (si tiene uno). Los valores hash son "
"enteros. Se usan para comparar de forma rápida claves de diccionarios "
"durante las operaciones de búsqueda. Valores numéricos que son iguales "
"tienen el mismo valor hash (incluso si son de tipos diferentes, como es el "
"caso para 1 y 1.0)."

#: ../Doc/library/functions.rst:784
msgid ""
"For objects with custom :meth:`__hash__` methods, note that :func:`hash` "
"truncates the return value based on the bit width of the host machine. See :"
"meth:`__hash__` for details."
msgstr ""
"Para objetos que implementan métodos :meth:`__hash__`, ten en cuenta que :"
"func:`hash` trunca el valor de retorno en base a la tasa de bits de la "
"máquina host. Ver :meth:`__hash__` para más detalles."

#: ../Doc/library/functions.rst:791
msgid ""
"Invoke the built-in help system.  (This function is intended for interactive "
"use.)  If no argument is given, the interactive help system starts on the "
"interpreter console.  If the argument is a string, then the string is looked "
"up as the name of a module, function, class, method, keyword, or "
"documentation topic, and a help page is printed on the console.  If the "
"argument is any other kind of object, a help page on the object is generated."
msgstr ""
"Invoca el sistema de ayuda integrado (built-in). (Esta función está indicada "
"para su uso interactivo). Si no se le da argumento, el sistema interactivo "
"de ayuda se inicia en la consola del intérprete. Si el argumento es una "
"cadena, entonces es buscada como nombre de un módulo, función, clase, "
"método, palabra clave o tema de documentación, y una página de ayuda es "
"impresa en la consola. Si el argumento es cualquier otro tipo de objeto, una "
"página de ayuda sobre el objeto es generada."

#: ../Doc/library/functions.rst:798
msgid ""
"Note that if a slash(/) appears in the parameter list of a function when "
"invoking :func:`help`, it means that the parameters prior to the slash are "
"positional-only. For more info, see :ref:`the FAQ entry on positional-only "
"parameters <faq-positional-only-arguments>`."
msgstr ""
"Ten en cuenta que si aparece una barra(/) en la lista de parámetros de una "
"función al invocar :func:`help`, significa que los parámetros anteriores a "
"la barra son solo posicionales. Para más información, puedes ver :ref:`the "
"FAQ entry on positional-only parameters <faq-positional-only-arguments>`."

#: ../Doc/library/functions.rst:803
msgid ""
"This function is added to the built-in namespace by the :mod:`site` module."
msgstr ""
"Esta función se añade al espacio de nombres built-in a través del módulo :"
"mod:`site`."

#: ../Doc/library/functions.rst:805
msgid ""
"Changes to :mod:`pydoc` and :mod:`inspect` mean that the reported signatures "
"for callables are now more comprehensive and consistent."
msgstr ""
"Cambios a los módulos :mod:`pydoc` y :mod:`inspect` implican que las "
"signaturas reportadas para objetos invocables son más completas y "
"consistentes."

#: ../Doc/library/functions.rst:812
msgid ""
"Convert an integer number to a lowercase hexadecimal string prefixed with "
"\"0x\". If *x* is not a Python :class:`int` object, it has to define an :"
"meth:`__index__` method that returns an integer. Some examples:"
msgstr ""
"Convierte un número entero a una cadena hexadecimal de minúsculas con el "
"prefijo \"0x\". Si *x* no es un objeto de la clase Python :class:`int`, "
"tiene que definir un método :meth:`__index__` que retorne un entero. Algunos "
"ejemplos:"

#: ../Doc/library/functions.rst:821
msgid ""
"If you want to convert an integer number to an uppercase or lower "
"hexadecimal string with prefix or not, you can use either of the following "
"ways:"
msgstr ""
"Si quieres convertir un número entero a una cadena hexadecimal de mayúsculas "
"o minúsculas con prefijo o sin el, puedes usar cualquiera de las siguientes "
"formas:"

#: ../Doc/library/functions.rst:833
msgid ""
"See also :func:`int` for converting a hexadecimal string to an integer using "
"a base of 16."
msgstr ""
"Ver también :func:`int` para convertir una cadena hexadecimal a un entero "
"usando una base de 16."

#: ../Doc/library/functions.rst:838
msgid ""
"To obtain a hexadecimal string representation for a float, use the :meth:"
"`float.hex` method."
msgstr ""
"Para obtener una cadena hexadecimal que represente un punto flotante, "
"utiliza el método :meth:`float.hex`."

#: ../Doc/library/functions.rst:844
msgid ""
"Return the \"identity\" of an object.  This is an integer which is "
"guaranteed to be unique and constant for this object during its lifetime. "
"Two objects with non-overlapping lifetimes may have the same :func:`id` "
"value."
msgstr ""
"Retorna la \"identidad\" de un objeto. Esto es un entero que está "
"garantizado que es único y constante para este objeto durante toda su "
"existencia. Dos objetos con existencias en el tiempo que no coincidan pueden "
"tener el mismo valor de :func:`id`."

#: ../Doc/library/functions.rst:849
msgid "This is the address of the object in memory."
msgstr "Esta es la dirección del objeto en memoria."

#: ../Doc/library/functions.rst:851
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.id`` with argument "
"``id``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``builtins.id`` con el "
"argumento ``id``."

#: ../Doc/library/functions.rst:857
msgid ""
"If the *prompt* argument is present, it is written to standard output "
"without a trailing newline.  The function then reads a line from input, "
"converts it to a string (stripping a trailing newline), and returns that.  "
"When EOF is read, :exc:`EOFError` is raised.  Example::"
msgstr ""
"Si el argumento *prompt* está presente, se escribe a la salida estándar sin "
"una nueva línea a continuación. La función lee entonces una línea de la "
"entrada, la convierte en una cadena (eliminando la nueva línea), y retorna "
"eso. Cuando se lee EOF, se lanza una excepción :exc:`EOFError`. Ejemplo::"

#: ../Doc/library/functions.rst:867
msgid ""
"If the :mod:`readline` module was loaded, then :func:`input` will use it to "
"provide elaborate line editing and history features."
msgstr ""
"Si el módulo :mod:`readline` estaba cargado, entonces :func:`input` lo usará "
"para proporcionar características más elaboradas de edición de líneas e "
"historiales."

#: ../Doc/library/functions.rst:870
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``builtins.input`` con el "
"argumento ``prompt``."

#: ../Doc/library/functions.rst:872
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input`` with argument "
"``prompt`` before reading input"
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``builtins.input`` con el "
"argumento ``prompt`` antes de leer entrada"

#: ../Doc/library/functions.rst:875
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"argument ``result``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``builtins.input/result`` con "
"el argumento ``result``."

#: ../Doc/library/functions.rst:877
msgid ""
"Raises an :ref:`auditing event <auditing>` ``builtins.input/result`` with "
"the result after successfully reading input."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``builtins.input/result`` con "
"el resultado justo después de haber leído con éxito la entrada."

#: ../Doc/library/functions.rst:884
msgid ""
"Return an integer object constructed from a number or string *x*, or return "
"``0`` if no arguments are given.  If *x* defines :meth:`__int__`, ``int(x)`` "
"returns ``x.__int__()``.  If *x* defines :meth:`__index__`, it returns ``x."
"__index__()``.  If *x* defines :meth:`__trunc__`, it returns ``x."
"__trunc__()``. For floating point numbers, this truncates towards zero."
msgstr ""
"Retorna un objeto entero construido desde un número o cadena *x*, o retorna "
"``0`` si no se le proporcionan argumentos. Si *x* define :meth:`__int__`, "
"``int(x)`` retorna ``x.__int__()``.  Si *x* define :meth:`__index__`, "
"retorna ``x.__index__()``.  Si *x* define :meth:`__trunc__`, retorna ``x."
"__trunc__()``. Para números de punto flotante, los valores serán truncados "
"hacia cero."

# si he entendido correctamente, radix es una manera latina de referirse a una
# base aritmetica (https://en.wikipedia.org/wiki/Radix) luego en español
# aunque quede redundante debería dejar de base *base* pq una cosa es la cosa
# y la otra el argumento. Lo de las bases tampoco me convence la
# explicación/traducción
#: ../Doc/library/functions.rst:891
msgid ""
"If *x* is not a number or if *base* is given, then *x* must be a string, :"
"class:`bytes`, or :class:`bytearray` instance representing an :ref:`integer "
"literal <integers>` in radix *base*.  Optionally, the literal can be "
"preceded by ``+`` or ``-`` (with no space in between) and surrounded by "
"whitespace.  A base-n literal consists of the digits 0 to n-1, with ``a`` to "
"``z`` (or ``A`` to ``Z``) having values 10 to 35.  The default *base* is 10. "
"The allowed values are 0 and 2--36. Base-2, -8, and -16 literals can be "
"optionally prefixed with ``0b``/``0B``, ``0o``/``0O``, or ``0x``/``0X``, as "
"with integer literals in code.  Base 0 means to interpret exactly as a code "
"literal, so that the actual base is 2, 8, 10, or 16, and so that "
"``int('010', 0)`` is not legal, while ``int('010')`` is, as well as "
"``int('010', 8)``."
msgstr ""
"Si *x* no es un número o si se indica *base*, entonces *x* debe ser una "
"cadena, una instancia de :class:`bytes`, o una de :class:`bytearray` que "
"representa un :ref:`integer literal <integers>` de base *base*.  "
"Opcionalmente, el literal puede ser precedido de ``+`` or ``-`` (sin "
"espacios entre el número y el signo) y rodeados por espacio en blanco. Un "
"literal de base-n consiste en los dígitos de 0 a n-1, con valores entre 10 y "
"35 para los caracteres de ``a`` a ``z`` (o de ``A`` a ``Z``).  La *base* por "
"defecto es 10. Los valores permitidos son 0 y 2--36.  Los literales de "
"base-2, -8 y -16 pueden incluir opcionalmente un prefijo ``0b``/``0B``, "
"``0o``/``0O``, o ``0x``/``0X``, de igual forma que los literales enteros en "
"el código.  Base-0 indica que se debe interpretar exactamente como un "
"literal de código, de forma que la base real es 2, 8, 10 o 16, y que "
"``int('010', 0)`` no sea legal, mientras que ``int('010')`` sí lo es, así "
"como ``int('010', 8)``."

#: ../Doc/library/functions.rst:904
msgid "The integer type is described in :ref:`typesnumeric`."
msgstr "El tipo entero se describe en :ref:`typesnumeric`."

#: ../Doc/library/functions.rst:906
msgid ""
"If *base* is not an instance of :class:`int` and the *base* object has a :"
"meth:`base.__index__ <object.__index__>` method, that method is called to "
"obtain an integer for the base.  Previous versions used :meth:`base.__int__ "
"<object.__int__>` instead of :meth:`base.__index__ <object.__index__>`."
msgstr ""
"Si *base* no es una instancia de :class:`int` y el objeto *base* tiene un "
"método :meth:`base.__index__ <object.__index__>`, ese método es llamado para "
"obtener un entero para esa base. En versiones anteriores se empleaba :meth:"
"`base.__int__ <object.__int__>` en vez de :meth:`base.__index__ <object."
"__index__>`."

#: ../Doc/library/functions.rst:919
msgid "Falls back to :meth:`__index__` if :meth:`__int__` is not defined."
msgstr "Recurre a :meth:`__index__` si no está definido :meth:`__int__`."

#: ../Doc/library/functions.rst:922
msgid "The delegation to :meth:`__trunc__` is deprecated."
msgstr "La delegación a :meth:`__trunc__` está obsoleta."

#: ../Doc/library/functions.rst:925
msgid ""
":class:`int` string inputs and string representations can be limited to help "
"avoid denial of service attacks. A :exc:`ValueError` is raised when the "
"limit is exceeded while converting a string *x* to an :class:`int` or when "
"converting an :class:`int` into a string would exceed the limit. See the :"
"ref:`integer string conversion length limitation <int_max_str_digits>` "
"documentation."
msgstr ""
":class:`int` las entradas de cadena y las representaciones de cadena se "
"pueden limitar para ayudar a evitar ataques de denegación de servicio. Se "
"genera un :exc:`ValueError` cuando se excede el límite al convertir una "
"cadena x en un :class:`int` o cuando convertir un :class:`int` en una cadena "
"excedería el límite. Ver la documentación de :ref:`limitación de longitud de "
"conversión de cadena <int_max_str_digits>`."

#: ../Doc/library/functions.rst:935
msgid ""
"Return ``True`` if the *object* argument is an instance of the *classinfo* "
"argument, or of a (direct, indirect, or :term:`virtual <abstract base "
"class>`) subclass thereof.  If *object* is not an object of the given type, "
"the function always returns ``False``. If *classinfo* is a tuple of type "
"objects (or recursively, other such tuples) or a :ref:`types-union` of "
"multiple types, return ``True`` if *object* is an instance of any of the "
"types. If *classinfo* is not a type or tuple of types and such tuples, a :"
"exc:`TypeError` exception is raised. :exc:`TypeError` may not be raised for "
"an invalid type if an earlier check succeeds."
msgstr ""
"Retorna ``True`` si el argumento *object* es una instancia del argumento "
"*classinfo*, o de una subclase (directa, indirecta o :term:`virtual "
"<abstract base class>`) del mismo. Si *object* no es un objeto del tipo "
"indicado, esta función siempre retorna ``False``.  Si *classinfo* es una "
"tupla de objetos de tipo (o recursivamente, otras tuplas lo son) o :ref:"
"`types-union` de múltiples tipos , retorna ``True`` si *object* es una "
"instancia de alguno de los tipos. Si *classinfo* no es un tipo, una tupla de "
"tipos, o una tupla de tuplas de tipos, una excepción :exc:`TypeError` es "
"lanzada. Es posible que :exc:`TypeError` no se genere para un tipo no válido "
"si una verificación anterior tiene éxito."

#: ../Doc/library/functions.rst:946 ../Doc/library/functions.rst:960
msgid "*classinfo* can be a :ref:`types-union`."
msgstr "*classinfo* puede ser una :ref:`types-union`."

#: ../Doc/library/functions.rst:952
msgid ""
"Return ``True`` if *class* is a subclass (direct, indirect, or :term:"
"`virtual <abstract base class>`) of *classinfo*.  A class is considered a "
"subclass of itself. *classinfo* may be a tuple of class objects (or "
"recursively, other such tuples) or a :ref:`types-union`, in which case "
"return ``True`` if *class* is a subclass of any entry in *classinfo*.  In "
"any other case, a :exc:`TypeError` exception is raised."
msgstr ""
"Retorna ``True`` si *class* es una subclase (directa, indirecta o :term:"
"`virtual <abstract base class>`) de *classinfo*.  Una clase es considerada "
"una subclase de sí misma.  *classinfo* puede ser una tupla de objetos de "
"clase o una :ref:`types-union`, en cuyo caso retorna ``True`` si *class* es "
"una subclase de cualquier entrada en *classinfo*. En cualquier otro caso, se "
"lanzará una excepción :exc:`TypeError`."

#: ../Doc/library/functions.rst:967
msgid ""
"Return an :term:`iterator` object.  The first argument is interpreted very "
"differently depending on the presence of the second argument. Without a "
"second argument, *object* must be a collection object which supports the :"
"term:`iterable` protocol (the :meth:`__iter__` method), or it must support "
"the sequence protocol (the :meth:`__getitem__` method with integer arguments "
"starting at ``0``).  If it does not support either of those protocols, :exc:"
"`TypeError` is raised. If the second argument, *sentinel*, is given, then "
"*object* must be a callable object.  The iterator created in this case will "
"call *object* with no arguments for each call to its :meth:`~iterator."
"__next__` method; if the value returned is equal to *sentinel*, :exc:"
"`StopIteration` will be raised, otherwise the value will be returned."
msgstr ""
"Retorna un objeto :term:`iterator`.  El primer argumento se interpreta de "
"forma muy diferente en función de la presencia del segundo. Sin un segundo "
"argumento, *object* debe ser un objeto *collection* que soporte el protocolo "
"de :term:`iterable` (el método :meth:`__iter__`), o debe soportar el "
"protocolo de secuencia (el método :meth:`__getitem__` con argumentos enteros "
"comenzando en ``0``).  Si no soporta ninguno de esos protocolos, se lanza "
"una excepción :exc:`TypeError`. Si el segundo argumento, *sentinel*, es "
"indicado, entonces *object* debe ser un objeto invocable.  El iterador "
"creado en ese caso llamará a *object* sin argumentos para cada invocación a "
"su método :meth:`~iterator.__next__` ; si el valor retornado es igual a "
"*sentinel*, una :exc:`StopIteration` será lanzada, de lo contrario el valor "
"será retornado."

#: ../Doc/library/functions.rst:980
msgid "See also :ref:`typeiter`."
msgstr "Ver también :ref:`typeiter`."

#: ../Doc/library/functions.rst:982
msgid ""
"One useful application of the second form of :func:`iter` is to build a "
"block-reader. For example, reading fixed-width blocks from a binary database "
"file until the end of file is reached::"
msgstr ""
"Una aplicación muy útil de la segunda forma de :func:`iter` es la "
"construcción de un lector de bloques. Por ejemplo, leer bloques de ancho "
"fijo de una base de datos binaria hasta que el fin del fichero sea "
"alcanzado::"

#: ../Doc/library/functions.rst:994
msgid ""
"Return the length (the number of items) of an object.  The argument may be a "
"sequence (such as a string, bytes, tuple, list, or range) or a collection "
"(such as a dictionary, set, or frozen set)."
msgstr ""
"Retorna el tamaño (el número de elementos) de un objeto. El argumento puede "
"ser una secuencia (como una cadena, un objeto byte, una tupla, lista o "
"rango) o una colección (como un diccionario, un set o un *frozen set*)."

#: ../Doc/library/functions.rst:1000
msgid ""
"``len`` raises :exc:`OverflowError` on lengths larger than :data:`sys."
"maxsize`, such as :class:`range(2 ** 100) <range>`."
msgstr ""
"``len`` aumenta :exc:`OverflowError` en longitudes mayores que :data:`sys."
"maxsize`, como :class:`range(2 ** 100) <range>`."

#: ../Doc/library/functions.rst:1009
msgid ""
"Rather than being a function, :class:`list` is actually a mutable sequence "
"type, as documented in :ref:`typesseq-list` and :ref:`typesseq`."
msgstr ""
"Más que una función, :class:`list` es realmente un tipo de secuencia "
"mutable, como está documentado en :ref:`typesseq-list` y :ref:`typesseq`."

#: ../Doc/library/functions.rst:1015
msgid ""
"Update and return a dictionary representing the current local symbol table. "
"Free variables are returned by :func:`locals` when it is called in function "
"blocks, but not in class blocks. Note that at the module level, :func:"
"`locals` and :func:`globals` are the same dictionary."
msgstr ""
"Actualiza y retorna un diccionario representando la tabla de símbolos "
"locales actual. Las variables libres son retornadas por :func:`locals` "
"cuando ésta es llamada en bloques de funciones, pero no en bloques de "
"clases. Nótese que a nivel de módulo, :func:`locals` y :func:`globals` son "
"el mismo diccionario."

#: ../Doc/library/functions.rst:1021
msgid ""
"The contents of this dictionary should not be modified; changes may not "
"affect the values of local and free variables used by the interpreter."
msgstr ""
"Los contenidos de este diccionario no deben ser modificados; sus cambios no "
"afectarán los valores de las variables locales y libres utilizadas por el "
"intérprete."

#: ../Doc/library/functions.rst:1026
msgid ""
"Return an iterator that applies *function* to every item of *iterable*, "
"yielding the results.  If additional *iterables* arguments are passed, "
"*function* must take that many arguments and is applied to the items from "
"all iterables in parallel.  With multiple iterables, the iterator stops when "
"the shortest iterable is exhausted.  For cases where the function inputs are "
"already arranged into argument tuples, see :func:`itertools.starmap`\\."
msgstr ""
"Retorna un iterador que aplica *function* a cada elemento de *iterable*, "
"retornando el resultado.  Si se le pasan argumentos adicionales de tipo "
"*iterable*, *function* debe tomar la misma cantidad de argumentos y es "
"aplicado a los elementos de todos ellos en paralelo.  Con iterables "
"múltiples, el iterador se detiene cuando el iterable más corto se agota.  "
"Para casos donde las entradas de la función ya están organizadas como tuplas "
"de argumentos, ver :func:`itertools.starmap`\\."

#: ../Doc/library/functions.rst:1038
msgid ""
"Return the largest item in an iterable or the largest of two or more "
"arguments."
msgstr ""
"Retorna el elemento mayor en un iterable o el mayor de dos o más argumentos."

#: ../Doc/library/functions.rst:1041
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The largest item in the iterable is returned.  If two or more positional "
"arguments are provided, the largest of the positional arguments is returned."
msgstr ""
"Si un argumento posicional es dado, debe ser un :term:`iterable`.  El "
"elemento mayor en el iterable es retornado. Si dos o más argumentos "
"posicionales son indicados, el mayor de los argumentos posicionales será "
"retornado."

#: ../Doc/library/functions.rst:1046 ../Doc/library/functions.rst:1084
msgid ""
"There are two optional keyword-only arguments. The *key* argument specifies "
"a one-argument ordering function like that used for :meth:`list.sort`. The "
"*default* argument specifies an object to return if the provided iterable is "
"empty. If the iterable is empty and *default* is not provided, a :exc:"
"`ValueError` is raised."
msgstr ""
"Hay dos argumentos de solo palabra clave que son opcionales. El argumento "
"*key* especifica una función de ordenación de un sólo argumento, como la "
"usada para :meth:`list.sort`. El argumento *default* especifica un objeto a "
"retornar si el iterable proporcionado está vacío. Si el iterable está vacío "
"y *default* no ha sido indicado, se lanza un :exc:`ValueError`."

#: ../Doc/library/functions.rst:1052
msgid ""
"If multiple items are maximal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc, reverse=True)[0]`` and ``heapq."
"nlargest(1, iterable, key=keyfunc)``."
msgstr ""
"Si hay múltiples elementos con el valor máximo, la función retorna el "
"primero que ha encontrado.  Esto es consistente con otras herramientas para "
"preservar la estabilidad de la ordenación como ``sorted(iterable, "
"key=keyfunc, reverse=True)[0]`` y ``heapq.nlargest(1, iterable, "
"key=keyfunc)``."

#: ../Doc/library/functions.rst:1057 ../Doc/library/functions.rst:1095
msgid "The *default* keyword-only argument."
msgstr "El argumento *default* sólo por palabra clave."

#: ../Doc/library/functions.rst:1060 ../Doc/library/functions.rst:1098
msgid "The *key* can be ``None``."
msgstr "*key* puede ser ``None``."

#: ../Doc/library/functions.rst:1068
msgid ""
"Return a \"memory view\" object created from the given argument.  See :ref:"
"`typememoryview` for more information."
msgstr ""
"Retorna un objeto *\"memory view\"* creado a partir del argumento indicado. "
"Para más información ver :ref:`typememoryview`."

#: ../Doc/library/functions.rst:1076
msgid ""
"Return the smallest item in an iterable or the smallest of two or more "
"arguments."
msgstr ""
"Retorna el menor elemento en un iterable o el menor de dos o más argumentos."

#: ../Doc/library/functions.rst:1079
msgid ""
"If one positional argument is provided, it should be an :term:`iterable`. "
"The smallest item in the iterable is returned.  If two or more positional "
"arguments are provided, the smallest of the positional arguments is returned."
msgstr ""
"Si se le indica un argumento posicional, debe ser un :term:`iterable`.   El "
"menor elemento del iterable es retornado. Si dos o más argumentos "
"posicionales son indicados, el menor de los argumentos posicionales es "
"retornado."

#: ../Doc/library/functions.rst:1090
msgid ""
"If multiple items are minimal, the function returns the first one "
"encountered.  This is consistent with other sort-stability preserving tools "
"such as ``sorted(iterable, key=keyfunc)[0]`` and ``heapq.nsmallest(1, "
"iterable, key=keyfunc)``."
msgstr ""
"Si hay múltiples elementos con el valor mínimo, la función retorna el "
"primero que encuentra. Esto es consistente con otras herramientas que "
"preservan la estabilidad de la ordenación como ``sorted(iterable, "
"key=keyfunc)[0]`` y ``heapq.nsmallest(1, iterable, key=keyfunc)``."

#: ../Doc/library/functions.rst:1105
msgid ""
"Retrieve the next item from the :term:`iterator` by calling its :meth:"
"`~iterator.__next__` method.  If *default* is given, it is returned if the "
"iterator is exhausted, otherwise :exc:`StopIteration` is raised."
msgstr ""
"Extrae el siguiente elemento de :term:`iterator` llamando a su método :meth:"
"`~iterator.__next__`. Si se le indica *default*, éste será retornado si se "
"agota el iterador, de lo contrario, se lanza un  :exc:`StopIteration`."

#: ../Doc/library/functions.rst:1112
msgid ""
"Return a new featureless object.  :class:`object` is a base for all classes. "
"It has methods that are common to all instances of Python classes.  This "
"function does not accept any arguments."
msgstr ""
"Retorna un nuevo objeto indiferenciado. :class:`object` es la base de todas "
"las clases. Tiene todos los métodos que son comunes a todas las instancias "
"de clases de Python. Esta función no acepta ningún argumento."

#: ../Doc/library/functions.rst:1118
msgid ""
":class:`object` does *not* have a :attr:`~object.__dict__`, so you can't "
"assign arbitrary attributes to an instance of the :class:`object` class."
msgstr ""
":class:`object`  *no* tiene un :attr:`~object.__dict__`, así que no puedes "
"asignar atributos arbitrarios a una instancia de la clase  :class:`object`."

#: ../Doc/library/functions.rst:1124
msgid ""
"Convert an integer number to an octal string prefixed with \"0o\".  The "
"result is a valid Python expression. If *x* is not a Python :class:`int` "
"object, it has to define an :meth:`__index__` method that returns an "
"integer. For example:"
msgstr ""
"Convierte un número entero a una cadena octal con prefijo \"0o\".  El "
"resultado es una expresión válida de Python. Si *x* no es un objeto de la "
"clase Python  :class:`int`, tiene que tener definido un método  :meth:"
"`__index__` que retorne un entero. Por ejemplo:"

#: ../Doc/library/functions.rst:1134
msgid ""
"If you want to convert an integer number to an octal string either with the "
"prefix \"0o\" or not, you can use either of the following ways."
msgstr ""
"Si quieres convertir un número entero a una cadena octal, tanto con prefijo "
"\"0o\" como sin el, puedes usar cualquiera de las siguientes formas."

#: ../Doc/library/functions.rst:1151
msgid ""
"Open *file* and return a corresponding :term:`file object`.  If the file "
"cannot be opened, an :exc:`OSError` is raised. See :ref:`tut-files` for more "
"examples of how to use this function."
msgstr ""
"Abre *file* y retorna un :term:`file object` correspondiente. Si el archivo "
"no se puede abrir, se lanza un :exc:`OSError`. Consulte :ref:`tut-files` "
"para obtener más ejemplos de cómo utilizar esta función."

#: ../Doc/library/functions.rst:1155
msgid ""
"*file* is a :term:`path-like object` giving the pathname (absolute or "
"relative to the current working directory) of the file to be opened or an "
"integer file descriptor of the file to be wrapped.  (If a file descriptor is "
"given, it is closed when the returned I/O object is closed unless *closefd* "
"is set to ``False``.)"
msgstr ""
"*file* es un :term:`path-like object` que da la ruta (absoluta o relativa al "
"directorio de trabajo actual) del fichero a ser abierto o un descriptor de "
"fichero entero del fichero a ser envuelto. (Si un descriptor de fichero es "
"dado, será cerrado cuando el objeto de entrada-salida sea cerrado, a menos "
"que *closefd* esté puesto a ``False``.)"

# codificación local actual por current locale encoding?
#: ../Doc/library/functions.rst:1161
msgid ""
"*mode* is an optional string that specifies the mode in which the file is "
"opened.  It defaults to ``'r'`` which means open for reading in text mode. "
"Other common values are ``'w'`` for writing (truncating the file if it "
"already exists), ``'x'`` for exclusive creation, and ``'a'`` for appending "
"(which on *some* Unix systems, means that *all* writes append to the end of "
"the file regardless of the current seek position).  In text mode, if "
"*encoding* is not specified the encoding used is platform-dependent: :func:"
"`locale.getencoding()` is called to get the current locale encoding. (For "
"reading and writing raw bytes use binary mode and leave *encoding* "
"unspecified.)  The available modes are:"
msgstr ""
"*mode* es una cadena de caracteres opcional que especifica el modo en el "
"cual el fichero es abierto. Su valor por defecto es  ``'r'``  que significa "
"que está abierto para lectura en modo texto. Otros valores comunes son "
"``’w’`` para escritura (truncando el fichero si ya existe),  ``’x’`` para "
"creación en exclusiva y ``’a’`` para añadir (lo que en *algunos* sistemas "
"Unix implica que *toda* la escritura añade al final del fichero "
"independientemente de la posición de búsqueda actual). En modo texto, si no "
"se especifica *encoding* entonces la codificación empleada es dependiente de "
"plataforma: se invoca a :func:`locale.getencoding()` para obtener la "
"codificación regional actual.  (Para lectura y escritura de bytes en crudo "
"usa el modo binario y deja *encoding* sin especificar). Los modos "
"disponibles son:"

#: ../Doc/library/functions.rst:1178
msgid "Character"
msgstr "Carácter"

#: ../Doc/library/functions.rst:1178
msgid "Meaning"
msgstr "Significado"

#: ../Doc/library/functions.rst:1180
msgid "``'r'``"
msgstr "``’r’``"

#: ../Doc/library/functions.rst:1180
msgid "open for reading (default)"
msgstr "abierto para lectura (por defecto)"

#: ../Doc/library/functions.rst:1181
msgid "``'w'``"
msgstr "``'w'``"

#: ../Doc/library/functions.rst:1181
msgid "open for writing, truncating the file first"
msgstr "abierto para escritura, truncando primero el fichero"

#: ../Doc/library/functions.rst:1182
msgid "``'x'``"
msgstr "``'x'``"

#: ../Doc/library/functions.rst:1182
msgid "open for exclusive creation, failing if the file already exists"
msgstr "abierto para creación en exclusiva, falla si el fichero ya existe"

#: ../Doc/library/functions.rst:1183
msgid "``'a'``"
msgstr "``’a’``"

#: ../Doc/library/functions.rst:1183
msgid "open for writing, appending to the end of file if it exists"
msgstr "abierto para escritura, añadiendo al final del fichero si este existe"

#: ../Doc/library/functions.rst:1184
msgid "``'b'``"
msgstr "``'b'``"

#: ../Doc/library/functions.rst:1184
msgid "binary mode"
msgstr "modo binario"

#: ../Doc/library/functions.rst:1185
msgid "``'t'``"
msgstr "``’t’``"

#: ../Doc/library/functions.rst:1185
msgid "text mode (default)"
msgstr "modo texto (por defecto)"

#: ../Doc/library/functions.rst:1186
msgid "``'+'``"
msgstr "``’+’``"

#: ../Doc/library/functions.rst:1186
msgid "open for updating (reading and writing)"
msgstr "abierto para actualizar (lectura y escritura)"

#: ../Doc/library/functions.rst:1189
msgid ""
"The default mode is ``'r'`` (open for reading text, a synonym of ``'rt'``). "
"Modes ``'w+'`` and ``'w+b'`` open and truncate the file.  Modes ``'r+'`` and "
"``'r+b'`` open the file with no truncation."
msgstr ""
"El modo por defecto es  ``’r’``  (abierto para lectura de texto, sinónimo "
"de  ``’rt’``. Los modos ``’w+’`` y ``’w+b’`` abren y truncan el fichero.  "
"Los modos ``’r+’`` y ``’r+b’`` abren el fichero sin truncarlo."

#: ../Doc/library/functions.rst:1193
msgid ""
"As mentioned in the :ref:`io-overview`, Python distinguishes between binary "
"and text I/O.  Files opened in binary mode (including ``'b'`` in the *mode* "
"argument) return contents as :class:`bytes` objects without any decoding.  "
"In text mode (the default, or when ``'t'`` is included in the *mode* "
"argument), the contents of the file are returned as :class:`str`, the bytes "
"having been first decoded using a platform-dependent encoding or using the "
"specified *encoding* if given."
msgstr ""
"Como se menciona en :ref:`io-overview`, Python distingue entre I/O binario y "
"de texto. Los ficheros abiertos en modo binario (incluyendo ``’b’`` en el "
"argumento *mode*) retornan su contenido como objetos de :class:`bytes`  sin "
"ninguna descodificación. En modo de texto (por defecto, o cuando se incluye  "
"``’t’`` en el argumento *mode*), los contenidos del fichero se retornan "
"como :class:`str`, tras descodificar los *bytes* usando una codificación "
"dependiente de plataforma o usando el *encoding* especificado como argumento."

#: ../Doc/library/functions.rst:1203
msgid ""
"Python doesn't depend on the underlying operating system's notion of text "
"files; all the processing is done by Python itself, and is therefore "
"platform-independent."
msgstr ""
"Python no depende de la noción de ficheros de texto del sistema operativo "
"subyacente; todo el procesado lo hace Python, y es por tanto independiente "
"de plataforma."

# norma o normativa, o literalmente política?
#: ../Doc/library/functions.rst:1207
msgid ""
"*buffering* is an optional integer used to set the buffering policy.  Pass 0 "
"to switch buffering off (only allowed in binary mode), 1 to select line "
"buffering (only usable in text mode), and an integer > 1 to indicate the "
"size in bytes of a fixed-size chunk buffer. Note that specifying a buffer "
"size this way applies for binary buffered I/O, but ``TextIOWrapper`` (i.e., "
"files opened with ``mode='r+'``) would have another buffering. To disable "
"buffering in ``TextIOWrapper``, consider using the ``write_through`` flag "
"for :func:`io.TextIOWrapper.reconfigure`. When no *buffering* argument is "
"given, the default buffering policy works as follows:"
msgstr ""
"*buffering* es un entero opcional que configura la política de buffering. "
"Indica 0 para desactivar el buffering (sólo permitido en modo binario), 1 "
"para seleccionar buffering por línea (sólo para modo texto), y un entero >1 "
"para indicar el tamaño en bytes de un buffer de tamaño fijo. Tenga en cuenta "
"que especificar un tamaño de búfer de esta manera se aplica a la I/O binaria "
"almacenada en búfer, pero ``TextIOWrapper`` (es decir, los archivos abiertos "
"con ``mode='r+'``) tendrían otro almacenamiento en búfer. Para deshabilitar "
"el almacenamiento en búfer en ``TextIOWrapper``, considere usar el indicador "
"``write_through`` para :func:`io.TextIOWrapper.reconfigure`. Cuando no se "
"indica el argumento *buffering*, la norma por defecto de buffering funciona "
"de la siguiente manera:"

#: ../Doc/library/functions.rst:1217
msgid ""
"Binary files are buffered in fixed-size chunks; the size of the buffer is "
"chosen using a heuristic trying to determine the underlying device's \"block "
"size\" and falling back on :attr:`io.DEFAULT_BUFFER_SIZE`.  On many systems, "
"the buffer will typically be 4096 or 8192 bytes long."
msgstr ""
"Los ficheros binarios son transmitidos por búferes con tamaños fijos de "
"bloque; el tamaño del búfer es escogido usando un intento heurístico para "
"determinar el tamaño de bloque del dispositivo y recurriendo sino a :attr:"
"`io.DEFAULT_BUFFER_SIZE`. En muchos sistemas, el búfer tendrá normalmente un "
"tamaño de 4096 o 8192 bytes."

#: ../Doc/library/functions.rst:1222
msgid ""
"\"Interactive\" text files (files for which :meth:`~io.IOBase.isatty` "
"returns ``True``) use line buffering.  Other text files use the policy "
"described above for binary files."
msgstr ""
"Los ficheros de texto \"interactivos\" (ficheros para los cuales :meth:`~io."
"IOBase.isatty` retorna ``True``) usan buffering por líneas.  Otros ficheros "
"de texto emplean la norma descrita anteriormente para ficheros binarios."

#: ../Doc/library/functions.rst:1226
msgid ""
"*encoding* is the name of the encoding used to decode or encode the file. "
"This should only be used in text mode.  The default encoding is platform "
"dependent (whatever :func:`locale.getencoding` returns), but any :term:`text "
"encoding` supported by Python can be used. See the :mod:`codecs` module for "
"the list of supported encodings."
msgstr ""
"*encoding* es el nombre de la codificación empleada con el fichero. Esto "
"solo debe ser usado en el modo texto.  La codificación por defecto es "
"dependiente de plataforma (aquello que retorna  :func:`locale.getencoding`), "
"pero puede emplearse cualquier  :term:`text encoding`  soportado por "
"Python.  Ver el módulo :mod:`codecs`  para la lista de codificaciones "
"soportadas."

#: ../Doc/library/functions.rst:1232
msgid ""
"*errors* is an optional string that specifies how encoding and decoding "
"errors are to be handled—this cannot be used in binary mode. A variety of "
"standard error handlers are available (listed under :ref:`error-handlers`), "
"though any error handling name that has been registered with :func:`codecs."
"register_error` is also valid.  The standard names include:"
msgstr ""
"*errors* es una cadena opcional que especifica como deben manejarse los "
"errores de codificación y descodificación -- esto no puede ser usado en modo "
"binario. Están disponibles varios gestores de error  (listados en :ref:"
"`error-handlers`), pero también es válido cualquier nombre de gestión de "
"error registrado con :func:`codecs.register_error`. Los nombres estándar "
"incluyen:"

#: ../Doc/library/functions.rst:1240
msgid ""
"``'strict'`` to raise a :exc:`ValueError` exception if there is an encoding "
"error.  The default value of ``None`` has the same effect."
msgstr ""
"``'strict'`` para lanzar una excepción :exc:`ValueError` si hay un error de "
"codificación.  El valor por defecto, ``None``, produce el mismo efecto."

#: ../Doc/library/functions.rst:1244
msgid ""
"``'ignore'`` ignores errors.  Note that ignoring encoding errors can lead to "
"data loss."
msgstr ""
"``'ignore'`` ignora los errores.  Nótese que ignorar errores de codificación "
"puede conllevar la pérdida de datos."

#: ../Doc/library/functions.rst:1247
msgid ""
"``'replace'`` causes a replacement marker (such as ``'?'``) to be inserted "
"where there is malformed data."
msgstr ""
"``'replace'``  provoca que se inserte un marcador de reemplazo (como  "
"``'?'``)  en aquellos sitios donde hay datos malformados."

#: ../Doc/library/functions.rst:1250
msgid ""
"``'surrogateescape'`` will represent any incorrect bytes as low surrogate "
"code units ranging from U+DC80 to U+DCFF. These surrogate code units will "
"then be turned back into the same bytes when the ``surrogateescape`` error "
"handler is used when writing data.  This is useful for processing files in "
"an unknown encoding."
msgstr ""
"``'surrogateescape'`` representará cualquier bytes incorrectos como unidades "
"de código sustituto bajo que van desde U+DC80 a U+DCFF.  Estas unidades de "
"código sustituto volverán a convertirse en los mismos bytes cuando el gestor "
"de errores ``surrogateescape`` sea usado al escribir datos.  Esto es útil "
"para el procesado de ficheros con una codificación desconocida."

#: ../Doc/library/functions.rst:1257
msgid ""
"``'xmlcharrefreplace'`` is only supported when writing to a file. Characters "
"not supported by the encoding are replaced with the appropriate XML "
"character reference ``&#nnn;``."
msgstr ""
"``'xmlcharrefreplace'`` está soportado solamente cuando se escribe a un "
"fichero. Los caracteres que no estén soportados por la codificación son "
"reemplazados por la referencia al carácter XML apropiado  ``&#nnn;``."

#: ../Doc/library/functions.rst:1261
msgid ""
"``'backslashreplace'`` replaces malformed data by Python's backslashed "
"escape sequences."
msgstr ""
"``'backslashreplace'`` reemplaza datos malformados con las secuencias de "
"escapes de barra invertida de Python."

#: ../Doc/library/functions.rst:1264
msgid ""
"``'namereplace'`` (also only supported when writing) replaces unsupported "
"characters with ``\\N{...}`` escape sequences."
msgstr ""
"``'namereplace'`` reemplaza caracteres no soportados con secuencias de "
"escape  ``\\N{...}`` (y también está sólo soportado en escritura)."

#: ../Doc/library/functions.rst:1272
msgid ""
"*newline* determines how to parse newline characters from the stream. It can "
"be ``None``, ``''``, ``'\\n'``, ``'\\r'``, and ``'\\r\\n'``.  It works as "
"follows:"
msgstr ""
"*newline* determina cómo analizar los caracteres de nueva línea de la "
"secuencia.  Puede ser  ``None``, ``''``, ``'\\n'``, ``'\\r'``, y "
"``'\\r\\n'``.  Funciona de la siguiente manera:"

#: ../Doc/library/functions.rst:1276
msgid ""
"When reading input from the stream, if *newline* is ``None``, universal "
"newlines mode is enabled.  Lines in the input can end in ``'\\n'``, "
"``'\\r'``, or ``'\\r\\n'``, and these are translated into ``'\\n'`` before "
"being returned to the caller.  If it is ``''``, universal newlines mode is "
"enabled, but line endings are returned to the caller untranslated.  If it "
"has any of the other legal values, input lines are only terminated by the "
"given string, and the line ending is returned to the caller untranslated."
msgstr ""
"Cuando se está leyendo entrada desde el flujo, si *newline* es ``None``, el "
"modo *universal newlines* es activado.  Las líneas en la entrada pueden "
"terminar en  ``'\\n'``, ``'\\r'``, o ``'\\r\\n'``, y serán traducidas a  "
"``'\\n'``  antes de ser retornadas a la entidad que llama. Si es ``''``, el "
"modo *universal newlines* estará activado pero los finales de línea se "
"retornan sin traducir a la entidad que llama. Si tiene cualquiera de los "
"otros valoras válidos, las líneas de entrada estarán terminadas sólo por la "
"cadena dada, y los finales de línea serán retornados sin traducir a la "
"entidad que llama."

#: ../Doc/library/functions.rst:1284
msgid ""
"When writing output to the stream, if *newline* is ``None``, any ``'\\n'`` "
"characters written are translated to the system default line separator, :"
"data:`os.linesep`.  If *newline* is ``''`` or ``'\\n'``, no translation "
"takes place.  If *newline* is any of the other legal values, any ``'\\n'`` "
"characters written are translated to the given string."
msgstr ""
"Cuando se escribe salida al flujo, si *newline* es  ``None``, cualquier "
"carácter ``'\\n'`` escrito es traducido al separador de línea por defecto en "
"el sistema, :data:`os.linesep`. Si *newline* es ``''`` o ``'\\n'``, entonces "
"no se produce ninguna traducción.  Si *newline* toma cualquiera de los otros "
"valores válidos, entonces cualquier carácter ``'\\n'``  escrito es traducido "
"a la cadena indicada."

#: ../Doc/library/functions.rst:1290
msgid ""
"If *closefd* is ``False`` and a file descriptor rather than a filename was "
"given, the underlying file descriptor will be kept open when the file is "
"closed.  If a filename is given *closefd* must be ``True`` (the default); "
"otherwise, an error will be raised."
msgstr ""
"Si *closefd* es ``False``  y se indica un descriptor de fichero en vez de un "
"nombre de fichero, el descriptor del fichero se mantendrá abierto cuando se "
"cierre el fichero. Si se indica un nombre de fichero, *closefd*  debe ser "
"``True`` (lo es por defecto), ya que de otra forma se lanzará un error."

#: ../Doc/library/functions.rst:1295
msgid ""
"A custom opener can be used by passing a callable as *opener*. The "
"underlying file descriptor for the file object is then obtained by calling "
"*opener* with (*file*, *flags*). *opener* must return an open file "
"descriptor (passing :mod:`os.open` as *opener* results in functionality "
"similar to passing ``None``)."
msgstr ""
"Un abridor personalizado puede emplearse pasando un invocable como *opener*. "
"El descriptor de fichero del objeto se obtiene llamando a *opener* con "
"(*file*, *flags*). *opener* debe retornar un descriptor de fichero abierto "
"(pasando :mod:`os.open` como *opener* resulta en una funcionalidad similar a "
"``None``)."

#: ../Doc/library/functions.rst:1301
msgid "The newly created file is :ref:`non-inheritable <fd_inheritance>`."
msgstr "El nuevo fichero creado es :ref:`no-heredable <fd_inheritance>`."

#: ../Doc/library/functions.rst:1303
msgid ""
"The following example uses the :ref:`dir_fd <dir_fd>` parameter of the :func:"
"`os.open` function to open a file relative to a given directory::"
msgstr ""
"El siguiente ejemplo emplea el parámetro :ref:`dir_fd <dir_fd>`  de la "
"función :func:`os.open`  para abrir un fichero relativo a un directorio "
"dado::"

#: ../Doc/library/functions.rst:1316
msgid ""
"The type of :term:`file object` returned by the :func:`open` function "
"depends on the mode.  When :func:`open` is used to open a file in a text "
"mode (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), it returns a subclass of :"
"class:`io.TextIOBase` (specifically :class:`io.TextIOWrapper`).  When used "
"to open a file in a binary mode with buffering, the returned class is a "
"subclass of :class:`io.BufferedIOBase`.  The exact class varies: in read "
"binary mode, it returns an :class:`io.BufferedReader`; in write binary and "
"append binary modes, it returns an :class:`io.BufferedWriter`, and in read/"
"write mode, it returns an :class:`io.BufferedRandom`.  When buffering is "
"disabled, the raw stream, a subclass of :class:`io.RawIOBase`, :class:`io."
"FileIO`, is returned."
msgstr ""
"El tipo de :term:`file object` retornado por la función :func:`open`  "
"depende del modo. Cuando se emplea  :func:`open` para abrir un fichero en "
"modo texto (``'w'``, ``'r'``, ``'wt'``, ``'rt'``, etc.), retorna una "
"subclase de :class:`io.TextIOBase` (específicamente :class:`io."
"TextIOWrapper`).  Cuando se emplea para abrir un fichero en modo binario con "
"buffering, la clase retornada es una subclase de :class:`io."
"BufferedIOBase`.  La clase exacta varía: en modo binario de lectura, "
"retorna :class:`io.BufferedReader`; en modo de escritura y adición en "
"binario, retorna :class:`io.BufferedWriter`, y en modo de escritura/lectura, "
"retorna :class:`io.BufferedRandom`.  Si el buffering está desactivado, el "
"flujo en crudo, una subclase de :class:`io.RawIOBase`, :class:`io.FileIO`, "
"es retornada."

#: ../Doc/library/functions.rst:1337
msgid ""
"See also the file handling modules, such as :mod:`fileinput`, :mod:`io` "
"(where :func:`open` is declared), :mod:`os`, :mod:`os.path`, :mod:"
"`tempfile`, and :mod:`shutil`."
msgstr ""
"Véase también los módulos para manejo de ficheros, como :mod:`fileinput`, :"
"mod:`io` (donde es declarada :func:`open`), :mod:`os`, :mod:`os.path`, :mod:"
"`tempfile`, y :mod:`shutil`."

#: ../Doc/library/functions.rst:1341
msgid ""
"Raises an :ref:`auditing event <auditing>` ``open`` with arguments ``file``, "
"``mode``, ``flags``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``open`` con los argumentos "
"``file``, ``mode``, ``flags``."

#: ../Doc/library/functions.rst:1343
msgid ""
"The ``mode`` and ``flags`` arguments may have been modified or inferred from "
"the original call."
msgstr ""
"Los argumentos ``mode`` y ``flags`` pueden haber sido modificados o "
"inferidos de la llamada original."

#: ../Doc/library/functions.rst:1348
msgid "The *opener* parameter was added."
msgstr "El parámetro *opener* fue añadido."

#: ../Doc/library/functions.rst:1349
msgid "The ``'x'`` mode was added."
msgstr "El modo  ``'x'`` fue añadido."

#: ../Doc/library/functions.rst:1350
msgid ":exc:`IOError` used to be raised, it is now an alias of :exc:`OSError`."
msgstr ""
":exc:`IOError`  era la excepción lanzada anteriormente, ahora es un alias "
"de :exc:`OSError`."

#: ../Doc/library/functions.rst:1351
msgid ""
":exc:`FileExistsError` is now raised if the file opened in exclusive "
"creation mode (``'x'``) already exists."
msgstr ""
"Se lanza :exc:`FileExistsError`  si ya existe el fichero abierto en modo de "
"creación exclusiva  (``'x'``)."

#: ../Doc/library/functions.rst:1356
msgid "The file is now non-inheritable."
msgstr "El fichero ahora es no-heredable."

#: ../Doc/library/functions.rst:1360
msgid ""
"If the system call is interrupted and the signal handler does not raise an "
"exception, the function now retries the system call instead of raising an :"
"exc:`InterruptedError` exception (see :pep:`475` for the rationale)."
msgstr ""
"Si la llamada al sistema es interrumpida y el gestor de señales no lanza una "
"excepción, ahora la función reintenta la llamada de sistema en vez de lanzar "
"una excepción :exc:`InterruptedError` (véase  :pep:`475` para la "
"justificación)."

#: ../Doc/library/functions.rst:1363
msgid "The ``'namereplace'`` error handler was added."
msgstr "El gestor de errores  ``'namereplace'`` fue añadido."

#: ../Doc/library/functions.rst:1367
msgid "Support added to accept objects implementing :class:`os.PathLike`."
msgstr ""
"Añadido el soporte para aceptar objetos que implementan :class:`os.PathLike`."

#: ../Doc/library/functions.rst:1368
msgid ""
"On Windows, opening a console buffer may return a subclass of :class:`io."
"RawIOBase` other than :class:`io.FileIO`."
msgstr ""
"En Windows, abrir un búfer en la consola puede retornar una subclase de :"
"class:`io.RawIOBase`  en vez de :class:`io.FileIO`."

#: ../Doc/library/functions.rst:1371
msgid "The ``'U'`` mode has been removed."
msgstr "El modo  ``'X'`` has ido eliminado."

#: ../Doc/library/functions.rst:1376
msgid ""
"Given a string representing one Unicode character, return an integer "
"representing the Unicode code point of that character.  For example, "
"``ord('a')`` returns the integer ``97`` and ``ord('€')`` (Euro sign) returns "
"``8364``.  This is the inverse of :func:`chr`."
msgstr ""
"Al proporcionarle una cadena representando un carácter Unicode, retorna un "
"entero que representa el código Unicode de ese carácter.  Por ejemplo,  "
"``ord('a')`` retorna el entero ``97`` y ``ord('€')`` (símbolo del Euro) "
"retorna ``8364``.  Esta es la función inversa de :func:`chr`."

#: ../Doc/library/functions.rst:1384
msgid ""
"Return *base* to the power *exp*; if *mod* is present, return *base* to the "
"power *exp*, modulo *mod* (computed more efficiently than ``pow(base, exp) % "
"mod``). The two-argument form ``pow(base, exp)`` is equivalent to using the "
"power operator: ``base**exp``."
msgstr ""
"Retorna *base* elevado a *exp*; si *mod* está presente, retorna *base* "
"elevado a *exp*, módulo *mod* (calculado de manera más eficiente que "
"``pow(base, exp) % mod``).  La forma con dos argumentos ``pow(base, exp)`` "
"es equivalente a usar el operador potencia: ``base**exp``."

#: ../Doc/library/functions.rst:1389
msgid ""
"The arguments must have numeric types.  With mixed operand types, the "
"coercion rules for binary arithmetic operators apply.  For :class:`int` "
"operands, the result has the same type as the operands (after coercion) "
"unless the second argument is negative; in that case, all arguments are "
"converted to float and a float result is delivered.  For example, ``pow(10, "
"2)`` returns ``100``, but ``pow(10, -2)`` returns ``0.01``.  For a negative "
"base of type :class:`int` or :class:`float` and a non-integral exponent, a "
"complex result is delivered.  For example, ``pow(-9, 0.5)`` returns a value "
"close to ``3j``."
msgstr ""
"Los argumentos deben ser de tipo numérico.  Si hay tipos mixtos de "
"operandos, aplican las reglas de coerción para operadores binarios "
"aritméticos. Para operandos de la clase :class:`int`, el resultado tiene el "
"mismo tipo que los operandos (después de la coerción) a menos que el segundo "
"argumento sea negativo; en tal caso, todos los argumentos son convertidos a "
"punto flotante y un resultado de punto flotante es retornado. Por ejemplo, "
"``pow(10, 2)`` retorna ``100``, pero ``pow(10, -2)`` retorna  ``0.01``. Para "
"una base negativa de tipo  :class:`int` o :class:`float`y un exponente no "
"integral, se obtiene un resultado complejo. Por ejemplo, ``pow(-9, 0.5)`` "
"retorna un valor cercano a ``3j``."

#: ../Doc/library/functions.rst:1399
msgid ""
"For :class:`int` operands *base* and *exp*, if *mod* is present, *mod* must "
"also be of integer type and *mod* must be nonzero. If *mod* is present and "
"*exp* is negative, *base* must be relatively prime to *mod*. In that case, "
"``pow(inv_base, -exp, mod)`` is returned, where *inv_base* is an inverse to "
"*base* modulo *mod*."
msgstr ""
"Para operandos :class:`int` como *base* y *exp*, si *mod* está presente, "
"*mod* debe ser también de tipo entero y distinto de cero. Si *mod* está "
"presente y *exp* es negativo, *base* debe ser un número primo relativo a "
"*mod*.  En ese caso, se retorna  ``pow(inv_base, -exp, mod)``, dónde "
"*inv_base* es la inversa al módulo *mod* de *base*."

#: ../Doc/library/functions.rst:1405
msgid "Here's an example of computing an inverse for ``38`` modulo ``97``::"
msgstr ""
"Aquí tienes un ejemplo de cómo calcular la inversa de ``38`` módulo ``97``::"

#: ../Doc/library/functions.rst:1412
msgid ""
"For :class:`int` operands, the three-argument form of ``pow`` now allows the "
"second argument to be negative, permitting computation of modular inverses."
msgstr ""
"Para operandos :class:`int`, la forma de ``pow`` con tres argumentos acepta "
"ahora que el segundo argumento sea negativo, lo que permite el cálculo de "
"inversos modulares."

#: ../Doc/library/functions.rst:1417
msgid ""
"Allow keyword arguments.  Formerly, only positional arguments were supported."
msgstr ""
"Permite argumentos de palabra clave. Anteriormente, solo se soportaba el uso "
"de argumentos posicionales."

#: ../Doc/library/functions.rst:1424
msgid ""
"Print *objects* to the text stream *file*, separated by *sep* and followed "
"by *end*.  *sep*, *end*, *file*, and *flush*, if present, must be given as "
"keyword arguments."
msgstr ""
"Imprime *objects* al flujo de texto *file*, separándolos por *sep* y "
"seguidos por *end*.  *sep*, *end*, *file* y *flush*, si están presentes, "
"deben ser dados como argumentos por palabra clave."

#: ../Doc/library/functions.rst:1428
msgid ""
"All non-keyword arguments are converted to strings like :func:`str` does and "
"written to the stream, separated by *sep* and followed by *end*.  Both *sep* "
"and *end* must be strings; they can also be ``None``, which means to use the "
"default values.  If no *objects* are given, :func:`print` will just write "
"*end*."
msgstr ""
"Todos los argumentos que no son por palabra clave se convierten a cadenas "
"tal y como :func:`str` hace y se escriben al flujo, separados por *sep* y "
"seguidos por *end*.  Tanto *sep* como *end* deben ser cadenas; también "
"pueden ser ``None``, lo cual significa que se empleen los valores por "
"defecto. Si no se indica *objects*, :func:`print` escribirá *end*."

#: ../Doc/library/functions.rst:1434
msgid ""
"The *file* argument must be an object with a ``write(string)`` method; if it "
"is not present or ``None``, :data:`sys.stdout` will be used.  Since printed "
"arguments are converted to text strings, :func:`print` cannot be used with "
"binary mode file objects.  For these, use ``file.write(...)`` instead."
msgstr ""
"El argumento *file* debe ser un objeto que implemente un método "
"``write(string)``; si éste no está presente o es ``None``, se usará :data:"
"`sys.stdout`.  Dado que los argumentos mostrados son convertidos a cadenas "
"de texto, :func:`print` no puede ser utilizada con objetos fichero en modo "
"binario.  Para esos, utiliza en cambio ``file.write(…)``."

# no teníamos claro si traducir o no buffered y como, asi como flushed.
#: ../Doc/library/functions.rst:1439
msgid ""
"Whether the output is buffered is usually determined by *file*, but if the "
"*flush* keyword argument is true, the stream is forcibly flushed."
msgstr ""
"Que la salida sea en búfer o no suele estar determinado por *file*, pero si "
"el argumento por palabra clave *flush* es verdadero, el flujo se descarga "
"forzosamente."

#: ../Doc/library/functions.rst:1442
msgid "Added the *flush* keyword argument."
msgstr "Añadido el argumento por palabra clave *flush*."

#: ../Doc/library/functions.rst:1448
msgid "Return a property attribute."
msgstr "Retorna un atributo propiedad."

#: ../Doc/library/functions.rst:1450
msgid ""
"*fget* is a function for getting an attribute value.  *fset* is a function "
"for setting an attribute value. *fdel* is a function for deleting an "
"attribute value.  And *doc* creates a docstring for the attribute."
msgstr ""
"*fget* es una función para obtener el valor de un atributo. *fset* es una "
"función para asignar el valor de un atributo. *fdel* es una función para "
"eliminar el valor de un atributo. Y *doc* crea un *docstring* para el "
"atributo."

#: ../Doc/library/functions.rst:1454
msgid "A typical use is to define a managed attribute ``x``::"
msgstr ""
"Un caso de uso típico es la definición de un atributo gestionado ``x``::"

#: ../Doc/library/functions.rst:1471
msgid ""
"If *c* is an instance of *C*, ``c.x`` will invoke the getter, ``c.x = "
"value`` will invoke the setter, and ``del c.x`` the deleter."
msgstr ""
"Si *c* es una instancia de *C*, ``c.x`` invocará el obtenedor (*getter*), "
"``c.x = value`` invocará el asignador (*setter*) y ``del c.x`` el suprimidor "
"(*deleter*)."

#: ../Doc/library/functions.rst:1474
msgid ""
"If given, *doc* will be the docstring of the property attribute. Otherwise, "
"the property will copy *fget*'s docstring (if it exists).  This makes it "
"possible to create read-only properties easily using :func:`property` as a :"
"term:`decorator`::"
msgstr ""
"Si está indicada, *doc* será la docstring del atributo propiedad. En caso "
"contrario, la propiedad copiará la *dosctring* de *fget* si ésta existe.  "
"Esto permite crear propiedades de sólo lectura de forma fácil empleando  :"
"func:`property` como :term:`decorator`::"

#: ../Doc/library/functions.rst:1487
msgid ""
"The ``@property`` decorator turns the :meth:`voltage` method into a "
"\"getter\" for a read-only attribute with the same name, and it sets the "
"docstring for *voltage* to \"Get the current voltage.\""
msgstr ""
"El decorador ``@property`` convierte el método :meth:`voltage` en un "
"\"*getter*\" para un atributo de sólo lectura con el mismo nombre, y asigna "
"\"*Get the current voltage.*\" como la *docstring* de *voltage*."

#: ../Doc/library/functions.rst:1491
msgid ""
"A property object has :attr:`~property.getter`, :attr:`~property.setter`, "
"and :attr:`~property.deleter` methods usable as decorators that create a "
"copy of the property with the corresponding accessor function set to the "
"decorated function.  This is best explained with an example::"
msgstr ""
"Un objeto propiedad tiene métodos :attr:`~property.getter`, :attr:`~property."
"setter`, y :attr:`~property.deleter` que pueden usarse como decoradores que "
"crean una copia de la propiedad con su correspondiente función de acceso "
"asignada a la función decorada. Esto se explica mejor con un ejemplo::"

#: ../Doc/library/functions.rst:1513
msgid ""
"This code is exactly equivalent to the first example.  Be sure to give the "
"additional functions the same name as the original property (``x`` in this "
"case.)"
msgstr ""
"Este código equivale exactamente al primer ejemplo.  Asegúrese de otorgarle "
"a las funciones adicionales el mismo nombre que la propiedad original (``x`` "
"en este caso.)"

#: ../Doc/library/functions.rst:1517
msgid ""
"The returned property object also has the attributes ``fget``, ``fset``, and "
"``fdel`` corresponding to the constructor arguments."
msgstr ""
"El objeto propiedad retornado tiene también los atributos ``fget``, "
"``fset``, y ``fdel`` correspondientes a los argumentos del constructor."

#: ../Doc/library/functions.rst:1520
msgid "The docstrings of property objects are now writeable."
msgstr "Las *docstrings* de los objetos propiedad son escribibles."

#: ../Doc/library/functions.rst:1529
msgid ""
"Rather than being a function, :class:`range` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-range` and :ref:`typesseq`."
msgstr ""
":class:`range`, más que una función, es en realidad un tipo de secuencia "
"inmutable, tal y como está documentado en :ref:`typesseq-range` y :ref:"
"`typesseq`."

#: ../Doc/library/functions.rst:1535
msgid ""
"Return a string containing a printable representation of an object.  For "
"many types, this function makes an attempt to return a string that would "
"yield an object with the same value when passed to :func:`eval`; otherwise, "
"the representation is a string enclosed in angle brackets that contains the "
"name of the type of the object together with additional information often "
"including the name and address of the object.  A class can control what this "
"function returns for its instances by defining a :meth:`__repr__` method. "
"If :func:`sys.displayhook` is not accessible, this function will raise :exc:"
"`RuntimeError`."
msgstr ""
"Retorna una cadena que contiene una representación imprimible de un objeto. "
"Para muchos tipos, esta función intenta retornar la cadena de caracteres que "
"retornaría un objeto con el mismo valor cuando es pasado a :func:`eval`; de "
"lo contrario, la representación es una cadena entre corchetes angulares "
"(\"<>\") que contiene el nombre del tipo del objeto junto con información "
"adicional que incluye a menudo el nombre y la dirección del objeto.  Una "
"clase puede controlar lo que esta función retorna para sus instancias "
"definiendo un método :meth:`__repr__`. Si no se puede acceder a :func:`sys."
"displayhook`, esta función generará  :exc:`RuntimeError`."

#: ../Doc/library/functions.rst:1548
msgid ""
"Return a reverse :term:`iterator`.  *seq* must be an object which has a :"
"meth:`__reversed__` method or supports the sequence protocol (the :meth:"
"`__len__` method and the :meth:`__getitem__` method with integer arguments "
"starting at ``0``)."
msgstr ""
"Retorna un :term:`iterator` reverso. *seq* debe ser un objeto que tenga un "
"método :meth:`__reversed__` o que soporte el protocolo de secuencia (el "
"método :meth:`__len__` y el método :meth:`__getitem__` con argumentos "
"enteros comenzando en ``0``)."

#: ../Doc/library/functions.rst:1556
msgid ""
"Return *number* rounded to *ndigits* precision after the decimal point.  If "
"*ndigits* is omitted or is ``None``, it returns the nearest integer to its "
"input."
msgstr ""
"Retorna *number* redondeado a *ndigits* de precisión después del punto "
"decimal. Si *ndigits* es omitido o es ``None``, retorna el entero más "
"cercano a su entrada."

#: ../Doc/library/functions.rst:1560
msgid ""
"For the built-in types supporting :func:`round`, values are rounded to the "
"closest multiple of 10 to the power minus *ndigits*; if two multiples are "
"equally close, rounding is done toward the even choice (so, for example, "
"both ``round(0.5)`` and ``round(-0.5)`` are ``0``, and ``round(1.5)`` is "
"``2``).  Any integer value is valid for *ndigits* (positive, zero, or "
"negative).  The return value is an integer if *ndigits* is omitted or "
"``None``. Otherwise, the return value has the same type as *number*."
msgstr ""
"Para los tipos integrados que admiten :func:`round`, los valores se "
"redondean al múltiplo más cercano de 10 a la potencia menos *ndigits*; si "
"dos múltiplos están igualmente cerca, el redondeo se realiza hacia la opción "
"par (así, por ejemplo, tanto ``round(0.5)`` como ``round(-0.5)`` son ``0``, "
"y ``round(1.5)`` es ``2``).  Cualquier valor entero es válido para *ndigits* "
"(positivo, cero o negativo).  El valor retornado es un entero si se omite "
"*ndigits* o ``None``. De lo contrario, el valor retornado tiene el mismo "
"tipo que *number*."

#: ../Doc/library/functions.rst:1569
msgid ""
"For a general Python object ``number``, ``round`` delegates to ``number."
"__round__``."
msgstr ""
"Para un objeto ``number`` general de Python,  ``round`` delega a ``number."
"__round__``."

#: ../Doc/library/functions.rst:1574
msgid ""
"The behavior of :func:`round` for floats can be surprising: for example, "
"``round(2.675, 2)`` gives ``2.67`` instead of the expected ``2.68``. This is "
"not a bug: it's a result of the fact that most decimal fractions can't be "
"represented exactly as a float.  See :ref:`tut-fp-issues` for more "
"information."
msgstr ""
"El comportamiento de :func:`round` para flotantes puede ser sorprendente: "
"por ejemplo, ``round(2.675, 2)`` da ``2.67`` en vez de los ``2.68`` "
"esperados. Esto no es un error: es el resultado del hecho de que la mayoría "
"de fracciones decimales no se puede representar de forma exacta como "
"flotantes. Véase :ref:`tut-fp-issues` para más información."

#: ../Doc/library/functions.rst:1586
msgid ""
"Return a new :class:`set` object, optionally with elements taken from "
"*iterable*.  ``set`` is a built-in class.  See :class:`set` and :ref:`types-"
"set` for documentation about this class."
msgstr ""
"Retorna un nuevo objeto :class:`set` , opcionalmente con elementos tomados "
"de *iterable*.   ``set`` es una clase integrada (*built-in*). Véase :class:"
"`set` y :ref:`types-set`  para documentación sobre esta clase."

#: ../Doc/library/functions.rst:1590
msgid ""
"For other containers see the built-in :class:`frozenset`, :class:`list`, :"
"class:`tuple`, and :class:`dict` classes, as well as the :mod:`collections` "
"module."
msgstr ""
"Para otros contenedores ver las clases integradas (*built-in*) :class:"
"`frozenset`, :class:`list`, :class:`tuple`, y :class:`dict`, así como el "
"módulo :mod:`collections`."

#: ../Doc/library/functions.rst:1597
msgid ""
"This is the counterpart of :func:`getattr`.  The arguments are an object, a "
"string, and an arbitrary value.  The string may name an existing attribute "
"or a new attribute.  The function assigns the value to the attribute, "
"provided the object allows it.  For example, ``setattr(x, 'foobar', 123)`` "
"is equivalent to ``x.foobar = 123``."
msgstr ""
"Es la función complementaria a :func:`getattr`.  Los argumentos son un "
"objeto, una cadena de caracteres, y un valor arbitrario. La cadena de "
"caracteres puede nombrar un atributo existente o uno nuevo. La función "
"asigna el valor al atributo si el objeto lo permite. Por ejemplo, "
"``setattr(x, 'foobar', 123)`` es equivalente a ``x.foobar = 123``."

#: ../Doc/library/functions.rst:1603
msgid ""
"*name* need not be a Python identifier as defined in :ref:`identifiers` "
"unless the object chooses to enforce that, for example in a custom :meth:"
"`~object.__getattribute__` or via :attr:`~object.__slots__`. An attribute "
"whose name is not an identifier will not be accessible using the dot "
"notation, but is accessible through :func:`getattr` etc.."
msgstr ""
"*name* no necesita ser un identificador de Python como se define en :ref:"
"`identifiers` a menos que el objeto decida imponerlo, por ejemplo, en un  :"
"meth:`~object.__getattribute__` personalizado o a través de :attr:`~object."
"__slots__`. Un atributo cuyo nombre no es un identificador no será accesible "
"usando la notación de puntos, pero sí a través de :func:`getattr` etc.."

#: ../Doc/library/functions.rst:1611
msgid ""
"Since :ref:`private name mangling <private-name-mangling>` happens at "
"compilation time, one must manually mangle a private attribute's (attributes "
"with two leading underscores) name in order to set it with :func:`setattr`."
msgstr ""
"Dado que :ref:`private name mangling <private-name-mangling>` ocurre en el "
"momento de la compilación, uno debe enredar manualmente el nombre de un "
"atributo privado (atributos con dos guiones bajos principales) para "
"recuperarlo con :func:`getattr`."

#: ../Doc/library/functions.rst:1620
msgid ""
"Return a :term:`slice` object representing the set of indices specified by "
"``range(start, stop, step)``.  The *start* and *step* arguments default to "
"``None``.  Slice objects have read-only data attributes :attr:`~slice."
"start`, :attr:`~slice.stop`, and :attr:`~slice.step` which merely return the "
"argument values (or their default).  They have no other explicit "
"functionality; however, they are used by NumPy and other third-party "
"packages. Slice objects are also generated when extended indexing syntax is "
"used.  For example: ``a[start:stop:step]`` or ``a[start:stop, i]``.  See :"
"func:`itertools.islice` for an alternate version that returns an iterator."
msgstr ""
"Retorna un objeto :term:`slice` que representa el conjunto de índices "
"especificados por  ``range(start, stop, step)``.  Los argumentos *start* y "
"*step* son por defecto ``None``. Los objetos slice tienen atributos de sólo "
"lectura :attr:`~slice.start`, :attr:`~slice.stop` y :attr:`~slice.step` que "
"simplemente retornan los valores de los argumentos (o sus valores por "
"defecto).  Éstos no tienen otra funcionalidad explícita; sin embargo son "
"usados por *NumPy* y otras extensiones de terceros. Estos objetos slices "
"pueden ser generados también empleando la sintaxis extendida de indexación. "
"Por ejemplo: ``a[start:stop:step]`` o ``a[start:stop, i]``.  Véase  :func:"
"`itertools.islice`  para la versión alternativa que retorna un iterador."

#: ../Doc/library/functions.rst:1633
msgid "Return a new sorted list from the items in *iterable*."
msgstr ""
"Retorna una nueva lista ordenada a partir de los elementos en *iterable*."

#: ../Doc/library/functions.rst:1635
msgid ""
"Has two optional arguments which must be specified as keyword arguments."
msgstr ""
"Tiene dos argumentos opcionales que deben ser especificados como argumentos "
"de palabra clave."

#: ../Doc/library/functions.rst:1637
msgid ""
"*key* specifies a function of one argument that is used to extract a "
"comparison key from each element in *iterable* (for example, ``key=str."
"lower``).  The default value is ``None`` (compare the elements directly)."
msgstr ""
"*key* especifica una función de un argumento que es empleada para extraer "
"una clave de comparación de cada elemento en *iterable* (por ejemplo, "
"``key=str.lower``). El valor por defecto es ``None`` (compara los elementos "
"directamente)."

#: ../Doc/library/functions.rst:1641
msgid ""
"*reverse* is a boolean value.  If set to ``True``, then the list elements "
"are sorted as if each comparison were reversed."
msgstr ""
"*reverse* es un valor boleado. Si está puesto a ``True``, entonces la lista "
"de elementos se ordena como si cada comparación fuera reversa."

#: ../Doc/library/functions.rst:1644
msgid ""
"Use :func:`functools.cmp_to_key` to convert an old-style *cmp* function to a "
"*key* function."
msgstr ""
"Puedes usar :func:`functools.cmp_to_key` para convertir las funciones *cmp* "
"a la antigua usanza en funciones *key*."

#: ../Doc/library/functions.rst:1647
msgid ""
"The built-in :func:`sorted` function is guaranteed to be stable. A sort is "
"stable if it guarantees not to change the relative order of elements that "
"compare equal --- this is helpful for sorting in multiple passes (for "
"example, sort by department, then by salary grade)."
msgstr ""
"La función built-in :func:`sorted` está garantizada en cuanto a su "
"estabilidad. Un ordenamiento es estable si garantiza que no cambia el orden "
"relativo de elementos que resultan igual en la comparación — esto es de gran "
"ayuda para ordenar en múltiples pases (por ejemplo, ordenar por "
"departamento, después por el escalafón de salario)."

#: ../Doc/library/functions.rst:1652
msgid ""
"The sort algorithm uses only ``<`` comparisons between items.  While "
"defining an :meth:`~object.__lt__` method will suffice for sorting, :PEP:`8` "
"recommends that all six :ref:`rich comparisons <comparisons>` be "
"implemented.  This will help avoid bugs when using the same data with other "
"ordering tools such as :func:`max` that rely on a different underlying "
"method.  Implementing all six comparisons also helps avoid confusion for "
"mixed type comparisons which can call reflected the :meth:`~object.__gt__` "
"method."
msgstr ""
"El algoritmo de ordenación utiliza sólo comparaciones de ``<`` entre items. "
"Mientras que al definir un método :meth:`~object.__lt__` será suficiente "
"para ordenar, :PEP:`8` recomienda que las seis comparaciones :ref:`rich "
"comparisons <comparisons>` se implementen. Esto ayudará a evitar errores al "
"usar los mismos datos con otras herramientas de ordenado como :func:`max` "
"que se basan en un método subyacente diferente. La implementación de las "
"seis comparaciones también ayuda a evitar confusiones por comparaciones de "
"tipos mixtos que pueden llamar reflejado al método :meth:`~object.__gt__`."

#: ../Doc/library/functions.rst:1661
msgid ""
"For sorting examples and a brief sorting tutorial, see :ref:`sortinghowto`."
msgstr ""
"Para ejemplos de ordenamiento y para un breve tutorial sobre ello, ver :ref:"
"`sortinghowto`."

#: ../Doc/library/functions.rst:1665
msgid "Transform a method into a static method."
msgstr "Transforma un método en un método estático."

#: ../Doc/library/functions.rst:1667
msgid ""
"A static method does not receive an implicit first argument. To declare a "
"static method, use this idiom::"
msgstr ""
"Un método estático no recibe un primer argumento implícito. Para declarar un "
"método estático, utiliza esta expresión::"

#: ../Doc/library/functions.rst:1674
msgid ""
"The ``@staticmethod`` form is a function :term:`decorator` -- see :ref:"
"`function` for details."
msgstr ""
"La forma ``@staticmethod`` es una función :term:`decorator` — ver :ref:"
"`function`  para más detalles."

#: ../Doc/library/functions.rst:1677
msgid ""
"A static method can be called either on the class (such as ``C.f()``) or on "
"an instance (such as ``C().f()``). Moreover, they can be called as regular "
"functions (such as ``f()``)."
msgstr ""
"Un método estático puede ser llamado sobre la clase (como ``C.f()``) o sobre "
"una instancia (como ``C().f()``). Además, puede ser llamado como una función "
"regular (como ``f()``)."

#: ../Doc/library/functions.rst:1681
msgid ""
"Static methods in Python are similar to those found in Java or C++. Also, "
"see :func:`classmethod` for a variant that is useful for creating alternate "
"class constructors."
msgstr ""
"Los métodos estáticos en Python son similares a los que se encuentran en "
"Java o C++. Ver también :func:`classmethod` para una variante que es útil "
"para crear constructores de clase alternativos."

#: ../Doc/library/functions.rst:1685
msgid ""
"Like all decorators, it is also possible to call ``staticmethod`` as a "
"regular function and do something with its result.  This is needed in some "
"cases where you need a reference to a function from a class body and you "
"want to avoid the automatic transformation to instance method.  For these "
"cases, use this idiom::"
msgstr ""
"Como todos los decoradores, es también posible llamar a ``staticmethod`` "
"como una función normal y hacer algo con su resultado. Esto es necesario a "
"veces cuando necesitas una referencia a una función desde el cuerpo de una "
"clase y quieres evitar la transformación automática a un método de la "
"instancia. Para dichos casos, emplea esta expresión::"

#: ../Doc/library/functions.rst:1697
msgid "For more information on static methods, see :ref:`types`."
msgstr "Para más información sobre métodos estáticos, ver :ref:`types`."

#: ../Doc/library/functions.rst:1699
msgid ""
"Static methods now inherit the method attributes (``__module__``, "
"``__name__``, ``__qualname__``, ``__doc__`` and ``__annotations__``), have a "
"new ``__wrapped__`` attribute, and are now callable as regular functions."
msgstr ""
"Los métodos estáticos ahora heredan los atributos del método "
"(``__module__``, ``__name__``, ``__qualname__``, ``__doc__`` y "
"``__annotations__``), tienen un nuevo atributo ``__wrapped__`` y ahora son "
"invocables como funciones regulares."

#: ../Doc/library/functions.rst:1714
msgid ""
"Return a :class:`str` version of *object*.  See :func:`str` for details."
msgstr ""
"Retorna una versión :class:`str` del *object*. Ver :func:`str` para más "
"detalles."

#: ../Doc/library/functions.rst:1716
msgid ""
"``str`` is the built-in string :term:`class`.  For general information about "
"strings, see :ref:`textseq`."
msgstr ""
"``str`` es la :term:`class` cadena built-in . Para información general sobre "
"strings, ver :ref:`textseq`."

#: ../Doc/library/functions.rst:1722
msgid ""
"Sums *start* and the items of an *iterable* from left to right and returns "
"the total.  The *iterable*'s items are normally numbers, and the start value "
"is not allowed to be a string."
msgstr ""
"Suma *start* y los elementos de un *iterable* de izquierda a derecha y "
"Retorna el total. Los elementos del *iterable* son normalmente números, y el "
"valor *start* no puede ser una cadena."

#: ../Doc/library/functions.rst:1726
msgid ""
"For some use cases, there are good alternatives to :func:`sum`. The "
"preferred, fast way to concatenate a sequence of strings is by calling ``''."
"join(sequence)``.  To add floating point values with extended precision, "
"see :func:`math.fsum`\\.  To concatenate a series of iterables, consider "
"using :func:`itertools.chain`."
msgstr ""
"Para algunos casos de uso, hay buenas alternativas a :func:`sum`. La manera "
"preferente y más rápida de concatenar secuencias de cadenas es llamado a "
"``’’.join(sequence)``. Para añadir valores de punto flotante con precisión "
"extendida, ver :func:`math.fsum`\\. Para concatenar series de iterabais, "
"considera usar :func:`itertools.chain`."

#: ../Doc/library/functions.rst:1732
msgid "The *start* parameter can be specified as a keyword argument."
msgstr ""
"El parámetro *start* puede ser especificado como un argumento de palabra "
"clave."

#: ../Doc/library/functions.rst:1738
msgid ""
"Return a proxy object that delegates method calls to a parent or sibling "
"class of *type*.  This is useful for accessing inherited methods that have "
"been overridden in a class."
msgstr ""
"Retorna un objeto proxy que delega las llamadas de métodos a clases padre o "
"hermanas de *type*. Esto es útil para acceder métodos heredados que han sido "
"invalidados en una clase."

#: ../Doc/library/functions.rst:1742
msgid ""
"The *object_or_type* determines the :term:`method resolution order` to be "
"searched.  The search starts from the class right after the *type*."
msgstr ""
"*object-or-type* determina el :term:`method resolution order` a ser buscado. "
"La búsqueda empieza desde la clase justo después de *type*."

#: ../Doc/library/functions.rst:1746
msgid ""
"For example, if :attr:`~class.__mro__` of *object_or_type* is ``D -> B -> C -"
"> A -> object`` and the value of *type* is ``B``, then :func:`super` "
"searches ``C -> A -> object``."
msgstr ""
"Por ejemplo, si :attr:`~class.__mro__` de *object-or-type* es ``D -> B -> C -"
"> A -> object`` y el valor de *type* es ``B``, entonces :func:`super` busca "
"``C -> A -> object``."

#: ../Doc/library/functions.rst:1750
msgid ""
"The :attr:`~class.__mro__` attribute of the *object_or_type* lists the "
"method resolution search order used by both :func:`getattr` and :func:"
"`super`.  The attribute is dynamic and can change whenever the inheritance "
"hierarchy is updated."
msgstr ""
"El atributo :attr:`~class.__mro__` de *object-or-type* enumera el orden de "
"búsqueda del método de solución usado por :func:`getattr` y :func:`super`. "
"El atributo es dinámico y puede cambiar en cuanto la jerarquía de herencia "
"se actualiza."

#: ../Doc/library/functions.rst:1755
msgid ""
"If the second argument is omitted, the super object returned is unbound.  If "
"the second argument is an object, ``isinstance(obj, type)`` must be true.  "
"If the second argument is a type, ``issubclass(type2, type)`` must be true "
"(this is useful for classmethods)."
msgstr ""
"Si se omite el segundo argumento, el objeto super retornado no está "
"vinculado.  Si el segundo argumento es un objeto, ``isinstance(obj, type)`` "
"debe ser verdadero.  Si el segundo argumento es un tipo, ``issubclass(type2, "
"type)`` debe ser verdadero (esto es útil para classmethods)."

#: ../Doc/library/functions.rst:1760
msgid ""
"There are two typical use cases for *super*.  In a class hierarchy with "
"single inheritance, *super* can be used to refer to parent classes without "
"naming them explicitly, thus making the code more maintainable.  This use "
"closely parallels the use of *super* in other programming languages."
msgstr ""
"Hay dos casos de uso típicos para *super*.  En una jerarquía de clases con "
"herencia única, *super* puede ser utilizado para referirse a las clases "
"padre sin llamarlas explícitamente, haciendo el código más sencillo de "
"mantener. Este uso es muy similar al de *super* en otros lenguajes de "
"programación."

#: ../Doc/library/functions.rst:1765
msgid ""
"The second use case is to support cooperative multiple inheritance in a "
"dynamic execution environment.  This use case is unique to Python and is not "
"found in statically compiled languages or languages that only support single "
"inheritance.  This makes it possible to implement \"diamond diagrams\" where "
"multiple base classes implement the same method.  Good design dictates that "
"such implementations have the same calling signature in every case (because "
"the order of calls is determined at runtime, because that order adapts to "
"changes in the class hierarchy, and because that order can include sibling "
"classes that are unknown prior to runtime)."
msgstr ""
"El segundo caso de uso es el soporte de herencia múltiple cooperativa en un "
"entorno de ejecución dinámica.  Este caso de uso es único en Python y no se "
"encuentra en lenguajes estáticos compilados o que solo soportan herencia "
"única.  Esto hace posible implementar los \"diagramas de diamantes\", donde "
"múltiples clases base implementan el mismo método. Las buenas prácticas de "
"diseño dictan que estas implementaciones tengan la misma signatura de "
"llamada en cada caso (porque el orden de llamadas se determina en tiempo de "
"ejecución, porque ese orden se adapta a los cambios en la jerarquía de clase "
"y porque ese orden puede incluir clases hermanas que son desconocidas antes "
"de la ejecución)."

#: ../Doc/library/functions.rst:1775
msgid "For both use cases, a typical superclass call looks like this::"
msgstr "Para ambos casos, la llamada típica de una superclase se parece a::"

#: ../Doc/library/functions.rst:1782
msgid ""
"In addition to method lookups, :func:`super` also works for attribute "
"lookups.  One possible use case for this is calling :term:`descriptors "
"<descriptor>` in a parent or sibling class."
msgstr ""
"Además de para los métodos de búsqueda, :func:`super`  también funciona para "
"búsquedas de atributos.  Un caso de uso posible para esto es llamar a  :term:"
"`descriptores <descriptor>`  en una clase padre o hermana."

#: ../Doc/library/functions.rst:1786
msgid ""
"Note that :func:`super` is implemented as part of the binding process for "
"explicit dotted attribute lookups such as ``super().__getitem__(name)``. It "
"does so by implementing its own :meth:`__getattribute__` method for "
"searching classes in a predictable order that supports cooperative multiple "
"inheritance. Accordingly, :func:`super` is undefined for implicit lookups "
"using statements or operators such as ``super()[name]``."
msgstr ""
"Nótese que :func:`super` se implementa como parte del proceso vinculante "
"para búsquedas de atributos explícitos punteados tales como ``super()."
"__getitem__(name)``. Lo hace implementando su propio método :meth:"
"`__getattribute__`  para buscar clases en un orden predecible que soporte "
"herencia múltiple cooperativa. De la misma manera, :func:`super`  no está "
"definida para búsquedas implícitas usando declaraciones o operadores como  "
"``super()[name]``."

#: ../Doc/library/functions.rst:1793
msgid ""
"Also note that, aside from the zero argument form, :func:`super` is not "
"limited to use inside methods.  The two argument form specifies the "
"arguments exactly and makes the appropriate references.  The zero argument "
"form only works inside a class definition, as the compiler fills in the "
"necessary details to correctly retrieve the class being defined, as well as "
"accessing the current instance for ordinary methods."
msgstr ""
"Nótese también, que aparte de en su forma sin argumentos,  :func:`super`  no "
"está limitada a su uso dentro de métodos.  La forma con dos argumentos "
"especifica de forma exacta los argumentos y hace las referencias "
"apropiadas.  La forma sin argumentos solo funciona dentro de una definición "
"de clase, ya que el compilador completa los detalles necesarios para obtener "
"correctamente la clase que está siendo definida, así como accediendo a la "
"instancia actual para métodos ordinarios."

#: ../Doc/library/functions.rst:1800
msgid ""
"For practical suggestions on how to design cooperative classes using :func:"
"`super`, see `guide to using super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."
msgstr ""
"Para sugerencias prácticas sobre como diseñas clases cooperativas usando  :"
"func:`super`, véase `guía de uso de super() <https://rhettinger.wordpress."
"com/2011/05/26/super-considered-super/>`_."

#: ../Doc/library/functions.rst:1810
msgid ""
"Rather than being a function, :class:`tuple` is actually an immutable "
"sequence type, as documented in :ref:`typesseq-tuple` and :ref:`typesseq`."
msgstr ""
"Más que una función, :class:`tuple`  es en realidad un tipo de secuencia "
"inmutable, tal y como está documentado en :ref:`typesseq-tuple` y  :ref:"
"`typesseq`."

#: ../Doc/library/functions.rst:1819
msgid ""
"With one argument, return the type of an *object*.  The return value is a "
"type object and generally the same object as returned by :attr:`object."
"__class__ <instance.__class__>`."
msgstr ""
"Con un argumento, retorna el tipo de un *object*. El valor de retorno es un "
"objeto tipo y generalmente el mismo objeto que el retornado por :attr:"
"`object.__class__ <instance.__class__>`."

#: ../Doc/library/functions.rst:1823
msgid ""
"The :func:`isinstance` built-in function is recommended for testing the type "
"of an object, because it takes subclasses into account."
msgstr ""
"La función integrada  :func:`isinstance` es la recomendada para testear el "
"tipo de un objeto, ya que tiene en cuenta las subclases."

#: ../Doc/library/functions.rst:1827
msgid ""
"With three arguments, return a new type object.  This is essentially a "
"dynamic form of the :keyword:`class` statement. The *name* string is the "
"class name and becomes the :attr:`~definition.__name__` attribute. The "
"*bases* tuple contains the base classes and becomes the :attr:`~class."
"__bases__` attribute; if empty, :class:`object`, the ultimate base of all "
"classes, is added.  The *dict* dictionary contains attribute and method "
"definitions for the class body; it may be copied or wrapped before becoming "
"the :attr:`~object.__dict__` attribute. The following two statements create "
"identical :class:`type` objects:"
msgstr ""
"Con tres argumentos, retorna un nuevo tipo objeto. Esta es esencialmente una "
"forma dinámica de la declaración :keyword:`class`. La cadena de caracteres "
"*name* es el nombre de la clase y se convierte en el atributo :attr:"
"`~definition.__name__`. La tupla *bases* contiene las clases base y se "
"convierte en el atributo :attr:`~class.__bases__`; si está vacío, se agrega :"
"class:`object`, la base última de todas las clases. El diccionario *dict* "
"contiene definiciones de métodos y atributos para el cuerpo de la clase; se "
"puede copiar o ajustar antes de convertirse en el atributo :attr:`~object."
"__dict__`. Las siguientes dos declaraciones crean objetos idénticos :class:"
"`type`:"

#: ../Doc/library/functions.rst:1842
msgid "See also :ref:`bltin-type-objects`."
msgstr "Ver también :ref:`bltin-type-objects`."

#: ../Doc/library/functions.rst:1844
msgid ""
"Keyword arguments provided to the three argument form are passed to the "
"appropriate metaclass machinery (usually :meth:`~object.__init_subclass__`) "
"in the same way that keywords in a class definition (besides *metaclass*) "
"would."
msgstr ""
"Los argumentos de palabras clave proporcionados al formulario de tres "
"argumentos se pasan a la maquinaria de metaclase apropiada (generalmente :"
"meth:`~object.__init_subclass__`) de la misma manera que lo harían las "
"palabras clave en una definición de clase (además de *metaclase*)."

#: ../Doc/library/functions.rst:1849
msgid "See also :ref:`class-customization`."
msgstr "Ver también  :ref:`class-customization`."

#: ../Doc/library/functions.rst:1851
msgid ""
"Subclasses of :class:`type` which don't override ``type.__new__`` may no "
"longer use the one-argument form to get the type of an object."
msgstr ""
"Subclases de :class:`type` que no sobrecarguen ``type.__new__`` ya no pueden "
"usar la forma con un argumento para obtener el tipo de un objeto."

#: ../Doc/library/functions.rst:1858
msgid ""
"Return the :attr:`~object.__dict__` attribute for a module, class, instance, "
"or any other object with a :attr:`~object.__dict__` attribute."
msgstr ""
"Retorna el atributo :attr:`~object.__dict__`  para un módulo, clase, "
"instancia o cualquier otro objeto con un atributo  :attr:`~object.__dict__`."

#: ../Doc/library/functions.rst:1861
msgid ""
"Objects such as modules and instances have an updateable :attr:`~object."
"__dict__` attribute; however, other objects may have write restrictions on "
"their :attr:`~object.__dict__` attributes (for example, classes use a :class:"
"`types.MappingProxyType` to prevent direct dictionary updates)."
msgstr ""
"Los objetos como módulos o instancias tienen un atributo actualizable :attr:"
"`~object.__dict__`; sin embargo, otros objetos pueden tener restricciones de "
"escritura en sus atributos :attr:`~object.__dict__` (por ejemplo, hay clases "
"que usan :class:`types.MappingProxyType`  para evitar actualizaciones "
"directas del diccionario)."

#: ../Doc/library/functions.rst:1866
msgid ""
"Without an argument, :func:`vars` acts like :func:`locals`.  Note, the "
"locals dictionary is only useful for reads since updates to the locals "
"dictionary are ignored."
msgstr ""
"Sin un argumento, :func:`vars` funciona como :func:`locals`. Ten en cuenta "
"que el diccionario de *locals* solo es útil para lecturas ya que las "
"actualizaciones del diccionario de *locals* son ignoradas."

#: ../Doc/library/functions.rst:1870
msgid ""
"A :exc:`TypeError` exception is raised if an object is specified but it "
"doesn't have a :attr:`~object.__dict__` attribute (for example, if its class "
"defines the :attr:`~object.__slots__` attribute)."
msgstr ""
"Una excepción :exc:`TypeError` se genera si se especifica un objeto pero no "
"tiene un atributo :attr:`~object.__dict__` (por ejemplo, si su clase define "
"el atributo :attr:`~object.__slots__`)."

#: ../Doc/library/functions.rst:1876
msgid ""
"Iterate over several iterables in parallel, producing tuples with an item "
"from each one."
msgstr ""
"Iterar sobre varios iterables en paralelo, generando tuplas con un item para "
"cada una."

#: ../Doc/library/functions.rst:1879
msgid "Example::"
msgstr "Ejemplo::"

#: ../Doc/library/functions.rst:1888
msgid ""
"More formally: :func:`zip` returns an iterator of tuples, where the *i*-th "
"tuple contains the *i*-th element from each of the argument iterables."
msgstr ""
"Más formalmente: :func:`zip` retorna un iterador de tuplas, donde la tupla "
"*i*-ésima contiene el elemento *i*-ésimo de cada uno de los argumentos "
"iterables."

#: ../Doc/library/functions.rst:1891
msgid ""
"Another way to think of :func:`zip` is that it turns rows into columns, and "
"columns into rows.  This is similar to `transposing a matrix <https://en."
"wikipedia.org/wiki/Transpose>`_."
msgstr ""
"Otra forma de pensar en :func:`zip` es que convierte las filas en columnas y "
"las columnas en filas.  Esto es similar a `transponer una matriz <https://en."
"wikipedia.org/wiki/Transpose>`_."

#: ../Doc/library/functions.rst:1895
msgid ""
":func:`zip` is lazy: The elements won't be processed until the iterable is "
"iterated on, e.g. by a :keyword:`!for` loop or by wrapping in a :class:"
"`list`."
msgstr ""
":func:`zip` es perezoso: los elementos no se procesarán hasta que el "
"iterable sea iterado, por ejemplo, mediante un bucle :keyword:`!for` o "
"envolviendo en un :class:`list`."

#: ../Doc/library/functions.rst:1899
msgid ""
"One thing to consider is that the iterables passed to :func:`zip` could have "
"different lengths; sometimes by design, and sometimes because of a bug in "
"the code that prepared these iterables.  Python offers three different "
"approaches to dealing with this issue:"
msgstr ""
"Una cosa a considerar es que los iterables pasados a :func:`zip` podrían "
"tener diferentes longitudes; a veces por diseño, y a veces por un error en "
"el código que preparó estos iterables. Python ofrece tres enfoques "
"diferentes para tratar este problema:"

#: ../Doc/library/functions.rst:1904
msgid ""
"By default, :func:`zip` stops when the shortest iterable is exhausted. It "
"will ignore the remaining items in the longer iterables, cutting off the "
"result to the length of the shortest iterable::"
msgstr ""
"De forma predeterminada, :func:`zip` se detiene cuando se agota el iterable "
"más corto. Ignorará los elementos restantes en las iteraciones más largas, "
"cortando el resultado a la longitud del iterable más corto:"

#: ../Doc/library/functions.rst:1911
msgid ""
":func:`zip` is often used in cases where the iterables are assumed to be of "
"equal length.  In such cases, it's recommended to use the ``strict=True`` "
"option. Its output is the same as regular :func:`zip`::"
msgstr ""
":func:`zip` se usa a menudo en los casos en que se supone que los iterables "
"son de igual longitud. En tales casos, se recomienda usar la opción "
"``strict=True``. Su salida es la misma que la normal :func:`zip`::"

#: ../Doc/library/functions.rst:1918
msgid ""
"Unlike the default behavior, it checks that the lengths of iterables are "
"identical, raising a :exc:`ValueError` if they aren't:"
msgstr ""
"A diferencia del comportamiento predeterminado, comprueba que las longitudes "
"de las iteraciones son idénticas, lanzando un :exc:`ValueError` si no lo son:"

#: ../Doc/library/functions.rst:1926
msgid ""
"Without the ``strict=True`` argument, any bug that results in iterables of "
"different lengths will be silenced, possibly manifesting as a hard-to-find "
"bug in another part of the program."
msgstr ""
"Sin el argumento ``strict=True``, cualquier error que resulte en iterables "
"de diferentes longitudes será silenciado, posiblemente manifestándose como "
"un error difícil de encontrar en otra parte del programa."

#: ../Doc/library/functions.rst:1930
msgid ""
"Shorter iterables can be padded with a constant value to make all the "
"iterables have the same length.  This is done by :func:`itertools."
"zip_longest`."
msgstr ""
"Las iteraciones más cortas se pueden acolchar con un valor constante para "
"que todas las iteraciones tengan la misma longitud.  Esto lo hace :func:"
"`itertools.zip_longest`."

#: ../Doc/library/functions.rst:1934
msgid ""
"Edge cases: With a single iterable argument, :func:`zip` returns an iterator "
"of 1-tuples.  With no arguments, it returns an empty iterator."
msgstr ""
"Casos extremos: con un único argumento iterable, :func:`zip` retorna un "
"iterador de 1-tuplas. Sin argumentos, retorna un iterador vacío."

#: ../Doc/library/functions.rst:1937
msgid "Tips and tricks:"
msgstr "Consejos y trucos:"

#: ../Doc/library/functions.rst:1939
msgid ""
"The left-to-right evaluation order of the iterables is guaranteed. This "
"makes possible an idiom for clustering a data series into n-length groups "
"using ``zip(*[iter(s)]*n, strict=True)``.  This repeats the *same* iterator "
"``n`` times so that each output tuple has the result of ``n`` calls to the "
"iterator. This has the effect of dividing the input into n-length chunks."
msgstr ""
"La evaluación de izquierda a derecha de los iterables está garantizada. Esto "
"permite emplear una expresión idiomática para agregar una serie de datos en "
"grupos de tamaño *n* usando  ``zip(*[iter(s)]*n, strict=True)``. Esto repite "
"el *mismo* iterador ``n`` veces de forma que cada tupla de salida tiene el "
"resultado de  ``n`` llamadas al iterador. Esto tiene el efecto de dividir la "
"entrada en trozos de longitud *n*."

#: ../Doc/library/functions.rst:1945
msgid ""
":func:`zip` in conjunction with the ``*`` operator can be used to unzip a "
"list::"
msgstr ""
":func:`zip`  en conjunción con el operador  ``*``  puede usar para "
"descomprimir (*unzip*) una lista::"

#: ../Doc/library/functions.rst:1956
msgid "Added the ``strict`` argument."
msgstr "Añadido el argumento ``strict``."

#: ../Doc/library/functions.rst:1968
msgid ""
"This is an advanced function that is not needed in everyday Python "
"programming, unlike :func:`importlib.import_module`."
msgstr ""
"Ésta es una función avanzada que no se necesita en el uso cotidiano de "
"programación en Python, a diferencia de :func:`importlib.import_module`."

#: ../Doc/library/functions.rst:1971
msgid ""
"This function is invoked by the :keyword:`import` statement.  It can be "
"replaced (by importing the :mod:`builtins` module and assigning to "
"``builtins.__import__``) in order to change semantics of the :keyword:`!"
"import` statement, but doing so is **strongly** discouraged as it is usually "
"simpler to use import hooks (see :pep:`302`) to attain the same goals and "
"does not cause issues with code which assumes the default import "
"implementation is in use.  Direct use of :func:`__import__` is also "
"discouraged in favor of :func:`importlib.import_module`."
msgstr ""
"Esta función es invocada por la declaración :keyword:`import`. Puede ser "
"reemplazada para cambiar la semántica de la declaración :keyword:`!import` "
"(mediante la importación del módulo :mod:`builtins` y su asignación a "
"``builtins.__import__``), pero esto está **fuertemente** no recomendado ya "
"que es normalmente mucho más simple usar ganchos (*hooks*) de importación "
"(ver :pep:`302`) para obtener los mismos objetivos y sin causar problemas en "
"código que asume que la implementación por defecto de importaciones está "
"siendo utilizada. El uso directo de  :func:`__import__` tampoco está "
"recomendado y se prefiere  :func:`importlib.import_module`."

#: ../Doc/library/functions.rst:1980
msgid ""
"The function imports the module *name*, potentially using the given "
"*globals* and *locals* to determine how to interpret the name in a package "
"context. The *fromlist* gives the names of objects or submodules that should "
"be imported from the module given by *name*.  The standard implementation "
"does not use its *locals* argument at all and uses its *globals* only to "
"determine the package context of the :keyword:`import` statement."
msgstr ""
"La función importa el módulo *name*, usando potencialmente las *globals* y "
"*locals* indicadas para determinar como interpretar el nombre en el contexto "
"de un paquete. *fromlist* indica los nombres de objetos o submódulos que "
"deberían ser importados del módulo indicado por *name*.  La implementación "
"estándar no utiliza su argumento *locals* para nada, y usa *globals* solo "
"para determinar el contexto en un paquete de la declaración :keyword:"
"`import`."

#: ../Doc/library/functions.rst:1987
msgid ""
"*level* specifies whether to use absolute or relative imports. ``0`` (the "
"default) means only perform absolute imports.  Positive values for *level* "
"indicate the number of parent directories to search relative to the "
"directory of the module calling :func:`__import__` (see :pep:`328` for the "
"details)."
msgstr ""
"*level* especifica si usar importaciones absolutas o relativas. ``0`` (por "
"defecto) significa sólo realizar importaciones absolutas. Valores positivos "
"de  *level* indican el número de directorios progenitores relativos al del "
"módulo para buscar llamando a :func:`__import__` (ver :pep:`328` para los "
"detalles)."

#: ../Doc/library/functions.rst:1993
msgid ""
"When the *name* variable is of the form ``package.module``, normally, the "
"top-level package (the name up till the first dot) is returned, *not* the "
"module named by *name*.  However, when a non-empty *fromlist* argument is "
"given, the module named by *name* is returned."
msgstr ""
"Cuando la variable *name* tiene la forma ``package.module``, normalmente el "
"paquete del nivel más alto (el nombre hasta el primer punto) se retorna, "
"*no* el modulo llamado por *name*.  Sin embargo, cuando un argumento "
"*fromlist* no vacío es indicado, el módulo llamado por *name* es retornado."

#: ../Doc/library/functions.rst:1998
msgid ""
"For example, the statement ``import spam`` results in bytecode resembling "
"the following code::"
msgstr ""
"Por ejemplo, la declaración ``import spam`` resulta en un bytecode similar "
"al siguiente código::"

#: ../Doc/library/functions.rst:2003
msgid "The statement ``import spam.ham`` results in this call::"
msgstr "La declaración ``import spam.ham``  resulta en esta llamada::"

#: ../Doc/library/functions.rst:2007
msgid ""
"Note how :func:`__import__` returns the toplevel module here because this is "
"the object that is bound to a name by the :keyword:`import` statement."
msgstr ""
"Nótese cómo :func:`__import__` retorna el módulo del nivel superior en este "
"caso porque este es el objeto que está enlazado a un nombre por la "
"declaración :keyword:`import`."

#: ../Doc/library/functions.rst:2010
msgid ""
"On the other hand, the statement ``from spam.ham import eggs, sausage as "
"saus`` results in ::"
msgstr ""
"Por otra parte, la declaración  ``from spam.ham import eggs, sausage as "
"saus`` resulta en ::"

#: ../Doc/library/functions.rst:2017
msgid ""
"Here, the ``spam.ham`` module is returned from :func:`__import__`.  From "
"this object, the names to import are retrieved and assigned to their "
"respective names."
msgstr ""
"Aquí, el módulo ``spam.ham`` es retornado desde  :func:`__import__`.  Desde "
"este objeto, los nombres a importar son obtenidos y asignados a sus nombres "
"respectivos."

#: ../Doc/library/functions.rst:2021
msgid ""
"If you simply want to import a module (potentially within a package) by "
"name, use :func:`importlib.import_module`."
msgstr ""
"Si simplemente quieres importar un módulo (potencialmente dentro de un "
"paquete) por nombre, usa  :func:`importlib.import_module`."

#: ../Doc/library/functions.rst:2024
msgid ""
"Negative values for *level* are no longer supported (which also changes the "
"default value to 0)."
msgstr ""
"Valores negativos para *level* ya no están soportados (lo que también cambia "
"el valor por defecto a 0)."

#: ../Doc/library/functions.rst:2028
msgid ""
"When the command line options :option:`-E` or :option:`-I` are being used, "
"the environment variable :envvar:`PYTHONCASEOK` is now ignored."
msgstr ""
"Cuando se utilizan las opciones de línea de comando :option:`-E` o :option:`-"
"I`, la variable de entorno :envvar:`PYTHONCASEOK` ahora se ignora."

#: ../Doc/library/functions.rst:2033
msgid "Footnotes"
msgstr "Notas al pie"

#: ../Doc/library/functions.rst:2034
msgid ""
"Note that the parser only accepts the Unix-style end of line convention. If "
"you are reading the code from a file, make sure to use newline conversion "
"mode to convert Windows or Mac-style newlines."
msgstr ""
"Ten en cuenta que el *parser* sólo acepta la convención de final de línea de "
"tipo Unix. Si estás leyendo el código de un fichero, asegúrate de usar la el "
"modo de conversión de nueva línea para convertir las líneas de tipo Windows "
"o Mac."

#~ msgid ""
#~ "``aiter(x)`` itself has an ``__aiter__()`` method that returns ``x``, so "
#~ "``aiter(aiter(x))`` is the same as ``aiter(x)``."
#~ msgstr ""
#~ "``aiter(x)`` en sí mismo tiene un método ``__aiter__()`` que retorna "
#~ "``x``, por lo que ``aiter(aiter(x))`` es lo mismo que ``aiter(x)``."

#~ msgid ""
#~ "Return a dictionary representing the current global symbol table. This is "
#~ "always the dictionary of the current module (inside a function or method, "
#~ "this is the module where it is defined, not the module from which it is "
#~ "called)."
#~ msgstr ""
#~ "Retorna un diccionario que representa la tabla global de símbolos. Es "
#~ "siempre el diccionario del módulo actual (dentro de una función o método, "
#~ "este es el módulo donde está definida, no el módulo desde el que es "
#~ "llamada)."

#~ msgid ""
#~ "Raises an auditing event ``builtins.input/result`` with argument "
#~ "``result``."
#~ msgstr ""
#~ "Lanza un evento de auditoria ``builtins.input/result`` con el argumento "
#~ "``result``."

#~ msgid ""
#~ "There is an additional mode character permitted, ``'U'``, which no longer "
#~ "has any effect, and is considered deprecated. It previously enabled :term:"
#~ "`universal newlines` in text mode, which became the default behavior in "
#~ "Python 3.0. Refer to the documentation of the :ref:`newline <open-newline-"
#~ "parameter>` parameter for further details."
#~ msgstr ""
#~ "Hay un caracter adicional permitido para indicar un modo, ``’U’``, que ya "
#~ "no tiene ningún efecto y que se considera obsoleto. Anteriormente "
#~ "permitía en modo texto :term:`universal newlines`, lo que se convirtió en "
#~ "el comportamiento por defecto en Python 3.0. Para más detalles, referirse "
#~ "a la documentación del parámetro :ref:`newline <open-newline-parameter>`."

#~ msgid "The ``'U'`` mode."
#~ msgstr "El modo ``'U'``."

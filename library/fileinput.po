# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-08-14 15:10-0300\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es_AR\n"
"X-Generator: Poedit 2.2.1\n"

#: ../Doc/library/fileinput.rst:2
msgid ":mod:`fileinput` --- Iterate over lines from multiple input streams"
msgstr ""
":mod:`fileinput` --- Iterar sobre líneas de múltiples flujos de entrada"

#: ../Doc/library/fileinput.rst:10
msgid "**Source code:** :source:`Lib/fileinput.py`"
msgstr "**Código fuente:** :source:`Lib/fileinput.py`"

#: ../Doc/library/fileinput.rst:14
msgid ""
"This module implements a helper class and functions to quickly write a loop "
"over standard input or a list of files. If you just want to read or write "
"one file see :func:`open`."
msgstr ""
"Este módulo implementa una clase auxiliar y funciones para escribir "
"rápidamente un bucle sobre una entrada estándar o una lista de archivos. Si "
"solo quiere leer o escribir un archivo, vea :func:`open`."

#: ../Doc/library/fileinput.rst:18
msgid "The typical use is::"
msgstr "El uso común es::"

#: ../Doc/library/fileinput.rst:24
msgid ""
"This iterates over the lines of all files listed in ``sys.argv[1:]``, "
"defaulting to ``sys.stdin`` if the list is empty.  If a filename is ``'-'``, "
"it is also replaced by ``sys.stdin`` and the optional arguments *mode* and "
"*openhook* are ignored.  To specify an alternative list of filenames, pass "
"it as the first argument to :func:`.input`.  A single file name is also "
"allowed."
msgstr ""
"Esto itera sobre las líneas de todos los archivos enumerados en ``sys."
"argv[1:]``, por defecto a ``sys.stdin``si la lista está vacía. Si un nombre "
"de archivo es ``'-'``, también se reemplaza por ``sys.stdin`` y los "
"argumentos opcionales *mode* y *openhook* se ignoran. Para especificar una "
"lista alternativa de nombres de archivo, se pasa como primer argumento a :"
"func:`.input`. También se permite un único nombre de archivo."

#: ../Doc/library/fileinput.rst:30
msgid ""
"All files are opened in text mode by default, but you can override this by "
"specifying the *mode* parameter in the call to :func:`.input` or :class:"
"`FileInput`.  If an I/O error occurs during opening or reading a file, :exc:"
"`OSError` is raised."
msgstr ""
"Todos los archivos se abren en modo texto de manera predeterminada, pero "
"puede anular esto especificando el parámetro *mode* en la llamada a :func:`."
"input` o :class:`FileInput`. Si se produce un error de E/S durante la "
"apertura o lectura de un archivo, se lanza :exc:`OSError`."

#: ../Doc/library/fileinput.rst:35
msgid ":exc:`IOError` used to be raised; it is now an alias of :exc:`OSError`."
msgstr ":exc:`IOError` solía ser lanzado; ahora es un alias de :exc:`OSError`."

#: ../Doc/library/fileinput.rst:38
msgid ""
"If ``sys.stdin`` is used more than once, the second and further use will "
"return no lines, except perhaps for interactive use, or if it has been "
"explicitly reset (e.g. using ``sys.stdin.seek(0)``)."
msgstr ""
"Si ``sys.stdin`` se usa más de una vez, el segundo y siguientes usos no "
"retornarán líneas, excepto tal vez para uso interactivo, o si se ha "
"reiniciado explícitamente (por ejemplo, usando ``sys.stdin.seek(0)``)."

#: ../Doc/library/fileinput.rst:42
msgid ""
"Empty files are opened and immediately closed; the only time their presence "
"in the list of filenames is noticeable at all is when the last file opened "
"is empty."
msgstr ""
"Los archivos vacíos se abren e inmediatamente se cierran; la única vez que "
"su presencia en la lista de nombres de archivo es notable es cuando el "
"último archivo abierto está vacío."

#: ../Doc/library/fileinput.rst:46
msgid ""
"Lines are returned with any newlines intact, which means that the last line "
"in a file may not have one."
msgstr ""
"Las líneas se retornan con cualquier nueva línea intacta, lo que significa "
"que la última línea en un archivo puede no tener una."

#: ../Doc/library/fileinput.rst:49
msgid ""
"You can control how files are opened by providing an opening hook via the "
"*openhook* parameter to :func:`fileinput.input` or :class:`FileInput()`. The "
"hook must be a function that takes two arguments, *filename* and *mode*, and "
"returns an accordingly opened file-like object. Two useful hooks are already "
"provided by this module."
msgstr ""
"Puede controlar cómo se abren los archivos proporcionando un enlace de "
"apertura a través del parámetro *openhook* a :func:`fileinput.input` o :"
"class:`FileInput()`. El enlace debe ser una función que tome dos argumentos, "
"*filename* y *mode*, y retorna un objeto similar a un archivo abierto. Este "
"módulo ya proporciona dos enlaces útiles."

#: ../Doc/library/fileinput.rst:55
msgid "The following function is the primary interface of this module:"
msgstr "La siguiente función es la interfaz principal de este módulo:"

#: ../Doc/library/fileinput.rst:60
msgid ""
"Create an instance of the :class:`FileInput` class.  The instance will be "
"used as global state for the functions of this module, and is also returned "
"to use during iteration.  The parameters to this function will be passed "
"along to the constructor of the :class:`FileInput` class."
msgstr ""
"Crea una instancia de la clase :class:`FileInput`. La instancia se usará "
"como estado global para las funciones de este módulo y también se volverá a "
"usar durante la iteración. Los parámetros de esta función se pasarán al "
"constructor de la clase :class:`FileInput`."

#: ../Doc/library/fileinput.rst:65
msgid ""
"The :class:`FileInput` instance can be used as a context manager in the :"
"keyword:`with` statement.  In this example, *input* is closed after the :"
"keyword:`!with` statement is exited, even if an exception occurs::"
msgstr ""
"La instancia :class:`FileInput` se puede usar como gestor de contexto en la "
"declaración :keyword:`with`. En este ejemplo, *input* se cierra después de "
"salir de la instrucción :keyword:`!with`, incluso si se produce una "
"excepción::"

#: ../Doc/library/fileinput.rst:73 ../Doc/library/fileinput.rst:166
msgid "Can be used as a context manager."
msgstr "Se puede usar como gestor de contexto."

#: ../Doc/library/fileinput.rst:76
msgid "The keyword parameters *mode* and *openhook* are now keyword-only."
msgstr ""
"Los parámetros de palabras clave *mode* y *openhook* ahora son solo palabras "
"clave."

#: ../Doc/library/fileinput.rst:80
msgid ""
"The following functions use the global state created by :func:`fileinput."
"input`; if there is no active state, :exc:`RuntimeError` is raised."
msgstr ""
"Las siguientes funciones utilizan el estado global creado por :func:"
"`fileinput.input`; si no hay estado activo, es lanzado :exc:`RuntimeError`."

#: ../Doc/library/fileinput.rst:86
msgid ""
"Return the name of the file currently being read.  Before the first line has "
"been read, returns ``None``."
msgstr ""
"Retorna el nombre del archivo que se está leyendo actualmente. Antes de leer "
"la primera línea, retorna ``None``."

#: ../Doc/library/fileinput.rst:92
msgid ""
"Return the integer \"file descriptor\" for the current file. When no file is "
"opened (before the first line and between files), returns ``-1``."
msgstr ""
"Retorna el entero \"file descriptor\" para el archivo actual. Cuando no se "
"abre ningún archivo (antes de la primera línea y entre archivos), retorna "
"``-1``."

#: ../Doc/library/fileinput.rst:98
msgid ""
"Return the cumulative line number of the line that has just been read.  "
"Before the first line has been read, returns ``0``.  After the last line of "
"the last file has been read, returns the line number of that line."
msgstr ""
"Retorna el número de línea acumulativa de la línea que se acaba de leer. "
"Antes de que se haya leído la primera línea, retorna ``0``. Después de leer "
"la última línea del último archivo, retorna el número de línea de esa línea."

#: ../Doc/library/fileinput.rst:105
msgid ""
"Return the line number in the current file.  Before the first line has been "
"read, returns ``0``.  After the last line of the last file has been read, "
"returns the line number of that line within the file."
msgstr ""
"Retorna el número de línea en el archivo actual. Antes de que se haya leído "
"la primera línea, retorna ``0``. Después de leer la última línea del último "
"archivo, retorna el número de línea de esa línea dentro del archivo."

#: ../Doc/library/fileinput.rst:112
msgid ""
"Return ``True`` if the line just read is the first line of its file, "
"otherwise return ``False``."
msgstr ""
"Retorna ``True`` si la línea que acaba de leer es la primera línea de su "
"archivo; de lo contrario, retorna ``False``."

#: ../Doc/library/fileinput.rst:118
msgid ""
"Return ``True`` if the last line was read from ``sys.stdin``, otherwise "
"return ``False``."
msgstr ""
"Retorna ``True`` si la última línea se leyó de ``sys.stdin``, de lo "
"contrario, retorna ``False``."

#: ../Doc/library/fileinput.rst:124
msgid ""
"Close the current file so that the next iteration will read the first line "
"from the next file (if any); lines not read from the file will not count "
"towards the cumulative line count.  The filename is not changed until after "
"the first line of the next file has been read.  Before the first line has "
"been read, this function has no effect; it cannot be used to skip the first "
"file.  After the last line of the last file has been read, this function has "
"no effect."
msgstr ""
"Cierra el archivo actual para que la próxima iteración lea la primera línea "
"del siguiente archivo (si corresponde); las líneas no leídas del archivo no "
"contarán para el recuento de líneas acumuladas. El nombre del archivo no se "
"cambia hasta que se haya leído la primera línea del siguiente archivo. Antes "
"de que se haya leído la primera línea, esta función no tiene efecto; no se "
"puede usar para omitir el primer archivo. Después de leer la última línea "
"del último archivo, esta función no tiene efecto."

#: ../Doc/library/fileinput.rst:134
msgid "Close the sequence."
msgstr "Cierra la secuencia."

#: ../Doc/library/fileinput.rst:136
msgid ""
"The class which implements the sequence behavior provided by the module is "
"available for subclassing as well:"
msgstr ""
"La clase que implementa el comportamiento de secuencia proporcionado por el "
"módulo también está disponible para la subclasificación:"

#: ../Doc/library/fileinput.rst:142
msgid ""
"Class :class:`FileInput` is the implementation; its methods :meth:"
"`filename`, :meth:`fileno`, :meth:`lineno`, :meth:`filelineno`, :meth:"
"`isfirstline`, :meth:`isstdin`, :meth:`nextfile` and :meth:`close` "
"correspond to the functions of the same name in the module. In addition it "
"has a :meth:`~io.TextIOBase.readline` method which returns the next input "
"line, and a :meth:`__getitem__` method which implements the sequence "
"behavior. The sequence must be accessed in strictly sequential order; random "
"access and :meth:`~io.TextIOBase.readline` cannot be mixed."
msgstr ""
"La Clase :class:`FileInput` es la implementación; sus métodos :meth:"
"`filename`, :meth:`fileno`, :meth:`lineno`, :meth:`filelineno`, :meth:"
"`isfirstline`, :meth:`isstdin`, :meth:`nextfile` and :meth:`close` "
"corresponden a las funciones del mismo nombre en el módulo. Además tiene un "
"método :meth:`~io.TextIOBase.readline` que retorna la siguiente línea de "
"entrada, y un método :meth:`__getitem__` que implementa el comportamiento de "
"secuencia. Se debe acceder a la secuencia en orden estrictamente secuencial; "
"acceso aleatorio y :meth:`~io.TextIOBase.readline` no se pueden mezclar."

#: ../Doc/library/fileinput.rst:151
msgid ""
"With *mode* you can specify which file mode will be passed to :func:`open`. "
"It must be one of ``'r'``, ``'rU'``, ``'U'`` and ``'rb'``."
msgstr ""
"Con *mode* puede especificar a qué modo de archivo se pasará :func:`open`. "
"Debe ser uno de ``'r'``, ``'rU'``, ``'U'`` and ``'rb'``."

#: ../Doc/library/fileinput.rst:154
msgid ""
"The *openhook*, when given, must be a function that takes two arguments, "
"*filename* and *mode*, and returns an accordingly opened file-like object. "
"You cannot use *inplace* and *openhook* together."
msgstr ""
"El *openhook*, cuando se proporciona, debe ser una función que tome dos "
"argumentos, *filename* y *mode*, y retorne un objeto similar a un archivo "
"abierto en consecuencia. No puede usar *inplace* y *openhook* juntos."

#: ../Doc/library/fileinput.rst:158
msgid ""
"A :class:`FileInput` instance can be used as a context manager in the :"
"keyword:`with` statement.  In this example, *input* is closed after the :"
"keyword:`!with` statement is exited, even if an exception occurs::"
msgstr ""
"Una instancia :class:`FileInput` se puede usar como gestor de contexto en la "
"instrucción :keyword:`with`. En este ejemplo, *input* se cierra después de "
"salir de la palabra clave:`!with`, incluso si se produce una excepción::"

#: ../Doc/library/fileinput.rst:169
msgid "The ``'rU'`` and ``'U'`` modes."
msgstr "Los modos ``'rU'`` and ``'U'``."

#: ../Doc/library/fileinput.rst:172
msgid "Support for :meth:`__getitem__` method is deprecated."
msgstr "Soporte para el método :meth:`__getitem__` está discontinuado."

#: ../Doc/library/fileinput.rst:175
msgid "The keyword parameter *mode* and *openhook* are now keyword-only."
msgstr ""
"El parámetro de palabra clave *mode* y *openhook* ahora son solo palabras "
"clave."

#: ../Doc/library/fileinput.rst:180
msgid ""
"**Optional in-place filtering:** if the keyword argument ``inplace=True`` is "
"passed to :func:`fileinput.input` or to the :class:`FileInput` constructor, "
"the file is moved to a backup file and standard output is directed to the "
"input file (if a file of the same name as the backup file already exists, it "
"will be replaced silently).  This makes it possible to write a filter that "
"rewrites its input file in place.  If the *backup* parameter is given "
"(typically as ``backup='.<some extension>'``), it specifies the extension "
"for the backup file, and the backup file remains around; by default, the "
"extension is ``'.bak'`` and it is deleted when the output file is closed.  "
"In-place filtering is disabled when standard input is read."
msgstr ""
"**Filtrado al instante opcional:** si el argumento de la palabra clave "
"``inplace=True`` se pasa a :func:`fileinput.input` o al constructor :class:"
"`FileInput`, el archivo se mueve a una copia de seguridad y la salida "
"estándar es dirigida al archivo de entrada (si ya existe un archivo con el "
"mismo nombre que el archivo de copia de seguridad, se reemplazará en "
"silencio). Esto hace posible escribir un filtro que reescribe su archivo de "
"entrada en su lugar. Si se proporciona el parámetro *backup* (generalmente "
"como ``backup='.<some extension>'``), este especifica la extensión para el "
"archivo de respaldo y el archivo de respaldo permanece; de forma "
"predeterminada, la extensión es ``'.bak'`` y se elimina cuando se cierra el "
"archivo de salida. El filtrado en el lugar se desactiva cuando se lee la "
"entrada estándar."

#: ../Doc/library/fileinput.rst:192
msgid "The two following opening hooks are provided by this module:"
msgstr "Este módulo proporciona los dos enlaces de apertura siguientes:"

#: ../Doc/library/fileinput.rst:196
msgid ""
"Transparently opens files compressed with gzip and bzip2 (recognized by the "
"extensions ``'.gz'`` and ``'.bz2'``) using the :mod:`gzip` and :mod:`bz2` "
"modules.  If the filename extension is not ``'.gz'`` or ``'.bz2'``, the file "
"is opened normally (ie, using :func:`open` without any decompression)."
msgstr ""
"Abre de forma transparente archivos comprimidos con *gzip* y *bzip2* "
"(reconocidos por las extensiones ``'.gz'`` and ``'.bz2'``) utilizando los "
"módulos :mod:`gzip` y :mod:`bz2`. Si la extensión del nombre de archivo no "
"es ``'.gz'`` or ``'.bz2'``, el archivo se abre normalmente (es decir, "
"usando :func:`open` sin descompresión)."

#: ../Doc/library/fileinput.rst:201
msgid ""
"Usage example:  ``fi = fileinput.FileInput(openhook=fileinput."
"hook_compressed)``"
msgstr ""
"Ejemplo de uso: ``fi = fileinput.FileInput(openhook=fileinput."
"hook_compressed)``"

#: ../Doc/library/fileinput.rst:206
msgid ""
"Returns a hook which opens each file with :func:`open`, using the given "
"*encoding* and *errors* to read the file."
msgstr ""
"Retorna un enlace que abre cada archivo con :func:`open`, usando el "
"*encoding* y *errors* dados para leer el archivo."

#: ../Doc/library/fileinput.rst:209
msgid ""
"Usage example: ``fi = fileinput.FileInput(openhook=fileinput."
"hook_encoded(\"utf-8\", \"surrogateescape\"))``"
msgstr ""
"Ejemplo de uso: ``fi = fileinput.FileInput(openhook=fileinput."
"hook_encoded(\"utf-8\", \"surrogateescape\"))``"

#: ../Doc/library/fileinput.rst:213
msgid "Added the optional *errors* parameter."
msgstr "Se agregó el parámetro opcional *errors*."

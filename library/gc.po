# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-08-25 10:10+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Francisco Jesús Sevilla García <fjsevilla.dev@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/gc.rst:2
msgid ":mod:`gc` --- Garbage Collector interface"
msgstr ":mod:`gc` --- Interfaz del recolector de basura"

#: ../Doc/library/gc.rst:12
msgid ""
"This module provides an interface to the optional garbage collector.  It "
"provides the ability to disable the collector, tune the collection "
"frequency, and set debugging options.  It also provides access to "
"unreachable objects that the collector found but cannot free.  Since the "
"collector supplements the reference counting already used in Python, you can "
"disable the collector if you are sure your program does not create reference "
"cycles.  Automatic collection can be disabled by calling ``gc.disable()``.  "
"To debug a leaking program call ``gc.set_debug(gc.DEBUG_LEAK)``. Notice that "
"this includes ``gc.DEBUG_SAVEALL``, causing garbage-collected objects to be "
"saved in gc.garbage for inspection."
msgstr ""
"Este módulo proporciona una interfaz para el recolector de basura opcional "
"(recolector de basura cíclico generacional). Proporciona la capacidad de "
"deshabilitar el recolector, ajustar la frecuencia de recolección y "
"establecer opciones de depuración. También proporciona acceso a objetos "
"inaccesibles (*unreachables*) que el recolector encontró pero no pudo "
"liberar. Dado que el recolector de basura complementa el conteo de "
"referencias, que ya se utiliza en Python, es posible desactivarlo siempre "
"que se esté seguro de que el programa no crea referencias cíclicas. La "
"recolección automática se puede desactivar llamando a ``gc.disable()``. Para "
"depurar un programa con fugas de memoria, se debe llamar a ``gc.set_debug(gc."
"DEBUG_LEAK)``. Se debe tener en cuenta que la llamada anterior incluye ``gc."
"DEBUG_SAVEALL``, lo que hace que los objetos recolectados se guarden en *gc."
"garbage* para su inspección."

#: ../Doc/library/gc.rst:23
msgid "The :mod:`gc` module provides the following functions:"
msgstr "El módulo :mod:`gc` proporciona las siguientes funciones:"

#: ../Doc/library/gc.rst:28
msgid "Enable automatic garbage collection."
msgstr "Habilita la recolección automática de basura."

#: ../Doc/library/gc.rst:33
msgid "Disable automatic garbage collection."
msgstr "Deshabilita la recolección automática de basura."

#: ../Doc/library/gc.rst:38
msgid "Return ``True`` if automatic collection is enabled."
msgstr "Retorna ``True`` si la recolección automática está habilitada."

#: ../Doc/library/gc.rst:43
msgid ""
"With no arguments, run a full collection.  The optional argument "
"*generation* may be an integer specifying which generation to collect (from "
"0 to 2).  A :exc:`ValueError` is raised if the generation number  is "
"invalid. The number of unreachable objects found is returned."
msgstr ""
"Sin argumentos, ejecuta una recolección completa. El argumento opcional "
"*generation* debe ser un número entero que especifica qué generación "
"recolectar (de 0 a 2). Una excepción :exc:`ValueError` será lanzada si el "
"número de generación no es válido. Se retorna el número de objetos "
"inaccesibles encontrados."

#: ../Doc/library/gc.rst:48
msgid ""
"The free lists maintained for a number of built-in types are cleared "
"whenever a full collection or collection of the highest generation (2) is "
"run.  Not all items in some free lists may be freed due to the particular "
"implementation, in particular :class:`float`."
msgstr ""
"Las listas libres mantenidas para varios tipos incorporados son borradas "
"cada vez que se ejecuta una recolección completa o una recolección de la "
"generación más alta (2). No obstante, no todos los elementos de algunas "
"listas libres pueden ser liberados, particularmente :class:`float`, debido a "
"su implementación particular."

#: ../Doc/library/gc.rst:56
msgid ""
"Set the garbage collection debugging flags. Debugging information will be "
"written to ``sys.stderr``.  See below for a list of debugging flags which "
"can be combined using bit operations to control debugging."
msgstr ""
"Establece las flags de depuración para la recolección de basura. La "
"información de depuración se escribirá en ``sys.stderr``. A continuación se "
"puede consultar una lista con las flags de depuración disponibles, que se "
"pueden combinar mediante operaciones de bits para controlar la depuración."

#: ../Doc/library/gc.rst:63
msgid "Return the debugging flags currently set."
msgstr "Retorna las flags de depuración actualmente establecidas."

#: ../Doc/library/gc.rst:68
msgid ""
"Returns a list of all objects tracked by the collector, excluding the list "
"returned. If *generation* is not None, return only the objects tracked by "
"the collector that are in that generation."
msgstr ""
"Retorna una lista de todos los objetos rastreados por el recolector, "
"excluyendo la lista retornada. Si *generation* no es ``None``, retorna solo "
"los objetos rastreados por el recolector que pertenecen a esa generación."

#: ../Doc/library/gc.rst:72
msgid "New *generation* parameter."
msgstr "Se agregó el parámetro *generation*."

#: ../Doc/library/gc.rst:77
msgid ""
"Return a list of three per-generation dictionaries containing collection "
"statistics since interpreter start.  The number of keys may change in the "
"future, but currently each dictionary will contain the following items:"
msgstr ""
"Retorna una lista de tres diccionarios, uno por cada generación, que "
"contienen estadísticas de recolección desde el inicio del intérprete. El "
"número de claves puede cambiar en el futuro, pero actualmente cada "
"diccionario contendrá los siguientes elementos:"

#: ../Doc/library/gc.rst:82
msgid "``collections`` is the number of times this generation was collected;"
msgstr ""
"``collections`` es el número de veces que se recolectó esta generación;"

#: ../Doc/library/gc.rst:84
msgid ""
"``collected`` is the total number of objects collected inside this "
"generation;"
msgstr ""
"``collected`` es el número total de objetos recolectados dentro de esta "
"generación;"

#: ../Doc/library/gc.rst:87
msgid ""
"``uncollectable`` is the total number of objects which were found to be "
"uncollectable (and were therefore moved to the :data:`garbage` list) inside "
"this generation."
msgstr ""
"``uncollectable`` es el número total de objetos que se consideraron no "
"recolectables (y por lo tanto, se movieron a la lista :data:`garbage`) "
"dentro de esta generación."

#: ../Doc/library/gc.rst:96
msgid ""
"Set the garbage collection thresholds (the collection frequency). Setting "
"*threshold0* to zero disables collection."
msgstr ""
"Establece los umbrales de recolección (la frecuencia de recolección). Si se "
"establece *threshold0* en cero se deshabilita la recolección."

#: ../Doc/library/gc.rst:99
msgid ""
"The GC classifies objects into three generations depending on how many "
"collection sweeps they have survived.  New objects are placed in the "
"youngest generation (generation ``0``).  If an object survives a collection "
"it is moved into the next older generation.  Since generation ``2`` is the "
"oldest generation, objects in that generation remain there after a "
"collection.  In order to decide when to run, the collector keeps track of "
"the number object allocations and deallocations since the last collection.  "
"When the number of allocations minus the number of deallocations exceeds "
"*threshold0*, collection starts.  Initially only generation ``0`` is "
"examined.  If generation ``0`` has been examined more than *threshold1* "
"times since generation ``1`` has been examined, then generation ``1`` is "
"examined as well.  Similarly, *threshold2* controls the number of "
"collections of generation ``1`` before collecting generation ``2``."
msgstr ""
"El recolector de basura clasifica los objetos en tres generaciones "
"dependiendo de a cuántas pasadas de recolección hayan sobrevivido. Los "
"objetos nuevos se colocan en la generación más joven (generación ``0``). Si "
"un objeto sobrevive a una recolección, se traslada a la siguiente generación "
"con mayor antigüedad. Dado que la generación ``2`` es la generación más "
"antigua posible, los objetos de esta generación que no se recolecten "
"permanecen siempre allí después de una recolección. Para decidir cuándo debe "
"ejecutarse, el recolector realiza un seguimiento del número de alojamientos "
"y desalojamientos de objetos desde la última recolección. Cuando el número "
"de alojamientos menos el número de desalojamientos supera el *threshold0*, "
"comienza una recolección. Inicialmente, solo se examina la generación ``0``. "
"Si la generación ``0`` se ha examinado más de *threshold1* veces desde que "
"se examinó la generación ``1``, también se examina la generación ``1``. De "
"manera similar, *threshold2* controla el número de recolecciones de la "
"generación ``1`` antes de recolectar la generación ``2``."

#: ../Doc/library/gc.rst:116
msgid ""
"Return the current collection  counts as a tuple of ``(count0, count1, "
"count2)``."
msgstr ""
"Retorna los recuentos de la recolección actual como una tupla de la forma "
"``(count0, count1, count2)``."

#: ../Doc/library/gc.rst:122
msgid ""
"Return the current collection thresholds as a tuple of ``(threshold0, "
"threshold1, threshold2)``."
msgstr ""
"Retorna los umbrales de la recolección actual como una tupla de la forma "
"``(threshold0, threshold1, threshold2)``."

#: ../Doc/library/gc.rst:128
msgid ""
"Return the list of objects that directly refer to any of objs. This function "
"will only locate those containers which support garbage collection; "
"extension types which do refer to other objects but do not support garbage "
"collection will not be found."
msgstr ""
"Retorna la lista de objetos que referencian de forma directa a cualquiera de "
"*objs*. Esta función solo localizará aquellos contenedores que admitan la "
"recolección de basura; no se localizarán los tipos de extensión que "
"referencian a otros objetos pero que no admiten la recolección de basura."

#: ../Doc/library/gc.rst:133
msgid ""
"Note that objects which have already been dereferenced, but which live in "
"cycles and have not yet been collected by the garbage collector can be "
"listed among the resulting referrers.  To get only currently live objects, "
"call :func:`collect` before calling :func:`get_referrers`."
msgstr ""
"Téngase en cuenta que los objetos que ya se han desreferenciado, pero que "
"tienen referencias cíclicas y aún no han sido recolectados por el recolector "
"de basura pueden enumerarse entre las referencias resultantes. Para obtener "
"solo los objetos activos actualmente, llame a :func:`collect` antes de "
"llamar a :func:`get_referrers`."

#: ../Doc/library/gc.rst:138
msgid ""
"Care must be taken when using objects returned by :func:`get_referrers` "
"because some of them could still be under construction and hence in a "
"temporarily invalid state. Avoid using :func:`get_referrers` for any purpose "
"other than debugging."
msgstr ""
"Se debe tener un especial cuidado cuando se usan objetos retornados por :"
"func:`get_referrers` dado que algunos de ellos aún podrían estar en "
"construcción y por tanto en un estado temporalmente inválido. Debe evitarse "
"el uso de :func:`get_referrers` para cualquier propósito que no sea la "
"depuración."

#: ../Doc/library/gc.rst:146
msgid ""
"Return a list of objects directly referred to by any of the arguments. The "
"referents returned are those objects visited by the arguments' C-level :c:"
"member:`~PyTypeObject.tp_traverse` methods (if any), and may not be all "
"objects actually directly reachable.  :c:member:`~PyTypeObject.tp_traverse` "
"methods are supported only by objects that support garbage collection, and "
"are only required to visit objects that may be involved in a cycle.  So, for "
"example, if an integer is directly reachable from an argument, that integer "
"object may or may not appear in the result list."
msgstr ""
"Retorna una lista de objetos a los que hace referencia directamente "
"cualquiera de los argumentos. Las referencias retornadas son aquellos "
"objetos visitados por los métodos :c:member:`~PyTypeObject.tp_traverse` a "
"nivel de C de los argumentos (si los hay) y es posible que no todos los "
"objetos sean directamente accesibles realmente. Los métodos :c:member:"
"`~PyTypeObject.tp_traverse` solo son compatibles con los objetos que admiten "
"recolección de basura y solo se requieren para visitar objetos que pueden "
"estar involucrados en un ciclo de referencias. Lo que quiere decir que, por "
"ejemplo, si se puede acceder directamente a un número entero desde uno de "
"los argumento, ese objeto entero puede aparecer o no en la lista de "
"resultados."

#: ../Doc/library/gc.rst:157
msgid ""
"Returns ``True`` if the object is currently tracked by the garbage "
"collector, ``False`` otherwise.  As a general rule, instances of atomic "
"types aren't tracked and instances of non-atomic types (containers, user-"
"defined objects...) are.  However, some type-specific optimizations can be "
"present in order to suppress the garbage collector footprint of simple "
"instances (e.g. dicts containing only atomic keys and values)::"
msgstr ""
"Retorna ``True`` si el recolector de basura rastrea actualmente el objeto y "
"``False`` en caso contrario. Como regla general, las instancias de tipos "
"atómicos no se rastrean y las instancias de tipos no atómicos (contenedores, "
"objetos definidos por el usuario ...) sí. Sin embargo, algunas "
"optimizaciones específicas de tipo pueden estar presentes para suprimir el "
"impacto del recolector de basura en instancias simples (por ejemplo, "
"diccionarios que contienen solo claves y valores atómicos)::"

#: ../Doc/library/gc.rst:182
msgid ""
"Freeze all the objects tracked by gc - move them to a permanent generation "
"and ignore all the future collections. This can be used before a POSIX "
"fork() call to make the gc copy-on-write friendly or to speed up collection. "
"Also collection before a POSIX fork() call may free pages for future "
"allocation which can cause copy-on-write too so it's advised to disable gc "
"in parent process and freeze before fork and enable gc in child process."
msgstr ""
"Congela todos los objetos rastreados por el recolector de basura - los mueve "
"a una generación permanente e ignora todas las recolecciones futuras. Esto "
"se puede usar antes de una llamada a *fork()* de POSIX para hacer el "
"recolector de basura amigable con *copy-on-write* (\"copiar al escribir\") o "
"para acelerar la recolección. Además, la recolección antes de una llamada "
"*fork()* de POSIX puede liberar páginas para futuras asignaciones, lo que "
"también puede causar *copy-on-write*, por lo que se recomienda deshabilitar "
"el recolector de basura en el proceso principal, congelar antes de la "
"bifurcación y habilitarlo posteriormente en el proceso secundario."

#: ../Doc/library/gc.rst:194
msgid ""
"Unfreeze the objects in the permanent generation, put them back into the "
"oldest generation."
msgstr ""
"Descongela los objetos de la generación permanente y vuelve a colocarlos en "
"la generación más antigua."

#: ../Doc/library/gc.rst:202
msgid "Return the number of objects in the permanent generation."
msgstr "Retorna el número de objetos de la generación permanente."

#: ../Doc/library/gc.rst:207
msgid ""
"The following variables are provided for read-only access (you can mutate "
"the values but should not rebind them):"
msgstr ""
"Las siguientes variables se proporcionan para acceso de solo lectura (se "
"pueden mutar los valores pero no se deben vincular de nuevo):"

#: ../Doc/library/gc.rst:212
msgid ""
"A list of objects which the collector found to be unreachable but could not "
"be freed (uncollectable objects).  Starting with Python 3.4, this list "
"should be empty most of the time, except when using instances of C extension "
"types with a non-``NULL`` ``tp_del`` slot."
msgstr ""
"Una lista de objetos que el recolector consideró inaccesibles pero que no "
"pudieron ser liberados (objetos que no se pueden recolectar). A partir de "
"Python 3.4, esta lista debe estar vacía la mayor parte del tiempo, excepto "
"cuando se utilizan instancias de tipos de extensión C en los que la ranura "
"(*slot*) ``tp_del`` no sea ``NULL``."

#: ../Doc/library/gc.rst:217
msgid ""
"If :const:`DEBUG_SAVEALL` is set, then all unreachable objects will be added "
"to this list rather than freed."
msgstr ""
"Si se establece :const:`DEBUG_SAVEALL`, todos los objetos inaccesibles se "
"agregarán a esta lista en lugar de ser liberados."

#: ../Doc/library/gc.rst:220
msgid ""
"If this list is non-empty at :term:`interpreter shutdown`, a :exc:"
"`ResourceWarning` is emitted, which is silent by default.  If :const:"
"`DEBUG_UNCOLLECTABLE` is set, in addition all uncollectable objects are "
"printed."
msgstr ""
"Si la lista no está vacía en el momento del :term:`interpreter shutdown`, se "
"emite un :exc:`ResourceWarning`, que es silencioso de forma predeterminada. "
"Si se establece :const:`DEBUG_UNCOLLECTABLE`, además se imprimen todos los "
"objetos no recolectables."

#: ../Doc/library/gc.rst:226
msgid ""
"Following :pep:`442`, objects with a :meth:`__del__` method don't end up in :"
"attr:`gc.garbage` anymore."
msgstr ""
"Cumpliendo con :pep:`442`, los objetos con un método :meth:`__del__` ya no "
"terminan en :attr:`gc.garbage`."

#: ../Doc/library/gc.rst:232
msgid ""
"A list of callbacks that will be invoked by the garbage collector before and "
"after collection.  The callbacks will be called with two arguments, *phase* "
"and *info*."
msgstr ""
"Una lista de retrollamadas que el recolector de basura invocará antes y "
"después de la recolección. Las retrollamadas serán llamadas con dos "
"argumentos, *phase* e *info*."

#: ../Doc/library/gc.rst:236
msgid "*phase* can be one of two values:"
msgstr "*phase* puede tomar uno de estos valores:"

#: ../Doc/library/gc.rst:238
msgid "\"start\": The garbage collection is about to start."
msgstr "\"start\": la recolección de basura está a punto de comenzar."

#: ../Doc/library/gc.rst:240
msgid "\"stop\": The garbage collection has finished."
msgstr "\"stop\": la recolección de basura ha terminado."

#: ../Doc/library/gc.rst:242
msgid ""
"*info* is a dict providing more information for the callback.  The following "
"keys are currently defined:"
msgstr ""
"*info* es un diccionario que proporciona información adicional para la "
"retrollamada. Las siguientes claves están definidas actualmente:"

#: ../Doc/library/gc.rst:245
msgid "\"generation\": The oldest generation being collected."
msgstr "\"generation\": la generación más antigua que ha sido recolectada."

#: ../Doc/library/gc.rst:247
msgid ""
"\"collected\": When *phase* is \"stop\", the number of objects successfully "
"collected."
msgstr ""
"\"collected\": cuando *phase* es \"stop\", el número de objetos recolectados "
"satisfactoriamente."

#: ../Doc/library/gc.rst:250
msgid ""
"\"uncollectable\": When *phase* is \"stop\", the number of objects that "
"could not be collected and were put in :data:`garbage`."
msgstr ""
"\"uncollectable\": cuando *phase* es \"stop\", el número de objetos que no "
"pudieron ser recolectados y fueron ubicados en :data:`garbage`."

#: ../Doc/library/gc.rst:253
msgid ""
"Applications can add their own callbacks to this list.  The primary use "
"cases are:"
msgstr ""
"Las aplicaciones pueden agregar sus propias retrollamadas a esta lista. Los "
"principales casos de uso son:"

#: ../Doc/library/gc.rst:256
msgid ""
"Gathering statistics about garbage collection, such as how often various "
"generations are collected, and how long the collection takes."
msgstr ""
"Recopilar estadísticas sobre la recolección de basura, como la frecuencia "
"con la que se recolectan varias generaciones y cuánto tiempo lleva la "
"recolección."

#: ../Doc/library/gc.rst:260
msgid ""
"Allowing applications to identify and clear their own uncollectable types "
"when they appear in :data:`garbage`."
msgstr ""
"Permitir que las aplicaciones identifiquen y borren sus propios tipos no "
"recolectables cuando aparecen en :data:`garbage`."

#: ../Doc/library/gc.rst:266
msgid "The following constants are provided for use with :func:`set_debug`:"
msgstr ""
"Las siguientes constantes son proporcionadas para ser usadas con :func:"
"`set_debug`:"

#: ../Doc/library/gc.rst:271
msgid ""
"Print statistics during collection.  This information can be useful when "
"tuning the collection frequency."
msgstr ""
"Imprime estadísticas durante la recolección. Esta información puede resultar "
"útil para ajustar la frecuencia de recolección."

#: ../Doc/library/gc.rst:277
msgid "Print information on collectable objects found."
msgstr "Imprime información sobre los objetos recolectables encontrados."

#: ../Doc/library/gc.rst:282
msgid ""
"Print information of uncollectable objects found (objects which are not "
"reachable but cannot be freed by the collector).  These objects will be "
"added to the ``garbage`` list."
msgstr ""
"Imprime información sobre los objetos no recolectables encontrados (objetos "
"inaccesibles, pero que el recolector no puede liberar). Estos objetos se "
"agregarán a la lista ``garbage``."

#: ../Doc/library/gc.rst:286
msgid ""
"Also print the contents of the :data:`garbage` list at :term:`interpreter "
"shutdown`, if it isn't empty."
msgstr ""
"También imprime el contenido de la lista :data:`garbage` durante :term:"
"`interpreter shutdown`, si no está vacía."

#: ../Doc/library/gc.rst:292
msgid ""
"When set, all unreachable objects found will be appended to *garbage* rather "
"than being freed.  This can be useful for debugging a leaking program."
msgstr ""
"Cuando se establece, todos los objetos inaccesibles encontrados se agregarán "
"a *garbage* en lugar de ser liberados. Esto puede resultar útil para depurar "
"un programa con fugas de memoria."

#: ../Doc/library/gc.rst:298
msgid ""
"The debugging flags necessary for the collector to print information about a "
"leaking program (equal to ``DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE | "
"DEBUG_SAVEALL``)."
msgstr ""
"Las flags de depuración necesarias para que el recolector imprima "
"información sobre un programa con fugas de memoria (igual a "
"``DEBUG_COLLECTABLE | DEBUG_UNCOLLECTABLE | DEBUG_SAVEALL``)."

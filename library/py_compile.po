# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2021-08-04 21:51+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../Doc/library/py_compile.rst:2
msgid ":mod:`py_compile` --- Compile Python source files"
msgstr ":mod:`py_compile`` --- Compila archivos fuente Python"

#: ../Doc/library/py_compile.rst:10
msgid "**Source code:** :source:`Lib/py_compile.py`"
msgstr "**Código fuente** :source:`Lib/py_compile.py`"

#: ../Doc/library/py_compile.rst:16
msgid ""
"The :mod:`py_compile` module provides a function to generate a byte-code "
"file from a source file, and another function used when the module source "
"file is invoked as a script."
msgstr ""
"El módulo :mod:`py_compile` provee una función para generar un archivo de "
"código de bytes de un archivo fuente, y otra función usada cuando el módulo "
"archivo fuente es invocado como un script."

#: ../Doc/library/py_compile.rst:20
msgid ""
"Though not often needed, this function can be useful when installing modules "
"for shared use, especially if some of the users may not have permission to "
"write the byte-code cache files in the directory containing the source code."
msgstr ""
"Aunque no es necesario seguidamente, esta función puede ser útil cuando se "
"instalan módulos para uso compartido, especialmente si algunos de los "
"usuarios pueden no tener permisos para escribir el archivo caché de bytes en "
"el directorio conteniendo el código fuente."

#: ../Doc/library/py_compile.rst:27
msgid ""
"Exception raised when an error occurs while attempting to compile the file."
msgstr ""
"Cuando un error ocurre mientras se intenta compilar el archivo, se lanza una "
"excepción."

#: ../Doc/library/py_compile.rst:32
#, fuzzy
msgid ""
"Compile a source file to byte-code and write out the byte-code cache file. "
"The source code is loaded from the file named *file*.  The byte-code is "
"written to *cfile*, which defaults to the :pep:`3147`/:pep:`488` path, "
"ending in ``.pyc``. For example, if *file* is ``/foo/bar/baz.py`` *cfile* "
"will default to ``/foo/bar/__pycache__/baz.cpython-32.pyc`` for Python 3.2.  "
"If *dfile* is specified, it is used instead of *file* as the name of the "
"source file from which source lines are obtained for display in exception "
"tracebacks. If *doraise* is true, a :exc:`PyCompileError` is raised when an "
"error is encountered while compiling *file*. If *doraise* is false (the "
"default), an error string is written to ``sys.stderr``, but no exception is "
"raised.  This function returns the path to byte-compiled file, i.e. whatever "
"*cfile* value was used."
msgstr ""
"Compila un archivo fuente en código de bytes y escriba el archivo de caché "
"de código de bytes. El código fuente se carga desde el archivo llamado "
"*file*. El código de bytes se escribe en *cfile*, que por defecto es la "
"ruta :pep:`3147`/:pep:`488`, que termina en ``.pyc``. Por ejemplo, si *file* "
"es ``/foo/bar/baz.py`` *cfile* se establecerá de forma predeterminada en ``/"
"foo/bar/__pycache__/baz.cpython-32.pyc`` para Python 3.2. Si se especifica "
"*dfile*, se usa como el nombre del archivo de origen en los mensajes de "
"error en lugar de *file*. Si *doraise* es verdadero, se lanza un :exc:"
"`PyCompileError` cuando se encuentra un error al compilar *file*. Si "
"*doraise* es falso (el valor predeterminado), se escribe una cadena de error "
"en ``sys.stderr``, pero no se genera ninguna excepción. Esta función retorna "
"la ruta al archivo compilado por bytes, es decir, cualquier valor *cfile* "
"que se haya utilizado."

#: ../Doc/library/py_compile.rst:46
msgid ""
"The *doraise* and *quiet* arguments determine how errors are handled while "
"compiling file. If *quiet* is 0 or 1, and *doraise* is false, the default "
"behaviour is enabled: an error string is written to ``sys.stderr``, and the "
"function returns ``None`` instead of a path. If *doraise* is true, a :exc:"
"`PyCompileError` is raised instead. However if *quiet* is 2, no message is "
"written, and *doraise* has no effect."
msgstr ""
"Los argumentos *doraise* y *quiet* determinan cómo los errores son "
"gestionados mientras se compila el archivo. Si *quiet* es 0 o 1, y *doraise* "
"es falso, la conducta por defecto es habilitada: un error cadena de "
"caracteres es escrito a ``sys.stderr``, y la función retorna ``None`` en vez "
"de una ruta. Si *doraise* es verdadero, se lanzará un :exc:`PyCompileError`. "
"Sin embargo si *quiet* es 2, ningún mensaje es escrito y *doraise* no tiene "
"efecto."

#: ../Doc/library/py_compile.rst:53
msgid ""
"If the path that *cfile* becomes (either explicitly specified or computed) "
"is a symlink or non-regular file, :exc:`FileExistsError` will be raised. "
"This is to act as a warning that import will turn those paths into regular "
"files if it is allowed to write byte-compiled files to those paths. This is "
"a side-effect of import using file renaming to place the final byte-compiled "
"file into place to prevent concurrent file writing issues."
msgstr ""
"Si la ruta que *cfile* se convierte (sea especificada explícitamente o "
"computada) es un enlace simbólico o archivo no regular, se lanzará :exc:"
"`FileExistsError`. Esto es para actuar como una advertencia que la "
"importación convertirá esas rutas en archivos regulares si ésta tiene "
"permitido escribir archivos compilados en bytes a esas rutas. Este es un "
"efecto secundario de importar usando el renombramiento de archivos para "
"colocar el archivo de bytes compilado final en el lugar para prevenir "
"problemas de escritura en archivos simultáneos."

#: ../Doc/library/py_compile.rst:60
msgid ""
"*optimize* controls the optimization level and is passed to the built-in :"
"func:`compile` function.  The default of ``-1`` selects the optimization "
"level of the current interpreter."
msgstr ""
"*optimize* controla el nivel de optimización y si es pasado a la función "
"construida :func:`compile`.  El predeterminado de ``-1`` selecciona el nivel "
"de optimización del intérprete actual."

#: ../Doc/library/py_compile.rst:64
msgid ""
"*invalidation_mode* should be a member of the :class:`PycInvalidationMode` "
"enum and controls how the generated bytecode cache is invalidated at "
"runtime.  The default is :attr:`PycInvalidationMode.CHECKED_HASH` if the :"
"envvar:`SOURCE_DATE_EPOCH` environment variable is set, otherwise the "
"default is :attr:`PycInvalidationMode.TIMESTAMP`."
msgstr ""
"*invalidation_mode* debería ser un miembro del enum :class:"
"`PycInvalidationMode` y controla cómo el caché de código de bytes generado "
"es invalidado en el tiempo de ejecución.  El predeterminado es :attr:"
"`PycInvalidationMode.CHECKED_HASH` si la variable de entorno :envvar:"
"`SOURCE_DATE_EPOCH` está establecida, de otra manera el predeterminado es :"
"attr:`PycInvalidationMode.TIMESTAMP`."

#: ../Doc/library/py_compile.rst:70
msgid ""
"Changed default value of *cfile* to be :PEP:`3147`-compliant.  Previous "
"default was *file* + ``'c'`` (``'o'`` if optimization was enabled). Also "
"added the *optimize* parameter."
msgstr ""
"Cambiado el valor por defecto de *cfile* para que cumpla :PEP:`3147`. El por "
"defecto anterior era *file* + ``'c'`` (``'o'`` si la optimización estaba "
"habilitada). También agregado el parámetro *optimize*."

#: ../Doc/library/py_compile.rst:75
msgid ""
"Changed code to use :mod:`importlib` for the byte-code cache file writing. "
"This means file creation/writing semantics now match what :mod:`importlib` "
"does, e.g. permissions, write-and-move semantics, etc. Also added the caveat "
"that :exc:`FileExistsError` is raised if *cfile* is a symlink or non-regular "
"file."
msgstr ""
"Se cambió el código para usar :mod:`importlib` para la escritura del archivo "
"almacenado de código de bytes. Esto significa que la semántica de la "
"creación/escritura del archivo ahora coincide con lo que :mod:`importlib` "
"hace, por ejemplo permisos, semántica de escribir-y-mover, etc. Además se "
"agregó la consideración de que :exc:`FileExistsError` es lanzado si *cfile* "
"es un enlace simbólico o un archivo no regular."

#: ../Doc/library/py_compile.rst:82
msgid ""
"The *invalidation_mode* parameter was added as specified in :pep:`552`. If "
"the :envvar:`SOURCE_DATE_EPOCH` environment variable is set, "
"*invalidation_mode* will be forced to :attr:`PycInvalidationMode."
"CHECKED_HASH`."
msgstr ""
"El parámetro *invalidation_mode* fue agregado como se especificó en :pep:"
"`552`. Si la variable de entorno :envvar:`SOURCE_DATE_EPOCH` se establece, "
"*invalidation_mode* será forzada a :attr:`PycInvalidationMode.CHECKED_HASH`."

#: ../Doc/library/py_compile.rst:88
msgid ""
"The :envvar:`SOURCE_DATE_EPOCH` environment variable no longer overrides the "
"value of the *invalidation_mode* argument, and determines its default value "
"instead."
msgstr ""
"La variable de entorno :envvar:`SOURCE_DATE_EPOCH` ya no sobreescribe el "
"valor del argumento *invalidation_mode*, y en vez de eso determina su valor "
"por defecto."

#: ../Doc/library/py_compile.rst:93
msgid "The *quiet* parameter was added."
msgstr "El parámetro *quiet* fue agregado."

#: ../Doc/library/py_compile.rst:99
msgid ""
"A enumeration of possible methods the interpreter can use to determine "
"whether a bytecode file is up to date with a source file. The ``.pyc`` file "
"indicates the desired invalidation mode in its header. See :ref:`pyc-"
"invalidation` for more information on how Python invalidates ``.pyc`` files "
"at runtime."
msgstr ""
"Una enumeración de métodos posibles que el intérprete puede usar para "
"determinar si un archivo de bytes está actualizado con un archivo fuente. El "
"archivo ``.pyc`` indica el modo invalidación deseado en su encabezado. Ver :"
"ref:`pyc-invalidation` para más información en cómo Python invalida archivos "
"`.pyc` en tiempo de ejecución."

#: ../Doc/library/py_compile.rst:109
msgid ""
"The ``.pyc`` file includes the timestamp and size of the source file, which "
"Python will compare against the metadata of the source file at runtime to "
"determine if the ``.pyc`` file needs to be regenerated."
msgstr ""
"El archivo ``.pyc`` incluye una marca de tiempo y tamaño del archivo fuente, "
"el cual Python comparará contra los metadatos del archivo fuente durante el "
"tiempo de ejecución para determinar si el archivo ``.pyc`` necesita ser "
"regenerado."

#: ../Doc/library/py_compile.rst:115
msgid ""
"The ``.pyc`` file includes a hash of the source file content, which Python "
"will compare against the source at runtime to determine if the ``.pyc`` file "
"needs to be regenerated."
msgstr ""
"El archivo ``.pyc`` incluye un hash del contenido del archivo fuente, el "
"cual Python comparará contra la fuente durante el tiempo de ejecución para "
"determinar si el archivo ``.pyc`` necesita ser regenerado."

#: ../Doc/library/py_compile.rst:121
msgid ""
"Like :attr:`CHECKED_HASH`, the ``.pyc`` file includes a hash of the source "
"file content. However, Python will at runtime assume the ``.pyc`` file is up "
"to date and not validate the ``.pyc`` against the source file at all."
msgstr ""
"Como :attr:`CHECKED_HASH`, el archivo ``.pyc`` incluye un has del contenido "
"del archivo fuente. Sin embargo, Python asumirá durante el tiempo de "
"ejecución que el archivo ``.pyc`` está actualizado y no validará el ``.pyc`` "
"contra el archivo fuente en lo absoluto."

#: ../Doc/library/py_compile.rst:125
msgid ""
"This option is useful when the ``.pycs`` are kept up to date by some system "
"external to Python like a build system."
msgstr ""
"Esta opción es útil cuando los ``.pucs`` se mantienen actualizados al día "
"por algún sistema externo a Python como un sistema de compilación."

#: ../Doc/library/py_compile.rst:130
msgid "Command-Line Interface"
msgstr "Interfaz de línea de comandos"

#: ../Doc/library/py_compile.rst:132
msgid ""
"This module can be invoked as a script to compile several source files.  The "
"files named in *filenames* are compiled and the resulting bytecode is cached "
"in the normal manner.  This program does not search a directory structure to "
"locate source files; it only compiles files named explicitly. The exit "
"status is nonzero if one of the files could not be compiled."
msgstr ""
"Este módulo puede invocarse como un script para compilar varios archivos "
"fuente. Los archivos nombrados en *filenames* se compilan y el código de "
"bytes resultante se almacena en caché de la manera normal. Este programa no "
"busca en una estructura de directorio para localizar archivos fuente; solo "
"compila archivos nombrados explícitamente. El estado de salida es distinto "
"de cero si uno de los archivos no se pudo compilar."

#: ../Doc/library/py_compile.rst:144
msgid ""
"Positional arguments are files to compile.  If ``-`` is the only parameter, "
"the list of files is taken from standard input."
msgstr ""
"Los argumentos posicionales son archivos para compilar. Si ``-`` es el único "
"parámetro, la lista de archivos se toma de la entrada estándar."

#: ../Doc/library/py_compile.rst:149
msgid "Suppress errors output."
msgstr "Suprime la salida de errores."

#: ../Doc/library/py_compile.rst:151
msgid "Added support for ``-``."
msgstr "Agregado soporte para ``-``."

#: ../Doc/library/py_compile.rst:154
msgid "Added support for :option:`-q`."
msgstr "Agregado soporte para :option:`-q`."

#: ../Doc/library/py_compile.rst:160
msgid "Module :mod:`compileall`"
msgstr "Módulo :mod:`compileall`"

#: ../Doc/library/py_compile.rst:161
msgid "Utilities to compile all Python source files in a directory tree."
msgstr ""
"Utilidades para compilar todos los archivos fuente Python en el árbol del "
"directorio."

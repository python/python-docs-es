# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"PO-Revision-Date: 2020-06-07 22:35+0200\n"
"Last-Translator: \n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_AR\n"
"X-Generator: Poedit 2.2.1\n"

#: ../Doc/library/readline.rst:2
msgid ":mod:`readline` --- GNU readline interface"
msgstr ":mod:`readline` --- Interfaz readline de GNU"

#: ../Doc/library/readline.rst:12
msgid ""
"The :mod:`readline` module defines a number of functions to facilitate "
"completion and reading/writing of history files from the Python interpreter. "
"This module can be used directly, or via the :mod:`rlcompleter` module, "
"which supports completion of Python identifiers at the interactive prompt.  "
"Settings made using  this module affect the behaviour of both the "
"interpreter's interactive prompt  and the prompts offered by the built-in :"
"func:`input` function."
msgstr ""
"El módulo :mod:`readline` define una serie de funciones para facilitar la "
"finalización y lectura/escritura de archivos de historial desde el "
"intérprete de Python. Este módulo se puede usar directamente o mediante el "
"módulo :mod:`rlcompleter`, que administra la finalización de identificadores "
"de Python en la solicitud interactiva. Los ajustes realizados con este "
"módulo afectan el comportamiento tanto del aviso interactivo del intérprete "
"como de los avisos ofrecidos por la función incorporada :func:`input`."

#: ../Doc/library/readline.rst:20
msgid ""
"Readline keybindings may be configured via an initialization file, typically "
"``.inputrc`` in your home directory.  See `Readline Init File <https://"
"tiswww.cwru.edu/php/chet/readline/rluserman.html#SEC9>`_ in the GNU Readline "
"manual for information about the format and allowable constructs of that "
"file, and the capabilities of the Readline library in general."
msgstr ""
"Las combinaciones de teclas de Readline se pueden configurar mediante un "
"archivo de inicialización, generalmente ``.inputrc`` en su directorio de "
"inicio. Consulte `Readline Init File <https://tiswww.cwru.edu/php/chet/"
"readline/rluserman.html#SEC9>`_ en el manual de GNU Readline para obtener "
"información sobre el formato y las construcciones permitidas de ese archivo, "
"y las capacidades de la biblioteca Readline en general."

#: ../Doc/library/readline.rst:29
msgid ""
"The underlying Readline library API may be implemented by the ``libedit`` "
"library instead of GNU readline. On macOS the :mod:`readline` module detects "
"which library is being used at run time."
msgstr ""
"La API de la biblioteca utilizada por Readline puede implementarse mediante "
"la biblioteca ``libedit`` en lugar de readline de GNU. En macOS, el módulo :"
"mod:`readline` detecta qué biblioteca se está utilizando en tiempo de "
"ejecución."

#: ../Doc/library/readline.rst:34
msgid ""
"The configuration file for ``libedit`` is different from that of GNU "
"readline. If you programmatically load configuration strings you can check "
"for the text \"libedit\" in :const:`readline.__doc__` to differentiate "
"between GNU readline and libedit."
msgstr ""
"El archivo de configuración para ``libedit`` es diferente del readline de "
"GNU. Si carga cadenas de caracteres de configuración mediante programación, "
"puede verificar el texto \"libedit\" en :const:`readline.__ doc__` para "
"diferenciar entre readline de GNU y ``libedit``."

#: ../Doc/library/readline.rst:39
msgid ""
"If you use *editline*/``libedit`` readline emulation on macOS, the "
"initialization file located in your home directory is named ``.editrc``. For "
"example, the following content in ``~/.editrc`` will turn ON *vi* "
"keybindings and TAB completion::"
msgstr ""
"Si usa emulación readline *editline*/``libedit`` en macOS, el archivo de "
"inicialización ubicado en su directorio de inicio se llama ``.editrc``. Por "
"ejemplo, el siguiente contenido en ``~/.editrc`` activa atajos del teclado "
"de *vi* y completado con TAB::"

#: ../Doc/library/readline.rst:49
msgid "Init file"
msgstr "Archivo de inicio"

#: ../Doc/library/readline.rst:51
msgid "The following functions relate to the init file and user configuration:"
msgstr ""
"Las siguientes funciones se relacionan con el archivo de inicio y la "
"configuración del usuario:"

#: ../Doc/library/readline.rst:56
msgid ""
"Execute the init line provided in the *string* argument. This calls :c:func:"
"`rl_parse_and_bind` in the underlying library."
msgstr ""
"Ejecuta la línea de inicio proporcionada en el argumento *string*. Esto "
"llama a la función :c:func:`rl_parse_and_bind` de la biblioteca subyacente."

#: ../Doc/library/readline.rst:62
msgid ""
"Execute a readline initialization file. The default filename is the last "
"filename used. This calls :c:func:`rl_read_init_file` in the underlying "
"library."
msgstr ""
"Ejecuta un archivo de inicialización readline. El nombre de archivo "
"predeterminado es el último nombre de archivo utilizado. Esto llama a la "
"función :c:func:`rl_read_init_file` de la biblioteca subyacente."

#: ../Doc/library/readline.rst:67
msgid "Line buffer"
msgstr "Búfer de línea"

#: ../Doc/library/readline.rst:69
msgid "The following functions operate on the line buffer:"
msgstr "Las siguientes funciones operan en el búfer de línea:"

#: ../Doc/library/readline.rst:74
msgid ""
"Return the current contents of the line buffer (:c:data:`rl_line_buffer` in "
"the underlying library)."
msgstr ""
"Retorna el contenido actual del búfer de línea (:c:data:`rl_line_buffer` en "
"la biblioteca subyacente)."

#: ../Doc/library/readline.rst:80
msgid ""
"Insert text into the line buffer at the cursor position.  This calls :c:func:"
"`rl_insert_text` in the underlying library, but ignores the return value."
msgstr ""
"Inserta texto en el búfer de línea en la posición del cursor. Esto llama a "
"la función :c:func:`rl_insert_text` de la biblioteca subyacente, pero ignora "
"el valor de retorno."

#: ../Doc/library/readline.rst:87
msgid ""
"Change what's displayed on the screen to reflect the current contents of the "
"line buffer.  This calls :c:func:`rl_redisplay` in the underlying library."
msgstr ""
"Cambia lo que se muestra en la pantalla para reflejar el contenido actual "
"del búfer de línea. Esto llama a la función :c:func:`rl_redisplay` de la "
"biblioteca subyacente."

#: ../Doc/library/readline.rst:92
msgid "History file"
msgstr "Archivo de historial"

#: ../Doc/library/readline.rst:94
msgid "The following functions operate on a history file:"
msgstr "Las siguientes funciones operan en un archivo de historial:"

#: ../Doc/library/readline.rst:99
msgid ""
"Load a readline history file, and append it to the history list. The default "
"filename is :file:`~/.history`.  This calls :c:func:`read_history` in the "
"underlying library."
msgstr ""
"Carga un archivo de historial readline y lo adjunta a la lista de historial. "
"El nombre de archivo predeterminado es :file:`~/.history`. Esto llama a la "
"función :c:func:`read_history` de la biblioteca subyacente."

#: ../Doc/library/readline.rst:106
msgid ""
"Save the history list to a readline history file, overwriting any existing "
"file.  The default filename is :file:`~/.history`.  This calls :c:func:"
"`write_history` in the underlying library."
msgstr ""
"Guarda la lista de historial en un archivo de historial readline, "
"sobrescribiendo cualquier archivo existente. El nombre de archivo "
"predeterminado es :file:`~/.history`. Esto llama a la función :c:func:"
"`write_history` de la biblioteca subyacente."

#: ../Doc/library/readline.rst:113
msgid ""
"Append the last *nelements* items of history to a file.  The default "
"filename is :file:`~/.history`.  The file must already exist.  This calls :c:"
"func:`append_history` in the underlying library.  This function only exists "
"if Python was compiled for a version of the library that supports it."
msgstr ""
"Agrega los últimos *nelements* del historial a un archivo. El nombre de "
"archivo predeterminado es :file:`~/.history`. El archivo ya debe existir. "
"Esto llama a la función :c:func:`append_history` de la biblioteca "
"subyacente. Esta función solo existe si Python se compiló para una versión "
"de la biblioteca que lo admita."

#: ../Doc/library/readline.rst:125
msgid ""
"Set or return the desired number of lines to save in the history file. The :"
"func:`write_history_file` function uses this value to truncate the history "
"file, by calling :c:func:`history_truncate_file` in the underlying library.  "
"Negative values imply unlimited history file size."
msgstr ""
"Establece o retorna el número deseado de líneas para guardar en el archivo "
"de historial. La función :func:`write_history_file` usa este valor para "
"truncar el archivo de historial, llamando a la función :c:func:"
"`history_truncate_file` en la biblioteca subyacente. Los valores negativos "
"implican un tamaño de archivo de historial ilimitado."

#: ../Doc/library/readline.rst:133
msgid "History list"
msgstr "Lista del historial"

#: ../Doc/library/readline.rst:135
msgid "The following functions operate on a global history list:"
msgstr "Las siguientes funciones operan en una lista de historial global:"

#: ../Doc/library/readline.rst:140
msgid ""
"Clear the current history.  This calls :c:func:`clear_history` in the "
"underlying library.  The Python function only exists if Python was compiled "
"for a version of the library that supports it."
msgstr ""
"Borra el historial actual. Esto llama a la función :c:func:`clear_history` "
"en la biblioteca subyacente. La función de Python solo existe si Python se "
"compiló para una versión de la biblioteca que lo admita."

#: ../Doc/library/readline.rst:147
msgid ""
"Return the number of items currently in the history.  (This is different "
"from :func:`get_history_length`, which returns the maximum number of lines "
"that will be written to a history file.)"
msgstr ""
"Retorna el número de elementos actuales en el historial. (Esto es diferente "
"de la función :func:`get_history_length`, que retorna el número máximo de "
"líneas que se escribirán en un archivo de historial)."

#: ../Doc/library/readline.rst:154
msgid ""
"Return the current contents of history item at *index*.  The item index is "
"one-based.  This calls :c:func:`history_get` in the underlying library."
msgstr ""
"Retorna el contenido actual de historial en *index*. El índice comienza en "
"1. Esto llama a la función :c:func:`history_get` en la biblioteca subyacente."

#: ../Doc/library/readline.rst:160
msgid ""
"Remove history item specified by its position from the history. The position "
"is zero-based.  This calls :c:func:`remove_history` in the underlying "
"library."
msgstr ""
"Elimina el objeto del historial definido por su posición del historial. La "
"posición comienza en cero. Esto llama a la función :c:func:`remove_history` "
"en la biblioteca subyacente."

#: ../Doc/library/readline.rst:167
msgid ""
"Replace history item specified by its position with *line*. The position is "
"zero-based.  This calls :c:func:`replace_history_entry` in the underlying "
"library."
msgstr ""
"Reemplaza el elemento del historial especificado por su posición con *line*. "
"La posición comienza en cero. Esto llama a la función :c:func:"
"`replace_history_entry` en la biblioteca subyacente."

#: ../Doc/library/readline.rst:174
msgid ""
"Append *line* to the history buffer, as if it was the last line typed. This "
"calls :c:func:`add_history` in the underlying library."
msgstr ""
"Agrega *line* al búfer de historial, como si fuera la última línea escrita. "
"Esto llama a la función :c:func:`add_history` en la biblioteca subyacente."

#: ../Doc/library/readline.rst:180
msgid ""
"Enable or disable automatic calls to :c:func:`add_history` when reading "
"input via readline.  The *enabled* argument should be a Boolean value that "
"when true, enables auto history, and that when false, disables auto history."
msgstr ""
"Habilita o deshabilita las llamadas automáticas a la función :c:func:"
"`add_history` al leer la entrada a través de readline. El argumento "
"*enabled* debe ser un valor booleano que cuando es verdadero, habilita el "
"historial automático, y que cuando es falso, desactiva el historial "
"automático."

#: ../Doc/library/readline.rst:193
msgid "Startup hooks"
msgstr "Ganchos (*hooks*) de inicialización"

#: ../Doc/library/readline.rst:198
msgid ""
"Set or remove the function invoked by the :c:data:`rl_startup_hook` callback "
"of the underlying library.  If *function* is specified, it will be used as "
"the new hook function; if omitted or ``None``, any function already "
"installed is removed.  The hook is called with no arguments just before "
"readline prints the first prompt."
msgstr ""
"Establece o elimina la función invocada por la función de retorno :c:data:"
"`rl_startup_hook` de la biblioteca subyacente. Si se especifica *function*, "
"se utilizará como la nueva función de enlace; Si se omite o es ``None``, se "
"elimina cualquier función ya instalada. La función de devolución de llamada "
"se llama sin argumentos justo antes de que readline muestre el primer "
"símbolo del sistema."

#: ../Doc/library/readline.rst:207
msgid ""
"Set or remove the function invoked by the :c:data:`rl_pre_input_hook` "
"callback of the underlying library.  If *function* is specified, it will be "
"used as the new hook function; if omitted or ``None``, any function already "
"installed is removed.  The hook is called with no arguments after the first "
"prompt has been printed and just before readline starts reading input "
"characters.  This function only exists if Python was compiled for a version "
"of the library that supports it."
msgstr ""
"Establece o elimina la función invocada por la función de retorno :c:data:"
"`rl_pre_input_hook` de la biblioteca subyacente. Si se especifica "
"*function*, se utilizará como la nueva función de devolución de llamada; Si "
"se omite o es ``None``, se elimina cualquier función ya instalada. La "
"función de devolución de llamada se llama sin argumentos después de que se "
"haya visualizado el primer símbolo del sistema y justo antes de que readline "
"comience a leer los caracteres ingresados. Esta función solo existe si "
"Python se ha compilado para una versión de la biblioteca que lo admite."

#: ../Doc/library/readline.rst:217
msgid "Completion"
msgstr "Terminación"

#: ../Doc/library/readline.rst:219
msgid ""
"The following functions relate to implementing a custom word completion "
"function.  This is typically operated by the Tab key, and can suggest and "
"automatically complete a word being typed.  By default, Readline is set up "
"to be used by :mod:`rlcompleter` to complete Python identifiers for the "
"interactive interpreter.  If the :mod:`readline` module is to be used with a "
"custom completer, a different set of word delimiters should be set."
msgstr ""
"Las siguientes funciones se relacionan con la implementación de una función "
"de finalización de palabra personalizada. Esto típicamente es operado por la "
"tecla *Tab* y puede sugerir y completar automáticamente una palabra que se "
"está escribiendo. Por defecto, Readline está configurado para ser utilizado "
"por :mod:`rlcompleter` para completar los identificadores de Python para el "
"intérprete interactivo. Si el módulo :mod:`readline` se va a utilizar con "
"una terminación específica, se debe definir un conjunto de palabras "
"delimitadoras."

#: ../Doc/library/readline.rst:229
msgid ""
"Set or remove the completer function.  If *function* is specified, it will "
"be used as the new completer function; if omitted or ``None``, any completer "
"function already installed is removed.  The completer function is called as "
"``function(text, state)``, for *state* in ``0``, ``1``, ``2``, ..., until it "
"returns a non-string value.  It should return the next possible completion "
"starting with *text*."
msgstr ""
"Establece o elimina la función de finalización. Si se especifica *function*, "
"se usará como la nueva función de finalización; Si se omite o es ``None``, "
"se elimina cualquier función de finalización ya instalada. La función "
"completa se llama como ``function(text, state)``, para *state* en ``0``, "
"``1``, ``2``, ..., hasta que retorna un valor que no es una cadena de "
"caracteres. Debería retornar las siguientes terminaciones posibles "
"comenzando con *text*."

#: ../Doc/library/readline.rst:236
msgid ""
"The installed completer function is invoked by the *entry_func* callback "
"passed to :c:func:`rl_completion_matches` in the underlying library. The "
"*text* string comes from the first parameter to the :c:data:"
"`rl_attempted_completion_function` callback of the underlying library."
msgstr ""
"La función de finalización instalada es invocada por la función de retorno "
"*entry_func* que se pasa a :c:func:`rl_completion_matches` en la biblioteca "
"subyacente. La cadena de texto va desde el primer parámetro a la función de "
"retorno :c:data:`rl_attempted_completion_function` de la biblioteca "
"subyacente."

#: ../Doc/library/readline.rst:245
msgid ""
"Get the completer function, or ``None`` if no completer function has been "
"set."
msgstr ""
"Obtiene la función de finalización o ``None`` si no se ha definido ninguna "
"función de finalización."

#: ../Doc/library/readline.rst:250
msgid ""
"Get the type of completion being attempted.  This returns the :c:data:"
"`rl_completion_type` variable in the underlying library as an integer."
msgstr ""
"Obtiene el tipo de finalización que se está intentando. Esto retorna la "
"variable :c:data:`rl_completion_type` en la biblioteca subyacente como un "
"entero."

#: ../Doc/library/readline.rst:258
msgid ""
"Get the beginning or ending index of the completion scope. These indexes are "
"the *start* and *end* arguments passed to the :c:data:"
"`rl_attempted_completion_function` callback of the underlying library."
msgstr ""
"Obtiene el índice inicial o final de un contexto de finalización. Estos "
"índices son los argumentos *start* y *end* pasados ​​a la función de retorno :"
"c:data:`rl_attempted_completion_function` de la biblioteca subyacente."

#: ../Doc/library/readline.rst:267
msgid ""
"Set or get the word delimiters for completion.  These determine the start of "
"the word to be considered for completion (the completion scope). These "
"functions access the :c:data:`rl_completer_word_break_characters` variable "
"in the underlying library."
msgstr ""
"Define o recupera palabras delimitadoras para completar. Estos determinan el "
"comienzo de la palabra que se considerará para su finalización (el contexto "
"de finalización). Estas funciones acceden a la variable :c:data:"
"`rl_completer_word_break_characters` desde la biblioteca subyacente."

#: ../Doc/library/readline.rst:275
msgid ""
"Set or remove the completion display function.  If *function* is specified, "
"it will be used as the new completion display function; if omitted or "
"``None``, any completion display function already installed is removed.  "
"This sets or clears the :c:data:`rl_completion_display_matches_hook` "
"callback in the underlying library.  The completion display function is "
"called as ``function(substitution, [matches], longest_match_length)`` once "
"each time matches need to be displayed."
msgstr ""
"Establece o elimina la función de visualización de finalización. Si se "
"especifica *function*, se utilizará como una nueva función de visualización "
"de finalización; si se omite o es ``None``, se elimina cualquier función de "
"finalización ya instalada. Esto establece o elimina la función de retorno :c:"
"data:`rl_completion_display_matches_hook` de la biblioteca subyacente. La "
"función de visualización de finalización se llama tal como la "
"``function(substitution, [matches], longest_match_length)`` solo una vez "
"cuando se muestran las coincidencias."

#: ../Doc/library/readline.rst:288
msgid "Example"
msgstr "Ejemplo"

#: ../Doc/library/readline.rst:290
msgid ""
"The following example demonstrates how to use the :mod:`readline` module's "
"history reading and writing functions to automatically load and save a "
"history file named :file:`.python_history` from the user's home directory.  "
"The code below would normally be executed automatically during interactive "
"sessions from the user's :envvar:`PYTHONSTARTUP` file. ::"
msgstr ""
"El siguiente ejemplo muestra cómo usar las funciones de lectura y escritura "
"del historial del módulo :mod:`readline` para cargar o guardar "
"automáticamente un archivo de historial llamado :file:`.python_history` "
"desde el directorio de inicio del usuario. El siguiente código normalmente "
"debe ejecutarse automáticamente durante una sesión interactiva desde el "
"archivo de usuario :envvar:`PYTHONSTARTUP`. ::"

#: ../Doc/library/readline.rst:310
msgid ""
"This code is actually automatically run when Python is run in :ref:"
"`interactive mode <tut-interactive>` (see :ref:`rlcompleter-config`)."
msgstr ""
"Este código se ejecuta automáticamente cuando Python se ejecuta en :ref:"
"`modo interactivo <tut-interactive>` (ver :ref:`rlcompleter-config`)."

#: ../Doc/library/readline.rst:313
msgid ""
"The following example achieves the same goal but supports concurrent "
"interactive sessions, by only appending the new history. ::"
msgstr ""
"El siguiente ejemplo logra el mismo objetivo pero administra sesiones "
"interactivas concurrentes, agregando solo el nuevo historial. ::"

#: ../Doc/library/readline.rst:334
msgid ""
"The following example extends the :class:`code.InteractiveConsole` class to "
"support history save/restore. ::"
msgstr ""
"El siguiente ejemplo amplía la clase :class:`code.InteractiveConsole` para "
"administrar el guardado/restauración del historial. ::"

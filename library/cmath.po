# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-07-25 20:23+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es_AR\n"
"X-Generator: Poedit 2.3.1\n"

#: ../Doc/library/cmath.rst:2
msgid ":mod:`cmath` --- Mathematical functions for complex numbers"
msgstr ":mod:`cmath` -- Función matemática para números complejos"

#: ../Doc/library/cmath.rst:9
msgid ""
"This module provides access to mathematical functions for complex numbers.  "
"The functions in this module accept integers, floating-point numbers or "
"complex numbers as arguments. They will also accept any Python object that "
"has either a :meth:`__complex__` or a :meth:`__float__` method: these "
"methods are used to convert the object to a complex or floating-point "
"number, respectively, and the function is then applied to the result of the "
"conversion."
msgstr ""
"Este modulo proporciona acceso a funciones matemáticas para números "
"complejos. Las funciones de este módulo aceptan números enteros, números de "
"coma flotante o números complejos como argumentos. Aceptarán además "
"cualquier objeto de Python que tenga tanto un método :meth:`__complex__`  o "
"un método :meth:`__float__` : estos métodos son usados para convertir el "
"objeto a un número complejo o de coma flotante, respectivamente, y la "
"función es entonces aplicada al resultado de la conversión."

#: ../Doc/library/cmath.rst:18
msgid ""
"On platforms with hardware and system-level support for signed zeros, "
"functions involving branch cuts are continuous on *both* sides of the branch "
"cut: the sign of the zero distinguishes one side of the branch cut from the "
"other.  On platforms that do not support signed zeros the continuity is as "
"specified below."
msgstr ""
"En sistemas con hardware y soporte del sistema para ceros con signo, las "
"funciones que involucran tramos son continuas en *ambos* lados del tramo: el "
"signo de cero distingue un lado del tramo del otro. En plataformas que no "
"soportan el cero con signo la continuidad es especificada abajo."

#: ../Doc/library/cmath.rst:26
msgid "Conversions to and from polar coordinates"
msgstr "Conversión a y desde coordenadas polares"

#: ../Doc/library/cmath.rst:28
msgid ""
"A Python complex number ``z`` is stored internally using *rectangular* or "
"*Cartesian* coordinates.  It is completely determined by its *real part* ``z."
"real`` and its *imaginary part* ``z.imag``.  In other words::"
msgstr ""
"Un numero complejo de Python ``z`` se almacena internamente usando "
"coordenadas *rectangulares* o *cartesianas*. Esta determinado completamente "
"por su *parte real* ``z.real``y su *parte imaginaria*``z.imag``. Dicho de "
"otra forma::"

#: ../Doc/library/cmath.rst:35
msgid ""
"*Polar coordinates* give an alternative way to represent a complex number.  "
"In polar coordinates, a complex number *z* is defined by the modulus *r* and "
"the phase angle *phi*. The modulus *r* is the distance from *z* to the "
"origin, while the phase *phi* is the counterclockwise angle, measured in "
"radians, from the positive x-axis to the line segment that joins the origin "
"to *z*."
msgstr ""
"*Las coordenadas polares* dan una alternativa a la representación de números "
"complejos. En las coordenadas polares, un número complejo *z* se define por "
"los módulos *r* y el ángulo de fase *phi*. El módulo *r* es la distancia "
"desde *z* hasta el origen, mientras que la fase *phi* es el ángulo que va en "
"contra de las agujas del reloj, medido en radianes, desde el eje positivo de "
"las X hasta el segmento de linea que une el origen con *z*."

#: ../Doc/library/cmath.rst:42
msgid ""
"The following functions can be used to convert from the native rectangular "
"coordinates to polar coordinates and back."
msgstr ""
"Las siguientes funciones pueden ser usadas para convertir desde coordenadas "
"rectangulares nativas hasta coordenadas polares y viceversa."

#: ../Doc/library/cmath.rst:47
msgid ""
"Return the phase of *x* (also known as the *argument* of *x*), as a float.  "
"``phase(x)`` is equivalent to ``math.atan2(x.imag, x.real)``.  The result "
"lies in the range [-\\ *π*, *π*], and the branch cut for this operation lies "
"along the negative real axis, continuous from above.  On systems with "
"support for signed zeros (which includes most systems in current use), this "
"means that the sign of the result is the same as the sign of ``x.imag``, "
"even when ``x.imag`` is zero::"
msgstr ""
"Retorna la fase de *x* (también conocido como el *argumento* de *x*), como "
"un  número de coma  flotante. ``phase(x)`` es equivalente a ``math.atan2(x."
"imag, x.real)``. El resultado se encuentra en el rango [-\\ *π*, *π*], y el "
"tramo para esta operación se sostiene a lo largo del eje de abscisas "
"negativo, continuo desde abajo. En sistemas con soporte para el número 0 con "
"signo (que son las mayoría de ellos en uso vigente), esto significa que el "
"signo del resultado es el mismo como el signo de ``x.imag``, incluso donde "
"``x.imag`` es cero::"

#: ../Doc/library/cmath.rst:64
msgid ""
"The modulus (absolute value) of a complex number *x* can be computed using "
"the built-in :func:`abs` function.  There is no separate :mod:`cmath` module "
"function for this operation."
msgstr ""
"El módulo (valor absoluto) de un número complejo *x* puede ser calculado "
"usado la función predeterminada :func:`abs`. No existe otra función aparte "
"del módulo :mod:`cmath` para esta operación."

#: ../Doc/library/cmath.rst:71
msgid ""
"Return the representation of *x* in polar coordinates.  Returns a pair ``(r, "
"phi)`` where *r* is the modulus of *x* and phi is the phase of *x*.  "
"``polar(x)`` is equivalent to ``(abs(x), phase(x))``."
msgstr ""
"Retorna la representación de *x* en coordenadas polares. Retorna un par "
"``(r, phi)`` donde *r* es el módulo de *x* y phi es la fase de *x*. "
"``polar(x) ``es equivalente a ``(abs(x), phase(x))``."

#: ../Doc/library/cmath.rst:79
msgid ""
"Return the complex number *x* with polar coordinates *r* and *phi*. "
"Equivalent to ``r * (math.cos(phi) + math.sin(phi)*1j)``."
msgstr ""
"Retorna el número complejo *x* con coordenadas polares *r* y *phi*. Esto es "
"equivalente a ``r*(math.cos(phi) + math.sin(phi)*1j)``."

#: ../Doc/library/cmath.rst:84
msgid "Power and logarithmic functions"
msgstr "Funciones logarítmicas y de potencias"

#: ../Doc/library/cmath.rst:88
msgid ""
"Return *e* raised to the power *x*, where *e* is the base of natural "
"logarithms."
msgstr ""
"Retorna *e* elevado a la potencia de *x*, donde *e* es la base de los "
"logaritmos naturales."

#: ../Doc/library/cmath.rst:94
msgid ""
"Returns the logarithm of *x* to the given *base*. If the *base* is not "
"specified, returns the natural logarithm of *x*. There is one branch cut, "
"from 0 along the negative real axis to -∞, continuous from above."
msgstr ""
"Retorna el logaritmo de *x* dada una *base*. Si la base no se especifica, "
"retorna el logaritmo natural de *x* .No hay tramo, desde 0 en el eje "
"negativo real hasta -∞, continuo desde arriba."

#: ../Doc/library/cmath.rst:101
msgid ""
"Return the base-10 logarithm of *x*. This has the same branch cut as :func:"
"`log`."
msgstr ""
"Retorna el logaritmo en base de 10 de *x*. Tiene el mismo tramo que :func:"
"`log`."

#: ../Doc/library/cmath.rst:107
msgid ""
"Return the square root of *x*. This has the same branch cut as :func:`log`."
msgstr "Retorna la raíz cuadrada de *x*. Tiene el mismo tramo que :func:`log`."

#: ../Doc/library/cmath.rst:111
msgid "Trigonometric functions"
msgstr "Funciones trigonométricas"

#: ../Doc/library/cmath.rst:115
msgid ""
"Return the arc cosine of *x*. There are two branch cuts: One extends right "
"from 1 along the real axis to ∞, continuous from below. The other extends "
"left from -1 along the real axis to -∞, continuous from above."
msgstr ""
"Retorna el arcocoseno de  *x*. Existen dos tramos: Uno que se extiende desde "
"1 sobre todo el eje de abscisas hasta ∞, continuo desde abajo. El otro se "
"extiende desde -1 a lo largo del eje de abscisas hasta -∞, continuo por "
"arriba."

#: ../Doc/library/cmath.rst:122
msgid ""
"Return the arc sine of *x*. This has the same branch cuts as :func:`acos`."
msgstr ""
"Retorna el arcoseno de *x*. Este tiene los mismos tramos que :func:`acos`."

#: ../Doc/library/cmath.rst:127
msgid ""
"Return the arc tangent of *x*. There are two branch cuts: One extends from "
"``1j`` along the imaginary axis to ``∞j``, continuous from the right. The "
"other extends from ``-1j`` along the imaginary axis to ``-∞j``, continuous "
"from the left."
msgstr ""
"Retorna el arcotangente de *x*. Tiene dos tramos. Uno se extiende desde "
"``1j`` a lo largo de el eje de abscisas imaginario ``∞j``,  continuo desde "
"la derecha. El otro extiende desde `-1j``  a lo largo de el eje de abscisas "
"hasta ``-∞j`` , continuo desde la izquierda."

#: ../Doc/library/cmath.rst:135
msgid "Return the cosine of *x*."
msgstr "Retorna el coseno de *x*."

#: ../Doc/library/cmath.rst:140
msgid "Return the sine of *x*."
msgstr "Retorna el seno de *x*."

#: ../Doc/library/cmath.rst:145
msgid "Return the tangent of *x*."
msgstr "Retorna la tangente de *x*."

#: ../Doc/library/cmath.rst:149
msgid "Hyperbolic functions"
msgstr "Funciones hiperbólicas"

#: ../Doc/library/cmath.rst:153
msgid ""
"Return the inverse hyperbolic cosine of *x*. There is one branch cut, "
"extending left from 1 along the real axis to -∞, continuous from above."
msgstr ""
"Retorna el inverso del coseno hiperbólico de *x*. Tiene un tramo, que se "
"extiende desde la izquierda desde 1 a lo largo del eje de abscisas hasta -∞, "
"continuo desde abajo."

#: ../Doc/library/cmath.rst:159
msgid ""
"Return the inverse hyperbolic sine of *x*. There are two branch cuts: One "
"extends from ``1j`` along the imaginary axis to ``∞j``, continuous from the "
"right.  The other extends from ``-1j`` along the imaginary axis to ``-∞j``, "
"continuous from the left."
msgstr ""
"Retorna el inverso del seno hiperbólico de *x*. Tiene dos tramos. Uno se "
"extiende desde ``1j`` a lo largo de el eje de abscisas imaginario ``∞j``, "
"continuo desde la  derecha. El otro se extiende desde ``-1j``  a lo largo de "
"el eje de abscisas hasta ``-∞j``, continuo desde la izquierda."

#: ../Doc/library/cmath.rst:167
msgid ""
"Return the inverse hyperbolic tangent of *x*. There are two branch cuts: One "
"extends from ``1`` along the real axis to ``∞``, continuous from below. The "
"other extends from ``-1`` along the real axis to ``-∞``, continuous from "
"above."
msgstr ""
"Retorna el inverso de la tangente hiperbólica de *x*. Tiene dos tramos: Uno "
"se extiende desde ``1`` a lo largo de las abscisas reales hasta ``∞``,  "
"continuo desde abajo. El otro se extiende desde ``-1``a lo largo de las "
"abscisas reales hasta ```-∞``, continuo desde arriba."

#: ../Doc/library/cmath.rst:175
msgid "Return the hyperbolic cosine of *x*."
msgstr "Retorna el coseno hiperbólico de *x*."

#: ../Doc/library/cmath.rst:180
msgid "Return the hyperbolic sine of *x*."
msgstr "Retorna el seno hiperbólico de *x*."

#: ../Doc/library/cmath.rst:185
msgid "Return the hyperbolic tangent of *x*."
msgstr "Retorna la tangente hiperbólica de *x*."

#: ../Doc/library/cmath.rst:189
msgid "Classification functions"
msgstr "Funciones de clasificación"

#: ../Doc/library/cmath.rst:193
msgid ""
"Return ``True`` if both the real and imaginary parts of *x* are finite, and "
"``False`` otherwise."
msgstr ""
"Retorna ``True`` si tanto la parte imaginaria como real de *x* son finitas, "
"y ``False`` en cualquier otro caso."

#: ../Doc/library/cmath.rst:201
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is an "
"infinity, and ``False`` otherwise."
msgstr ""
"Retorna ``True`` si la parte real o la imaginaria de *x* es un infinito, y "
"``False`` en el caso contrario."

#: ../Doc/library/cmath.rst:207
msgid ""
"Return ``True`` if either the real or the imaginary part of *x* is a NaN, "
"and ``False`` otherwise."
msgstr ""
"Retorna ``True`` tanto si la parte real o imaginaria de *x* es NaN, y  "
"``Falso`` en cualquier otro caso."

#: ../Doc/library/cmath.rst:213
msgid ""
"Return ``True`` if the values *a* and *b* are close to each other and "
"``False`` otherwise."
msgstr ""
"Retorna ``True`` si los valores *a* y *b* son cercanos el uno al otro y "
"``Falso`` de otro modo."

#: ../Doc/library/cmath.rst:216
msgid ""
"Whether or not two values are considered close is determined according to "
"given absolute and relative tolerances."
msgstr ""
"Que dos valores sean o no considerados como cercanos es determinado de "
"acuerdo al valor absoluto y las tolerancias relativas."

#: ../Doc/library/cmath.rst:219
msgid ""
"*rel_tol* is the relative tolerance -- it is the maximum allowed difference "
"between *a* and *b*, relative to the larger absolute value of *a* or *b*. "
"For example, to set a tolerance of 5%, pass ``rel_tol=0.05``.  The default "
"tolerance is ``1e-09``, which assures that the two values are the same "
"within about 9 decimal digits.  *rel_tol* must be greater than zero."
msgstr ""
"*rel_tol* es la tolerancia relativa -- es el máximo valor permitido de la "
"resta entre *a* y *b*, relativo al valor absoluto más grande de *a* o *b*. "
"Por ejemplo, para fijar una tolerancia del 5%, usar ``rel_tol=0.05``. El "
"valor de tolerancia por defecto es ``1e-09``, lo que asegura que los dos "
"valores son los mismos en aproximadamente 9 dígitos decimales. *rel_tol* "
"debe ser mayor que cero."

#: ../Doc/library/cmath.rst:225
msgid ""
"*abs_tol* is the minimum absolute tolerance -- useful for comparisons near "
"zero. *abs_tol* must be at least zero."
msgstr ""
"*abs_tol* es la tolerancia mínima absoluta -- útil a la hora de hacer "
"comparaciones cercanas al cero. *abs_tol* debe ser al menos cero."

#: ../Doc/library/cmath.rst:228
msgid ""
"If no errors occur, the result will be: ``abs(a-b) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."
msgstr ""
"Si no ocurren errores, el resultado será: ``abs(a-b) <= max(rel_tol * "
"max(abs(a), abs(b)), abs_tol)``."

#: ../Doc/library/cmath.rst:231
msgid ""
"The IEEE 754 special values of ``NaN``, ``inf``, and ``-inf`` will be "
"handled according to IEEE rules.  Specifically, ``NaN`` is not considered "
"close to any other value, including ``NaN``.  ``inf`` and ``-inf`` are only "
"considered close to themselves."
msgstr ""
"Los valores especiales IEEE 754 de ``NaN``, ``inf`` y``-inf`` serán "
"manejados de acuerdo al estándar de IEEE. Especialmente, ``NaN`` no se "
"considera cercano a ningún otro valor, incluido ``NaN``. ``inf`` y ``-inf`` "
"solo son considerados cercanos a sí mismos."

#: ../Doc/library/cmath.rst:240
msgid ":pep:`485` -- A function for testing approximate equality"
msgstr ":pep:`485` -- Una función para probar igualdad aproximada."

#: ../Doc/library/cmath.rst:244
msgid "Constants"
msgstr "Constantes"

#: ../Doc/library/cmath.rst:248
msgid "The mathematical constant *π*, as a float."
msgstr "La constante matemática *π*, como número de coma flotante."

#: ../Doc/library/cmath.rst:253
msgid "The mathematical constant *e*, as a float."
msgstr "La constante matemática *e*, como número de coma flotante."

#: ../Doc/library/cmath.rst:258
msgid "The mathematical constant *τ*, as a float."
msgstr "La constante matemática *τ*, como número de coma flotante."

#: ../Doc/library/cmath.rst:265
msgid "Floating-point positive infinity. Equivalent to ``float('inf')``."
msgstr "Números de coma flotante de +infinito. Equivalente a ``float('inf')``."

#: ../Doc/library/cmath.rst:272
msgid ""
"Complex number with zero real part and positive infinity imaginary part. "
"Equivalent to ``complex(0.0, float('inf'))``."
msgstr ""
"Números complejos con la parte real cero y números positivos infinitos como "
"la parte imaginaria. Equivalente a ``complex(0.0, float('inf'))``."

#: ../Doc/library/cmath.rst:280
msgid ""
"A floating-point \"not a number\" (NaN) value.  Equivalent to "
"``float('nan')``."
msgstr ""
"El valor del número de coma flotante \"not a number\" (NaN) . Equivalente a "
"``float('nan')``."

#: ../Doc/library/cmath.rst:288
msgid ""
"Complex number with zero real part and NaN imaginary part. Equivalent to "
"``complex(0.0, float('nan'))``."
msgstr ""
"Números complejos con parte real cero y como parte imaginaria NaN. "
"Equivalente a ``complex(0.0, float('nan'))``."

#: ../Doc/library/cmath.rst:296
msgid ""
"Note that the selection of functions is similar, but not identical, to that "
"in module :mod:`math`.  The reason for having two modules is that some users "
"aren't interested in complex numbers, and perhaps don't even know what they "
"are.  They would rather have ``math.sqrt(-1)`` raise an exception than "
"return a complex number. Also note that the functions defined in :mod:"
"`cmath` always return a complex number, even if the answer can be expressed "
"as a real number (in which case the complex number has an imaginary part of "
"zero)."
msgstr ""
"Nótese que la selección de funciones es similar, pero no idéntica, a la del "
"módulo  :mod:`math`. El motivo de tener dos módulos se halla en que algunos "
"usuarios no se encuentran interesados en números complejos, y quizás ni "
"siquiera sepan que son. Preferirían que ``math.sqrt(-1)`` lance una "
"excepción a que retorne un número complejo. Además fíjese que las funciones "
"definidas en :mod:`cmath` siempre retornan un número complejo, incluso si la "
"respuesta puede ser expresada como un número real  (en cuyo caso el número "
"complejo tiene una parte imaginaria de cero)."

#: ../Doc/library/cmath.rst:304
msgid ""
"A note on branch cuts: They are curves along which the given function fails "
"to be continuous.  They are a necessary feature of many complex functions.  "
"It is assumed that if you need to compute with complex functions, you will "
"understand about branch cuts.  Consult almost any (not too elementary) book "
"on complex variables for enlightenment.  For information of the proper "
"choice of branch cuts for numerical purposes, a good reference should be the "
"following:"
msgstr ""
"Un apunte en los tramos: Se tratan de curvas en las cuales las funciones "
"fallan a ser continua. Son un complemento necesario de muchas funciones "
"complejas. Se asume que si se necesitan cálculos con funciones complejas, "
"usted entenderá sobre tramos. Consulte casi cualquier(no muy elemental) "
"libro sobre variables complejas para saber más. Para más información en la "
"correcta elección de los tramos para propósitos numéricos, se recomienda la "
"siguiente bibliografía:"

#: ../Doc/library/cmath.rst:314
msgid ""
"Kahan, W:  Branch cuts for complex elementary functions; or, Much ado about "
"nothing's sign bit.  In Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211."
msgstr ""
"*Kahan, W:  Branch cuts for complex elementary functions; o, Much ado about "
"nothing's sign bit.  En Iserles, A., and Powell, M. (eds.), The state of the "
"art in numerical analysis. Clarendon Press (1987) pp165--211*."

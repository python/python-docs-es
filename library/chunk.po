# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: 2020-10-10 09:21+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: \n"
"X-Generator: Poedit 2.4.1\n"
"Language: es\n"

#: ../Doc/library/chunk.rst:2
msgid ":mod:`chunk` --- Read IFF chunked data"
msgstr ":mod:`chunk` --- Lee los datos de los trozos de IFF"

#: ../Doc/library/chunk.rst:10
msgid "**Source code:** :source:`Lib/chunk.py`"
msgstr "**Código fuente:** :source:`Lib/chunk.py`"

#: ../Doc/library/chunk.rst:21
msgid ""
"This module provides an interface for reading files that use EA IFF 85 "
"chunks. [#]_  This format is used in at least the Audio Interchange File "
"Format (AIFF/AIFF-C) and the Real Media File Format (RMFF).  The WAVE audio "
"file format is closely related and can also be read using this module."
msgstr ""
"Este módulo proporciona una interfaz para leer archivos que usan trozos de "
"EA IFF 85. [#]_  Este formato se utiliza al menos en el formato *Audio "
"Interchange File Format (AIFF/AIFF-C)* y en el formato *Real Media File "
"Format (RMFF)*.  El formato de archivo de audio WAVE está estrechamente "
"relacionado y también puede ser leído usando este módulo."

#: ../Doc/library/chunk.rst:26
msgid "A chunk has the following structure:"
msgstr "Un trozo tiene la siguiente estructura:"

#: ../Doc/library/chunk.rst:29
msgid "Offset"
msgstr "Desplazamiento"

#: ../Doc/library/chunk.rst:29
msgid "Length"
msgstr "Longitud"

#: ../Doc/library/chunk.rst:29
msgid "Contents"
msgstr "Contenido"

#: ../Doc/library/chunk.rst:31
msgid "0"
msgstr "0"

#: ../Doc/library/chunk.rst:31 ../Doc/library/chunk.rst:33
msgid "4"
msgstr "4"

#: ../Doc/library/chunk.rst:31
msgid "Chunk ID"
msgstr "ID del trozo"

#: ../Doc/library/chunk.rst:33
msgid "Size of chunk in big-endian byte order, not including the header"
msgstr ""
"El tamaño del trozo en el orden de bytes big-endian, sin incluir el "
"encabezado"

#: ../Doc/library/chunk.rst:37
msgid "8"
msgstr "8"

#: ../Doc/library/chunk.rst:37
msgid "*n*"
msgstr "*n*"

#: ../Doc/library/chunk.rst:37
msgid "Data bytes, where *n* is the size given in the preceding field"
msgstr "Bytes de datos, donde *n* es el tamaño dado en el campo anterior"

#: ../Doc/library/chunk.rst:41
msgid "8 + *n*"
msgstr "8 + *n*"

#: ../Doc/library/chunk.rst:41
msgid "0 or 1"
msgstr "0 o 1"

#: ../Doc/library/chunk.rst:41
msgid "Pad byte needed if *n* is odd and chunk alignment is used"
msgstr ""
"Se necesita un byte de relleno si *n* es impar y se utiliza la alineación de "
"trozos"

#: ../Doc/library/chunk.rst:45
msgid "The ID is a 4-byte string which identifies the type of chunk."
msgstr "La ID es una cadena de 4 bytes que identifica el tipo de trozo."

#: ../Doc/library/chunk.rst:47
msgid ""
"The size field (a 32-bit value, encoded using big-endian byte order) gives "
"the size of the chunk data, not including the 8-byte header."
msgstr ""
"El campo de tamaño (un valor de 32 bits, codificado utilizando el orden de "
"bytes big-endian) da el tamaño de los datos de los trozos, sin incluir el "
"encabezamiento de 8 bytes."

#: ../Doc/library/chunk.rst:50
msgid ""
"Usually an IFF-type file consists of one or more chunks.  The proposed usage "
"of the :class:`Chunk` class defined here is to instantiate an instance at "
"the start of each chunk and read from the instance until it reaches the end, "
"after which a new instance can be instantiated. At the end of the file, "
"creating a new instance will fail with an :exc:`EOFError` exception."
msgstr ""
"Normalmente un archivo de tipo IFF consiste en uno o más trozos.  El uso "
"propuesto de la clase :class:`Chunk` definido aquí es declarar una instancia "
"al principio de cada trozo y leer de la instancia hasta que llegue al final, "
"después de lo cual se puede declarar una nueva instancia. Al final del "
"archivo, la creación de una nueva instancia fallará con una excepción :exc:"
"`EOFError`."

#: ../Doc/library/chunk.rst:59
msgid ""
"Class which represents a chunk.  The *file* argument is expected to be a "
"file-like object.  An instance of this class is specifically allowed.  The "
"only method that is needed is :meth:`~io.IOBase.read`.  If the methods :meth:"
"`~io.IOBase.seek` and :meth:`~io.IOBase.tell` are present and don't raise an "
"exception, they are also used. If these methods are present and raise an "
"exception, they are expected to not have altered the object.  If the "
"optional argument *align* is true, chunks are assumed to be aligned on 2-"
"byte boundaries.  If *align* is false, no alignment is assumed.  The default "
"value is true.  If the optional argument *bigendian* is false, the chunk "
"size is assumed to be in little-endian order. This is needed for WAVE audio "
"files. The default value is true.  If the optional argument *inclheader* is "
"true, the size given in the chunk header includes the size of the header.  "
"The default value is false."
msgstr ""
"Clase que representa un trozo.  Se espera que el argumento *file* sea un "
"objeto parecido a un archivo.  Una instancia de esta clase está "
"específicamente permitida.  El único método que se necesita es :meth:`~io."
"IOBase.read`.  Si los métodos :meth:`~io.IOBase.seek` y :meth:`~io.IOBase."
"tell` están presentes y no plantean una excepción, también se utilizan. Si "
"estos métodos están presentes y hacen una excepción, se espera que no hayan "
"alterado el objeto.  Si el argumento opcional *align* es cierto, se supone "
"que los trozos están alineados en los límites de 2 bytes.  Si *align* es "
"falso, se asume que no hay alineación.  El valor por defecto es true.  Si el "
"argumento opcional *bigendian* es falso, se asume que el tamaño de los "
"trozos está en orden little-endian. Esto es necesario para los archivos de "
"audio WAVE. El valor por defecto es true.  Si el argumento opcional "
"*inclheader* es true, el tamaño dado en la cabecera del trozo incluye el "
"tamaño de la cabecera.  El valor por defecto es false."

#: ../Doc/library/chunk.rst:73
msgid "A :class:`Chunk` object supports the following methods:"
msgstr "Un objeto :class:`Chunk` soporta los siguientes métodos:"

#: ../Doc/library/chunk.rst:78
msgid ""
"Returns the name (ID) of the chunk.  This is the first 4 bytes of the chunk."
msgstr ""
"Retorna el nombre (ID) del trozo.  Estos son los primeros 4 bytes del trozo."

#: ../Doc/library/chunk.rst:84
msgid "Returns the size of the chunk."
msgstr "Retorna el tamaño del trozo."

#: ../Doc/library/chunk.rst:89
msgid ""
"Close and skip to the end of the chunk.  This does not close the underlying "
"file."
msgstr ""
"Cierra y salta al final del trozo.  Esto no cierra el archivo subyacente."

#: ../Doc/library/chunk.rst:92
msgid ""
"The remaining methods will raise :exc:`OSError` if called after the :meth:"
"`close` method has been called.  Before Python 3.3, they used to raise :exc:"
"`IOError`, now an alias of :exc:`OSError`."
msgstr ""
"El resto de los métodos se levantarán :exc:`OsError` si se llama después de "
"que el método :meth:`close` haya sido llamado.  Antes de *Python* 3.3, "
"solían levantar :exc:`IOError`, ahora un alias de :exc:`OSError`."

#: ../Doc/library/chunk.rst:99
msgid "Returns ``False``."
msgstr "Retorna ``False``."

#: ../Doc/library/chunk.rst:104
msgid ""
"Set the chunk's current position.  The *whence* argument is optional and "
"defaults to ``0`` (absolute file positioning); other values are ``1`` (seek "
"relative to the current position) and ``2`` (seek relative to the file's "
"end).  There is no return value. If the underlying file does not allow seek, "
"only forward seeks are allowed."
msgstr ""
"Establece la posición actual del trozo.  El argumento *whence* es opcional y "
"por defecto es ``0`` (posicionamiento absoluto del archivo); otros valores "
"son ``1`` (búsqueda relativa a la posición actual) y ``2`` (búsqueda "
"relativa al final del archivo).  No hay ningún valor de retorno. Si el "
"archivo subyacente no permite la búsqueda, sólo se permiten las búsquedas "
"hacia adelante."

#: ../Doc/library/chunk.rst:113
msgid "Return the current position into the chunk."
msgstr "Retorna la posición actual en el trozo."

#: ../Doc/library/chunk.rst:118
msgid ""
"Read at most *size* bytes from the chunk (less if the read hits the end of "
"the chunk before obtaining *size* bytes).  If the *size* argument is "
"negative or omitted, read all data until the end of the chunk.  An empty "
"bytes object is returned when the end of the chunk is encountered "
"immediately."
msgstr ""
"Leer como máximo *size* bytes del trozo (menos si la lectura llega al final "
"del trozo antes de obtener *size* bytes).  Si el argumento *size* es "
"negativo u omitido, lee todos los datos hasta el final del trozo.  Un objeto "
"de bytes vacío se retorna cuando el final del trozo se encuentra "
"inmediatamente."

#: ../Doc/library/chunk.rst:127
msgid ""
"Skip to the end of the chunk.  All further calls to :meth:`read` for the "
"chunk will return ``b''``.  If you are not interested in the contents of the "
"chunk, this method should be called so that the file points to the start of "
"the next chunk."
msgstr ""
"Salta al final del trozo.  Todas las llamadas posteriores a :meth:`read` "
"para el trozo retorna ``b''``.  Si no estás interesado en el contenido del "
"trozo, este método debe ser llamado para que el archivo apunte al comienzo "
"del siguiente trozo."

#: ../Doc/library/chunk.rst:134
msgid "Footnotes"
msgstr "Notas a pie de página"

#: ../Doc/library/chunk.rst:135
msgid ""
"\"EA IFF 85\" Standard for Interchange Format Files, Jerry Morrison, "
"Electronic Arts, January 1985."
msgstr ""
"\"EA IFF 85\" *Standard for Interchange Format Files*, *Jerry Morrison*, "
"*Electronic Arts*, enero 1985."

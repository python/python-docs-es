# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-11-21 20:32-0300\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Emmanuel Arias <eamanu@yaerobi.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.4.2\n"

#: ../Doc/library/xmlrpc.client.rst:2
msgid ":mod:`xmlrpc.client` --- XML-RPC client access"
msgstr ":mod:`xmlrpc.client` --- acceso cliente XML-RPC"

#: ../Doc/library/xmlrpc.client.rst:10
msgid "**Source code:** :source:`Lib/xmlrpc/client.py`"
msgstr "**Source code:** :source:`Lib/xmlrpc/client.py`"

#: ../Doc/library/xmlrpc.client.rst:17
msgid ""
"XML-RPC is a Remote Procedure Call method that uses XML passed via HTTP(S) "
"as a transport.  With it, a client can call methods with parameters on a "
"remote server (the server is named by a URI) and get back structured data.  "
"This module supports writing XML-RPC client code; it handles all the details "
"of translating between conformable Python objects and XML on the wire."
msgstr ""
"XML-RPC es un método de llamada a procedimiento remoto que utiliza XML "
"pasado a través de HTTP(S) como transporte. Con él, un cliente puede llamar "
"a métodos con parámetros en un servidor remoto (el servidor es nombrado por "
"un URI) y recuperar datos estructurados. Este módulo admite la escritura de "
"código de cliente XML-RPC; maneja todos los detalles de la traducción entre "
"objetos de Python conformes y XML en el cable."

#: ../Doc/library/xmlrpc.client.rst:26
msgid ""
"The :mod:`xmlrpc.client` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
"El módulo :mod:`xmlrpc.client` no es seguro contra datos construidos "
"maliciosamente. Si necesita analizar datos que no son de confianza o no "
"autenticados, consulte :ref:`xml-vulnerabilities`."

#: ../Doc/library/xmlrpc.client.rst:32
msgid ""
"For HTTPS URIs, :mod:`xmlrpc.client` now performs all the necessary "
"certificate and hostname checks by default."
msgstr ""
"Para HTTPS URI, :mod:`xmlrpc.client` ahora realiza todas las comprobaciones "
"necesarias de certificados y nombres de host de forma predeterminada."

#: ../Doc/library/xmlrpc.client.rst:39
msgid ""
"A :class:`ServerProxy` instance is an object that manages communication with "
"a remote XML-RPC server.  The required first argument is a URI (Uniform "
"Resource Indicator), and will normally be the URL of the server.  The "
"optional second argument is a transport factory instance; by default it is "
"an internal :class:`SafeTransport` instance for https: URLs and an internal "
"HTTP :class:`Transport` instance otherwise.  The optional third argument is "
"an encoding, by default UTF-8. The optional fourth argument is a debugging "
"flag."
msgstr ""
"Una :class:`ServerProxy` instancia un objeto que gestiona la comunicación "
"con un servidor XML-RPC remoto. El primer argumento requerido es un URI "
"(*Uniform Resource Indicator*) y normalmente será la URL del servidor. El "
"segundo argumento opcional es una instancia de fábrica de transporte; de "
"forma predeterminada, es una instancia interna :class:`SafeTransport` para "
"https: URL y una instancia interna HTTP :class:`Transport` en caso "
"contrario. El tercer argumento opcional es una codificación, por defecto "
"UTF-8. El cuarto argumento opcional es un indicador de depuración."

#: ../Doc/library/xmlrpc.client.rst:47
msgid ""
"The following parameters govern the use of the returned proxy instance. If "
"*allow_none* is true,  the Python constant ``None`` will be translated into "
"XML; the default behaviour is for ``None`` to raise a :exc:`TypeError`. This "
"is a commonly-used extension to the XML-RPC specification, but isn't "
"supported by all clients and servers; see `http://ontosys.com/xml-rpc/"
"extensions.php <https://web.archive.org/web/20130120074804/http://ontosys."
"com/xml-rpc/extensions.php>`_ for a description. The *use_builtin_types* "
"flag can be used to cause date/time values to be presented as :class:"
"`datetime.datetime` objects and binary data to be presented as :class:"
"`bytes` objects; this flag is false by default. :class:`datetime.datetime`, :"
"class:`bytes` and :class:`bytearray` objects may be passed to calls. The "
"*headers* parameter is an optional sequence of HTTP headers to send with "
"each request, expressed as a sequence of 2-tuples representing the header "
"name and value. (e.g. `[('Header-Name', 'value')]`). The obsolete "
"*use_datetime* flag is similar to *use_builtin_types* but it applies only to "
"date/time values."
msgstr ""
"Los siguientes parámetros rigen el uso de la instancia de proxy retornada. "
"Si *allow_none* es verdadero, la constante de Python ``None`` se traducirá a "
"XML; el comportamiento predeterminado es que ``None`` genere un :exc:"
"`TypeError`. Esta es una extensión de uso común para la especificación XML-"
"RPC, pero no todos los clientes y servidores la admiten; ver `http://ontosys."
"com/xml-rpc/extensions.php <https://web.archive.org/web/20130120074804/"
"http://ontosys.com/xml-rpc/extensions.php>` _ para una descripción. La flag "
"*use_builtin_types* puede usarse para hacer que los valores de fecha/hora se "
"presenten como : clase: objetos `datetime.datetime` y datos binarios que se "
"presenten como objetos :class:`datetime.datetime` y los datos binarios "
"pueden ser presentados como objetos :class:`bytes`; esta flag es falsa por "
"defecto. Los objetos :class:`datetime.datetime`, :class:`bytes` y :class:"
"`bytearray` se pueden pasar a las llamadas. El parámetro *header* es una "
"secuencia opcional de encabezados HTTP para enviar con cada solicitud, "
"expresada como una secuencia de 2 tuplas que representan el nombre y el "
"valor del encabezado. (por ejemplo, `[('Header-Name', 'value')]`). La flag "
"obsoleta *use_datetime* es similar a *use_builtin_types* pero solo se aplica "
"a los valores de fecha/hora."

#: ../Doc/library/xmlrpc.client.rst:65 ../Doc/library/xmlrpc.client.rst:552
msgid "The *use_builtin_types* flag was added."
msgstr "La flag *use_builtin_types* fue añadida."

#: ../Doc/library/xmlrpc.client.rst:68
msgid "The *headers* parameter was added."
msgstr "El parámetro *headers* fue añadida."

#: ../Doc/library/xmlrpc.client.rst:71
msgid ""
"Both the HTTP and HTTPS transports support the URL syntax extension for HTTP "
"Basic Authentication: ``http://user:pass@host:port/path``.  The  ``user:"
"pass`` portion will be base64-encoded as an HTTP 'Authorization' header, and "
"sent to the remote server as part of the connection process when invoking an "
"XML-RPC method.  You only need to use this if the remote server requires a "
"Basic Authentication user and password. If an HTTPS URL is provided, "
"*context* may be :class:`ssl.SSLContext` and configures the SSL settings of "
"the underlying HTTPS connection."
msgstr ""
"Tanto los transportes HTTP como HTTPS admiten la extensión de sintaxis de "
"URL para la autenticación básica HTTP:``http://user:pass@host:port/path``. "
"La parte ``user:pass`` se codificará en base64 como un encabezado HTTP de "
"'Authorization' y se enviará al servidor remoto como parte del proceso de "
"conexión al invocar un método XML-RPC. Solo necesita usar esto si el "
"servidor remoto requiere un usuario y contraseña de autenticación básica. Si "
"se proporciona una URL HTTPS, el *context* puede ser :class:`ssl.SSLContext` "
"y configura la configuración SSL de la conexión HTTPS subyacente."

#: ../Doc/library/xmlrpc.client.rst:80
msgid ""
"The returned instance is a proxy object with methods that can be used to "
"invoke corresponding RPC calls on the remote server.  If the remote server "
"supports the introspection API, the proxy can also be used to query the "
"remote server for the methods it supports (service discovery) and fetch "
"other server-associated metadata."
msgstr ""
"La instancia retornada es un objeto proxy con métodos que se pueden utilizar "
"para invocar las correspondientes llamadas RPC en el servidor remoto. Si el "
"servidor remoto admite la API de introspección, el proxy también se puede "
"utilizar para consultar al servidor remoto los métodos que admite "
"(descubrimiento de servicios) y recuperar otros metadatos asociados al "
"servidor."

#: ../Doc/library/xmlrpc.client.rst:86
msgid ""
"Types that are conformable (e.g. that can be marshalled through XML), "
"include the following (and except where noted, they are unmarshalled as the "
"same Python type):"
msgstr ""
"Los tipos que son conformes (por ejemplo, que se pueden clasificar a través "
"de XML) incluyen lo siguiente (y, excepto donde se indique, no se clasifican "
"como el mismo tipo de Python):"

#: ../Doc/library/xmlrpc.client.rst:93
msgid "XML-RPC type"
msgstr "Tipo XML-RPC"

#: ../Doc/library/xmlrpc.client.rst:93
msgid "Python type"
msgstr "Tipo de Python"

#: ../Doc/library/xmlrpc.client.rst:95
msgid "``boolean``"
msgstr "``boolean``"

#: ../Doc/library/xmlrpc.client.rst:95
msgid ":class:`bool`"
msgstr ":class:`bool`"

#: ../Doc/library/xmlrpc.client.rst:97
msgid "``int``, ``i1``, ``i2``,  ``i4``, ``i8`` or ``biginteger``"
msgstr "``int``, ``i1``, ``i2``,  ``i4``, ``i8`` or ``biginteger``"

#: ../Doc/library/xmlrpc.client.rst:97
msgid ""
":class:`int` in range from -2147483648 to 2147483647. Values get the "
"``<int>`` tag."
msgstr ""
":class:`int` en el rango de -2147483648 a 2147483647. Los valores obtienen "
"la etiqueta ``<int>`` ."

#: ../Doc/library/xmlrpc.client.rst:102
msgid "``double`` or ``float``"
msgstr "``double`` o ``float``"

#: ../Doc/library/xmlrpc.client.rst:102
msgid ":class:`float`.  Values get the ``<double>`` tag."
msgstr ":class:`float`.  Los valores obtienen la etiqueta ``<double>``."

#: ../Doc/library/xmlrpc.client.rst:105
msgid "``string``"
msgstr "``string``"

#: ../Doc/library/xmlrpc.client.rst:105
msgid ":class:`str`"
msgstr ":class:`str`"

#: ../Doc/library/xmlrpc.client.rst:107
msgid "``array``"
msgstr "``array``"

#: ../Doc/library/xmlrpc.client.rst:107
msgid ""
":class:`list` or :class:`tuple` containing conformable elements.  Arrays are "
"returned as :class:`lists <list>`."
msgstr ""
":class:`list` o :class:`tuple` que contiene elementos determinados. Las "
"matrices se retornan como :class:`lists <list>`."

#: ../Doc/library/xmlrpc.client.rst:111
msgid "``struct``"
msgstr "``struct``"

#: ../Doc/library/xmlrpc.client.rst:111
msgid ""
":class:`dict`.  Keys must be strings, values may be any conformable type.  "
"Objects of user-defined classes can be passed in; only their :attr:`~object."
"__dict__` attribute is transmitted."
msgstr ""
":class:`dict`. Las claves deben ser cadenas de caracteres, los valores "
"pueden ser de cualquier tipo determinado. Pueden pasarse objetos de clases "
"definidas por el usuario; sólo se transmite su atributo :attr:`~object."
"__dict__` ."

#: ../Doc/library/xmlrpc.client.rst:116
msgid "``dateTime.iso8601``"
msgstr "``dateTime.iso8601``"

#: ../Doc/library/xmlrpc.client.rst:116
msgid ""
":class:`DateTime` or :class:`datetime.datetime`. Returned type depends on "
"values of *use_builtin_types* and *use_datetime* flags."
msgstr ""
":class:`DateTime` o :class:`datetime.datetime`. El tipo retornado depende de "
"los valores de los indicadores *use_builtin_types* y *use_datetime* ."

#: ../Doc/library/xmlrpc.client.rst:120
msgid "``base64``"
msgstr "``base64``"

#: ../Doc/library/xmlrpc.client.rst:120
msgid ""
":class:`Binary`, :class:`bytes` or :class:`bytearray`.  Returned type "
"depends on the value of the *use_builtin_types* flag."
msgstr ""
":class:`Binary`, :class:`bytes` o :class:`bytearray`. El tipo retornado "
"depende del valor de la marca *use_builtin_types*."

#: ../Doc/library/xmlrpc.client.rst:124
msgid "``nil``"
msgstr "``nil``"

#: ../Doc/library/xmlrpc.client.rst:124
msgid ""
"The ``None`` constant.  Passing is allowed only if *allow_none* is true."
msgstr ""
"La constante ``None``. Solo se permite pasar si *allow_none* es verdadero."

#: ../Doc/library/xmlrpc.client.rst:127
msgid "``bigdecimal``"
msgstr "``bigdecimal``"

#: ../Doc/library/xmlrpc.client.rst:127
msgid ":class:`decimal.Decimal`.  Returned type only."
msgstr ":class:`decimal.Decimal`. Retornado solo el tipo."

#: ../Doc/library/xmlrpc.client.rst:130
msgid ""
"This is the full set of data types supported by XML-RPC.  Method calls may "
"also raise a special :exc:`Fault` instance, used to signal XML-RPC server "
"errors, or :exc:`ProtocolError` used to signal an error in the HTTP/HTTPS "
"transport layer. Both :exc:`Fault` and :exc:`ProtocolError` derive from a "
"base class called :exc:`Error`.  Note that the xmlrpc client module "
"currently does not marshal instances of subclasses of built-in types."
msgstr ""
"Este es el conjunto completo de tipos de datos admitidos por XML-RPC. Las "
"llamadas a métodos también pueden generar una instancia especial :exc:"
"`Fault`, que se usa para señalar errores del servidor XML-RPC, o :exc:"
"`ProtocolError` que se usa para señalar un error en la capa de transporte "
"HTTP/HTTPS. Ambos :exc:`Fault` y :exc:`ProtocolError` derivan de una clase "
"base llamada :exc:`Error`. Tenga en cuenta que el módulo de cliente xmlrpc "
"actualmente no clasifica instancias de subclases de tipos integrados."

#: ../Doc/library/xmlrpc.client.rst:137
msgid ""
"When passing strings, characters special to XML such as ``<``, ``>``, and "
"``&`` will be automatically escaped.  However, it's the caller's "
"responsibility to ensure that the string is free of characters that aren't "
"allowed in XML, such as the control characters with ASCII values between 0 "
"and 31 (except, of course, tab, newline and carriage return); failing to do "
"this will result in an XML-RPC request that isn't well-formed XML.  If you "
"have to pass arbitrary bytes via XML-RPC, use :class:`bytes` or :class:"
"`bytearray` classes or the :class:`Binary` wrapper class described below."
msgstr ""
"Al pasar cadenas de caracteres, los caracteres especiales de XML como ``<``, "
"``>`` y ``&`` se escaparán automáticamente. Sin embargo, es responsabilidad "
"de la persona que llama asegurarse de que la cadena de caracteres esté libre "
"de caracteres que no están permitidos en XML, como los caracteres de control "
"con valores ASCII entre 0 y 31 (excepto, por supuesto, tabulación, nueva "
"línea y retorno de carro); no hacer esto resultará en una solicitud XML-RPC "
"que no es XML bien formado. Si tiene que pasar bytes arbitrarios a través de "
"XML-RPC, use las clases :class:`bytes` o :class:`bytearray` o la clase "
"contenedora :class:`Binary` descrita a continuación."

#: ../Doc/library/xmlrpc.client.rst:146
msgid ""
":class:`Server` is retained as an alias for :class:`ServerProxy` for "
"backwards compatibility.  New code should use :class:`ServerProxy`."
msgstr ""
":class:`Server` se conserva como un alias para :class:`ServerProxy` para "
"compatibilidad con versiones anteriores. El nuevo código debe usar :class:"
"`ServerProxy`."

#: ../Doc/library/xmlrpc.client.rst:149
msgid "Added the *context* argument."
msgstr "Se agregó el argumento *context*."

#: ../Doc/library/xmlrpc.client.rst:152
msgid ""
"Added support of type tags with prefixes (e.g. ``ex:nil``). Added support of "
"unmarshalling additional types used by Apache XML-RPC implementation for "
"numerics: ``i1``, ``i2``, ``i8``, ``biginteger``, ``float`` and "
"``bigdecimal``. See http://ws.apache.org/xmlrpc/types.html for a description."
msgstr ""
"Se agregó soporte para etiquetas de tipo con prefijos (por ejemplo. ``ex:"
"nil``). Se agregó soporte para desagrupar los tipos adicionales utilizados "
"por la implementación Apache XML-RPC para números:\n"
"``i1``, ``i2``, ``i8``, ``biginteger``, ``float`` y ``bigdecimal``. Consulte "
"http://ws.apache.org/xmlrpc/types.html para obtener una descripción."

#: ../Doc/library/xmlrpc.client.rst:164
msgid "`XML-RPC HOWTO <http://www.tldp.org/HOWTO/XML-RPC-HOWTO/index.html>`_"
msgstr "`XML-RPC HOWTO <http://www.tldp.org/HOWTO/XML-RPC-HOWTO/index.html>`_"

#: ../Doc/library/xmlrpc.client.rst:163
msgid ""
"A good description of XML-RPC operation and client software in several "
"languages. Contains pretty much everything an XML-RPC client developer needs "
"to know."
msgstr ""
"Una buena descripción del funcionamiento de XML-RPC y del software cliente "
"en varios idiomas. Contiene prácticamente todo lo que un desarrollador de "
"cliente XML-RPC necesita saber."

#: ../Doc/library/xmlrpc.client.rst:167
msgid ""
"`XML-RPC Introspection <http://xmlrpc-c.sourceforge.net/introspection.html>`_"
msgstr ""
"`XML-RPC Introspection <http://xmlrpc-c.sourceforge.net/introspection.html>`_"

#: ../Doc/library/xmlrpc.client.rst:167
msgid "Describes the XML-RPC protocol extension for introspection."
msgstr "Describe la extensión del protocolo XML-RPC para la introspección."

#: ../Doc/library/xmlrpc.client.rst:170
msgid "`XML-RPC Specification <http://xmlrpc.scripting.com/spec.html>`_"
msgstr "`XML-RPC Specification <http://xmlrpc.scripting.com/spec.html>`_"

#: ../Doc/library/xmlrpc.client.rst:170
msgid "The official specification."
msgstr "La especificación oficial."

#: ../Doc/library/xmlrpc.client.rst:175
msgid "`Unofficial XML-RPC Errata <http://effbot.org/zone/xmlrpc-errata.htm>`_"
msgstr ""
"`Unofficial XML-RPC Errata <http://effbot.org/zone/xmlrpc-errata.htm>`_"

#: ../Doc/library/xmlrpc.client.rst:173
msgid ""
"Fredrik Lundh's \"unofficial errata, intended to clarify certain details in "
"the XML-RPC specification, as well as hint at 'best practices' to use when "
"designing your own XML-RPC implementations.\""
msgstr ""
"\"Las erratas no oficiales de Fredrik Lundh, destinadas a aclarar ciertos "
"detalles en la especificación XML-RPC, así como dar pistas sobre las "
"'mejores prácticas' para usar al diseñar sus propias implementaciones XML-RPC"
"\"."

#: ../Doc/library/xmlrpc.client.rst:181
msgid "ServerProxy Objects"
msgstr "Objetos *ServerProxy*"

#: ../Doc/library/xmlrpc.client.rst:183
msgid ""
"A :class:`ServerProxy` instance has a method corresponding to each remote "
"procedure call accepted by the XML-RPC server.  Calling the method performs "
"an RPC, dispatched by both name and argument signature (e.g. the same method "
"name can be overloaded with multiple argument signatures).  The RPC finishes "
"by returning a value, which may be either returned data in a conformant type "
"or a :class:`Fault` or :class:`ProtocolError` object indicating an error."
msgstr ""
"La instancia de :class:`ServerProxy` tiene un método correspondiente a cada "
"llamada de procedimiento remoto aceptada por el servidor XML-RPC. Llamar al "
"método realiza un RPC, enviado por nombre y firma de argumento (por ejemplo, "
"el mismo nombre de método puede sobrecargarse con múltiples firmas de "
"argumento). El RPC finaliza retornando un valor, que puede ser datos "
"retornados en un tipo conforme o un objeto :class:`Fault` o :class:"
"`ProtocolError` que indica un error."

#: ../Doc/library/xmlrpc.client.rst:190
msgid ""
"Servers that support the XML introspection API support some common methods "
"grouped under the reserved :attr:`~ServerProxy.system` attribute:"
msgstr ""
"Los servidores que admiten la API de introspección XML admiten algunos "
"métodos comunes agrupados bajo el atributo reservado :attr:`~ServerProxy."
"system`:"

#: ../Doc/library/xmlrpc.client.rst:196
msgid ""
"This method returns a list of strings, one for each (non-system) method "
"supported by the XML-RPC server."
msgstr ""
"Este método retorna una lista de cadenas, una para cada método (que no es "
"del sistema) admitido por el servidor XML-RPC."

#: ../Doc/library/xmlrpc.client.rst:202
msgid ""
"This method takes one parameter, the name of a method implemented by the XML-"
"RPC server. It returns an array of possible signatures for this method. A "
"signature is an array of types. The first of these types is the return type "
"of the method, the rest are parameters."
msgstr ""
"Este método toma un parámetro, el nombre de un método implementado por el "
"servidor XML-RPC. Retorna una matriz de posibles firmas para este método. "
"Una firma es una variedad de tipos. El primero de estos tipos es el tipo de "
"retorno del método, el resto son parámetros."

#: ../Doc/library/xmlrpc.client.rst:207
msgid ""
"Because multiple signatures (ie. overloading) is permitted, this method "
"returns a list of signatures rather than a singleton."
msgstr ""
"Debido a que se permiten múltiples firmas (es decir, sobrecarga), este "
"método retorna una lista de firmas en lugar de un singleton."

#: ../Doc/library/xmlrpc.client.rst:210
msgid ""
"Signatures themselves are restricted to the top level parameters expected by "
"a method. For instance if a method expects one array of structs as a "
"parameter, and it returns a string, its signature is simply \"string, array"
"\". If it expects three integers and returns a string, its signature is "
"\"string, int, int, int\"."
msgstr ""
"Las propias firmas están restringidas a los parámetros de nivel superior "
"esperados por un método. Por ejemplo, si un método espera una matriz de "
"estructuras como parámetro y retorna una cadena de caracteres, su firma es "
"simplemente \"cadena, matriz\". Si espera tres enteros y retorna una cadena, "
"su firma es \"string, int, int, int\"."

#: ../Doc/library/xmlrpc.client.rst:215
msgid ""
"If no signature is defined for the method, a non-array value is returned. In "
"Python this means that the type of the returned  value will be something "
"other than list."
msgstr ""
"Si no se define una firma para el método, se retorna un valor que no es una "
"matriz. En Python, esto significa que el tipo de valor retornado será "
"diferente a una lista."

#: ../Doc/library/xmlrpc.client.rst:222
msgid ""
"This method takes one parameter, the name of a method implemented by the XML-"
"RPC server.  It returns a documentation string describing the use of that "
"method. If no such string is available, an empty string is returned. The "
"documentation string may contain HTML markup."
msgstr ""
"Este método toma un parámetro, el nombre de un método implementado por el "
"servidor XML-RPC. Retorna una cadena de caracteres de documentación que "
"describe el uso de ese método. Si no hay tal cadena de caracteres "
"disponible, se retorna una cadena de caracteres vacía. La cadena de "
"caracteres de documentación puede contener marcado HTML."

#: ../Doc/library/xmlrpc.client.rst:229
msgid ""
"Instances of :class:`ServerProxy` support the :term:`context manager` "
"protocol for closing the underlying transport."
msgstr ""
"Las instancias de :class:`ServerProxy` admiten el protocolo :term:`context "
"manager` para cerrar el transporte subyacente."

#: ../Doc/library/xmlrpc.client.rst:233 ../Doc/library/xmlrpc.client.rst:279
msgid "A working example follows. The server code::"
msgstr ""
"A continuación se muestra un ejemplo práctico. El código del servidor::"

#: ../Doc/library/xmlrpc.client.rst:245 ../Doc/library/xmlrpc.client.rst:294
#: ../Doc/library/xmlrpc.client.rst:404 ../Doc/library/xmlrpc.client.rst:510
msgid "The client code for the preceding server::"
msgstr "El código de cliente para el servidor anterior::"

#: ../Doc/library/xmlrpc.client.rst:256
msgid "DateTime Objects"
msgstr "Objetos *DateTime*"

#: ../Doc/library/xmlrpc.client.rst:260
msgid ""
"This class may be initialized with seconds since the epoch, a time tuple, an "
"ISO 8601 time/date string, or a :class:`datetime.datetime` instance.  It has "
"the following methods, supported mainly for internal use by the marshalling/"
"unmarshalling code:"
msgstr ""
"Esta clase puede inicializarse con segundos desde la época, una tupla de "
"tiempo, una cadena de fecha/hora ISO 8601 o una instancia :class:`datetime."
"datetime`. Tiene los siguientes métodos, soportados principalmente para uso "
"interno por el código de clasificación/eliminación de clasificación:"

#: ../Doc/library/xmlrpc.client.rst:268
msgid "Accept a string as the instance's new time value."
msgstr ""
"Acepta una cadena de caracteres como el nuevo valor de tiempo de la "
"instancia."

#: ../Doc/library/xmlrpc.client.rst:273
msgid ""
"Write the XML-RPC encoding of this :class:`DateTime` item to the *out* "
"stream object."
msgstr ""
"Escribe la codificación XML-RPC de este elemento :class:`DateTime` en el "
"objeto de flujo *out*."

#: ../Doc/library/xmlrpc.client.rst:276
msgid ""
"It also supports certain of Python's built-in operators through rich "
"comparison and :meth:`__repr__` methods."
msgstr ""
"También es compatible con algunos de los operadores integrados de Python a "
"través de una rica comparación y métodos :meth:`__repr__`."

#: ../Doc/library/xmlrpc.client.rst:309
msgid "Binary Objects"
msgstr "Objetos binarios"

#: ../Doc/library/xmlrpc.client.rst:313
msgid ""
"This class may be initialized from bytes data (which may include NULs). The "
"primary access to the content of a :class:`Binary` object is provided by an "
"attribute:"
msgstr ""
"Esta clase puede inicializarse a partir de datos de bytes (que pueden "
"incluir NUL). El acceso principal al contenido de un objeto :class:`Binary` "
"lo proporciona un atributo:"

#: ../Doc/library/xmlrpc.client.rst:320
msgid ""
"The binary data encapsulated by the :class:`Binary` instance.  The data is "
"provided as a :class:`bytes` object."
msgstr ""
"Los datos binarios encapsulados por la instancia :class:`Binary`. Los datos "
"se proporcionan como un objeto :class:`bytes`."

#: ../Doc/library/xmlrpc.client.rst:323
msgid ""
":class:`Binary` objects have the following methods, supported mainly for "
"internal use by the marshalling/unmarshalling code:"
msgstr ""
"Los objetos :class:`Binary` tienen los siguientes métodos, soportados "
"principalmente para uso interno por el código de clasificación/desagrupación:"

#: ../Doc/library/xmlrpc.client.rst:329
msgid ""
"Accept a base64 :class:`bytes` object and decode it as the instance's new "
"data."
msgstr ""
"Acepta un objeto base64 :class:`bytes` y se descodifica como los nuevos "
"datos de la instancia."

#: ../Doc/library/xmlrpc.client.rst:334
msgid ""
"Write the XML-RPC base 64 encoding of this binary item to the *out* stream "
"object."
msgstr ""
"Escribe la codificación XML-RPC base 64 de este elemento binario en el "
"objeto de flujo *out*."

#: ../Doc/library/xmlrpc.client.rst:336
#, fuzzy
msgid ""
"The encoded data will have newlines every 76 characters as per :rfc:`RFC "
"2045 section 6.8 <2045#section-6.8>`, which was the de facto standard base64 "
"specification when the XML-RPC spec was written."
msgstr ""
"Los datos codificados tendrán líneas nuevas cada 76 caracteres según :rfc:"
"`RFC 2045 section 6.8 <2045#section-6.8>`, que era la especificación "
"estándar de facto base64 cuando se escribió la especificación XML-RPC."

#: ../Doc/library/xmlrpc.client.rst:341
msgid ""
"It also supports certain of Python's built-in operators through :meth:"
"`__eq__` and :meth:`__ne__` methods."
msgstr ""
"También admite algunos de los operadores integrados de Python a través de "
"los métodos :meth:`__eq__` and :meth:`__ne__`."

#: ../Doc/library/xmlrpc.client.rst:344
msgid ""
"Example usage of the binary objects.  We're going to transfer an image over "
"XMLRPC::"
msgstr ""
"Ejemplo de uso de los objetos binarios. Vamos a transferir una imagen sobre "
"XMLRPC::"

#: ../Doc/library/xmlrpc.client.rst:360
msgid "The client gets the image and saves it to a file::"
msgstr "El cliente obtiene la imagen y la guarda en un archivo::"

#: ../Doc/library/xmlrpc.client.rst:371
msgid "Fault Objects"
msgstr "Objetos Faults"

#: ../Doc/library/xmlrpc.client.rst:375
msgid ""
"A :class:`Fault` object encapsulates the content of an XML-RPC fault tag. "
"Fault objects have the following attributes:"
msgstr ""
"Un objeto :class:`Fault` encapsula el contenido de una etiqueta de error XML-"
"RPC. Los objetos de error tienen los siguientes atributos:"

#: ../Doc/library/xmlrpc.client.rst:381
msgid "A string indicating the fault type."
msgstr "Una cadena de caracteres que indica el tipo de fallo."

#: ../Doc/library/xmlrpc.client.rst:386
msgid "A string containing a diagnostic message associated with the fault."
msgstr ""
"Una cadena de caracteres que contiene un mensaje de diagnóstico asociado con "
"el fallo."

#: ../Doc/library/xmlrpc.client.rst:388
msgid ""
"In the following example we're going to intentionally cause a :exc:`Fault` "
"by returning a complex type object.  The server code::"
msgstr ""
"En el siguiente ejemplo vamos a causar intencionalmente un :exc:`Fault` al "
"retornar un objeto de tipo complejo. El código del servidor::"

#: ../Doc/library/xmlrpc.client.rst:421
msgid "ProtocolError Objects"
msgstr "Objetos ProtocolError"

#: ../Doc/library/xmlrpc.client.rst:425
msgid ""
"A :class:`ProtocolError` object describes a protocol error in the underlying "
"transport layer (such as a 404 'not found' error if the server named by the "
"URI does not exist).  It has the following attributes:"
msgstr ""
"El objeto :class:`ProtocolError` describe un error de protocolo en la capa "
"de transporte subyacente (como un error 404 'no encontrado' si el servidor "
"nombrado por el URI no existe). Tiene los siguientes atributos:"

#: ../Doc/library/xmlrpc.client.rst:432
msgid "The URI or URL that triggered the error."
msgstr "El URI o URL que provocó el error."

#: ../Doc/library/xmlrpc.client.rst:437
msgid "The error code."
msgstr "El código de error."

#: ../Doc/library/xmlrpc.client.rst:442
msgid "The error message or diagnostic string."
msgstr "El mensaje de error o la cadena de caracteres de diagnóstico."

#: ../Doc/library/xmlrpc.client.rst:447
msgid ""
"A dict containing the headers of the HTTP/HTTPS request that triggered the "
"error."
msgstr ""
"Un diccionario que contiene los encabezados de la solicitud HTTP/HTTPS que "
"desencadenó el error."

#: ../Doc/library/xmlrpc.client.rst:450
msgid ""
"In the following example we're going to intentionally cause a :exc:"
"`ProtocolError` by providing an invalid URI::"
msgstr ""
"En el siguiente ejemplo, vamos a causar intencionalmente un :exc:"
"`ProtocolError` proporcionando un URI inválido::"

#: ../Doc/library/xmlrpc.client.rst:468
msgid "MultiCall Objects"
msgstr "Objectos MultiCall"

#: ../Doc/library/xmlrpc.client.rst:470
msgid ""
"The :class:`MultiCall` object provides a way to encapsulate multiple calls "
"to a remote server into a single request [#]_."
msgstr ""
"El objeto :class:`MultiCall` proporciona una forma de encapsular múltiples "
"llamadas a un servidor remoto en una sola solicitud [#]_."

#: ../Doc/library/xmlrpc.client.rst:476
msgid ""
"Create an object used to boxcar method calls. *server* is the eventual "
"target of the call. Calls can be made to the result object, but they will "
"immediately return ``None``, and only store the call name and parameters in "
"the :class:`MultiCall` object. Calling the object itself causes all stored "
"calls to be transmitted as a single ``system.multicall`` request. The result "
"of this call is a :term:`generator`; iterating over this generator yields "
"the individual results."
msgstr ""
"Crea un objeto usado para llamadas al método boxcar. *server* es el objetivo "
"final de la llamada. Se pueden realizar llamadas al objeto de resultado, "
"pero retornarán inmediatamente ``None`` y solo almacenarán el nombre y los "
"parámetros de la llamada en el objeto :class:`MultiCall`. Llamar al objeto "
"en sí hace que todas las llamadas almacenadas se transmitan como una única "
"solicitud de ``system.multicall``. El resultado de esta llamada es un :term:"
"`generator`; iterar sobre este generador produce los resultados individuales."

#: ../Doc/library/xmlrpc.client.rst:484
msgid "A usage example of this class follows.  The server code::"
msgstr ""
"A continuación se muestra un ejemplo de uso de esta clase. El código del "
"servidor::"

#: ../Doc/library/xmlrpc.client.rst:526
msgid "Convenience Functions"
msgstr "Funciones de Conveniencia"

#: ../Doc/library/xmlrpc.client.rst:530
msgid ""
"Convert *params* into an XML-RPC request. or into a response if "
"*methodresponse* is true. *params* can be either a tuple of arguments or an "
"instance of the :exc:`Fault` exception class.  If *methodresponse* is true, "
"only a single value can be returned, meaning that *params* must be of length "
"1. *encoding*, if supplied, is the encoding to use in the generated XML; the "
"default is UTF-8. Python's :const:`None` value cannot be used in standard "
"XML-RPC; to allow using it via an extension,  provide a true value for "
"*allow_none*."
msgstr ""
"Convierta *params* en una solicitud XML-RPC. o en una respuesta si "
"*methodresponse* es verdadero. *params* puede ser una tupla de argumentos o "
"una instancia de la clase de excepción :exc:`Fault`. Si *methodresponse* es "
"verdadero, solo se puede devolver un único valor, lo que significa que "
"*params* debe tener una longitud de 1. *encoding*, si se proporciona, es la "
"codificación que se utilizará en el XML generado; el predeterminado es "
"UTF-8. El valor de Python :const:`None` no se puede usar en XML-RPC "
"estándar; para permitir su uso a través de una extensión, proporcione un "
"valor verdadero para *allow_none*."

#: ../Doc/library/xmlrpc.client.rst:541
msgid ""
"Convert an XML-RPC request or response into Python objects, a ``(params, "
"methodname)``.  *params* is a tuple of argument; *methodname* is a string, "
"or ``None`` if no method name is present in the packet. If the XML-RPC "
"packet represents a fault condition, this function will raise a :exc:`Fault` "
"exception. The *use_builtin_types* flag can be used to cause date/time "
"values to be presented as :class:`datetime.datetime` objects and binary data "
"to be presented as :class:`bytes` objects; this flag is false by default."
msgstr ""
"Convierte una solicitud o respuesta XML-RPC en objetos Python, un ``(params, "
"methodname)``.  *params* es una tupla de argumento;  *methodname* es una "
"cadena de caracteres, o ``None`` si no hay ningún nombre de método presente "
"en el paquete. Si el paquete XML-RPC representa una condición de falla, esta "
"función generará una excepción :exc:`Fault`. La flag *use_builtin_types* "
"puede usarse para hacer que los valores de fecha/hora se presenten como "
"objetos de  :class:`datetime.datetime` y datos binarios que se presenten "
"como objetos de :class:`bytes`; esta flag es falsa por defecto."

#: ../Doc/library/xmlrpc.client.rst:549
msgid ""
"The obsolete *use_datetime* flag is similar to *use_builtin_types* but it "
"applies only to date/time values."
msgstr ""
"La flag obsoleta *use_datetime* es similar a *use_builtin_types* pero esto "
"aplica solo a valores fecha/hora."

#: ../Doc/library/xmlrpc.client.rst:559
msgid "Example of Client Usage"
msgstr "Ejemplo de Uso de Cliente"

#: ../Doc/library/xmlrpc.client.rst:576
msgid ""
"To access an XML-RPC server through a HTTP proxy, you need to define a "
"custom transport.  The following example shows how::"
msgstr ""
"Para acceder a un servidor XML-RPC a través de un proxy HTTP, debe definir "
"un transporte personalizado. El siguiente ejemplo muestra cómo:"

#: ../Doc/library/xmlrpc.client.rst:601
msgid "Example of Client and Server Usage"
msgstr "Ejemplo de Uso de Cliente y Servidor"

#: ../Doc/library/xmlrpc.client.rst:603
msgid "See :ref:`simplexmlrpcserver-example`."
msgstr "Vea :ref:`simplexmlrpcserver-example`."

#: ../Doc/library/xmlrpc.client.rst:607
msgid "Footnotes"
msgstr "Pie de notas"

#: ../Doc/library/xmlrpc.client.rst:608
msgid ""
"This approach has been first presented in `a discussion on xmlrpc.com "
"<https://web.archive.org/web/20060624230303/http://www.xmlrpc.com/discuss/"
"msgReader$1208?mode=topic>`_."
msgstr ""
"Este enfoque se presentó por primera vez en `una discusión en xmlrpc.com "
"<https://web.archive.org/web/20060624230303/http://www.xmlrpc.com/discuss/"
"msgReader$1208?mode=topic>`_."

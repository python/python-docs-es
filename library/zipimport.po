# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2022-11-26 19:47-0300\n"
"Last-Translator: Sofía Denner <sofi.denner@gmail.com>\n"
"Language-Team: python-doc-es\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.10.3\n"
"X-Generator: Poedit 3.2\n"

#: ../Doc/library/zipimport.rst:2
msgid ":mod:`zipimport` --- Import modules from Zip archives"
msgstr ":mod:`zipimport` --- Importar módulos desde archivos zip"

#: ../Doc/library/zipimport.rst:9
msgid "**Source code:** :source:`Lib/zipimport.py`"
msgstr "**Código fuente:** :source:`Lib/zipimport.py`"

#: ../Doc/library/zipimport.rst:13
msgid ""
"This module adds the ability to import Python modules (:file:`\\*.py`, :file:"
"`\\*.pyc`) and packages from ZIP-format archives. It is usually not needed "
"to use the :mod:`zipimport` module explicitly; it is automatically used by "
"the built-in :keyword:`import` mechanism for :data:`sys.path` items that are "
"paths to ZIP archives."
msgstr ""
"Este módulo añade la capacidad de importar módulos de Python (:file:`\\*."
"py`, :file:`\\*.pyc`) y paquetes de archivos de formato ZIP. Por lo general, "
"no es necesario utilizar el módulo :mod:`zipimport` explícitamente; se "
"utiliza automáticamente por el mecanismo incorporado :keyword:`import` para "
"los ítems :data:`sys.path` que son rutas a archivos ZIP."

#: ../Doc/library/zipimport.rst:19
msgid ""
"Typically, :data:`sys.path` is a list of directory names as strings.  This "
"module also allows an item of :data:`sys.path` to be a string naming a ZIP "
"file archive. The ZIP archive can contain a subdirectory structure to "
"support package imports, and a path within the archive can be specified to "
"only import from a subdirectory.  For example, the path :file:`example.zip/"
"lib/` would only import from the :file:`lib/` subdirectory within the "
"archive."
msgstr ""
"Típicamente :data:`sys.path` es una lista de cadenas con nombres de "
"directorios. Este módulo también permite a un elemento de  :data:`sys.path` "
"ser una cadena con la que se nombre a un archivo ZIP. El archivo ZIP puede "
"contener una estructura de subdirectorios para soportar la importación de "
"paquetes, y una ruta dentro del archivo puede ser especificada para "
"únicamente importar desde un subdirectorio. Por ejemplo, la ruta  :file:"
"`example.zip/lib/` sólo importaría desde el subdirectorio :file:`lib/` "
"dentro del archivo."

#: ../Doc/library/zipimport.rst:26
msgid ""
"Any files may be present in the ZIP archive, but importers are only invoked "
"for :file:`.py` and :file:`.pyc` files.  ZIP import of dynamic modules (:"
"file:`.pyd`, :file:`.so`) is disallowed. Note that if an archive only "
"contains :file:`.py` files, Python will not attempt to modify the archive by "
"adding the corresponding :file:`.pyc` file, meaning that if a ZIP archive "
"doesn't contain :file:`.pyc` files, importing may be rather slow."
msgstr ""
"Cualquier archivo puede estar presente en el archivo ZIP, pero los "
"importadores solo son invocados para archivos :file:`.py` y :file:`.pyc`. La "
"importación ZIP de módulos dinámicos (:file:`.pyd`, :file:`.so`) no está "
"permitida. Cabe señalar que si un archivo ZIP contiene solamente archivos :"
"file:`.py`, Python no intentará modificar el archivo agregando los "
"correspondientes archivos :file:`.pyc`, esto quiere decir que si un archivo "
"ZIP no contiene archivos :file:`.pyc` la importación puede ser algo lenta."

#: ../Doc/library/zipimport.rst:33
msgid "Previously, ZIP archives with an archive comment were not supported."
msgstr ""
"Anteriormente, los archivos ZIP con un comentario de archivo no eran "
"compatibles."

#: ../Doc/library/zipimport.rst:40
msgid ""
"`PKZIP Application Note <https://pkware.cachefly.net/webdocs/casestudies/"
"APPNOTE.TXT>`_"
msgstr ""
"`PKZIP Nota de aplicación <https://pkware.cachefly.net/webdocs/casestudies/"
"APPNOTE.TXT>`_"

#: ../Doc/library/zipimport.rst:39
msgid ""
"Documentation on the ZIP file format by Phil Katz, the creator of the format "
"and algorithms used."
msgstr ""
"Documentación sobre el formato de archivo ZIP por Phil Katz, el creador del "
"formato y algoritmos utilizados."

#: ../Doc/library/zipimport.rst:45
msgid ":pep:`273` - Import Modules from Zip Archives"
msgstr ":pep:`273` - Importar módulos de archivos Zip"

#: ../Doc/library/zipimport.rst:43
msgid ""
"Written by James C. Ahlstrom, who also provided an implementation. Python "
"2.3 follows the specification in :pep:`273`, but uses an implementation "
"written by Just van Rossum that uses the import hooks described in :pep:"
"`302`."
msgstr ""
"Escrito por James C. Ahlstrom, quien también proporcionó una implementación. "
"Python 2.3 sigue la especificación en PEP 273, pero utiliza una "
"implementación escrita por Just van Rossum que utiliza los ganchos "
"importados descritos en PEP 302."

#: ../Doc/library/zipimport.rst:48
msgid ":mod:`importlib` - The implementation of the import machinery"
msgstr ":mod:`importlib` - La implementación de la maquinaria de importación"

#: ../Doc/library/zipimport.rst:48
msgid ""
"Package providing the relevant protocols for all importers to implement."
msgstr ""
"El paquete proporciona los protocolos relevantes para que los implementen "
"todos los importadores."

#: ../Doc/library/zipimport.rst:52
msgid "This module defines an exception:"
msgstr "Este módulo define una excepción:"

#: ../Doc/library/zipimport.rst:56
msgid ""
"Exception raised by zipimporter objects. It's a subclass of :exc:"
"`ImportError`, so it can be caught as :exc:`ImportError`, too."
msgstr ""
"Excepción lanzada por objetos zipimporter. Es una subclase de :exc:"
"`ImportError`, por lo que también puede ser capturada como :exc:"
"`ImportError`."

#: ../Doc/library/zipimport.rst:63
msgid "zipimporter Objects"
msgstr "Objetos zipimporter"

#: ../Doc/library/zipimport.rst:65
msgid ":class:`zipimporter` is the class for importing ZIP files."
msgstr ":class:`zipimporter` es la clase para importar archivos ZIP."

#: ../Doc/library/zipimport.rst:69
msgid ""
"Create a new zipimporter instance. *archivepath* must be a path to a ZIP "
"file, or to a specific path within a ZIP file.  For example, an "
"*archivepath* of :file:`foo/bar.zip/lib` will look for modules in the :file:"
"`lib` directory inside the ZIP file :file:`foo/bar.zip` (provided that it "
"exists)."
msgstr ""
"Crea una nueva instancia zipimporter. *archivepath* debe ser una ruta a un "
"archivo ZIP, o a una ruta específica dentro de un archivo ZIP. Por ejemplo, "
"un *archivepath* de :file:`foo/bar.zip/lib` buscará módulos en el "
"directorio :file:`lib` dentro del archivo ZIP :file:`foo/bar.zip` (siempre "
"que exista)."

#: ../Doc/library/zipimport.rst:74
msgid ""
":exc:`ZipImportError` is raised if *archivepath* doesn't point to a valid "
"ZIP archive."
msgstr ""
":exc:`ZipImportError` es lanzada si *archivepath* no apunta a un archivo ZIP "
"válido."

#: ../Doc/library/zipimport.rst:79
msgid ""
"Implementation of :meth:`importlib.abc.Loader.create_module` that returns :"
"const:`None` to explicitly request the default semantics."
msgstr ""
"Implementación de :meth:`importlib.abc.Loader.create_module` que retorna :"
"const:`None` para solicitar explícitamente la semántica predeterminada."

#: ../Doc/library/zipimport.rst:87
msgid "Implementation of :meth:`importlib.abc.Loader.exec_module`."
msgstr "Implementación de :meth:`importlib.abc.Loader.exec_module`."

#: ../Doc/library/zipimport.rst:94
msgid "An implementation of :meth:`importlib.abc.PathEntryFinder.find_loader`."
msgstr ""
"Una implementación de :meth:`importlib.abc.PathEntryFinder.find_loader`."

#: ../Doc/library/zipimport.rst:98 ../Doc/library/zipimport.rst:111
msgid "Use :meth:`find_spec` instead."
msgstr "Utilizar en su lugar :meth:`find_spec`."

#: ../Doc/library/zipimport.rst:103
msgid ""
"Search for a module specified by *fullname*. *fullname* must be the fully "
"qualified (dotted) module name. It returns the zipimporter instance itself "
"if the module was found, or :const:`None` if it wasn't. The optional *path* "
"argument is ignored---it's there for compatibility with the importer "
"protocol."
msgstr ""
"Busca un módulo especificado por *fullname*. *fullname* debe ser el nombre "
"completo del módulo (punteado). Retorna la propia instancia zipimporter si "
"el módulo fue encontrado, o :const:`None` si no. El argumento opcional "
"*path* es ignorado --- está ahí por compatibilidad con el protocolo del "
"importador."

#: ../Doc/library/zipimport.rst:116
msgid "An implementation of :meth:`importlib.abc.PathEntryFinder.find_spec`."
msgstr "Una implementación de :meth:`importlib.abc.PathEntryFinder.find_spec`."

#: ../Doc/library/zipimport.rst:123
msgid ""
"Return the code object for the specified module. Raise :exc:`ZipImportError` "
"if the module couldn't be imported."
msgstr ""
"Retorna el objeto de código para el módulo especificado. Lanza :exc:"
"`ZipImportError` si el módulo no se pudo importar."

#: ../Doc/library/zipimport.rst:129
msgid ""
"Return the data associated with *pathname*. Raise :exc:`OSError` if the file "
"wasn't found."
msgstr ""
"Retorna los datos asociados con *pathname*. Lanza :exc:`OSError` si el "
"archivo no fue encontrado."

#: ../Doc/library/zipimport.rst:132
msgid ":exc:`IOError` used to be raised instead of :exc:`OSError`."
msgstr ":exc:`IOError` solía lanzarse en lugar de :exc:`OSError`."

#: ../Doc/library/zipimport.rst:138
msgid ""
"Return the value ``__file__`` would be set to if the specified module was "
"imported. Raise :exc:`ZipImportError` if the module couldn't be imported."
msgstr ""
"Retorna el valor que se le habría asignado a ``__file__`` si el módulo "
"especificado fue importado. Lanza :exc:`ZipImportError` si el módulo no se "
"pudo importar."

#: ../Doc/library/zipimport.rst:147
msgid ""
"Return the source code for the specified module. Raise :exc:`ZipImportError` "
"if the module couldn't be found, return :const:`None` if the archive does "
"contain the module, but has no source for it."
msgstr ""
"Retorna el código fuente para el módulo especificado. Lanza :exc:"
"`ZipImportError` si el módulo no pudo ser encontrado, retorna :const:`None` "
"si el archivo contiene al módulo, pero no tiene fuente para ello."

#: ../Doc/library/zipimport.rst:155
msgid ""
"Return ``True`` if the module specified by *fullname* is a package. Raise :"
"exc:`ZipImportError` if the module couldn't be found."
msgstr ""
"Retorna ``True`` si el módulo especificado por *fullname* es un paquete. "
"Lanza :exc:`ZipImportError` si el módulo no pudo ser encontrado."

# dotted notation -- punteado
#: ../Doc/library/zipimport.rst:161
msgid ""
"Load the module specified by *fullname*. *fullname* must be the fully "
"qualified (dotted) module name. Returns the imported module on success, "
"raises :exc:`ZipImportError` on failure."
msgstr ""
"Carga el módulo especificado por *fullname*. *fullname* debe ser el nombre "
"completo de módulo (punteado). Retorna el módulo importado, o lanza :exc:"
"`ZipImportError` si no fue encontrado."

#: ../Doc/library/zipimport.rst:167
msgid "Use :meth:`exec_module` instead."
msgstr "Utilizar en su lugar :meth:`exec_module`."

#: ../Doc/library/zipimport.rst:172
msgid ""
"Clear out the internal cache of information about files found within the ZIP "
"archive."
msgstr ""
"Limpia la caché interna de información sobre los archivos que se encuentran "
"dentro del archivo ZIP."

#: ../Doc/library/zipimport.rst:180
msgid ""
"The file name of the importer's associated ZIP file, without a possible "
"subpath."
msgstr ""
"El nombre de archivo del archivo ZIP asociado del importador, sin una "
"posible sub-ruta."

#: ../Doc/library/zipimport.rst:186
msgid ""
"The subpath within the ZIP file where modules are searched.  This is the "
"empty string for zipimporter objects which point to the root of the ZIP file."
msgstr ""
"La sub-ruta dentro del archivo ZIP donde se buscan los módulos. Esta es la "
"cadena vacía para objetos zipimporter la cual apunta a la raíz del archivo "
"ZIP."

#: ../Doc/library/zipimport.rst:190
msgid ""
"The :attr:`archive` and :attr:`prefix` attributes, when combined with a "
"slash, equal the original *archivepath* argument given to the :class:"
"`zipimporter` constructor."
msgstr ""
"Los atributos :attr:`archive` y :attr:`prefix`, cuando son combinados con "
"una barra diagonal, son iguales al argumento original *archivepath* dado al "
"constructor :class:`zipimporter`."

#: ../Doc/library/zipimport.rst:198
msgid "Examples"
msgstr "Ejemplos"

#: ../Doc/library/zipimport.rst:200
msgid ""
"Here is an example that imports a module from a ZIP archive - note that the :"
"mod:`zipimport` module is not explicitly used."
msgstr ""
"Este es un ejemplo que importa un módulo de un archivo ZIP - tenga en cuenta "
"que el módulo :mod:`zipimport` no está usado explícitamente."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-10-18 17:55-0300\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/xml.dom.pulldom.rst:2
msgid ":mod:`xml.dom.pulldom` --- Support for building partial DOM trees"
msgstr ""
":mod:`xml.dom.pulldom` --- Soporte para la construcción parcial de árboles "
"DOM"

#: ../Doc/library/xml.dom.pulldom.rst:9
msgid "**Source code:** :source:`Lib/xml/dom/pulldom.py`"
msgstr "**Source code:** :source:`Lib/xml/dom/pulldom.py`"

#: ../Doc/library/xml.dom.pulldom.rst:13
msgid ""
"The :mod:`xml.dom.pulldom` module provides a \"pull parser\" which can also "
"be asked to produce DOM-accessible fragments of the document where "
"necessary. The basic concept involves pulling \"events\" from a stream of "
"incoming XML and processing them. In contrast to SAX which also employs an "
"event-driven processing model together with callbacks, the user of a pull "
"parser is responsible for explicitly pulling events from the stream, looping "
"over those events until either processing is finished or an error condition "
"occurs."
msgstr ""
"El módulo :mod:`xml.dom.pulldom` proporciona un \"pull parser\" al que "
"también se le puede pedir que produzca DOM-fragmentos del documento "
"accesibles cuando sea necesario. El concepto básico implica extraer \"eventos"
"\" desde una secuencia (*stream*) de entrada XML y procesarlos. A diferencia "
"de SAX, que también emplea un modelo de procesamiento orientado a eventos "
"junto con callbacks (retrollamada), el usuario de un analizador de "
"extracción (*pull parser*) es responsable de extraer explícitamente eventos "
"de la secuencia, recorriendo esos eventos hasta que finalice el "
"procesamiento o se produzca una condición de error."

#: ../Doc/library/xml.dom.pulldom.rst:24
msgid ""
"The :mod:`xml.dom.pulldom` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
"El módulo :mod:`xml.dom.pulldom` no es seguro contra datos maliciosamente "
"construidos . Si necesita analizar datos que no son confiables o no "
"autenticados, consulte :ref:`xml-vulnerabilities`."

#: ../Doc/library/xml.dom.pulldom.rst:30
msgid ""
"The SAX parser no longer processes general external entities by default to "
"increase security by default. To enable processing of external entities, "
"pass a custom parser instance in::"
msgstr ""
"El analizador SAX ya no procesa entidades externas generales de forma "
"predeterminada para aumentar la seguridad de forma predeterminada. Para "
"habilitar el procesamiento de entidades externas, pase una instancia de "
"analizador personalizada (*custom parser instance in::*)"

#: ../Doc/library/xml.dom.pulldom.rst:43
msgid "Example::"
msgstr "Ejemplo:"

#: ../Doc/library/xml.dom.pulldom.rst:54
msgid "``event`` is a constant and can be one of:"
msgstr "``event`` es una constante y puede ser uno de:"

#: ../Doc/library/xml.dom.pulldom.rst:56
msgid ":data:`START_ELEMENT`"
msgstr ":data:`START_ELEMENT` (Iniciar elemento)"

#: ../Doc/library/xml.dom.pulldom.rst:57
msgid ":data:`END_ELEMENT`"
msgstr ":data:`END_ELEMENT` (Finalizar elemento)"

#: ../Doc/library/xml.dom.pulldom.rst:58
msgid ":data:`COMMENT`"
msgstr ":data:`COMMENT` (comentario)"

#: ../Doc/library/xml.dom.pulldom.rst:59
msgid ":data:`START_DOCUMENT`"
msgstr ":data:`START_DOCUMENT` (Iniciar documento)"

#: ../Doc/library/xml.dom.pulldom.rst:60
msgid ":data:`END_DOCUMENT`"
msgstr ":data:`END_DOCUMENT` (finalizar documento)"

#: ../Doc/library/xml.dom.pulldom.rst:61
msgid ":data:`CHARACTERS`"
msgstr ":data:`CHARACTERS` (caracteres)"

#: ../Doc/library/xml.dom.pulldom.rst:62
msgid ":data:`PROCESSING_INSTRUCTION`"
msgstr ":data:`PROCESSING_INSTRUCTION` (instrucción de procesamiento)"

#: ../Doc/library/xml.dom.pulldom.rst:63
msgid ":data:`IGNORABLE_WHITESPACE`"
msgstr ":data:`IGNORABLE_WHITESPACE` (Espacio en blanco que puede ignorarse)"

#: ../Doc/library/xml.dom.pulldom.rst:65
msgid ""
"``node`` is an object of type :class:`xml.dom.minidom.Document`, :class:`xml."
"dom.minidom.Element` or :class:`xml.dom.minidom.Text`."
msgstr ""
"``node`` es un objeto del tipo :class:`xml.dom.minidom.Document`, :class:"
"`xml.dom.minidom.Element` ó :class:`xml.dom.minidom.Text`."

#: ../Doc/library/xml.dom.pulldom.rst:68
msgid ""
"Since the document is treated as a \"flat\" stream of events, the document "
"\"tree\" is implicitly traversed and the desired elements are found "
"regardless of their depth in the tree. In other words, one does not need to "
"consider hierarchical issues such as recursive searching of the document "
"nodes, although if the context of elements were important, one would either "
"need to maintain some context-related state (i.e. remembering where one is "
"in the document at any given point) or to make use of the :func:"
"`DOMEventStream.expandNode` method and switch to DOM-related processing."
msgstr ""
"Puesto que el documento se trata como una secuencia \"flat\" (plana) de "
"eventos, el documento \"tree\" (árbol) se atraviesa implícitamente y los "
"elementos deseados se encuentran independientemente de su profundidad en el "
"árbol. En otras palabras, no es necesario tener en cuenta cuestiones "
"jerárquicas como la búsqueda recursiva de los nodos de documento, aunque si "
"el contexto de los elementos fuera importante, es necesario mantener algún "
"estado relacionado con el contexto (es decir, recordar dónde se encuentra en "
"el documento en un momento dado) o hacer uso del método :func:"
"`DOMEventStream.expandNode` y cambiar al procesamiento relacionado con DOM."

#: ../Doc/library/xml.dom.pulldom.rst:80 ../Doc/library/xml.dom.pulldom.rst:85
msgid "Subclass of :class:`xml.sax.handler.ContentHandler`."
msgstr "Subclase de :class:`xml.sax.handler.ContentHandler`."

#: ../Doc/library/xml.dom.pulldom.rst:90
msgid ""
"Return a :class:`DOMEventStream` from the given input. *stream_or_string* "
"may be either a file name, or a file-like object. *parser*, if given, must "
"be an :class:`~xml.sax.xmlreader.XMLReader` object. This function will "
"change the document handler of the parser and activate namespace support; "
"other parser configuration (like setting an entity resolver) must have been "
"done in advance."
msgstr ""
"Retorna un :class:`DOMEventStream` de la entrada dada. *stream_or_string* "
"(secuencia o cadena) puede ser un nombre de archivo o un objeto similar a un "
"archivo, *parser*, si se indica, debe ser un objeto :class:`~xml.sax."
"xmlreader.XMLReader`. Esta función cambiará el controlador de documentos del "
"analizador y activará el soporte de espacios de nombres; otra configuración "
"del analizador (como establecer un solucionador de entidades) debe haberse "
"realizado de antemano."

#: ../Doc/library/xml.dom.pulldom.rst:97
msgid ""
"If you have XML in a string, you can use the :func:`parseString` function "
"instead:"
msgstr ""
"Si tiene XML en una cadena, puede usar en su lugar la función :func:"
"`parseString`:"

#: ../Doc/library/xml.dom.pulldom.rst:101
msgid ""
"Return a :class:`DOMEventStream` that represents the (Unicode) *string*."
msgstr ""
"Retorna una: clase :class:`DOMEventStream` que representa la cadena "
"(Unicode) *strnig* (cadena)"

#: ../Doc/library/xml.dom.pulldom.rst:105
msgid "Default value for the *bufsize* parameter to :func:`parse`."
msgstr "Valor predeterminado para el parámetro *bufsize* para :func:`parse`."

#: ../Doc/library/xml.dom.pulldom.rst:107
msgid ""
"The value of this variable can be changed before calling :func:`parse` and "
"the new value will take effect."
msgstr ""
"El valor de las variables puede ser cambiado antes de llamar a :func:`parse` "
"y el nuevo valor tendrá efecto."

#: ../Doc/library/xml.dom.pulldom.rst:113
msgid "DOMEventStream Objects"
msgstr "Objetos DOMEventStream"

#: ../Doc/library/xml.dom.pulldom.rst:117
msgid "Support for :meth:`sequence protocol <__getitem__>` is deprecated."
msgstr "El soporte para :meth:`sequence protocol <__getitem__>` está obsoleto."

#: ../Doc/library/xml.dom.pulldom.rst:122
msgid ""
"Return a tuple containing *event* and the current *node* as :class:`xml.dom."
"minidom.Document` if event equals :data:`START_DOCUMENT`, :class:`xml.dom."
"minidom.Element` if event equals :data:`START_ELEMENT` or :data:"
"`END_ELEMENT` or :class:`xml.dom.minidom.Text` if event equals :data:"
"`CHARACTERS`. The current node does not contain information about its "
"children, unless :func:`expandNode` is called."
msgstr ""
"Retorna el contenido de la tupla *event* y del *node* corriente como :class:"
"`xml.dom.minidom.Document` si el evento es igual a :data:`START_DOCUMENT`, :"
"class:`xml.dom.minidom.Element` si el evento es igual a :data:"
"`START_ELEMENT` o :data:`END_ELEMENT` o :class:`xml.dom.minidom.Text` si el "
"evento es igual a :data:`CHARACTERS`. El nodo actual no es contiene "
"información sobre sus hijos a menos que se llame a la función :func:"
"`expandNode`."

#: ../Doc/library/xml.dom.pulldom.rst:132
msgid "Expands all children of *node* into *node*. Example::"
msgstr "Expande todos los hijos de *node* en *node* (nodo en nodo). Ejemplo:"

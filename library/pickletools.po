# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: 2020-10-10 10:26-0400\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es_AR\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/pickletools.rst:2
msgid ":mod:`pickletools` --- Tools for pickle developers"
msgstr ":mod:`pickletools` --- Herramientas para desarrolladores pickle"

#: ../Doc/library/pickletools.rst:8
msgid "**Source code:** :source:`Lib/pickletools.py`"
msgstr "**Código fuente:** :source:`Lib/pickletools.py`"

#: ../Doc/library/pickletools.rst:13
msgid ""
"This module contains various constants relating to the intimate details of "
"the :mod:`pickle` module, some lengthy comments about the implementation, "
"and a few useful functions for analyzing pickled data.  The contents of this "
"module are useful for Python core developers who are working on the :mod:"
"`pickle`; ordinary users of the :mod:`pickle` module probably won't find "
"the :mod:`pickletools` module relevant."
msgstr ""
"Este módulo contiene varias constantes relacionadas con los detalles íntimos "
"del módulo :mod:`pickle`, algunos comentarios largos sobre la implementación "
"y algunas funciones útiles para analizar pickled data.  El contenido de este "
"módulo es útil para los desarrolladores principales de Python que están "
"trabajando en el :mod:`pickle`; los usuarios ordinarios del módulo :mod:"
"`pickle` probablemente no encontrarán relevante el módulo :mod:`pickletools`."

#: ../Doc/library/pickletools.rst:21
msgid "Command line usage"
msgstr "Uso de la línea de comandos"

#: ../Doc/library/pickletools.rst:25
msgid ""
"When invoked from the command line, ``python -m pickletools`` will "
"disassemble the contents of one or more pickle files.  Note that if you want "
"to see the Python object stored in the pickle rather than the details of "
"pickle format, you may want to use ``-m pickle`` instead. However, when the "
"pickle file that you want to examine comes from an untrusted source, ``-m "
"pickletools`` is a safer option because it does not execute pickle bytecode."
msgstr ""
"Cuando se invoca desde la línea de comandos, ``python -m pickletools`` "
"desensamblará el contenido de uno o más archivos pickle.  Tenga en cuenta "
"que si desea ver el objeto Python almacenado en el pickle en lugar de los "
"detalles del formato de pickle, es posible que desee utilizar ``-m pickle`` "
"en su lugar. Sin embargo, cuando el archivo de pickle que desea examinar "
"proviene de una fuente que no es de confianza, ``-m pickletools`` es una "
"opción más segura porque no ejecuta el código de bytes de pickle."

#: ../Doc/library/pickletools.rst:33
msgid "For example, with a tuple ``(1, 2)`` pickled in file ``x.pickle``:"
msgstr ""
"Por ejemplo, con una tupla ``(1, 2)`` pickled en el archivo ``x.pickle``:"

#: ../Doc/library/pickletools.rst:50
msgid "Command line options"
msgstr "Opciones de línea de comandos"

#: ../Doc/library/pickletools.rst:56
msgid "Annotate each line with a short opcode description."
msgstr "Anote cada línea con una breve descripción del código de operación."

#: ../Doc/library/pickletools.rst:60
msgid "Name of a file where the output should be written."
msgstr "Nombre de un archivo donde se debe escribir la salida."

#: ../Doc/library/pickletools.rst:64
msgid "The number of blanks by which to indent a new MARK level."
msgstr ""
"Número de espacios en blanco por los que se aplica una sangría a un nuevo "
"nivel de MARK."

#: ../Doc/library/pickletools.rst:68
msgid ""
"When multiple objects are disassembled, preserve memo between disassemblies."
msgstr ""
"Cuando se desensamblan varios objetos, conserve la nota entre los "
"ensamblajes."

#: ../Doc/library/pickletools.rst:73
msgid ""
"When more than one pickle file are specified, print given preamble before "
"each disassembly."
msgstr ""
"Cuando se especifica más de un archivo pickle, imprima un preámbulo "
"determinado antes de cada desensamblado."

#: ../Doc/library/pickletools.rst:79
msgid "Programmatic Interface"
msgstr "Interfaz programática"

#: ../Doc/library/pickletools.rst:84
msgid ""
"Outputs a symbolic disassembly of the pickle to the file-like object *out*, "
"defaulting to ``sys.stdout``.  *pickle* can be a string or a file-like "
"object.  *memo* can be a Python dictionary that will be used as the pickle's "
"memo; it can be used to perform disassemblies across multiple pickles "
"created by the same pickler. Successive levels, indicated by ``MARK`` "
"opcodes in the stream, are indented by *indentlevel* spaces.  If a nonzero "
"value is given to *annotate*, each opcode in the output is annotated with a "
"short description.  The value of *annotate* is used as a hint for the column "
"where annotation should start."
msgstr ""
"Produce un desensamblado simbólico del pickle en el objeto similar a un "
"archivo *salida*, de forma predeterminada en ``sys.stdout``.  *pickle* puede "
"ser una cadena o un objeto similar a un archivo.  *memo* puede ser un "
"diccionario Python que se utilizará como nota del pickle; se puede utilizar "
"para realizar ensamblajes de desuso en varios pickles creados por el mismo "
"selector. Los niveles sucesivos, indicados por los códigos de operación "
"``MARK`` en la secuencia, son indentados por espacios *indentlevel*.  Si se "
"da un valor distinto de cero a *anotar*, cada código de operación de la "
"salida se anota con una breve descripción.  El valor de *anotar* se utiliza "
"como sugerencia para la columna donde debe comenzar la anotación."

#: ../Doc/library/pickletools.rst:95
msgid "The *annotate* argument."
msgstr "El argumento *anotar*."

#: ../Doc/library/pickletools.rst:100
msgid ""
"Provides an :term:`iterator` over all of the opcodes in a pickle, returning "
"a sequence of ``(opcode, arg, pos)`` triples.  *opcode* is an instance of "
"an :class:`OpcodeInfo` class; *arg* is the decoded value, as a Python "
"object, of the opcode's argument; *pos* is the position at which this opcode "
"is located. *pickle* can be a string or a file-like object."
msgstr ""
"Proporciona un :term:`iterator` sobre todos los códigos de operación en un "
"pickle, retornando una secuencia de triples ``(opcode, arg, pos)``.  "
"*opcode* es una instancia de una clase :class:`OpcodeInfo`; *arg* es el "
"valor descodificado, como un objeto Python, del argumento del código de "
"operación; *pos* es la posición en la que se encuentra este código de "
"operación. *pickle* puede ser una cadena o un objeto similar a un archivo."

#: ../Doc/library/pickletools.rst:108
msgid ""
"Returns a new equivalent pickle string after eliminating unused ``PUT`` "
"opcodes. The optimized pickle is shorter, takes less transmission time, "
"requires less storage space, and unpickles more efficiently."
msgstr ""
"Retorna una nueva cadena pickle equivalente después de eliminar los códigos "
"de operación ``PUT`` no utilizados. El pickle optimizado es más corto, toma "
"menos tiempo de transmisión, requiere menos espacio de almacenamiento y se "
"restaura de manera más eficiente."

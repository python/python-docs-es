# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-09-28 14:19+0530\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/email.errors.rst:2
msgid ":mod:`email.errors`: Exception and Defect classes"
msgstr ":mod:`email.errors`: Clases de excepción y defecto"

#: ../Doc/library/email.errors.rst:7
msgid "**Source code:** :source:`Lib/email/errors.py`"
msgstr "**Código fuente:** :source:`Lib/email/errors.py`"

#: ../Doc/library/email.errors.rst:11
msgid ""
"The following exception classes are defined in the :mod:`email.errors` "
"module:"
msgstr ""
"Las siguientes clases de excepción se definen en el módulo :mod:`email."
"errors`:"

#: ../Doc/library/email.errors.rst:16
msgid ""
"This is the base class for all exceptions that the :mod:`email` package can "
"raise.  It is derived from the standard :exc:`Exception` class and defines "
"no additional methods."
msgstr ""
"Esta es la clase base para todas las excepciones que el paquete :mod:"
"`email`  puede lanzar. Se deriva de la clase estándar :exc:`Exception`  y no "
"define métodos adicionales."

#: ../Doc/library/email.errors.rst:23
msgid ""
"This is the base class for exceptions raised by the :class:`~email.parser."
"Parser` class.  It is derived from :exc:`MessageError`.  This class is also "
"used internally by the parser used by :mod:`~email.headerregistry`."
msgstr ""
"Esta es la clase base para las excepciones generadas por la clase :class:"
"`~email.parser.Parser`. Se deriva de :exc:`MessageError`. Esta clase también "
"es utilizada internamente por el analizador sintáctico utilizado por :mod:"
"`~email.headerregistry`."

#: ../Doc/library/email.errors.rst:31
msgid ""
"Raised under some error conditions when parsing the :rfc:`5322` headers of a "
"message, this class is derived from :exc:`MessageParseError`.  The :meth:"
"`~email.message.EmailMessage.set_boundary` method will raise this error if "
"the content type is unknown when the method is called. :class:`~email.header."
"Header` may raise this error for certain base64 decoding errors, and when an "
"attempt is made to create a header that appears to contain an embedded "
"header (that is, there is what is supposed to be a continuation line that "
"has no leading whitespace and looks like a header)."
msgstr ""
"Lanzada en algunas condiciones de error al analizar los encabezados :rfc:"
"`5322` de un mensaje, esta clase se deriva de :exc:`MessageParseError`. El "
"método :meth:`~email.message.EmailMessage.set_boundary` lanzará este error "
"si el tipo de contenido es desconocido cuando se llama al método. :class:"
"`~email.header.Header` puede lanzar este error para ciertos errores de "
"decodificación de base64, y cuando se intenta crear un encabezado que parece "
"contener un encabezado incrustado (es decir, hay lo que se supone que es un "
"línea de continuación que no tiene espacios en blanco iniciales y parece un "
"encabezado)."

#: ../Doc/library/email.errors.rst:43
msgid "Deprecated and no longer used."
msgstr "Deprecada y no utilizada actualmente."

#: ../Doc/library/email.errors.rst:48
msgid ""
"Raised when a payload is added to a :class:`~email.message.Message` object "
"using :meth:`add_payload`, but the payload is already a scalar and the "
"message's :mailheader:`Content-Type` main type is not either :mimetype:"
"`multipart` or missing.  :exc:`MultipartConversionError` multiply inherits "
"from :exc:`MessageError` and the built-in :exc:`TypeError`."
msgstr ""
"Se lanza cuando se agrega una carga útil (*payload*) a un objeto :class:"
"`~email.message.Message` usando :meth:`add_payload`, pero la carga útil ya "
"es un número escalar y el tipo principal del mensaje :mailheader:`Content-"
"Type` no es :mimetype:`multipart` ni perdido (*missing*). :exc:"
"`MultipartConversionError` hereda al mismo tiempo de :exc:`MessageError` y "
"el incorporado :exc:`TypeError`."

#: ../Doc/library/email.errors.rst:54
msgid ""
"Since :meth:`Message.add_payload` is deprecated, this exception is rarely "
"raised in practice.  However the exception may also be raised if the :meth:"
"`~email.message.Message.attach` method is called on an instance of a class "
"derived from :class:`~email.mime.nonmultipart.MIMENonMultipart` (e.g. :class:"
"`~email.mime.image.MIMEImage`)."
msgstr ""
"Dado que :meth:`Message.add_payload` está en desuso, esta excepción rara vez "
"se presenta en la práctica. Sin embargo, la excepción también se puede "
"lanzar si se llama al método :meth:`~email.message.Message.attach` en una "
"instancia de una clase derivada de :class:`~email.mime.nonmultipart."
"MIMENonMultipart` (por ejemplo :class:`~email.mime.image.MIMEImage`)."

#: ../Doc/library/email.errors.rst:62
msgid ""
"Here is the list of the defects that the :class:`~email.parser.FeedParser` "
"can find while parsing messages.  Note that the defects are added to the "
"message where the problem was found, so for example, if a message nested "
"inside a :mimetype:`multipart/alternative` had a malformed header, that "
"nested message object would have a defect, but the containing messages would "
"not."
msgstr ""
"Aquí está la lista de defectos que :class:`~email.parser.FeedParser` puede "
"encontrar mientras analiza mensajes. Tenga en cuenta que los defectos se "
"agregan al mensaje donde se encontró el problema, por ejemplo, si un mensaje "
"anidado dentro de un :mimetype:`multipart/alternative` tenía un encabezado "
"mal formado, ese objeto de mensaje anidado tendría un defecto, pero el "
"contenido los mensajes no lo harían."

#: ../Doc/library/email.errors.rst:68
msgid ""
"All defect classes are subclassed from :class:`email.errors.MessageDefect`."
msgstr ""
"Todas las clases de defectos se derivan de :class:`email.errors."
"MessageDefect`."

#: ../Doc/library/email.errors.rst:70
msgid ""
":class:`NoBoundaryInMultipartDefect` -- A message claimed to be a multipart, "
"but had no :mimetype:`boundary` parameter."
msgstr ""
":class:`NoBoundaryInMultipartDefect` -- Un mensaje que se dice que es "
"multiparte, pero que no tiene el parámetro :mimetype:`boundary`."

#: ../Doc/library/email.errors.rst:73
msgid ""
":class:`StartBoundaryNotFoundDefect` -- The start boundary claimed in the :"
"mailheader:`Content-Type` header was never found."
msgstr ""
":class:`StartBoundaryNotFoundDefect` -- El límite de inicio reclamado en el "
"encabezado :mailheader:`Content-Type` nunca se encontró."

#: ../Doc/library/email.errors.rst:76
msgid ""
":class:`CloseBoundaryNotFoundDefect` -- A start boundary was found, but no "
"corresponding close boundary was ever found."
msgstr ""
":class:`CloseBoundaryNotFoundDefect` -- Se encontró un límite de inicio, "
"pero nunca se encontró un límite cercano correspondiente."

#: ../Doc/library/email.errors.rst:81
msgid ""
":class:`FirstHeaderLineIsContinuationDefect` -- The message had a "
"continuation line as its first header line."
msgstr ""
":class:`FirstHeaderLineIsContinuationDefect` -- El mensaje tenía una línea "
"de continuación como primera línea de encabezado."

#: ../Doc/library/email.errors.rst:84
msgid ""
":class:`MisplacedEnvelopeHeaderDefect` - A \"Unix From\" header was found in "
"the middle of a header block."
msgstr ""
":class:`MisplacedEnvelopeHeaderDefect` -- Se encontró un encabezado \"*Unix "
"From*\" en medio de un bloque de encabezado."

#: ../Doc/library/email.errors.rst:87
msgid ""
":class:`MissingHeaderBodySeparatorDefect` - A line was found while parsing "
"headers that had no leading white space but contained no ':'.  Parsing "
"continues assuming that the line represents the first line of the body."
msgstr ""
":class:`MissingHeaderBodySeparatorDefect` - Se encontró una línea al "
"analizar sintácticamente los encabezados que no tenían espacios en blanco "
"iniciales pero que no contenían ':'. El análisis continúa asumiendo que la "
"línea representa la primera línea del cuerpo."

#: ../Doc/library/email.errors.rst:93
msgid ""
":class:`MalformedHeaderDefect` -- A header was found that was missing a "
"colon, or was otherwise malformed."
msgstr ""
":class:`MalformedHeaderDefect` -- Se encontró un encabezado al que le "
"faltaban dos puntos o tenía un formato incorrecto."

#: ../Doc/library/email.errors.rst:96
msgid "This defect has not been used for several Python versions."
msgstr "Este defecto no se ha utilizado por varias versiones de Python."

#: ../Doc/library/email.errors.rst:99
msgid ""
":class:`MultipartInvariantViolationDefect` -- A message claimed to be a :"
"mimetype:`multipart`, but no subparts were found.  Note that when a message "
"has this defect, its :meth:`~email.message.Message.is_multipart` method may "
"return ``False`` even though its content type claims to be :mimetype:"
"`multipart`."
msgstr ""
":class:`MultipartInvariantViolationDefect`-- Un mensaje que se afirma ser :"
"mimetype:`multipart`, pero no se encontraron subpartes. Tenga en cuenta que "
"cuando un mensaje tiene este defecto, su método :meth:`~email.message."
"Message.is_multipart` puede retornar ``False`` aunque su tipo de contenido "
"afirma ser :mimetype:`multipart`."

#: ../Doc/library/email.errors.rst:104
msgid ""
":class:`InvalidBase64PaddingDefect` -- When decoding a block of base64 "
"encoded bytes, the padding was not correct.  Enough padding is added to "
"perform the decode, but the resulting decoded bytes may be invalid."
msgstr ""
":class:`InvalidBase64PaddingDefect` -- Al decodificar un bloque de bytes "
"codificados en base64, el relleno no era correcto. Se agrega suficiente "
"relleno (*padding*) para realizar la decodificación, pero los bytes "
"decodificados resultantes pueden no ser válidos."

#: ../Doc/library/email.errors.rst:108
msgid ""
":class:`InvalidBase64CharactersDefect` -- When decoding a block of base64 "
"encoded bytes, characters outside the base64 alphabet were encountered. The "
"characters are ignored, but the resulting decoded bytes may be invalid."
msgstr ""
":class:`InvalidBase64CharactersDefect` -- Al decodificar un bloque de bytes "
"codificados en `base64`, se encontraron caracteres fuera del alfabeto "
"`base64`. Los caracteres se ignoran, pero los bytes decodificados "
"resultantes pueden no ser válidos."

#: ../Doc/library/email.errors.rst:112
msgid ""
":class:`InvalidBase64LengthDefect` -- When decoding a block of base64 "
"encoded bytes, the number of non-padding base64 characters was invalid (1 "
"more than a multiple of 4).  The encoded block was kept as-is."
msgstr ""
":class:`InvalidBase64LengthDefect` -- Al decodificar un bloque de bytes "
"codificados en `base64`, el número de caracteres `base64` sin relleno no era "
"válido (1 más que un múltiplo de 4). El bloque codificado se mantuvo tal "
"cual."

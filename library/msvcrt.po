# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-10-09 11:16+0100\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es_ES\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/msvcrt.rst:2
msgid ":mod:`msvcrt` --- Useful routines from the MS VC++ runtime"
msgstr ":mod:`msvcrt` --- Rutinas útiles del entorno de ejecución MS VC++"

#: ../Doc/library/msvcrt.rst:12
msgid ""
"These functions provide access to some useful capabilities on Windows "
"platforms. Some higher-level modules use these functions to build the  "
"Windows implementations of their services.  For example, the :mod:`getpass` "
"module uses this in the implementation of the :func:`getpass` function."
msgstr ""
"Estas funciones dan acceso a ciertas capacidades útiles en plataformas "
"Windows. Algunos módulos de más alto nivel usan estas funciones para crear "
"las implementaciones en Windows de sus servicios. Por ejemplo, el módulo :"
"mod:`getpass` usa esto en la implementación de la función :func:`getpass`."

#: ../Doc/library/msvcrt.rst:17
msgid ""
"Further documentation on these functions can be found in the Platform API "
"documentation."
msgstr ""
"Más información sobre estas funciones se pueden encontrar en la "
"documentación de la API de la plataforma."

#: ../Doc/library/msvcrt.rst:20
msgid ""
"The module implements both the normal and wide char variants of the console "
"I/O api. The normal API deals only with ASCII characters and is of limited "
"use for internationalized applications. The wide char API should be used "
"where ever possible."
msgstr ""
"El módulo implementa las variantes tanto de caracteres normales como amplios "
"de la API E/S de la consola (se codifican en más de 8 bits, pudiendo llegar "
"hasta 32). La API normal se ocupa solamente de caracteres ASCII y es de uso "
"limitado a aplicaciones internacionales. La API para caracteres amplios se "
"recomienda usar siempre que sea posible."

#: ../Doc/library/msvcrt.rst:25
msgid ""
"Operations in this module now raise :exc:`OSError` where :exc:`IOError` was "
"raised."
msgstr ""
"Las operaciones en este módulo lanzan ahora :exc:`OSError` donde antes se "
"lanzaba :exc:`IOError`."

#: ../Doc/library/msvcrt.rst:33
msgid "File Operations"
msgstr "Operaciones con archivos"

#: ../Doc/library/msvcrt.rst:38
msgid ""
"Lock part of a file based on file descriptor *fd* from the C runtime.  "
"Raises :exc:`OSError` on failure.  The locked region of the file extends "
"from the current file position for *nbytes* bytes, and may continue beyond "
"the end of the file.  *mode* must be one of the :const:`LK_\\*` constants "
"listed below. Multiple regions in a file may be locked at the same time, but "
"may not overlap.  Adjacent regions are not merged; they must be unlocked "
"individually."
msgstr ""
"Bloquea parte de un archivo basado en el descriptor del archivo *fd* del "
"entorno de ejecución C. Lanza una excepción :exc:`OSError` si falla. La "
"región que ha sido bloqueada se extiende desde la posición del archivo "
"actual hasta *nbytes* bytes y puede que continúe aún habiendo llegado al "
"final del archivo. *mode* tiene que ser una de las constantes :const:`LK_"
"\\*` que están enumeradas más abajo. Se pueden bloquear varias regiones de "
"un mismo archivo pero no se pueden superponer. Las regiones adyacentes no se "
"combinan; tienen que ser desbloqueadas manualmente."

#: ../Doc/library/msvcrt.rst:45
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.locking`` with arguments "
"``fd``, ``mode``, ``nbytes``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``msvcrt.locking`` con los "
"argumentos ``fd``, ``mode``, ``nbytes``."

#: ../Doc/library/msvcrt.rst:51
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, the program "
"immediately tries again after 1 second.  If, after 10 attempts, the bytes "
"cannot be locked, :exc:`OSError` is raised."
msgstr ""
"Bloquea los bytes especificados. Si no se pueden bloquear, el programa lo "
"intenta de nuevo tras 1 segundo. Si, tras 10 intentos, no puede bloquear los "
"bytes, se lanza una excepción :exc:`OSError`."

#: ../Doc/library/msvcrt.rst:59
msgid ""
"Locks the specified bytes. If the bytes cannot be locked, :exc:`OSError` is "
"raised."
msgstr ""
"Bloquea los bytes especificados. Si no se pueden bloquear, lanza una "
"excepción :exc:`OSError`."

#: ../Doc/library/msvcrt.rst:65
msgid "Unlocks the specified bytes, which must have been previously locked."
msgstr ""
"Desbloquea los bytes especificados que han sido previamente bloqueados."

#: ../Doc/library/msvcrt.rst:70
msgid ""
"Set the line-end translation mode for the file descriptor *fd*. To set it to "
"text mode, *flags* should be :const:`os.O_TEXT`; for binary, it should be :"
"const:`os.O_BINARY`."
msgstr ""
"Establece el modo traducción del final de línea del descriptor de un archivo "
"*fd*. Si se establece como modo texto, *flags* debería ser :const:`os."
"O_TEXT`; para establecerlo como modo binario, debería ser :const:`os."
"O_BINARY`."

#: ../Doc/library/msvcrt.rst:77
msgid ""
"Create a C runtime file descriptor from the file handle *handle*.  The "
"*flags* parameter should be a bitwise OR of :const:`os.O_APPEND`, :const:`os."
"O_RDONLY`, and :const:`os.O_TEXT`.  The returned file descriptor may be used "
"as a parameter to :func:`os.fdopen` to create a file object."
msgstr ""
"Crea un descriptor de archivo en el entorno de ejecución de C desde el "
"manejador de archivo *handle*.  El parámetro *flags* debe ser un OR bit a "
"bit de :const:`os.O_APPEND`, :const:`os.O_RDONLY`, y :const:`os.O_TEXT`. El "
"descriptor de archivo retornado se puede utilizar como parámetro para :func:"
"`os.fdopen` para crear un objeto archivo."

#: ../Doc/library/msvcrt.rst:82
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.open_osfhandle`` with "
"arguments ``handle``, ``flags``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``msvcrt.open_osfhandle`` con "
"los argumentos ``handle``, ``flags``."

#: ../Doc/library/msvcrt.rst:87
msgid ""
"Return the file handle for the file descriptor *fd*.  Raises :exc:`OSError` "
"if *fd* is not recognized."
msgstr ""
"Retorna el manejador de archivo para un descriptor de archivo *fd*. Lanza "
"una excepción :exc:`OSError` si *fd* no se reconoce."

#: ../Doc/library/msvcrt.rst:90
msgid ""
"Raises an :ref:`auditing event <auditing>` ``msvcrt.get_osfhandle`` with "
"argument ``fd``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``msvcrt.get_osfhandle`` con "
"el  argumento ``fd``."

#: ../Doc/library/msvcrt.rst:96
msgid "Console I/O"
msgstr "Consola E/S"

#: ../Doc/library/msvcrt.rst:101
msgid "Return ``True`` if a keypress is waiting to be read."
msgstr ""
"Retorna ``True`` si hay una pulsación de tecla está esperando para ser leída."

#: ../Doc/library/msvcrt.rst:106
msgid ""
"Read a keypress and return the resulting character as a byte string. Nothing "
"is echoed to the console.  This call will block if a keypress is not already "
"available, but will not wait for :kbd:`Enter` to be pressed. If the pressed "
"key was a special function key, this will return ``'\\000'`` or ``'\\xe0'``; "
"the next call will return the keycode. The :kbd:`Control-C` keypress cannot "
"be read with this function."
msgstr ""
"Lee una pulsación de la tecla  y retorna el carácter resultante como una "
"cadena de caracteres de bytes. Nada se muestra en la consola. Esta llamada "
"se bloqueará si una pulsación de la tecla aún no está disponible, pero no "
"esperará a que se presione :kbd:`Enter`. Si la tecla pulsada era una tecla "
"de función especial, esto retornará ``'\\000'`` o ``'xe0'``; la siguiente "
"llamada retornará el código de la tecla pulsada. La pulsación de la tecla :"
"kbd:'Control-C' no se puede leer con esta función."

#: ../Doc/library/msvcrt.rst:116
msgid "Wide char variant of :func:`getch`, returning a Unicode value."
msgstr ""
"Variante de carácter amplio de :func:`getch`, retornando un valor Unicode."

#: ../Doc/library/msvcrt.rst:121
msgid ""
"Similar to :func:`getch`, but the keypress will be echoed if it  represents "
"a printable character."
msgstr ""
"Similar a la función :func:`getch`, pero la pulsación de la tecla se imprime "
"si representa un carácter imprimible."

#: ../Doc/library/msvcrt.rst:127
msgid "Wide char variant of :func:`getche`, returning a Unicode value."
msgstr ""
"Variante de carácter amplio de :func:`getche`, retornando un valor Unicode."

#: ../Doc/library/msvcrt.rst:132
msgid "Print the byte string *char* to the console without buffering."
msgstr ""
"Imprime la cadena de caracteres de bytes *char* a la consola sin "
"almacenamiento en buffer."

#: ../Doc/library/msvcrt.rst:137
msgid "Wide char variant of :func:`putch`, accepting a Unicode value."
msgstr ""
"Variante de carácter amplio de :func:`putch`, admitiendo un valor Unicode."

#: ../Doc/library/msvcrt.rst:142
msgid ""
"Cause the byte string *char* to be \"pushed back\" into the console buffer; "
"it will be the next character read by :func:`getch` or :func:`getche`."
msgstr ""
"Provoca que la cadena de caracteres de bytes *char* sea \"colocada de nuevo"
"\" en el buffer de la consola, será el siguiente carácter que lea la "
"función :func:`getch` o :func:`getche`."

#: ../Doc/library/msvcrt.rst:148
msgid "Wide char variant of :func:`ungetch`, accepting a Unicode value."
msgstr ""
"Variante de carácter amplio de :func:`ungetch`, admitiendo un valor Unicode."

#: ../Doc/library/msvcrt.rst:154
msgid "Other Functions"
msgstr "Otras funciones"

#: ../Doc/library/msvcrt.rst:159
msgid ""
"Force the :c:func:`malloc` heap to clean itself up and return unused blocks "
"to the operating system.  On failure, this raises :exc:`OSError`."
msgstr ""
"Fuerza a la pila :c:func:`malloc` a que se limpie y retorne los bloques sin "
"usar al sistema operativo. En el caso de que ocurriera algún fallo, se "
"lanzaría una excepción :exc:`OSError`."

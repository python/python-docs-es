# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-10-31 23:49+0100\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/linecache.rst:2
msgid ":mod:`linecache` --- Random access to text lines"
msgstr ":mod:`linecache` — Acceso aleatorio a líneas de texto"

#: ../Doc/library/linecache.rst:9
msgid "**Source code:** :source:`Lib/linecache.py`"
msgstr "**Código fuente:** :source:`Lib/linecache.py`"

#: ../Doc/library/linecache.rst:13
msgid ""
"The :mod:`linecache` module allows one to get any line from a Python source "
"file, while attempting to optimize internally, using a cache, the common "
"case where many lines are read from a single file.  This is used by the :mod:"
"`traceback` module to retrieve source lines for inclusion in  the formatted "
"traceback."
msgstr ""
"El módulo :mod:`linecache` permite obtener cualquier línea de un archivo "
"fuente Python, mientras se intenta optimizar internamente, usando una caché, "
"el caso común en el que se leen muchas líneas de un solo archivo. Esto es "
"utilizado por el módulo :mod:`traceback` para recuperar líneas de código "
"fuente para incluirlas en el seguimiento de pila formateado."

#: ../Doc/library/linecache.rst:18
msgid ""
"The :func:`tokenize.open` function is used to open files. This function "
"uses :func:`tokenize.detect_encoding` to get the encoding of the file; in "
"the absence of an encoding token, the file encoding defaults to UTF-8."
msgstr ""
"La función :func:`tokenize.open` se utiliza para abrir archivos. Esta "
"función usa :func:`tokenize.detect_encoding` para obtener la codificación "
"del archivo; en la ausencia de un token de codificación, la codificación del "
"archivo es por defecto UTF-8."

#: ../Doc/library/linecache.rst:22
msgid "The :mod:`linecache` module defines the following functions:"
msgstr "El módulo :mod:`linecache` define las siguientes funciones:"

#: ../Doc/library/linecache.rst:27
msgid ""
"Get line *lineno* from file named *filename*. This function will never raise "
"an exception --- it will return ``''`` on errors (the terminating newline "
"character will be included for lines that are found)."
msgstr ""
"Obtiene la línea *lineno* del archivo llamado *filename*. Esta función nunca "
"lanzará una excepción --- retornará ``''`` en los errores (el carácter de la "
"nueva línea de terminación se incluirá para las líneas que se encuentren)."

#: ../Doc/library/linecache.rst:33
msgid ""
"If a file named *filename* is not found, the function first checks for a :"
"pep:`302` ``__loader__`` in *module_globals*. If there is such a loader and "
"it defines a ``get_source`` method, then that determines the source lines "
"(if ``get_source()`` returns ``None``, then ``''`` is returned). Finally, if "
"*filename* is a relative filename, it is looked up relative to the entries "
"in the module search path, ``sys.path``."
msgstr ""
"Si un archivo llamado *filename* no se encuentra, la función primero "
"verifica un ``__loader__`` en *module_globals* :pep:`302`. Si existe tal "
"cargador y define un método ``get_source``, entonces eso determina las "
"líneas de origen (si ``get_source()`` retorna ``None``, entonces se retorna "
"``''``). Finalmente, si *filename* es un nombre de fichero relativo, se "
"busca en relación a las entradas en la ruta de búsqueda del módulo, ``sys."
"path``."

#: ../Doc/library/linecache.rst:44
msgid ""
"Clear the cache.  Use this function if you no longer need lines from files "
"previously read using :func:`getline`."
msgstr ""
"Borra el caché. Use esta función si ya no necesita las líneas de archivos "
"leídos previamente usando :func:`getline`."

#: ../Doc/library/linecache.rst:50
msgid ""
"Check the cache for validity.  Use this function if files in the cache  may "
"have changed on disk, and you require the updated version.  If *filename* is "
"omitted, it will check all the entries in the cache."
msgstr ""
"Comprueba la validez de la caché. Use esta función si los archivos de la "
"caché pueden haber cambiado en disco y necesita la versión actualizada. Si "
"se omite *filename*, comprobará todas las entradas en la caché."

#: ../Doc/library/linecache.rst:56
msgid ""
"Capture enough detail about a non-file-based module to permit getting its "
"lines later via :func:`getline` even if *module_globals* is ``None`` in the "
"later call. This avoids doing I/O until a line is actually needed, without "
"having to carry the module globals around indefinitely."
msgstr ""
"Captura suficientes detalles sobre un módulo no basado en archivos para "
"permitir obtener sus líneas más tarde a través de :func:`getline` incluso si "
"*module_globals* es ``None`` en la llamada posterior. Esto evita hacer E/S "
"hasta que una línea es realmente necesaria, sin tener que llevar los módulo "
"globales indefinidamente."

#: ../Doc/library/linecache.rst:63
msgid "Example::"
msgstr "Ejemplo::"

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: 2020-07-18 19:18-0500\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: Juan Diego Alfonso Ocampo <juandiego.alfonsoocampo@gmail."
"com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3.1\n"

#: ../Doc/library/asyncore.rst:2
msgid ":mod:`asyncore` --- Asynchronous socket handler"
msgstr ":mod:`asyncore` --- controlador de socket asincrónico"

#: ../Doc/library/asyncore.rst:13
msgid "**Source code:** :source:`Lib/asyncore.py`"
msgstr "**Código fuente:** :source:`Lib/asyncore.py`"

#: ../Doc/library/asyncore.rst:15
msgid "Please use :mod:`asyncio` instead."
msgstr "Por favor, utilice :mod:`asyncio` en su lugar."

#: ../Doc/library/asyncore.rst:22
msgid ""
"This module exists for backwards compatibility only.  For new code we "
"recommend using :mod:`asyncio`."
msgstr ""
"Este módulo solo existe para compatibilidad con versiones anteriores.  Para "
"el nuevo código recomendamos usar :mod:`asyncio`."

#: ../Doc/library/asyncore.rst:25
msgid ""
"This module provides the basic infrastructure for writing asynchronous  "
"socket service clients and servers."
msgstr ""
"Este módulo proporciona la infraestructura básica para escribir servicio de "
"socket asincrónicos, clientes y servidores."

#: ../Doc/library/asyncore.rst:28
msgid ""
"There are only two ways to have a program on a single processor do  \"more "
"than one thing at a time.\" Multi-threaded programming is the  simplest and "
"most popular way to do it, but there is another very different technique, "
"that lets you have nearly all the advantages of  multi-threading, without "
"actually using multiple threads.  It's really  only practical if your "
"program is largely I/O bound.  If your program is processor bound, then pre-"
"emptive scheduled threads are probably what you really need.  Network "
"servers are rarely processor bound, however."
msgstr ""
"Sólo hay dos maneras de que un programa en un solo procesador haga \"más de "
"una cosa a la vez\". La programación multiproceso es la forma más sencilla y "
"popular de hacerlo, pero hay otra técnica muy diferente, que le permite "
"tener casi todas las ventajas de multiproceso, sin usar realmente varios "
"subprocesos.  Es realmente sólo práctico si su programa está en gran parte "
"limitado por el I/O.  Si el programa está limitado por el procesador, los "
"subprocesos programados preventivos son probablemente lo que realmente "
"necesita.  Sin embargo, los servidores de red rara vez están limitado al "
"procesador."

#: ../Doc/library/asyncore.rst:37
msgid ""
"If your operating system supports the :c:func:`select` system call in its I/"
"O library (and nearly all do), then you can use it to juggle multiple "
"communication channels at once; doing other work while your I/O is taking "
"place in the \"background.\"  Although this strategy can seem strange and "
"complex, especially at first, it is in many ways easier to understand and "
"control than multi-threaded programming.  The :mod:`asyncore` module solves "
"many of the difficult problems for you, making the task of building "
"sophisticated high-performance network servers and clients a snap.  For "
"\"conversational\" applications and protocols the companion :mod:`asynchat` "
"module is invaluable."
msgstr ""
"Si su sistema operativo es compatible con la llamada del sistema :c:func:"
"`select` en su biblioteca de I/O (y casi todos lo son), puede usarla para "
"hacer malabares con varios canales de comunicación a la vez; haciendo otro "
"trabajo mientras su I/O está teniendo lugar en el \"fondo\".  Aunque esta "
"estrategia puede parecer extraña y compleja, especialmente al principio, es "
"en muchos sentidos más fácil de entender y controlar que la programación "
"multiproceso.  El módulo :mod:`asyncore` resuelve muchos de los problemas "
"difíciles para usted, haciendo que la tarea de construir sofisticados "
"servidores de red de alto rendimiento y clientes sea fácil.  Para "
"aplicaciones y protocolos \"conversacionales\", el módulo complementario :"
"mod:`asynchat` es invaluable."

#: ../Doc/library/asyncore.rst:48
msgid ""
"The basic idea behind both modules is to create one or more network "
"*channels*, instances of class :class:`asyncore.dispatcher` and :class:"
"`asynchat.async_chat`.  Creating the channels adds them to a global map, "
"used by the :func:`loop` function if you do not provide it with your own "
"*map*."
msgstr ""
"La idea básica detrás de ambos módulos es crear uno o más *canales* de red, "
"instancias de clase :class:`asyncore.dispatcher` y :class:`asynchat."
"async_chat`.  La creación de los canales los agrega a un mapa global, "
"utilizado por la función :func:`loop` si no lo proporciona con su propio "
"*map*."

#: ../Doc/library/asyncore.rst:54
msgid ""
"Once the initial channel(s) is(are) created, calling the :func:`loop` "
"function activates channel service, which continues until the last channel "
"(including any that have been added to the map during asynchronous service) "
"is closed."
msgstr ""
"Una vez creados los canales iniciales, llamar a la función :func:`loop` "
"activa el servicio de canal, que continúa hasta que se cierra el último "
"canal (incluido el que se ha agregado al mapa durante el servicio "
"asincrónico)."

#: ../Doc/library/asyncore.rst:61
msgid ""
"Enter a polling loop that terminates after count passes or all open channels "
"have been closed.  All arguments are optional.  The *count* parameter "
"defaults to ``None``, resulting in the loop terminating only when all "
"channels have been closed.  The *timeout* argument sets the timeout "
"parameter for the appropriate :func:`~select.select` or :func:`~select.poll` "
"call, measured in seconds; the default is 30 seconds.  The *use_poll* "
"parameter, if true, indicates that :func:`~select.poll` should be used in "
"preference to :func:`~select.select` (the default is ``False``)."
msgstr ""
"Ingresa un bucle de sondeo que termina después de que se hayan cerrado los "
"pases de conteo o todos los canales abiertos.  Todos los argumentos son "
"opcionales.  El parámetro *count* tiene como valor predeterminado ``None``, "
"lo que da como resultado que el bucle termine solo cuando se hayan cerrado "
"todos los canales.  El argumento *timeout* establece el parámetro de tiempo "
"de espera para la llamada adecuada a :func:`~select.select` o :func:`~select."
"poll`, medida en segundos; el valor predeterminado es 30 segundos.  El "
"parámetro *use_poll*, si es true, indica que :func:`~select.poll` debe "
"utilizarse en lugar de :func:`~select.select` (el valor predeterminado es "
"``False``)."

#: ../Doc/library/asyncore.rst:70
msgid ""
"The *map* parameter is a dictionary whose items are the channels to watch. "
"As channels are closed they are deleted from their map.  If *map* is "
"omitted, a global map is used. Channels (instances of :class:`asyncore."
"dispatcher`, :class:`asynchat.async_chat` and subclasses thereof) can freely "
"be mixed in the map."
msgstr ""
"El parámetro *map* es un diccionario cuyos elementos son los canales a "
"observar. A medida que se cierran los canales, se eliminan del mapa.  Si se "
"omite *map*, se utiliza un mapa global. Los canales (instancias de :class:"
"`asyncore.dispatcher`, :class:`asynchat.async_chat` y subclases de los "
"mismos) se pueden mezclar libremente en el mapa."

#: ../Doc/library/asyncore.rst:79
msgid ""
"The :class:`dispatcher` class is a thin wrapper around a low-level socket "
"object. To make it more useful, it has a few methods for event-handling "
"which are called from the asynchronous loop.   Otherwise, it can be treated "
"as a normal non-blocking socket object."
msgstr ""
"La clase :class:`dispatcher` es un contenedor fino alrededor de un objeto de "
"socket de bajo nivel. Para hacerlo más útil, tiene algunos métodos para el "
"control de eventos que se llaman desde el bucle asincrónico.   De lo "
"contrario, se puede tratar como un objeto de socket normal sin bloqueo."

#: ../Doc/library/asyncore.rst:84
msgid ""
"The firing of low-level events at certain times or in certain connection "
"states tells the asynchronous loop that certain higher-level events have "
"taken place.  For example, if we have asked for a socket to connect to "
"another host, we know that the connection has been made when the socket "
"becomes writable for the first time (at this point you know that you may "
"write to it with the expectation of success).  The implied higher-level "
"events are:"
msgstr ""
"La activación de eventos de bajo nivel en determinados momentos o en "
"determinados estados de conexión indica al bucle asincrónico que se han "
"producido ciertos eventos de nivel superior.  Por ejemplo, si hemos pedido "
"un socket para conectarse a otro host, sabemos que la conexión se ha "
"realizado cuando el socket se vuelve *grabable* por primera vez (en este "
"punto sabe que puede escribir a él con la expectativa de éxito).  Los "
"eventos de nivel superior implícitos son:"

#: ../Doc/library/asyncore.rst:93
msgid "Event"
msgstr "Evento"

#: ../Doc/library/asyncore.rst:93
msgid "Description"
msgstr "Descripción"

#: ../Doc/library/asyncore.rst:95
msgid "``handle_connect()``"
msgstr "``handle_connect()``"

#: ../Doc/library/asyncore.rst:95
msgid "Implied by the first read or write event"
msgstr "Implícito en el primer proceso de lectura o escritura"

#: ../Doc/library/asyncore.rst:98
msgid "``handle_close()``"
msgstr "``handle_close()``"

#: ../Doc/library/asyncore.rst:98
msgid "Implied by a read event with no data available"
msgstr "Implícito en un evento de lectura sin datos disponibles"

#: ../Doc/library/asyncore.rst:101
msgid "``handle_accepted()``"
msgstr "``handle_accepted()``"

#: ../Doc/library/asyncore.rst:101
msgid "Implied by a read event on a listening socket"
msgstr "Implícito en un evento de lectura en un socket de escucha"

#: ../Doc/library/asyncore.rst:105
msgid ""
"During asynchronous processing, each mapped channel's :meth:`readable` and :"
"meth:`writable` methods are used to determine whether the channel's socket "
"should be added to the list of channels :c:func:`select`\\ ed or :c:func:"
"`poll`\\ ed for read and write events."
msgstr ""
"Durante el procesamiento asincrónico, se utilizan los métodos :meth:"
"`readable` y :meth:`writable` de cada canal asignado para determinar si el "
"socket del canal deberían ser agregados a la lista de canales :c:func:"
"`seleccionados <select>` o :c:func:`encuestados <poll>` para eventos de "
"lectura y escritura."

#: ../Doc/library/asyncore.rst:110
msgid ""
"Thus, the set of channel events is larger than the basic socket events.  The "
"full set of methods that can be overridden in your subclass follows:"
msgstr ""
"Por lo tanto, el conjunto de eventos de canal es mayor que los eventos "
"básicos del socket.  El conjunto completo de métodos que se pueden invalidar "
"en la subclase es el siguiente:"

#: ../Doc/library/asyncore.rst:116
msgid ""
"Called when the asynchronous loop detects that a :meth:`read` call on the "
"channel's socket will succeed."
msgstr ""
"Se llama cuando el bucle asincrónico detecta que una llamada :meth:`read` en "
"el socket del canal tendrá éxito."

#: ../Doc/library/asyncore.rst:122
msgid ""
"Called when the asynchronous loop detects that a writable socket can be "
"written.  Often this method will implement the necessary buffering for "
"performance.  For example::"
msgstr ""
"Se llama cuando el bucle asincrónico detecta que se puede escribir un socket "
"grabable.  A menudo, este método implementará el almacenamiento en búfer "
"necesario para el rendimiento.  Por ejemplo:"

#: ../Doc/library/asyncore.rst:133
msgid ""
"Called when there is out of band (OOB) data for a socket connection.  This "
"will almost never happen, as OOB is tenuously supported and rarely used."
msgstr ""
"Se llama cuando hay datos fuera de banda (OOB) para una conexión de socket.  "
"Esto casi nunca sucederá, ya que OOB es tenuemente compatible y rara vez se "
"utiliza."

#: ../Doc/library/asyncore.rst:139
msgid ""
"Called when the active opener's socket actually makes a connection.  Might "
"send a \"welcome\" banner, or initiate a protocol negotiation with the "
"remote endpoint, for example."
msgstr ""
"Se llama cuando el socket del abridor activo realmente hace una conexión.  "
"Puede enviar un banner de \"bienvenido\" o iniciar una negociación de "
"protocolo con el punto de conexión remoto, por ejemplo."

#: ../Doc/library/asyncore.rst:146
msgid "Called when the socket is closed."
msgstr "Se llama cuando el socket está cerrado."

#: ../Doc/library/asyncore.rst:151
msgid ""
"Called when an exception is raised and not otherwise handled.  The default "
"version prints a condensed traceback."
msgstr ""
"Se llama cuando se genera una excepción y no se controla de otro modo.  La "
"versión predeterminada imprime un *traceback* condensado."

#: ../Doc/library/asyncore.rst:157
msgid ""
"Called on listening channels (passive openers) when a connection can be "
"established with a new remote endpoint that has issued a :meth:`connect` "
"call for the local endpoint. Deprecated in version 3.2; use :meth:"
"`handle_accepted` instead."
msgstr ""
"Se llama en los canales de escucha (abridores pasivos) cuando se puede "
"establecer una conexión con un nuevo punto de conexión remoto que ha emitido "
"una llamada :meth:`connect` para el punto de conexión local. En desuso en la "
"versión 3.2; use :meth:`handle_accepted` en su lugar."

#: ../Doc/library/asyncore.rst:167
msgid ""
"Called on listening channels (passive openers) when a connection has been "
"established with a new remote endpoint that has issued a :meth:`connect` "
"call for the local endpoint.  *sock* is a *new* socket object usable to send "
"and receive data on the connection, and *addr* is the address bound to the "
"socket on the other end of the connection."
msgstr ""
"Se llama en los canales de escucha (abridores pasivos) cuando se ha "
"establecido una conexión con un nuevo punto de conexión remoto que ha "
"emitido una llamada :meth:`connect` para el punto de conexión local.  *sock* "
"es un objeto de socket *new* utilizable para enviar y recibir datos en la "
"conexión, y *addr* es la dirección enlazada al socket en el otro extremo de "
"la conexión."

#: ../Doc/library/asyncore.rst:178
msgid ""
"Called each time around the asynchronous loop to determine whether a "
"channel's socket should be added to the list on which read events can "
"occur.  The default method simply returns ``True``, indicating that by "
"default, all channels will be interested in read events."
msgstr ""
"Se llama en cada momento alrededor del bucle asincrónico para determinar si "
"se debe agregar el socket de un canal a la lista en la que se pueden "
"producir eventos de lectura.  El método predeterminado simplemente retorna "
"``True``, lo que indica que, de forma predeterminada, todos los canales "
"estarán interesados en eventos de lectura."

#: ../Doc/library/asyncore.rst:186
msgid ""
"Called each time around the asynchronous loop to determine whether a "
"channel's socket should be added to the list on which write events can "
"occur.  The default method simply returns ``True``, indicating that by "
"default, all channels will be interested in write events."
msgstr ""
"Se llama cada vez alrededor del bucle asincrónico para determinar si se debe "
"agregar el socket de un canal a la lista en la que se pueden producir "
"eventos de escritura.  El método predeterminado simplemente retorna "
"``True``, lo que indica que, de forma predeterminada, todos los canales "
"estarán interesados en eventos de escritura."

#: ../Doc/library/asyncore.rst:192
msgid ""
"In addition, each channel delegates or extends many of the socket methods. "
"Most of these are nearly identical to their socket partners."
msgstr ""
"Además, cada canal delega o extiende muchos de los métodos de socket. La "
"mayoría de estos son casi idénticos a sus socios de socket."

#: ../Doc/library/asyncore.rst:198
msgid ""
"This is identical to the creation of a normal socket, and will use the same "
"options for creation.  Refer to the :mod:`socket` documentation for "
"information on creating sockets."
msgstr ""
"Esto es idéntico a la creación de un socket normal y usará las mismas "
"opciones para la creación.  Consulte la documentación :mod:`socket` para "
"obtener información sobre la creación de sockets."

#: ../Doc/library/asyncore.rst:202
msgid "*family* and *type* arguments can be omitted."
msgstr "Los argumentos *family* y *type* se pueden omitir."

#: ../Doc/library/asyncore.rst:208
msgid ""
"As with the normal socket object, *address* is a tuple with the first "
"element the host to connect to, and the second the port number."
msgstr ""
"Al igual que con el objeto de socket normal, *address* es una tupla con el "
"primer elemento al que se va a conectar el host y el segundo el número de "
"puerto."

#: ../Doc/library/asyncore.rst:214
msgid "Send *data* to the remote end-point of the socket."
msgstr "Envía *data* al punto final remoto del socket."

#: ../Doc/library/asyncore.rst:219
msgid ""
"Read at most *buffer_size* bytes from the socket's remote end-point.  An "
"empty bytes object implies that the channel has been closed from the other "
"end."
msgstr ""
"Lee como máximo los bytes *buffer_size* desde el punto final remoto del "
"socket.  Un objeto bytes vacío implica que el canal se ha cerrado desde el "
"otro extremo."

#: ../Doc/library/asyncore.rst:223
msgid ""
"Note that :meth:`recv` may raise :exc:`BlockingIOError` , even though :func:"
"`select.select` or :func:`select.poll` has reported the socket ready for "
"reading."
msgstr ""
"Tenga en cuenta que :meth:`recv` puede elevar :exc:`BlockingIOError`, "
"aunque :func:`select.select` o :func:`select.poll` ha informado del socket "
"listo para la lectura."

#: ../Doc/library/asyncore.rst:230
msgid ""
"Listen for connections made to the socket.  The *backlog* argument specifies "
"the maximum number of queued connections and should be at least 1; the "
"maximum value is system-dependent (usually 5)."
msgstr ""
"Escucha las conexiones realizadas al socket.  El argumento *backlog* "
"especifica el número máximo de conexiones en cola y debe ser al menos 1; el "
"valor máximo depende del sistema (normalmente 5)."

#: ../Doc/library/asyncore.rst:237
msgid ""
"Bind the socket to *address*.  The socket must not already be bound.  (The "
"format of *address* depends on the address family --- refer to the :mod:"
"`socket` documentation for more information.)  To mark the socket as re-"
"usable (setting the :const:`SO_REUSEADDR` option), call the :class:"
"`dispatcher` object's :meth:`set_reuse_addr` method."
msgstr ""
"Enlaza el socket a *address*.  El socket no debe estar enlazado ya.  (El "
"formato de *address* depende de la familia de direcciones — consulte la "
"documentación :mod:`socket` para obtener más información.)  Para marcar el "
"socket como *reutilizable* (estableciendo la opción :const:`SO_REUSEADDR`), "
"llame al método :meth:`set_reuse_addr` del objeto :class:`dispatcher`."

#: ../Doc/library/asyncore.rst:246
msgid ""
"Accept a connection.  The socket must be bound to an address and listening "
"for connections.  The return value can be either ``None`` or a pair ``(conn, "
"address)`` where *conn* is a *new* socket object usable to send and receive "
"data on the connection, and *address* is the address bound to the socket on "
"the other end of the connection. When ``None`` is returned it means the "
"connection didn't take place, in which case the server should just ignore "
"this event and keep listening for further incoming connections."
msgstr ""
"Acepta una conexión.  El socket debe estar enlazado a una dirección y "
"escuchar las conexiones.  El valor retornado puede ser ``None`` o un par "
"``(conn, address)`` donde *conn* es un objeto de socket *new* utilizable "
"para enviar y recibir datos en la conexión, y *address* es la dirección "
"enlazada al socket en el otro extremo de la conexión. Cuando se retorna "
"``None`` significa que la conexión no se llevó a cabo, en cuyo caso el "
"servidor debe ignorar este evento y seguir escuchando otras conexiones "
"entrantes."

#: ../Doc/library/asyncore.rst:258
msgid ""
"Close the socket.  All future operations on the socket object will fail. The "
"remote end-point will receive no more data (after queued data is flushed).  "
"Sockets are automatically closed when they are garbage-collected."
msgstr ""
"Cierra el socket.  Se producirá un error en todas las operaciones futuras en "
"el objeto de socket. El punto final remoto no recibirá más datos (después de "
"vaciar los datos en cola).  Los sockets se cierran automáticamente cuando se "
"recogen como elementos no utilizados."

#: ../Doc/library/asyncore.rst:266
msgid ""
"A :class:`dispatcher` subclass which adds simple buffered output capability, "
"useful for simple clients. For more sophisticated usage use :class:`asynchat."
"async_chat`."
msgstr ""
"Una subclase :class:`dispatcher` que agrega capacidad de salida almacenada "
"en búfer simple, útil para clientes simples. Para un uso más sofisticado, "
"utilice :class:`asynchat.async_chat`."

#: ../Doc/library/asyncore.rst:272
msgid ""
"A file_dispatcher takes a file descriptor or :term:`file object` along with "
"an optional map argument and wraps it for use with the :c:func:`poll` or :c:"
"func:`loop` functions.  If provided a file object or anything with a :c:func:"
"`fileno` method, that method will be called and passed to the :class:"
"`file_wrapper` constructor."
msgstr ""
"file_dispatcher toma un descriptor de archivo o :term:`file object` junto "
"con un argumento de mapa opcional y lo ajusta para su uso con las funciones :"
"c:func:`poll` o :c:func:`loop`.  Si se proporciona un objeto de archivo o "
"cualquier cosa con un método :c:func:`fileno`, ese método se llamará y se "
"pasará al constructor :class:`file_wrapper`."

#: ../Doc/library/asyncore.rst:278 ../Doc/library/asyncore.rst:287
msgid ":ref:`Availability <availability>`: Unix."
msgstr ":ref:`Disponibilidad <availability>`: Unix."

#: ../Doc/library/asyncore.rst:282
msgid ""
"A file_wrapper takes an integer file descriptor and calls :func:`os.dup` to "
"duplicate the handle so that the original handle may be closed independently "
"of the file_wrapper.  This class implements sufficient methods to emulate a "
"socket for use by the :class:`file_dispatcher` class."
msgstr ""
"file_wrapper toma un descriptor de archivo entero y llama a :func:`os.dup` "
"para duplicar el identificador de modo que el identificador original se "
"pueda cerrar independientemente del file_wrapper.  Esta clase implementa "
"métodos suficientes emulando un socket para su uso por la clase :class:"
"`file_dispatcher`."

#: ../Doc/library/asyncore.rst:293
msgid "asyncore Example basic HTTP client"
msgstr "Ejemplo asyncore de cliente HTTP básico"

#: ../Doc/library/asyncore.rst:295
msgid ""
"Here is a very basic HTTP client that uses the :class:`dispatcher` class to "
"implement its socket handling::"
msgstr ""
"Aquí hay una llamada básica al cliente HTTP que usa la clase :class:"
"`dispatcher` para implementar su controlador de socket::"

#: ../Doc/library/asyncore.rst:332
msgid "asyncore Example basic echo server"
msgstr "Ejemplo asyncore de servidor de eco básico"

#: ../Doc/library/asyncore.rst:334
msgid ""
"Here is a basic echo server that uses the :class:`dispatcher` class to "
"accept connections and dispatches the incoming connections to a handler::"
msgstr ""
"Aquí hay un servidor de eco básico que utiliza la clase :class:`dispatcher` "
"para aceptar conexiones y distribuye las conexiones entrantes a un "
"controlador::"

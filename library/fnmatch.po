# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam. 
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/PyCampES/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/fnmatch.rst:2
msgid ":mod:`fnmatch` --- Unix filename pattern matching"
msgstr ""

#: ../Doc/library/fnmatch.rst:7
msgid "**Source code:** :source:`Lib/fnmatch.py`"
msgstr ""

#: ../Doc/library/fnmatch.rst:15
msgid ""
"This module provides support for Unix shell-style wildcards, which are *not* "
"the same as regular expressions (which are documented in the :mod:`re` "
"module).  The special characters used in shell-style wildcards are:"
msgstr ""

#: ../Doc/library/fnmatch.rst:27
msgid "Pattern"
msgstr ""

#: ../Doc/library/fnmatch.rst:27
msgid "Meaning"
msgstr ""

#: ../Doc/library/fnmatch.rst:29
msgid "``*``"
msgstr ""

#: ../Doc/library/fnmatch.rst:29
msgid "matches everything"
msgstr ""

#: ../Doc/library/fnmatch.rst:31
msgid "``?``"
msgstr ""

#: ../Doc/library/fnmatch.rst:31
msgid "matches any single character"
msgstr ""

#: ../Doc/library/fnmatch.rst:33
msgid "``[seq]``"
msgstr ""

#: ../Doc/library/fnmatch.rst:33
msgid "matches any character in *seq*"
msgstr ""

#: ../Doc/library/fnmatch.rst:35
msgid "``[!seq]``"
msgstr ""

#: ../Doc/library/fnmatch.rst:35
msgid "matches any character not in *seq*"
msgstr ""

#: ../Doc/library/fnmatch.rst:38
msgid ""
"For a literal match, wrap the meta-characters in brackets. For example, "
"``'[?]'`` matches the character ``'?'``."
msgstr ""

#: ../Doc/library/fnmatch.rst:43
msgid ""
"Note that the filename separator (``'/'`` on Unix) is *not* special to this "
"module.  See module :mod:`glob` for pathname expansion (:mod:`glob` uses :"
"func:`.filter` to match pathname segments).  Similarly, filenames starting "
"with a period are not special for this module, and are matched by the ``*`` "
"and ``?`` patterns."
msgstr ""

#: ../Doc/library/fnmatch.rst:52
msgid ""
"Test whether the *filename* string matches the *pattern* string, returning :"
"const:`True` or :const:`False`.  Both parameters are case-normalized using :"
"func:`os.path.normcase`. :func:`fnmatchcase` can be used to perform a case-"
"sensitive comparison, regardless of whether that's standard for the "
"operating system."
msgstr ""

#: ../Doc/library/fnmatch.rst:58
msgid ""
"This example will print all file names in the current directory with the "
"extension ``.txt``::"
msgstr ""

#: ../Doc/library/fnmatch.rst:71
msgid ""
"Test whether *filename* matches *pattern*, returning :const:`True` or :const:"
"`False`; the comparison is case-sensitive and does not apply :func:`os.path."
"normcase`."
msgstr ""

#: ../Doc/library/fnmatch.rst:78
msgid ""
"Return the subset of the list of *names* that match *pattern*. It is the "
"same as ``[n for n in names if fnmatch(n, pattern)]``, but implemented more "
"efficiently."
msgstr ""

#: ../Doc/library/fnmatch.rst:84
msgid ""
"Return the shell-style *pattern* converted to a regular expression for using "
"with :func:`re.match`."
msgstr ""

#: ../Doc/library/fnmatch.rst:87
msgid "Example:"
msgstr ""

#: ../Doc/library/fnmatch.rst:101
msgid "Module :mod:`glob`"
msgstr ""

#: ../Doc/library/fnmatch.rst:102
msgid "Unix shell-style path expansion."
msgstr ""

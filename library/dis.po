# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-06-29 02:57+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/library/dis.rst:2
msgid ":mod:`dis` --- Disassembler for Python bytecode"
msgstr ":mod:`dis` --- Desensamblador para bytecode de Python"

#: ../Doc/library/dis.rst:7
msgid "**Source code:** :source:`Lib/dis.py`"
msgstr "**Código fuente:** :source:`Lib/dis.py`"

#: ../Doc/library/dis.rst:11
msgid ""
"The :mod:`dis` module supports the analysis of CPython :term:`bytecode` by "
"disassembling it. The CPython bytecode which this module takes as an input "
"is defined in the file :file:`Include/opcode.h` and used by the compiler and "
"the interpreter."
msgstr ""
"El módulo :mod:`dis` admite el análisis de CPython :term:`bytecode` al "
"desarmarlo. El bytecode de CPython que este módulo toma como entrada se "
"define en el archivo :file:`Include/opcode.h` y lo utilizan el compilador y "
"el intérprete."

#: ../Doc/library/dis.rst:18
msgid ""
"Bytecode is an implementation detail of the CPython interpreter.  No "
"guarantees are made that bytecode will not be added, removed, or changed "
"between versions of Python.  Use of this module should not be considered to "
"work across Python VMs or Python releases."
msgstr ""
"Bytecode es un detalle de implementación del intérprete CPython. No se "
"garantiza que el bytecode no se agregará, eliminará ni cambiará entre las "
"versiones de Python. El uso de este módulo no debe considerarse para "
"trabajar en diferentes máquinas virtuales Python o versiones de Python."

#: ../Doc/library/dis.rst:23
msgid ""
"Use 2 bytes for each instruction. Previously the number of bytes varied by "
"instruction."
msgstr ""
"Use 2 bytes para cada instrucción. Anteriormente, el número de bytes variaba "
"según la instrucción."

#: ../Doc/library/dis.rst:28
msgid "Example: Given the function :func:`myfunc`::"
msgstr "Ejemplo: dada la función :func:`myfunc`::"

#: ../Doc/library/dis.rst:33
msgid ""
"the following command can be used to display the disassembly of :func:"
"`myfunc`::"
msgstr ""
"el siguiente comando se puede utilizar para mostrar el desensamblaje de :"
"func:`myfunc`::"

#: ../Doc/library/dis.rst:42
msgid "(The \"2\" is a line number)."
msgstr "(El \"2\" es un número de línea)."

#: ../Doc/library/dis.rst:45
msgid "Bytecode analysis"
msgstr "Análisis de bytecode"

#: ../Doc/library/dis.rst:49
msgid ""
"The bytecode analysis API allows pieces of Python code to be wrapped in a :"
"class:`Bytecode` object that provides easy access to details of the compiled "
"code."
msgstr ""
"La API de análisis de bytecode permite que partes del código Python se "
"envuelvan en un objeto :class:`Bytecode` que proporciona un fácil acceso a "
"los detalles del código compilado."

#: ../Doc/library/dis.rst:56
msgid ""
"Analyse the bytecode corresponding to a function, generator, asynchronous "
"generator, coroutine, method, string of source code, or a code object (as "
"returned by :func:`compile`)."
msgstr ""
"Analiza el bytecode correspondiente a una función, generador, generador "
"asíncrono, corutina, método, cadena de código fuente o un objeto de código "
"(como lo retorna :func:`compile`)."

#: ../Doc/library/dis.rst:60
msgid ""
"This is a convenience wrapper around many of the functions listed below, "
"most notably :func:`get_instructions`, as iterating over a :class:`Bytecode` "
"instance yields the bytecode operations as :class:`Instruction` instances."
msgstr ""
"Este es un contenedor conveniente para muchas de las funciones enumeradas a "
"continuación, en particular :func:`get_instructions`, ya que iterar sobre "
"una instancia de :class:`Bytecode` produce las operaciones de bytecode como "
"instancias de :class:`Instruction`."

#: ../Doc/library/dis.rst:64 ../Doc/library/dis.rst:225
msgid ""
"If *first_line* is not ``None``, it indicates the line number that should be "
"reported for the first source line in the disassembled code.  Otherwise, the "
"source line information (if any) is taken directly from the disassembled "
"code object."
msgstr ""
"Si *first_line* no es ``None``, indica el número de línea que se debe "
"informar para la primera línea de origen en el código desmontado. De lo "
"contrario, la información de la línea de origen (si la hay) se toma "
"directamente del objeto de código desmontado."

#: ../Doc/library/dis.rst:69
msgid ""
"If *current_offset* is not ``None``, it refers to an instruction offset in "
"the disassembled code. Setting this means :meth:`.dis` will display a "
"\"current instruction\" marker against the specified opcode."
msgstr ""
"Si *current_offset* no es ``None``, se refiere a un desplazamiento de "
"instrucción en el código desmontado. Establecer esto significa :meth:`.dis` "
"mostrará un marcador de \"instrucción actual\" contra el código de operación "
"especificado."

#: ../Doc/library/dis.rst:75
msgid ""
"Construct a :class:`Bytecode` instance from the given traceback, setting "
"*current_offset* to the instruction responsible for the exception."
msgstr ""
"Construye una instancia de :class:`Bytecode` a partir del *traceback* dado, "
"estableciendo *current_offset* en la instrucción responsable de la excepción."

#: ../Doc/library/dis.rst:80
msgid "The compiled code object."
msgstr "El objeto de código compilado."

#: ../Doc/library/dis.rst:84
msgid "The first source line of the code object (if available)"
msgstr "La primera línea de origen del objeto de código (si está disponible)"

#: ../Doc/library/dis.rst:88
msgid ""
"Return a formatted view of the bytecode operations (the same as printed by :"
"func:`dis.dis`, but returned as a multi-line string)."
msgstr ""
"Retorna una vista formateada de las operaciones de bytecode (lo mismo que "
"impreso por :func:`dis.dis`, pero retornado como una cadena de caracteres "
"multilínea)."

#: ../Doc/library/dis.rst:93
msgid ""
"Return a formatted multi-line string with detailed information about the "
"code object, like :func:`code_info`."
msgstr ""
"Retorna una cadena de caracteres multilínea formateada con información "
"detallada sobre el objeto de código, como :func:`code_info`."

#: ../Doc/library/dis.rst:96 ../Doc/library/dis.rst:130
#: ../Doc/library/dis.rst:176
msgid "This can now handle coroutine and asynchronous generator objects."
msgstr ""
"Esto ahora puede manejar objetos generadores asíncronos y de corutinas."

#: ../Doc/library/dis.rst:99
msgid "Example::"
msgstr "Ejemplo::"

#: ../Doc/library/dis.rst:112
msgid "Analysis functions"
msgstr "Funciones de análisis"

#: ../Doc/library/dis.rst:114
msgid ""
"The :mod:`dis` module also defines the following analysis functions that "
"convert the input directly to the desired output. They can be useful if only "
"a single operation is being performed, so the intermediate analysis object "
"isn't useful:"
msgstr ""
"El módulo :mod:`dis` también define las siguientes funciones de análisis que "
"convierten la entrada directamente en la salida deseada. Pueden ser útiles "
"si solo se realiza una sola operación, por lo que el objeto de análisis "
"intermedio no es útil:"

#: ../Doc/library/dis.rst:120
msgid ""
"Return a formatted multi-line string with detailed code object information "
"for the supplied function, generator, asynchronous generator, coroutine, "
"method, source code string or code object."
msgstr ""
"Retorna una cadena de caracteres multilínea formateada con información "
"detallada del objeto de código para la función, generador, generador "
"asíncrono, corutina, método, cadena de código fuente u objeto de código "
"suministrados."

#: ../Doc/library/dis.rst:124
msgid ""
"Note that the exact contents of code info strings are highly implementation "
"dependent and they may change arbitrarily across Python VMs or Python "
"releases."
msgstr ""
"Tenga en cuenta que el contenido exacto de las cadenas de información de "
"código depende en gran medida de la implementación y puede cambiar "
"arbitrariamente en las diferentes máquinas virtuales Python o las versiones "
"de Python."

#: ../Doc/library/dis.rst:136
msgid ""
"Print detailed code object information for the supplied function, method, "
"source code string or code object to *file* (or ``sys.stdout`` if *file* is "
"not specified)."
msgstr ""
"Imprime información detallada del objeto de código para la función, método, "
"cadena de código fuente u objeto de código suministrado en *file* (o ``sys."
"stdout`` si *file* no está especificado)."

#: ../Doc/library/dis.rst:140
msgid ""
"This is a convenient shorthand for ``print(code_info(x), file=file)``, "
"intended for interactive exploration at the interpreter prompt."
msgstr ""
"Esta es una abreviatura conveniente para ``print(code_info(x), file=file)``, "
"destinado a la exploración interactiva en el indicador del intérprete "
"(*prompt*)."

#: ../Doc/library/dis.rst:145 ../Doc/library/dis.rst:170
#: ../Doc/library/dis.rst:189 ../Doc/library/dis.rst:213
msgid "Added *file* parameter."
msgstr "Agrega un parámetro *file*."

#: ../Doc/library/dis.rst:151
msgid ""
"Disassemble the *x* object.  *x* can denote either a module, a class, a "
"method, a function, a generator, an asynchronous generator, a coroutine, a "
"code object, a string of source code or a byte sequence of raw bytecode. For "
"a module, it disassembles all functions. For a class, it disassembles all "
"methods (including class and static methods). For a code object or sequence "
"of raw bytecode, it prints one line per bytecode instruction. It also "
"recursively disassembles nested code objects (the code of comprehensions, "
"generator expressions and nested functions, and the code used for building "
"nested classes). Strings are first compiled to code objects with the :func:"
"`compile` built-in function before being disassembled.  If no object is "
"provided, this function disassembles the last traceback."
msgstr ""
"Desmontar el objeto *x*. *x* puede denotar un módulo, una clase, un método, "
"una función, un generador, un generador asíncrono, una corutina, un objeto "
"de código, una cadena de código fuente o una secuencia de bytes de código de "
"bytes sin procesar. Para un módulo, desmonta todas las funciones. Para una "
"clase, desmonta todos los métodos (incluidos los métodos de clase y "
"estáticos). Para un objeto de código o secuencia de bytecode sin procesar, "
"imprime una línea por instrucción de bytecode. También desmonta "
"recursivamente objetos de código anidados (el código de comprensiones, "
"expresiones generadoras y funciones anidadas, y el código utilizado para "
"construir clases anidadas). Las cadenas de caracteres se compilan primero en "
"objetos de código con la función incorporada :func:`compile` antes de "
"desmontarse. Si no se proporciona ningún objeto, esta función desmonta el "
"último rastreo."

#: ../Doc/library/dis.rst:164 ../Doc/library/dis.rst:186
#: ../Doc/library/dis.rst:210
msgid ""
"The disassembly is written as text to the supplied *file* argument if "
"provided and to ``sys.stdout`` otherwise."
msgstr ""
"El desensamblaje se escribe como texto en el argumento *file* proporcionado "
"si se proporciona y, de lo contrario, ``sys.stdout``."

#: ../Doc/library/dis.rst:167
msgid ""
"The maximal depth of recursion is limited by *depth* unless it is ``None``. "
"``depth=0`` means no recursion."
msgstr ""
"La profundidad máxima de recursión está limitada por *depth* a menos que sea "
"``None``. ``depth=0`` significa que no hay recursión."

#: ../Doc/library/dis.rst:173
msgid "Implemented recursive disassembling and added *depth* parameter."
msgstr "Desensamblaje recursivo implementado y parámetro agregado *depth*."

#: ../Doc/library/dis.rst:182
msgid ""
"Disassemble the top-of-stack function of a traceback, using the last "
"traceback if none was passed.  The instruction causing the exception is "
"indicated."
msgstr ""
"Desmonta la función de inicio de pila de un rastreo, utilizando el último "
"rastreo si no se pasó ninguno. Se indica la instrucción que causa la "
"excepción."

#: ../Doc/library/dis.rst:196
msgid ""
"Disassemble a code object, indicating the last instruction if *lasti* was "
"provided.  The output is divided in the following columns:"
msgstr ""
"Desmonta un objeto de código, que indica la última instrucción si se "
"proporcionó *lasti*. La salida se divide en las siguientes columnas:"

#: ../Doc/library/dis.rst:199
msgid "the line number, for the first instruction of each line"
msgstr "el número de línea, para la primera instrucción de cada línea"

#: ../Doc/library/dis.rst:200
msgid "the current instruction, indicated as ``-->``,"
msgstr "la instrucción actual, indicada como ``-->``,"

#: ../Doc/library/dis.rst:201
msgid "a labelled instruction, indicated with ``>>``,"
msgstr "una instrucción etiquetada, indicada con ``>>``,"

#: ../Doc/library/dis.rst:202
msgid "the address of the instruction,"
msgstr "la dirección de la instrucción,"

#: ../Doc/library/dis.rst:203
msgid "the operation code name,"
msgstr "el nombre del código de operación,"

#: ../Doc/library/dis.rst:204
msgid "operation parameters, and"
msgstr "parámetros de operación, y"

#: ../Doc/library/dis.rst:205
msgid "interpretation of the parameters in parentheses."
msgstr "interpretación de los parámetros entre paréntesis."

#: ../Doc/library/dis.rst:207
msgid ""
"The parameter interpretation recognizes local and global variable names, "
"constant values, branch targets, and compare operators."
msgstr ""
"La interpretación de parámetros reconoce nombres de variables locales y "
"globales, valores constantes, objetivos de ramificación y operadores de "
"comparación."

#: ../Doc/library/dis.rst:219
msgid ""
"Return an iterator over the instructions in the supplied function, method, "
"source code string or code object."
msgstr ""
"Retorna un iterador sobre las instrucciones en la función, método, cadena de "
"código fuente u objeto de código suministrado."

#: ../Doc/library/dis.rst:222
msgid ""
"The iterator generates a series of :class:`Instruction` named tuples giving "
"the details of each operation in the supplied code."
msgstr ""
"El iterador genera una serie de tuplas con nombre :class:`Instruction` que "
"dan los detalles de cada operación en el código suministrado."

#: ../Doc/library/dis.rst:235
msgid ""
"This generator function uses the ``co_firstlineno`` and ``co_lnotab`` "
"attributes of the code object *code* to find the offsets which are starts of "
"lines in the source code.  They are generated as ``(offset, lineno)`` pairs. "
"See :source:`Objects/lnotab_notes.txt` for the ``co_lnotab`` format and how "
"to decode it."
msgstr ""
"Esta función de generador utiliza los atributos ``co_firstlineno`` y "
"``co_lnotab`` del objeto de código *code* para encontrar los desplazamientos "
"que son comienzos de líneas en el código fuente. Se generan como pares "
"``(offset, lineno)``. Ver :source:`Objects/lnotab_notes.txt` para el formato "
"``co_lnotab`` y cómo decodificarlo."

#: ../Doc/library/dis.rst:241
msgid "Line numbers can be decreasing. Before, they were always increasing."
msgstr ""
"Los números de línea pueden estar disminuyendo. Antes, siempre estaban "
"aumentando."

#: ../Doc/library/dis.rst:247
msgid ""
"Detect all offsets in the raw compiled bytecode string *code* which are jump "
"targets, and return a list of these offsets."
msgstr ""
"Detecta todos los desplazamientos en la cadena de caracteres de código de "
"byte compilada *code* que son objetivos de salto y retorna una lista de "
"estos desplazamientos."

#: ../Doc/library/dis.rst:253
msgid "Compute the stack effect of *opcode* with argument *oparg*."
msgstr "Calcula el efecto de pila de *opcode* con el argumento *oparg*."

#: ../Doc/library/dis.rst:255
msgid ""
"If the code has a jump target and *jump* is ``True``, :func:`~stack_effect` "
"will return the stack effect of jumping.  If *jump* is ``False``, it will "
"return the stack effect of not jumping. And if *jump* is ``None`` (default), "
"it will return the maximal stack effect of both cases."
msgstr ""
"Si el código tiene un objetivo de salto y *jump* es ``True``, :func:"
"`~stack_effect` retornará el efecto de pila del salto. Si *jump* es "
"``False``, retornará el efecto de acumulación de no saltar. Y si *jump* es "
"``None`` (predeterminado), retornará el efecto de acumulación máxima de "
"ambos casos."

#: ../Doc/library/dis.rst:262
msgid "Added *jump* parameter."
msgstr "Agrega un parámetro *jump*."

#: ../Doc/library/dis.rst:269
msgid "Python Bytecode Instructions"
msgstr "Instrucciones bytecode de Python"

#: ../Doc/library/dis.rst:271
msgid ""
"The :func:`get_instructions` function and :class:`Bytecode` class provide "
"details of bytecode instructions as :class:`Instruction` instances:"
msgstr ""
"La función :func:`get_instructions` y clase :class:`Bytecode` proporcionan "
"detalles de las instrucciones bytecode como instancias :class:`Instruction`:"

#: ../Doc/library/dis.rst:276
msgid "Details for a bytecode operation"
msgstr "Detalles para una operación de bytecode"

#: ../Doc/library/dis.rst:280
msgid ""
"numeric code for operation, corresponding to the opcode values listed below "
"and the bytecode values in the :ref:`opcode_collections`."
msgstr ""
"código numérico para la operación, correspondiente a los valores del opcode "
"listados a continuación y los valores de bytecode en :ref:"
"`opcode_collections`."

#: ../Doc/library/dis.rst:286
msgid "human readable name for operation"
msgstr "nombre legible por humanos para la operación"

#: ../Doc/library/dis.rst:291
msgid "numeric argument to operation (if any), otherwise ``None``"
msgstr ""
"argumento numérico para la operación (si existe), de lo contrario ``None``"

#: ../Doc/library/dis.rst:296
msgid "resolved arg value (if known), otherwise same as arg"
msgstr "valor *arg* resuelto (si se conoce), de lo contrario igual que *arg*"

#: ../Doc/library/dis.rst:301
msgid "human readable description of operation argument"
msgstr "descripción legible por humanos del argumento de operación"

#: ../Doc/library/dis.rst:306
msgid "start index of operation within bytecode sequence"
msgstr "índice de inicio de operación dentro de la secuencia de bytecode"

#: ../Doc/library/dis.rst:311
msgid "line started by this opcode (if any), otherwise ``None``"
msgstr ""
"línea iniciada por este código de operación (si existe), de lo contrario "
"``None``"

#: ../Doc/library/dis.rst:316
msgid "``True`` if other code jumps to here, otherwise ``False``"
msgstr "``True`` si otro código salta aquí, de lo contrario, ``False``"

#: ../Doc/library/dis.rst:321
msgid ""
"The Python compiler currently generates the following bytecode instructions."
msgstr ""
"El compilador de Python actualmente genera las siguientes instrucciones de "
"bytecode."

#: ../Doc/library/dis.rst:324
msgid "**General instructions**"
msgstr "**Instrucciones generales**"

#: ../Doc/library/dis.rst:328
msgid "Do nothing code.  Used as a placeholder by the bytecode optimizer."
msgstr ""
"Código que hace nada. Utilizado como marcador de posición por el optimizador "
"de código de bytes."

#: ../Doc/library/dis.rst:333
msgid "Removes the top-of-stack (TOS) item."
msgstr "Elimina el elemento de la parte superior de la pila (TOS)."

#: ../Doc/library/dis.rst:338
msgid "Swaps the two top-most stack items."
msgstr "Intercambia los dos elementos más apilados."

#: ../Doc/library/dis.rst:343
msgid ""
"Lifts second and third stack item one position up, moves top down to "
"position three."
msgstr ""
"Levanta el segundo y tercer elemento de la pila una posición hacia arriba, "
"mueve el elemento superior hacia abajo a la posición tres."

#: ../Doc/library/dis.rst:349
msgid ""
"Lifts second, third and forth stack items one position up, moves top down to "
"position four."
msgstr ""
"Levanta el segundo, tercer y cuarto elementos de la pila una posición hacia "
"arriba, mueve el elemento superior hacia abajo a la posición cuatro."

#: ../Doc/library/dis.rst:357
msgid "Duplicates the reference on top of the stack."
msgstr "Duplica la referencia en la parte superior de la pila."

#: ../Doc/library/dis.rst:364
msgid ""
"Duplicates the two references on top of the stack, leaving them in the same "
"order."
msgstr ""
"Duplica las dos referencias en la parte superior de la pila, dejándolas en "
"el mismo orden."

#: ../Doc/library/dis.rst:370
msgid "**Unary operations**"
msgstr "**Operaciones unarias**"

#: ../Doc/library/dis.rst:372
msgid ""
"Unary operations take the top of the stack, apply the operation, and push "
"the result back on the stack."
msgstr ""
"Las operaciones unarias toman la parte superior de la pila, aplican la "
"operación y retornan el resultado a la pila."

#: ../Doc/library/dis.rst:377
msgid "Implements ``TOS = +TOS``."
msgstr "Implementa ``TOS = +TOS``."

#: ../Doc/library/dis.rst:382
msgid "Implements ``TOS = -TOS``."
msgstr "Implementa ``TOS = -TOS``."

#: ../Doc/library/dis.rst:387
msgid "Implements ``TOS = not TOS``."
msgstr "Implementa ``TOS = not TOS``."

#: ../Doc/library/dis.rst:392
msgid "Implements ``TOS = ~TOS``."
msgstr "Implementa ``TOS = ~TOS``."

#: ../Doc/library/dis.rst:397
msgid "Implements ``TOS = iter(TOS)``."
msgstr "Implementa ``TOS = iter(TOS)``."

#: ../Doc/library/dis.rst:402
msgid ""
"If ``TOS`` is a :term:`generator iterator` or :term:`coroutine` object it is "
"left as is.  Otherwise, implements ``TOS = iter(TOS)``."
msgstr ""
"Si ``TOS`` es un :term:`iterador generador <generator iterator>` o un "
"objeto :term:`corutina <coroutine>` se deja como está. De lo contrario, "
"implementa ``TOS = iter(TOS)``."

#: ../Doc/library/dis.rst:408
msgid "**Binary operations**"
msgstr "**Operaciones binarias**"

#: ../Doc/library/dis.rst:410
msgid ""
"Binary operations remove the top of the stack (TOS) and the second top-most "
"stack item (TOS1) from the stack.  They perform the operation, and put the "
"result back on the stack."
msgstr ""
"Las operaciones binarias eliminan el elemento superior de la pila (TOS) y el "
"segundo elemento de la pila superior (TOS1) de la pila. Realizan la "
"operación y retornan el resultado a la pila."

#: ../Doc/library/dis.rst:416
msgid "Implements ``TOS = TOS1 ** TOS``."
msgstr "Implementa ``TOS = TOS1 ** TOS``."

#: ../Doc/library/dis.rst:421
msgid "Implements ``TOS = TOS1 * TOS``."
msgstr "Implementa ``TOS = TOS1 * TOS``."

#: ../Doc/library/dis.rst:426
msgid "Implements ``TOS = TOS1 @ TOS``."
msgstr "Implementa ``TOS = TOS1 @ TOS``."

#: ../Doc/library/dis.rst:433
msgid "Implements ``TOS = TOS1 // TOS``."
msgstr "Implementa ``TOS = TOS1 // TOS``."

#: ../Doc/library/dis.rst:438
msgid "Implements ``TOS = TOS1 / TOS``."
msgstr "Implementa ``TOS = TOS1 / TOS``."

#: ../Doc/library/dis.rst:443
msgid "Implements ``TOS = TOS1 % TOS``."
msgstr "Implementa ``TOS = TOS1 % TOS``."

#: ../Doc/library/dis.rst:448
msgid "Implements ``TOS = TOS1 + TOS``."
msgstr "Implementa ``TOS = TOS1 + TOS``."

#: ../Doc/library/dis.rst:453
msgid "Implements ``TOS = TOS1 - TOS``."
msgstr "Implementa ``TOS = TOS1 - TOS``."

#: ../Doc/library/dis.rst:458
msgid "Implements ``TOS = TOS1[TOS]``."
msgstr "Implementa ``TOS = TOS1[TOS]``."

#: ../Doc/library/dis.rst:463
msgid "Implements ``TOS = TOS1 << TOS``."
msgstr "Implementa ``TOS = TOS1 << TOS``."

#: ../Doc/library/dis.rst:468
msgid "Implements ``TOS = TOS1 >> TOS``."
msgstr "Implementa ``TOS = TOS1 >> TOS``."

#: ../Doc/library/dis.rst:473
msgid "Implements ``TOS = TOS1 & TOS``."
msgstr "Implementa ``TOS = TOS1 & TOS``."

#: ../Doc/library/dis.rst:478
msgid "Implements ``TOS = TOS1 ^ TOS``."
msgstr "Implementa ``TOS = TOS1 ^ TOS``."

#: ../Doc/library/dis.rst:483
msgid "Implements ``TOS = TOS1 | TOS``."
msgstr "Implementa ``TOS = TOS1 | TOS``."

#: ../Doc/library/dis.rst:486
msgid "**In-place operations**"
msgstr "**Operaciones en su lugar**"

#: ../Doc/library/dis.rst:488
msgid ""
"In-place operations are like binary operations, in that they remove TOS and "
"TOS1, and push the result back on the stack, but the operation is done in-"
"place when TOS1 supports it, and the resulting TOS may be (but does not have "
"to be) the original TOS1."
msgstr ""
"Las operaciones en el lugar son como operaciones binarias, ya que eliminan "
"TOS y TOS1, y retornan el resultado a la pila, pero la operación se realiza "
"en el lugar cuando TOS1 lo admite, y el TOS resultante puede ser (pero no "
"tiene ser) el TOS1 original."

#: ../Doc/library/dis.rst:495
msgid "Implements in-place ``TOS = TOS1 ** TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 ** TOS``."

#: ../Doc/library/dis.rst:500
msgid "Implements in-place ``TOS = TOS1 * TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 * TOS``."

#: ../Doc/library/dis.rst:505
msgid "Implements in-place ``TOS = TOS1 @ TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 @ TOS``."

#: ../Doc/library/dis.rst:512
msgid "Implements in-place ``TOS = TOS1 // TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 // TOS``."

#: ../Doc/library/dis.rst:517
msgid "Implements in-place ``TOS = TOS1 / TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 / TOS``."

#: ../Doc/library/dis.rst:522
msgid "Implements in-place ``TOS = TOS1 % TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 % TOS``."

#: ../Doc/library/dis.rst:527
msgid "Implements in-place ``TOS = TOS1 + TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 + TOS``."

#: ../Doc/library/dis.rst:532
msgid "Implements in-place ``TOS = TOS1 - TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 - TOS``."

#: ../Doc/library/dis.rst:537
msgid "Implements in-place ``TOS = TOS1 << TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 << TOS``."

#: ../Doc/library/dis.rst:542
msgid "Implements in-place ``TOS = TOS1 >> TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 >> TOS``."

#: ../Doc/library/dis.rst:547
msgid "Implements in-place ``TOS = TOS1 & TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 & TOS``."

#: ../Doc/library/dis.rst:552
msgid "Implements in-place ``TOS = TOS1 ^ TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 ^ TOS``."

#: ../Doc/library/dis.rst:557
msgid "Implements in-place ``TOS = TOS1 | TOS``."
msgstr "Implementa en su lugar ``TOS = TOS1 | TOS``."

#: ../Doc/library/dis.rst:562
msgid "Implements ``TOS1[TOS] = TOS2``."
msgstr "Implementa ``TOS1[TOS] = TOS2``."

#: ../Doc/library/dis.rst:567
msgid "Implements ``del TOS1[TOS]``."
msgstr "Implementa ``del TOS1[TOS]``."

#: ../Doc/library/dis.rst:570
msgid "**Coroutine opcodes**"
msgstr "**Opcodes de corutinas**"

#: ../Doc/library/dis.rst:574
msgid ""
"Implements ``TOS = get_awaitable(TOS)``, where ``get_awaitable(o)`` returns "
"``o`` if ``o`` is a coroutine object or a generator object with the "
"CO_ITERABLE_COROUTINE flag, or resolves ``o.__await__``."
msgstr ""
"Implementa ``TOS = get_awaitable(TOS)``, donde ``get_awaitable(o)`` retorna "
"``o`` si ``o`` es un objeto de corutina o un objeto generador con el "
"indicador CO_ITERABLE_COROUTINE, o resuelve ``o.__await__``."

#: ../Doc/library/dis.rst:584
msgid "Implements ``TOS = TOS.__aiter__()``."
msgstr "Implementa ``TOS = TOS.__aiter__()``."

#: ../Doc/library/dis.rst:587
msgid "Returning awaitable objects from ``__aiter__`` is no longer supported."
msgstr "Ya no se admite el retorno de objetos *awaitable* de ``__aiter__``."

#: ../Doc/library/dis.rst:594
msgid ""
"Implements ``PUSH(get_awaitable(TOS.__anext__()))``.  See ``GET_AWAITABLE`` "
"for details about ``get_awaitable``"
msgstr ""
"Implementa ``PUSH(get_awaitable(TOS.__anext__()))``. Consulte "
"``GET_AWAITABLE`` para obtener detalles sobre ``get_awaitable``"

#: ../Doc/library/dis.rst:602
msgid ""
"Terminates an :keyword:`async for` loop.  Handles an exception raised when "
"awaiting a next item.  If TOS is :exc:`StopAsyncIteration` pop 7 values from "
"the stack and restore the exception state using the second three of them.  "
"Otherwise re-raise the exception using the three values from the stack.  An "
"exception handler block is removed from the block stack."
msgstr ""
"Termina un bucle :keyword:`async for`. Maneja una excepción planteada cuando "
"se espera un próximo elemento. Si TOS es :exc:`StopAsyncIteration` desapila "
"7 valores de la pila y restaura el estado de excepción utilizando los tres "
"últimos. De lo contrario, vuelva a lanzar la excepción utilizando los tres "
"valores de la pila. Se elimina un bloque de controlador de excepción de la "
"pila de bloques."

#: ../Doc/library/dis.rst:613
msgid ""
"Resolves ``__aenter__`` and ``__aexit__`` from the object on top of the "
"stack.  Pushes ``__aexit__`` and result of ``__aenter__()`` to the stack."
msgstr ""
"Resuelve ``__aenter__`` y ``__aexit__`` del objeto en la parte superior de "
"la pila. Apila ``__aexit__`` y el resultado de ``__aenter__()`` a la pila."

#: ../Doc/library/dis.rst:621
msgid "Creates a new frame object."
msgstr "Crea un nuevo objeto marco."

#: ../Doc/library/dis.rst:627
msgid "**Miscellaneous opcodes**"
msgstr "**Opcodes misceláneos**"

#: ../Doc/library/dis.rst:631
msgid ""
"Implements the expression statement for the interactive mode.  TOS is "
"removed from the stack and printed.  In non-interactive mode, an expression "
"statement is terminated with :opcode:`POP_TOP`."
msgstr ""
"Implementa la declaración de expresión para el modo interactivo. TOS se "
"elimina de la pila y se imprime. En modo no interactivo, una declaración de "
"expresión termina con :opcode:`POP_TOP`."

#: ../Doc/library/dis.rst:638
msgid ""
"Calls ``set.add(TOS1[-i], TOS)``.  Used to implement set comprehensions."
msgstr ""
"Llama a ``set.add(TOS1[-i], TOS)``. Se utiliza para implementar "
"comprensiones de conjuntos."

#: ../Doc/library/dis.rst:643
msgid ""
"Calls ``list.append(TOS[-i], TOS)``.  Used to implement list comprehensions."
msgstr ""
"Llama a ``list.append(TOS[-i], TOS)``. Se usa para implementar comprensiones "
"de listas."

#: ../Doc/library/dis.rst:648
msgid ""
"Calls ``dict.__setitem__(TOS1[-i], TOS1, TOS)``.  Used to implement dict "
"comprehensions."
msgstr ""
"Llama a ``dict.__setitem__(TOS1[-i], TOS1, TOS)``. Se utiliza para "
"implementar comprensiones de diccionarios."

#: ../Doc/library/dis.rst:652
msgid "Map value is TOS and map key is TOS1. Before, those were reversed."
msgstr ""
"El valor del mapa es TOS y la clave del mapa es TOS1. Antes, esos fueron "
"revertidos."

#: ../Doc/library/dis.rst:655
msgid ""
"For all of the :opcode:`SET_ADD`, :opcode:`LIST_APPEND` and :opcode:"
"`MAP_ADD` instructions, while the added value or key/value pair is popped "
"off, the container object remains on the stack so that it is available for "
"further iterations of the loop."
msgstr ""
"Para todas las instrucciones :opcode:`SET_ADD`, :opcode:`LIST_APPEND` y :"
"opcode:`MAP_ADD`, mientras el valor agregado o el par clave/valor aparece, "
"el objeto contenedor permanece en la pila para que quede disponible para "
"futuras iteraciones del bucle."

#: ../Doc/library/dis.rst:663
msgid "Returns with TOS to the caller of the function."
msgstr "Retorna con TOS a quien llama la función."

#: ../Doc/library/dis.rst:668
msgid "Pops TOS and yields it from a :term:`generator`."
msgstr "Desapila TOS y lo genera (*yield*) de un :term:`generator`."

#: ../Doc/library/dis.rst:673
msgid "Pops TOS and delegates to it as a subiterator from a :term:`generator`."
msgstr ""
"Desapila TOS y delega en él como un subiterador de un :term:`generator`."

#: ../Doc/library/dis.rst:680
msgid ""
"Checks whether ``__annotations__`` is defined in ``locals()``, if not it is "
"set up to an empty ``dict``. This opcode is only emitted if a class or "
"module body contains :term:`variable annotations <variable annotation>` "
"statically."
msgstr ""
"Comprueba si ``__anotaciones__`` está definido en ``locals()``, si no está "
"configurado como un ``dict`` vacío. Este código de operación solo se emite "
"si el cuerpo de una clase o módulo contiene :term:`anotaciones de variables "
"<variable annotation>` estáticamente."

#: ../Doc/library/dis.rst:690
msgid ""
"Loads all symbols not starting with ``'_'`` directly from the module TOS to "
"the local namespace. The module is popped after loading all names. This "
"opcode implements ``from module import *``."
msgstr ""
"Carga todos los símbolos que no comienzan con ``'_'`` directamente desde el "
"TOS del módulo al espacio de nombres local. El módulo se desapila después de "
"cargar todos los nombres. Este opcode implementa ``from module import *``."

#: ../Doc/library/dis.rst:697
msgid ""
"Removes one block from the block stack.  Per frame, there is a stack of "
"blocks, denoting :keyword:`try` statements, and such."
msgstr ""
"Elimina un bloque de la pila de bloques. Por cuadro, hay una pila de "
"bloques, que denota declaraciones :keyword:`try`, y tal."

#: ../Doc/library/dis.rst:703
msgid ""
"Removes one block from the block stack. The popped block must be an "
"exception handler block, as implicitly created when entering an except "
"handler.  In addition to popping extraneous values from the frame stack, the "
"last three popped values are used to restore the exception state."
msgstr ""
"Elimina un bloque de la pila de bloques. El bloque desapilado debe ser un "
"bloque de controlador de excepción, como se crea implícitamente al ingresar "
"un controlador de excepción. Además de desapilar valores extraños de la pila "
"de cuadros, los últimos tres valores desapilados se utilizan para restaurar "
"el estado de excepción."

#: ../Doc/library/dis.rst:711
msgid ""
"Cleans up the value stack and the block stack.  If *preserve_tos* is not "
"``0`` TOS first is popped from the stack and pushed on the stack after "
"performing other stack operations:"
msgstr ""
"Limpia la pila de valores y la pila de bloques. Si *preserve_tos* no es "
"``0``, primero se desapila TOS de la pila y se apila a la pila después de "
"realizar otras operaciones de pila:"

#: ../Doc/library/dis.rst:715
msgid ""
"If TOS is ``NULL`` or an integer (pushed by :opcode:`BEGIN_FINALLY` or :"
"opcode:`CALL_FINALLY`) it is popped from the stack."
msgstr ""
"Si TOS es ``NULL`` o un número entero (apilado por :opcode:`BEGIN_FINALLY` "
"o :opcode:`CALL_FINALLY`) se desapila de la pila."

#: ../Doc/library/dis.rst:717
msgid ""
"If TOS is an exception type (pushed when an exception has been raised) 6 "
"values are popped from the stack, the last three popped values are used to "
"restore the exception state.  An exception handler block is removed from the "
"block stack."
msgstr ""
"Si TOS es un tipo de excepción (se apila cuando se ha lanzado una excepción) "
"se desapilan 6 valores de la pila, los últimos tres valores se usan para "
"restaurar el estado de excepción. Se elimina un bloque de controlador de "
"excepción de la pila de bloques."

#: ../Doc/library/dis.rst:722
msgid ""
"It is similar to :opcode:`END_FINALLY`, but doesn't change the bytecode "
"counter nor raise an exception.  Used for implementing :keyword:`break`, :"
"keyword:`continue` and :keyword:`return` in the :keyword:`finally` block."
msgstr ""
"Es similar a :opcode:`END_FINALLY`, pero no cambia el contador de bytecode "
"ni lanza una excepción. Se usa para implementar :keyword:`break`, :keyword:"
"`continue` y :keyword:`return` en el bloque :keyword:`finally`."

#: ../Doc/library/dis.rst:731
msgid ""
"Pushes ``NULL`` onto the stack for using it in :opcode:`END_FINALLY`, :"
"opcode:`POP_FINALLY`, :opcode:`WITH_CLEANUP_START` and :opcode:"
"`WITH_CLEANUP_FINISH`.  Starts the :keyword:`finally` block."
msgstr ""
"Apila ``NULL`` en la pila para usarlo en :opcode:`END_FINALLY`, :opcode:"
"`POP_FINALLY`, :opcode:`WITH_CLEANUP_START` y :opcode:`WITH_CLEANUP_FINISH`. "
"Inicia el bloque :keyword:`finally`."

#: ../Doc/library/dis.rst:740
msgid ""
"Terminates a :keyword:`finally` clause.  The interpreter recalls whether the "
"exception has to be re-raised or execution has to be continued depending on "
"the value of TOS."
msgstr ""
"Termina una cláusula :keyword:`finally`. El intérprete recuerda si la "
"excepción se debe volver a ser lanzada o si se debe continuar la ejecución "
"según el valor de TOS."

#: ../Doc/library/dis.rst:744
msgid ""
"If TOS is ``NULL`` (pushed by :opcode:`BEGIN_FINALLY`) continue from the "
"next instruction. TOS is popped."
msgstr ""
"Si TOS es ``NULL`` (apilado por :opcode:`BEGIN_FINALLY`) continúa con la "
"siguiente instrucción. TOS se desapila."

#: ../Doc/library/dis.rst:746
msgid ""
"If TOS is an integer (pushed by :opcode:`CALL_FINALLY`), sets the bytecode "
"counter to TOS.  TOS is popped."
msgstr ""
"Si TOS es un entero (apilado por :opcode:`CALL_FINALLY`), establece el "
"contador de bytecode en TOS. TOS se desapila."

#: ../Doc/library/dis.rst:748
msgid ""
"If TOS is an exception type (pushed when an exception has been raised) 6 "
"values are popped from the stack, the first three popped values are used to "
"re-raise the exception and the last three popped values are used to restore "
"the exception state.  An exception handler block is removed from the block "
"stack."
msgstr ""
"Si TOS es un tipo de excepción (se apila cuando se ha lanzado una excepción) "
"se desapilan 6 valores de la pila, los primeros tres valores desapilados se "
"utilizan para volver a lanzar la excepción y los últimos tres valores "
"desapilados se utilizan para restaurar el estado de excepción. Se elimina un "
"bloque de controlador de excepción de la pila de bloques."

#: ../Doc/library/dis.rst:757
msgid ""
"Pushes :func:`builtins.__build_class__` onto the stack.  It is later called "
"by :opcode:`CALL_FUNCTION` to construct a class."
msgstr ""
"Apila :func:`builtins.__build_class__` en la pila. Más tarde se llama por :"
"opcode:`CALL_FUNCTION` para construir una clase."

#: ../Doc/library/dis.rst:763
msgid ""
"This opcode performs several operations before a with block starts.  First, "
"it loads :meth:`~object.__exit__` from the context manager and pushes it "
"onto the stack for later use by :opcode:`WITH_CLEANUP_START`.  Then, :meth:"
"`~object.__enter__` is called, and a finally block pointing to *delta* is "
"pushed.  Finally, the result of calling the ``__enter__()`` method is pushed "
"onto the stack.  The next opcode will either ignore it (:opcode:`POP_TOP`), "
"or store it in (a) variable(s) (:opcode:`STORE_FAST`, :opcode:`STORE_NAME`, "
"or :opcode:`UNPACK_SEQUENCE`)."
msgstr ""
"Este opcode realiza varias operaciones antes de que comience un bloque "
"*with*. Primero, carga :meth:`~object.__exit__` desde el administrador de "
"contexto y lo apila a la pila para su uso posterior por :opcode:"
"`WITH_CLEANUP_START`. Entonces, :meth:`~object.__enter__` se llama, y "
"finalmente se bloquea un bloque que apunta a *delta*. Finalmente, el "
"resultado de llamar al método ``__enter__()`` se apila en la pila. El "
"siguiente opcode lo ignorará (:opcode:`POP_TOP`), o lo almacenará en (una) "
"variable (s) (:opcode:`STORE_FAST`, :opcode:`STORE_NAME`, o :opcode:"
"`UNPACK_SEQUENCE`) ."

#: ../Doc/library/dis.rst:777
msgid ""
"Starts cleaning up the stack when a :keyword:`with` statement block exits."
msgstr ""
"Comienza a limpiar la pila cuando sale un bloque de instrucciones :keyword:"
"`with`."

#: ../Doc/library/dis.rst:779
msgid ""
"At the top of the stack are either ``NULL`` (pushed by :opcode:"
"`BEGIN_FINALLY`) or 6 values pushed if an exception has been raised in the "
"with block.  Below is the context manager's :meth:`~object.__exit__` or :"
"meth:`~object.__aexit__` bound method."
msgstr ""
"En la parte superior de la pila están ``NULL`` (apilado por :opcode:"
"`BEGIN_FINALLY`) o 6 valores apilados si se ha lanzado una excepción en el "
"bloque with. A continuación se muestra el gestor de contexto :meth:`~object."
"__exit__` o un método ligado :meth:`~object.__aexit__`."

#: ../Doc/library/dis.rst:784
msgid ""
"If TOS is ``NULL``, calls ``SECOND(None, None, None)``, removes the function "
"from the stack, leaving TOS, and pushes ``None`` to the stack.  Otherwise "
"calls ``SEVENTH(TOP, SECOND, THIRD)``, shifts the bottom 3 values of the "
"stack down, replaces the empty spot with ``NULL`` and pushes TOS.  Finally "
"pushes the result of the call."
msgstr ""
"Si TOS es ``NULL``, llama a ``SECOND(None, None, None)``, elimina la función "
"de la pila, deja TOS y apila ``None`` a la pila. De lo contrario, llama "
"``SEVENTH(TOP, SECOND, THIRD)``, desplaza los 3 valores inferiores de la "
"pila hacia abajo, reemplaza el espacio vacío con ``NULL`` y apila TOS. "
"Finalmente apila el resultado de la llamada."

#: ../Doc/library/dis.rst:793
msgid ""
"Finishes cleaning up the stack when a :keyword:`with` statement block exits."
msgstr ""
"Termina de limpiar la pila cuando sale un bloque de instrucciones :keyword:"
"`with`."

#: ../Doc/library/dis.rst:795
msgid ""
"TOS is result of ``__exit__()`` or ``__aexit__()`` function call pushed by :"
"opcode:`WITH_CLEANUP_START`.  SECOND is ``None`` or an exception type "
"(pushed when an exception has been raised)."
msgstr ""
"TOS es el resultado de la llamada a la función ``__exit__()`` o "
"``__aexit__()`` apilada por :opcode:`WITH_CLEANUP_START`. SECOND es ``None`` "
"o un tipo de excepción (se activa cuando se ha lanzado una excepción)."

#: ../Doc/library/dis.rst:799
msgid ""
"Pops two values from the stack.  If SECOND is not None and TOS is true "
"unwinds the EXCEPT_HANDLER block which was created when the exception was "
"caught and pushes ``NULL`` to the stack."
msgstr ""
"Desapila dos valores de la pila. Si SECOND no es None y TOS es verdadero, se "
"desenrolla el bloque EXCEPT_HANDLER que se creó cuando se detectó la "
"excepción y empuja ``NULL`` a la pila."

#: ../Doc/library/dis.rst:804
msgid "All of the following opcodes use their arguments."
msgstr "Todos los siguientes códigos de operación utilizan sus argumentos."

#: ../Doc/library/dis.rst:808
msgid ""
"Implements ``name = TOS``. *namei* is the index of *name* in the attribute :"
"attr:`co_names` of the code object. The compiler tries to use :opcode:"
"`STORE_FAST` or :opcode:`STORE_GLOBAL` if possible."
msgstr ""
"Implementa ``name = TOS``. *namei* es el índice de *name* en el atributo :"
"attr:`co_names` del objeto de código. El compilador intenta usar :opcode:"
"`STORE_FAST` o :opcode:`STORE_GLOBAL` si es posible."

#: ../Doc/library/dis.rst:815
msgid ""
"Implements ``del name``, where *namei* is the index into :attr:`co_names` "
"attribute of the code object."
msgstr ""
"Implementa ``del name``, donde *namei* es el índice en atributo :attr:"
"`co_names` del objeto de código."

#: ../Doc/library/dis.rst:821
msgid ""
"Unpacks TOS into *count* individual values, which are put onto the stack "
"right-to-left."
msgstr ""
"Descomprime TOS en *count* valores individuales, que se colocan en la pila "
"de derecha a izquierda."

#: ../Doc/library/dis.rst:827
msgid ""
"Implements assignment with a starred target: Unpacks an iterable in TOS into "
"individual values, where the total number of values can be smaller than the "
"number of items in the iterable: one of the new values will be a list of all "
"leftover items."
msgstr ""
"Implementa la asignación con un objetivo destacado: desempaqueta un iterable "
"en TOS en valores individuales, donde el número total de valores puede ser "
"menor que el número de elementos en el iterable: uno de los nuevos valores "
"será una lista de todos los elementos sobrantes."

#: ../Doc/library/dis.rst:832
msgid ""
"The low byte of *counts* is the number of values before the list value, the "
"high byte of *counts* the number of values after it.  The resulting values "
"are put onto the stack right-to-left."
msgstr ""
"El byte bajo de *count* es el número de valores antes del valor de la lista, "
"el byte alto de *count* es el número de valores después de él. Los valores "
"resultantes se colocan en la pila de derecha a izquierda."

#: ../Doc/library/dis.rst:839
msgid ""
"Implements ``TOS.name = TOS1``, where *namei* is the index of name in :attr:"
"`co_names`."
msgstr ""
"Implementa ``TOS.name = TOS1``, donde *namei* es el índice del nombre en :"
"attr:`co_names`."

#: ../Doc/library/dis.rst:845
msgid ""
"Implements ``del TOS.name``, using *namei* as index into :attr:`co_names`."
msgstr ""
"Implementa ``del TOS.name``, usando *namei* como índice en :attr:`co_names`."

#: ../Doc/library/dis.rst:850
msgid "Works as :opcode:`STORE_NAME`, but stores the name as a global."
msgstr ""
"Funciona como :opcode:`STORE_NAME`, pero almacena el nombre como global."

#: ../Doc/library/dis.rst:855
msgid "Works as :opcode:`DELETE_NAME`, but deletes a global name."
msgstr "Funciona como :opcode:`DELETE_NAME`, pero elimina un nombre global."

#: ../Doc/library/dis.rst:860
msgid "Pushes ``co_consts[consti]`` onto the stack."
msgstr "Apila ``co_consts[consti]`` en la pila."

#: ../Doc/library/dis.rst:865
msgid "Pushes the value associated with ``co_names[namei]`` onto the stack."
msgstr "Apila el valor asociado con ``co_names [namei]`` en la pila."

#: ../Doc/library/dis.rst:870
msgid ""
"Creates a tuple consuming *count* items from the stack, and pushes the "
"resulting tuple onto the stack."
msgstr ""
"Crea una tupla que consume elementos *count* de la pila, y apila la tupla "
"resultante a la pila."

#: ../Doc/library/dis.rst:876
msgid "Works as :opcode:`BUILD_TUPLE`, but creates a list."
msgstr "Funciona como :opcode:`BUILD_TUPLE`, pero crea una lista."

#: ../Doc/library/dis.rst:881
msgid "Works as :opcode:`BUILD_TUPLE`, but creates a set."
msgstr "Funciona como :opcode:`BUILD_TUPLE`, pero crea un conjunto."

#: ../Doc/library/dis.rst:886
msgid ""
"Pushes a new dictionary object onto the stack.  Pops ``2 * count`` items so "
"that the dictionary holds *count* entries: ``{..., TOS3: TOS2, TOS1: TOS}``."
msgstr ""
"Apila un nuevo objeto de diccionario en la pila. Desapila ``2 * count`` "
"elementos para que el diccionario contenga *count* entradas: ``{..., TOS3: "
"TOS2, TOS1: TOS}``."

#: ../Doc/library/dis.rst:890
msgid ""
"The dictionary is created from stack items instead of creating an empty "
"dictionary pre-sized to hold *count* items."
msgstr ""
"El diccionario se crea a partir de elementos de la pila en lugar de crear un "
"diccionario vacío dimensionado previamente para contener *count* elementos."

#: ../Doc/library/dis.rst:897
msgid ""
"The version of :opcode:`BUILD_MAP` specialized for constant keys. Pops the "
"top element on the stack which contains a tuple of keys, then starting from "
"``TOS1``, pops *count* values to form values in the built dictionary."
msgstr ""
"La versión de :opcode:`BUILD_MAP` especializada para claves constantes. "
"Desapila el elemento superior en la pila que contiene una tupla de claves, "
"luego, a partir de ``TOS1``, muestra los valores *count* para formar valores "
"en el diccionario incorporado."

#: ../Doc/library/dis.rst:906
msgid ""
"Concatenates *count* strings from the stack and pushes the resulting string "
"onto the stack."
msgstr ""
"Concatena *count* cadenas de caracteres de la pila y empuja la cadena de "
"caracteres resultante en la pila."

#: ../Doc/library/dis.rst:914
msgid ""
"Pops *count* iterables from the stack, joins them in a single tuple, and "
"pushes the result.  Implements iterable unpacking in tuple displays ``(*x, "
"*y, *z)``."
msgstr ""
"Desapila *count* iterables de la pila, los une en una sola tupla y apila el "
"resultado. Implementa el desempaquetado iterable cuando se imprime una tupla "
"``(*x, *y, *z)``."

#: ../Doc/library/dis.rst:923
msgid ""
"This is similar to :opcode:`BUILD_TUPLE_UNPACK`, but is used for ``f(*x, *y, "
"*z)`` call syntax. The stack item at position ``count + 1`` should be the "
"corresponding callable ``f``."
msgstr ""
"Esto es similar a :opcode:`BUILD_TUPLE_UNPACK`, pero se usa para la sintaxis "
"de llamada ``f(*x, *y, *z)``. El elemento de la pila en la posición ``count "
"+ 1`` debe ser la correspondiente invocable ``f``."

#: ../Doc/library/dis.rst:932
msgid ""
"This is similar to :opcode:`BUILD_TUPLE_UNPACK`, but pushes a list instead "
"of tuple.  Implements iterable unpacking in list displays ``[*x, *y, *z]``."
msgstr ""
"Esto es similar a :opcode:`BUILD_TUPLE_UNPACK`, pero apila una lista en "
"lugar de tupla. Implementa el desempaquetado iterable en los despliegues de "
"lista ``[*x, *y, *z]``."

#: ../Doc/library/dis.rst:941
msgid ""
"This is similar to :opcode:`BUILD_TUPLE_UNPACK`, but pushes a set instead of "
"tuple.  Implements iterable unpacking in set displays ``{*x, *y, *z}``."
msgstr ""
"Esto es similar a :opcode:`BUILD_TUPLE_UNPACK`, pero apila un conjunto en "
"lugar de tupla. Implementa el desempaquetado iterable en los despliegues de "
"conjunto ``{*x, *y, *z}``."

#: ../Doc/library/dis.rst:950
msgid ""
"Pops *count* mappings from the stack, merges them into a single dictionary, "
"and pushes the result.  Implements dictionary unpacking in dictionary "
"displays ``{**x, **y, **z}``."
msgstr ""
"Desapila *count* mapeos de la pila, los fusiona en un solo diccionario y "
"apila el resultado. Implementa el desempaquetado del diccionario en las "
"pantallas del diccionario ``{**x, **y, **z}``."

#: ../Doc/library/dis.rst:959
msgid ""
"This is similar to :opcode:`BUILD_MAP_UNPACK`, but is used for ``f(**x, **y, "
"**z)`` call syntax.  The stack item at position ``count + 2`` should be the "
"corresponding callable ``f``."
msgstr ""
"Esto es similar a :opcode:`BUILD_MAP_UNPACK`, pero se usa para la sintaxis "
"de llamada ``f(**x, **y, **z)``. El elemento de la pila en la posición "
"``count + 2`` debe ser la correspondiente invocable ``f``."

#: ../Doc/library/dis.rst:964
msgid ""
"The position of the callable is determined by adding 2 to the opcode "
"argument instead of encoding it in the second byte of the argument."
msgstr ""
"La posición del invocable se determina agregando 2 al argumento opcode en "
"lugar de codificarlo en el segundo byte del argumento."

#: ../Doc/library/dis.rst:971
msgid "Replaces TOS with ``getattr(TOS, co_names[namei])``."
msgstr "Reemplaza TOS con ``getattr(TOS, co_names[namei])``."

#: ../Doc/library/dis.rst:976
msgid ""
"Performs a Boolean operation.  The operation name can be found in "
"``cmp_op[opname]``."
msgstr ""
"Realiza una operación booleana. El nombre de la operación se puede encontrar "
"en ``cmp_op[opname]``."

#: ../Doc/library/dis.rst:982
msgid ""
"Imports the module ``co_names[namei]``.  TOS and TOS1 are popped and provide "
"the *fromlist* and *level* arguments of :func:`__import__`.  The module "
"object is pushed onto the stack.  The current namespace is not affected: for "
"a proper import statement, a subsequent :opcode:`STORE_FAST` instruction "
"modifies the namespace."
msgstr ""
"Importa el módulo ``co_names[namei]``. TOS y TOS1 aparecen y proporcionan "
"los argumentos *fromlist* y *level* de :func:`__import__`. El objeto del "
"módulo se empuja a la pila. El espacio de nombres actual no se ve afectado: "
"para una instrucción de importación adecuada, una instrucción posterior :"
"opcode:`STORE_FAST` modifica el espacio de nombres."

#: ../Doc/library/dis.rst:991
msgid ""
"Loads the attribute ``co_names[namei]`` from the module found in TOS. The "
"resulting object is pushed onto the stack, to be subsequently stored by a :"
"opcode:`STORE_FAST` instruction."
msgstr ""
"Carga el atributo ``co_names[namei]`` del módulo que se encuentra en TOS. El "
"objeto resultante se apila en la pila, para luego ser almacenado por la "
"instrucción :opcode:`STORE_FAST`."

#: ../Doc/library/dis.rst:998
msgid "Increments bytecode counter by *delta*."
msgstr "Incrementa el contador de bytecode en *delta*."

#: ../Doc/library/dis.rst:1003
msgid "If TOS is true, sets the bytecode counter to *target*.  TOS is popped."
msgstr ""
"Si TOS es true, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:1010
msgid "If TOS is false, sets the bytecode counter to *target*.  TOS is popped."
msgstr ""
"Si TOS es falso, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:1017
msgid ""
"If TOS is true, sets the bytecode counter to *target* and leaves TOS on the "
"stack.  Otherwise (TOS is false), TOS is popped."
msgstr ""
"Si TOS es verdadero, establece el contador de bytecode en *target* y deja "
"TOS en la pila. De lo contrario (TOS es falso), TOS se desapila."

#: ../Doc/library/dis.rst:1025
msgid ""
"If TOS is false, sets the bytecode counter to *target* and leaves TOS on the "
"stack.  Otherwise (TOS is true), TOS is popped."
msgstr ""
"Si TOS es falso, establece el contador de bytecode en *target* y deja TOS en "
"la pila. De lo contrario (TOS es verdadero), TOS se desapila."

#: ../Doc/library/dis.rst:1033
msgid "Set bytecode counter to *target*."
msgstr "Establezca el contador de bytecode en *target*."

#: ../Doc/library/dis.rst:1038
msgid ""
"TOS is an :term:`iterator`.  Call its :meth:`~iterator.__next__` method.  If "
"this yields a new value, push it on the stack (leaving the iterator below "
"it).  If the iterator indicates it is exhausted TOS is popped, and the byte "
"code counter is incremented by *delta*."
msgstr ""
"TOS es un :term:`iterador`. Llama a su método :meth:`~iterator.__next__`. Si "
"esto produce un nuevo valor, lo apila en la pila (dejando el iterador debajo "
"de él). Si el iterador indica que está agotado, se abre TOS y el contador de "
"código de bytes se incrementa en *delta*."

#: ../Doc/library/dis.rst:1046
msgid "Loads the global named ``co_names[namei]`` onto the stack."
msgstr "Carga el nombre global ``co_names[namei]`` en la pila."

#: ../Doc/library/dis.rst:1051
msgid ""
"Pushes a try block from a try-finally or try-except clause onto the block "
"stack.  *delta* points to the finally block or the first except block."
msgstr ""
"Apila un bloque try de una cláusula try-finally o try-except en la pila de "
"bloques. *delta* apunta al último bloque o al primero excepto el bloque."

#: ../Doc/library/dis.rst:1057
msgid ""
"Pushes the address of the next instruction onto the stack and increments "
"bytecode counter by *delta*.  Used for calling the finally block as a "
"\"subroutine\"."
msgstr ""
"Apila la dirección de la siguiente instrucción en la pila e incrementa el "
"contador de bytecode en *delta*. Se usa para llamar al bloque finalmente "
"como una \"subrutina\"."

#: ../Doc/library/dis.rst:1066
msgid ""
"Pushes a reference to the local ``co_varnames[var_num]`` onto the stack."
msgstr "Apila una referencia al local ``co_varnames[var_num]`` sobre la pila."

#: ../Doc/library/dis.rst:1071
msgid "Stores TOS into the local ``co_varnames[var_num]``."
msgstr "Almacena TOS en el local ``co_varnames[var_num]``."

#: ../Doc/library/dis.rst:1076
msgid "Deletes local ``co_varnames[var_num]``."
msgstr "Elimina la ``co_varnames[var_num]`` local."

#: ../Doc/library/dis.rst:1081
msgid ""
"Pushes a reference to the cell contained in slot *i* of the cell and free "
"variable storage.  The name of the variable is ``co_cellvars[i]`` if *i* is "
"less than the length of *co_cellvars*.  Otherwise it is ``co_freevars[i - "
"len(co_cellvars)]``."
msgstr ""
"Apila una referencia a la celda contenida en la ranura *i* de la celda y el "
"almacenamiento variable libre. El nombre de la variable es "
"``co_cellvars[i]`` si *i* es menor que la longitud de *co_cellvars*. De lo "
"contrario, es ``co_freevars[i - len(co_cellvars)]``."

#: ../Doc/library/dis.rst:1089
msgid ""
"Loads the cell contained in slot *i* of the cell and free variable storage. "
"Pushes a reference to the object the cell contains on the stack."
msgstr ""
"Carga la celda contenida en la ranura *i* de la celda y el almacenamiento "
"variable libre. Apila una referencia al objeto que contiene la celda en la "
"pila."

#: ../Doc/library/dis.rst:1095
msgid ""
"Much like :opcode:`LOAD_DEREF` but first checks the locals dictionary before "
"consulting the cell.  This is used for loading free variables in class "
"bodies."
msgstr ""
"Al igual que :opcode:`LOAD_DEREF` pero primero verifica el diccionario local "
"antes de consultar la celda. Esto se usa para cargar variables libres en los "
"cuerpos de clase."

#: ../Doc/library/dis.rst:1104
msgid ""
"Stores TOS into the cell contained in slot *i* of the cell and free variable "
"storage."
msgstr ""
"Almacena TOS en la celda contenida en la ranura *i* de la celda y "
"almacenamiento variable libre."

#: ../Doc/library/dis.rst:1110
msgid ""
"Empties the cell contained in slot *i* of the cell and free variable "
"storage. Used by the :keyword:`del` statement."
msgstr ""
"Vacía la celda contenida en la ranura *i* de la celda y el almacenamiento "
"variable libre. Utilizado por la declaración :keyword:`del`."

#: ../Doc/library/dis.rst:1118
msgid ""
"Raises an exception using one of the 3 forms of the ``raise`` statement, "
"depending on the value of *argc*:"
msgstr ""
"Provoca una excepción utilizando una de las 3 formas de la declaración "
"``raise``, dependiendo del valor de *argc*:"

#: ../Doc/library/dis.rst:1121
msgid "0: ``raise`` (re-raise previous exception)"
msgstr "0: ``raise`` (vuelve a lanzar la excepción anterior)"

#: ../Doc/library/dis.rst:1122
msgid "1: ``raise TOS`` (raise exception instance or type at ``TOS``)"
msgstr "1: ``raise TOS`` (lanza instancia de excepción o un tipo en ``TOS``)"

#: ../Doc/library/dis.rst:1123
msgid ""
"2: ``raise TOS1 from TOS`` (raise exception instance or type at ``TOS1`` "
"with ``__cause__`` set to ``TOS``)"
msgstr ""
"2: ``raise TOS1 desde TOS`` (lanza una instancia de excepción o tipo en "
"``TOS1`` con ``__cause__`` establecida en `` TOS``)"

#: ../Doc/library/dis.rst:1129
msgid ""
"Calls a callable object with positional arguments. *argc* indicates the "
"number of positional arguments. The top of the stack contains positional "
"arguments, with the right-most argument on top.  Below the arguments is a "
"callable object to call. ``CALL_FUNCTION`` pops all arguments and the "
"callable object off the stack, calls the callable object with those "
"arguments, and pushes the return value returned by the callable object."
msgstr ""
"Llama a un objeto invocable con argumentos posicionales. *argc* indica el "
"número de argumentos posicionales. La parte superior de la pila contiene "
"argumentos posicionales, con el argumento más a la derecha en la parte "
"superior. Debajo de los argumentos hay un objeto invocable para llamar. "
"``CALL_FUNCTION`` saca todos los argumentos y el objeto invocable de la "
"pila, llama al objeto invocable con esos argumentos y empuja el valor de "
"retorno retornado por el objeto invocable."

#: ../Doc/library/dis.rst:1137
msgid "This opcode is used only for calls with positional arguments."
msgstr ""
"Este código de operación se usa solo para llamadas con argumentos "
"posicionales."

#: ../Doc/library/dis.rst:1143
msgid ""
"Calls a callable object with positional (if any) and keyword arguments. "
"*argc* indicates the total number of positional and keyword arguments. The "
"top element on the stack contains a tuple of keyword argument names. Below "
"that are keyword arguments in the order corresponding to the tuple. Below "
"that are positional arguments, with the right-most parameter on top.  Below "
"the arguments is a callable object to call. ``CALL_FUNCTION_KW`` pops all "
"arguments and the callable object off the stack, calls the callable object "
"with those arguments, and pushes the return value returned by the callable "
"object."
msgstr ""
"Llama a un objeto invocable con argumentos posicionales (si los hay) y "
"palabras clave. *argc* indica el número total de argumentos posicionales y "
"de palabras clave. El elemento superior en la pila contiene una tupla de "
"nombres de argumentos de palabras clave. Debajo de eso hay argumentos de "
"palabras clave en el orden correspondiente a la tupla. Debajo de eso hay "
"argumentos posicionales, con el parámetro más a la derecha en la parte "
"superior. Debajo de los argumentos hay un objeto invocable para llamar. "
"``CALL_FUNCTION_KW`` saca todos los argumentos y el objeto invocable de la "
"pila, llama al objeto invocable con esos argumentos y empuja el valor de "
"retorno retornado por el objeto invocable."

#: ../Doc/library/dis.rst:1153
msgid ""
"Keyword arguments are packed in a tuple instead of a dictionary, *argc* "
"indicates the total number of arguments."
msgstr ""
"Los argumentos de palabras clave se empaquetan en una tupla en lugar de un "
"diccionario, *argc* indica el número total de argumentos."

#: ../Doc/library/dis.rst:1160
msgid ""
"Calls a callable object with variable set of positional and keyword "
"arguments.  If the lowest bit of *flags* is set, the top of the stack "
"contains a mapping object containing additional keyword arguments. Below "
"that is an iterable object containing positional arguments and a callable "
"object to call.  :opcode:`BUILD_MAP_UNPACK_WITH_CALL` and :opcode:"
"`BUILD_TUPLE_UNPACK_WITH_CALL` can be used for merging multiple mapping "
"objects and iterables containing arguments. Before the callable is called, "
"the mapping object and iterable object are each \"unpacked\" and their "
"contents passed in as keyword and positional arguments respectively. "
"``CALL_FUNCTION_EX`` pops all arguments and the callable object off the "
"stack, calls the callable object with those arguments, and pushes the return "
"value returned by the callable object."
msgstr ""
"Llama a un objeto invocable con un conjunto variable de argumentos "
"posicionales y de palabras clave. Si se establece el bit más bajo de "
"*flags*, la parte superior de la pila contiene un objeto de mapeo que "
"contiene argumentos de palabras clave adicionales. Debajo de eso hay un "
"objeto iterable que contiene argumentos posicionales y un objeto invocable "
"para llamar. :opcode:`BUILD_MAP_UNPACK_WITH_CALL` y :opcode:"
"`BUILD_TUPLE_UNPACK_WITH_CALL` puede usarse para fusionar múltiples objetos "
"de mapeo e iterables que contienen argumentos. Antes de llamar al invocable, "
"el objeto de mapeo y el objeto iterable se \"desempaquetan\" y sus "
"contenidos se pasan como palabras clave y argumentos posicionales, "
"respectivamente. ``CALL_FUNCTION_EX`` saca todos los argumentos y el objeto "
"invocable de la pila, llama al objeto invocable con esos argumentos y empuja "
"el valor de retorno retornado por el objeto invocable."

#: ../Doc/library/dis.rst:1179
msgid ""
"Loads a method named ``co_names[namei]`` from the TOS object. TOS is popped. "
"This bytecode distinguishes two cases: if TOS has a method with the correct "
"name, the bytecode pushes the unbound method and TOS. TOS will be used as "
"the first argument (``self``) by :opcode:`CALL_METHOD` when calling the "
"unbound method. Otherwise, ``NULL`` and the object return by the attribute "
"lookup are pushed."
msgstr ""
"Carga un método llamado ``co_names[namei]`` desde el objeto TOS. TOS "
"aparece. Este bytecode distingue dos casos: si TOS tiene un método con el "
"nombre correcto, el bytecode apila el método no vinculado y TOS. TOS se "
"usará como primer argumento (``self``) por :opcode:`CALL_METHOD` cuando se "
"llama al método independiente. De lo contrario, ``NULL`` y el objeto "
"retornado por la búsqueda de atributos son apilados."

#: ../Doc/library/dis.rst:1191
msgid ""
"Calls a method.  *argc* is the number of positional arguments. Keyword "
"arguments are not supported.  This opcode is designed to be used with :"
"opcode:`LOAD_METHOD`.  Positional arguments are on top of the stack. Below "
"them, the two items described in :opcode:`LOAD_METHOD` are on the stack "
"(either ``self`` and an unbound method object or ``NULL`` and an arbitrary "
"callable). All of them are popped and the return value is pushed."
msgstr ""
"Llama a un método. *argc* es el número de argumentos posicionales. Los "
"argumentos de palabras clave no son compatibles. Este código de operación "
"está diseñado para usarse con :opcode:`LOAD_METHOD`. Los argumentos "
"posicionales están en la parte superior de la pila. Debajo de ellos, los dos "
"elementos descritos en :opcode:`LOAD_METHOD` están en la pila (``self`` y un "
"objeto de método independiente o ``NULL`` y un invocable arbitrario). Todos "
"ellos aparecen y se apila el valor de retorno."

#: ../Doc/library/dis.rst:1203
msgid ""
"Pushes a new function object on the stack.  From bottom to top, the consumed "
"stack must consist of values if the argument carries a specified flag value"
msgstr ""
"Apila un nuevo objeto de función en la pila. De abajo hacia arriba, la pila "
"consumida debe constar de valores si el argumento lleva un valor de marca "
"especificado"

#: ../Doc/library/dis.rst:1206
msgid ""
"``0x01`` a tuple of default values for positional-only and positional-or-"
"keyword parameters in positional order"
msgstr ""
"``0x01``, una tupla de valores predeterminados para solo parámetros "
"posicionales y posicionales o de palabras clave en orden posicional"

#: ../Doc/library/dis.rst:1208
msgid "``0x02`` a dictionary of keyword-only parameters' default values"
msgstr ""
"``0x02`` un diccionario de valores predeterminados de solo palabras clave"

#: ../Doc/library/dis.rst:1209
msgid "``0x04`` an annotation dictionary"
msgstr "``0x04`` un diccionario de anotaciones"

#: ../Doc/library/dis.rst:1210
msgid "``0x08`` a tuple containing cells for free variables, making a closure"
msgstr ""
"``0x08`` una tupla que contiene celdas para variables libres, haciendo un "
"cierre (*closure*)"

#: ../Doc/library/dis.rst:1211
msgid "the code associated with the function (at TOS1)"
msgstr "el código asociado con la función (en TOS1)"

#: ../Doc/library/dis.rst:1212
msgid "the :term:`qualified name` of the function (at TOS)"
msgstr "el :term:`nombre calificado` de la función (en TOS)"

#: ../Doc/library/dis.rst:1219
msgid ""
"Pushes a slice object on the stack.  *argc* must be 2 or 3.  If it is 2, "
"``slice(TOS1, TOS)`` is pushed; if it is 3, ``slice(TOS2, TOS1, TOS)`` is "
"pushed. See the :func:`slice` built-in function for more information."
msgstr ""
"Apila un objeto de rebanada en la pila. *argc* debe ser 2 o 3. Si es 2, se "
"apila ``slice(TOS1, TOS)``; si es 3, se apila ``slice(TOS2, TOS1, TOS)``. "
"Consulte la función incorporada :func:`slice` para obtener más información."

#: ../Doc/library/dis.rst:1226
msgid ""
"Prefixes any opcode which has an argument too big to fit into the default "
"one byte. *ext* holds an additional byte which act as higher bits in the "
"argument. For each opcode, at most three prefixal ``EXTENDED_ARG`` are "
"allowed, forming an argument from two-byte to four-byte."
msgstr ""
"Prefija cualquier código de operación que tenga un argumento demasiado "
"grande para caber en el byte predeterminado. *ext* contiene un byte "
"adicional que actúa como bits más altos en el argumento. Para cada opcode, "
"como máximo se permiten tres prefijos ``EXTENDED_ARG``, formando un "
"argumento de dos bytes a cuatro bytes."

#: ../Doc/library/dis.rst:1234
msgid ""
"Used for implementing formatted literal strings (f-strings).  Pops an "
"optional *fmt_spec* from the stack, then a required *value*. *flags* is "
"interpreted as follows:"
msgstr ""
"Se utiliza para implementar cadenas literales formateadas (cadenas de "
"caracteres f). Desapila un *fmt_spec* opcional de la pila, luego un *value* "
"requerido. *flags* se interpreta de la siguiente manera:"

#: ../Doc/library/dis.rst:1238
msgid "``(flags & 0x03) == 0x00``: *value* is formatted as-is."
msgstr "``(flags & 0x03) == 0x00``: *value* es formateado como está."

#: ../Doc/library/dis.rst:1239
msgid ""
"``(flags & 0x03) == 0x01``: call :func:`str` on *value* before formatting it."
msgstr ""
"``(flags & 0x03) == 0x01``: llama :func:`str` sobre *value* antes de "
"formatearlo."

#: ../Doc/library/dis.rst:1241
msgid ""
"``(flags & 0x03) == 0x02``: call :func:`repr` on *value* before formatting "
"it."
msgstr ""
"``(flags & 0x03) == 0x02``: llama :func:`repr` sobre *value* antes de "
"formatearlo."

#: ../Doc/library/dis.rst:1243
msgid ""
"``(flags & 0x03) == 0x03``: call :func:`ascii` on *value* before formatting "
"it."
msgstr ""
"``(flags & 0x03) == 0x03``: llama :func:`ascii` sobre *value* antes de "
"formatearlo."

#: ../Doc/library/dis.rst:1245
msgid ""
"``(flags & 0x04) == 0x04``: pop *fmt_spec* from the stack and use it, else "
"use an empty *fmt_spec*."
msgstr ""
"``(flags & 0x04) == 0x04``: desapila *fmt_spec* de la pila y lo usa, de lo "
"contrario usa un *fmt_spec* vacío."

#: ../Doc/library/dis.rst:1248
msgid ""
"Formatting is performed using :c:func:`PyObject_Format`.  The result is "
"pushed on the stack."
msgstr ""
"El formateo se realiza usando :c:func:`PyObject_Format`. El resultado se "
"apila en la pila."

#: ../Doc/library/dis.rst:1256
msgid ""
"This is not really an opcode.  It identifies the dividing line between "
"opcodes which don't use their argument and those that do (``< "
"HAVE_ARGUMENT`` and ``>= HAVE_ARGUMENT``, respectively)."
msgstr ""
"Esto no es realmente un opcode. Identifica la línea divisoria entre los "
"opcode que no usan su argumento y los que lo hacen (``< HAVE_ARGUMENT`` y "
"``>= HAVE_ARGUMENT``, respectivamente)."

#: ../Doc/library/dis.rst:1260
msgid ""
"Now every instruction has an argument, but opcodes ``< HAVE_ARGUMENT`` "
"ignore it. Before, only opcodes ``>= HAVE_ARGUMENT`` had an argument."
msgstr ""
"Ahora cada instrucción tiene un argumento, pero los códigos de operación "
"``<HAVE_ARGUMENT`` la ignoran. Antes, solo los códigos de operación ``> = "
"HAVE_ARGUMENT`` tenían un argumento."

#: ../Doc/library/dis.rst:1268
msgid "Opcode collections"
msgstr "Colecciones opcode"

#: ../Doc/library/dis.rst:1270
msgid ""
"These collections are provided for automatic introspection of bytecode "
"instructions:"
msgstr ""
"Estas colecciones se proporcionan para la introspección automática de "
"instrucciones de bytecode:"

#: ../Doc/library/dis.rst:1275
msgid "Sequence of operation names, indexable using the bytecode."
msgstr "Secuencia de nombres de operaciones, indexable utilizando el bytecode."

#: ../Doc/library/dis.rst:1280
msgid "Dictionary mapping operation names to bytecodes."
msgstr "Nombres de operaciones de mapeo de diccionario a bytecodes."

#: ../Doc/library/dis.rst:1285
msgid "Sequence of all compare operation names."
msgstr "Secuencia de todos los nombres de operaciones de comparación."

#: ../Doc/library/dis.rst:1290
msgid "Sequence of bytecodes that access a constant."
msgstr "Secuencia de bytecodes que acceden a una constante."

#: ../Doc/library/dis.rst:1295
msgid ""
"Sequence of bytecodes that access a free variable (note that 'free' in this "
"context refers to names in the current scope that are referenced by inner "
"scopes or names in outer scopes that are referenced from this scope.  It "
"does *not* include references to global or builtin scopes)."
msgstr ""
"Secuencia de bytecodes que acceden a una variable libre (tenga en cuenta que "
"'libre' en este contexto se refiere a nombres en el alcance actual a los que "
"hacen referencia los ámbitos internos o los nombres en los ámbitos externos "
"a los que se hace referencia desde este ámbito. **No** incluye referencias a "
"ámbitos globales o integrados)."

#: ../Doc/library/dis.rst:1303
msgid "Sequence of bytecodes that access an attribute by name."
msgstr "Secuencia de bytecodes que acceden a un atributo por nombre."

#: ../Doc/library/dis.rst:1308
msgid "Sequence of bytecodes that have a relative jump target."
msgstr "Secuencia de bytecodes que tienen un objetivo de salto relativo."

#: ../Doc/library/dis.rst:1313
msgid "Sequence of bytecodes that have an absolute jump target."
msgstr "Secuencia de bytecodes que tienen un objetivo de salto absoluto."

#: ../Doc/library/dis.rst:1318
msgid "Sequence of bytecodes that access a local variable."
msgstr "Secuencia de códigos de bytes que acceden a una variable local."

#: ../Doc/library/dis.rst:1323
msgid "Sequence of bytecodes of Boolean operations."
msgstr "Secuencia de bytecodes de operaciones booleanas."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2021-11-05 23:34+0800\n"
"Last-Translator: Rodrigo Tobar <rtobarc@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../Doc/library/dis.rst:2
msgid ":mod:`dis` --- Disassembler for Python bytecode"
msgstr ":mod:`dis` --- Desensamblador para bytecode de Python"

#: ../Doc/library/dis.rst:7
msgid "**Source code:** :source:`Lib/dis.py`"
msgstr "**Código fuente:** :source:`Lib/dis.py`"

#: ../Doc/library/dis.rst:17
msgid ""
"The :mod:`dis` module supports the analysis of CPython :term:`bytecode` by "
"disassembling it. The CPython bytecode which this module takes as an input "
"is defined in the file :file:`Include/opcode.h` and used by the compiler and "
"the interpreter."
msgstr ""
"El módulo :mod:`dis` admite el análisis de CPython :term:`bytecode` al "
"desarmarlo. El bytecode de CPython que este módulo toma como entrada se "
"define en el archivo :file:`Include/opcode.h` y lo utilizan el compilador y "
"el intérprete."

#: ../Doc/library/dis.rst:24
msgid ""
"Bytecode is an implementation detail of the CPython interpreter.  No "
"guarantees are made that bytecode will not be added, removed, or changed "
"between versions of Python.  Use of this module should not be considered to "
"work across Python VMs or Python releases."
msgstr ""
"Bytecode es un detalle de implementación del intérprete CPython. No se "
"garantiza que el bytecode no se agregará, eliminará ni cambiará entre las "
"versiones de Python. El uso de este módulo no debe considerarse para "
"trabajar en diferentes máquinas virtuales Python o versiones de Python."

#: ../Doc/library/dis.rst:29
msgid ""
"Use 2 bytes for each instruction. Previously the number of bytes varied by "
"instruction."
msgstr ""
"Use 2 bytes para cada instrucción. Anteriormente, el número de bytes variaba "
"según la instrucción."

#: ../Doc/library/dis.rst:33
msgid ""
"The argument of jump, exception handling and loop instructions is now the "
"instruction offset rather than the byte offset."
msgstr ""

#: ../Doc/library/dis.rst:37
msgid ""
"Some instructions are accompanied by one or more inline cache entries, which "
"take the form of :opcode:`CACHE` instructions. These instructions are hidden "
"by default, but can be shown by passing ``show_caches=True`` to any :mod:"
"`dis` utility."
msgstr ""

#: ../Doc/library/dis.rst:44
msgid "Example: Given the function :func:`myfunc`::"
msgstr "Ejemplo: dada la función :func:`myfunc`::"

#: ../Doc/library/dis.rst:49
#, fuzzy
msgid ""
"the following command can be used to display the disassembly of :func:"
"`myfunc`:"
msgstr ""
"el siguiente comando se puede utilizar para mostrar el desensamblaje de :"
"func:`myfunc`::"

#: ../Doc/library/dis.rst:63
msgid "(The \"2\" is a line number)."
msgstr "(El \"2\" es un número de línea)."

#: ../Doc/library/dis.rst:66
msgid "Bytecode analysis"
msgstr "Análisis de bytecode"

#: ../Doc/library/dis.rst:70
msgid ""
"The bytecode analysis API allows pieces of Python code to be wrapped in a :"
"class:`Bytecode` object that provides easy access to details of the compiled "
"code."
msgstr ""
"La API de análisis de bytecode permite que partes del código Python se "
"envuelvan en un objeto :class:`Bytecode` que proporciona un fácil acceso a "
"los detalles del código compilado."

#: ../Doc/library/dis.rst:77
msgid ""
"Analyse the bytecode corresponding to a function, generator, asynchronous "
"generator, coroutine, method, string of source code, or a code object (as "
"returned by :func:`compile`)."
msgstr ""
"Analiza el bytecode correspondiente a una función, generador, generador "
"asíncrono, corutina, método, cadena de código fuente o un objeto de código "
"(como lo retorna :func:`compile`)."

#: ../Doc/library/dis.rst:81
msgid ""
"This is a convenience wrapper around many of the functions listed below, "
"most notably :func:`get_instructions`, as iterating over a :class:`Bytecode` "
"instance yields the bytecode operations as :class:`Instruction` instances."
msgstr ""
"Este es un contenedor conveniente para muchas de las funciones enumeradas a "
"continuación, en particular :func:`get_instructions`, ya que iterar sobre "
"una instancia de :class:`Bytecode` produce las operaciones de bytecode como "
"instancias de :class:`Instruction`."

#: ../Doc/library/dis.rst:85 ../Doc/library/dis.rst:262
msgid ""
"If *first_line* is not ``None``, it indicates the line number that should be "
"reported for the first source line in the disassembled code.  Otherwise, the "
"source line information (if any) is taken directly from the disassembled "
"code object."
msgstr ""
"Si *first_line* no es ``None``, indica el número de línea que se debe "
"informar para la primera línea de origen en el código desmontado. De lo "
"contrario, la información de la línea de origen (si la hay) se toma "
"directamente del objeto de código desmontado."

#: ../Doc/library/dis.rst:90
msgid ""
"If *current_offset* is not ``None``, it refers to an instruction offset in "
"the disassembled code. Setting this means :meth:`.dis` will display a "
"\"current instruction\" marker against the specified opcode."
msgstr ""
"Si *current_offset* no es ``None``, se refiere a un desplazamiento de "
"instrucción en el código desmontado. Establecer esto significa :meth:`.dis` "
"mostrará un marcador de \"instrucción actual\" contra el código de operación "
"especificado."

#: ../Doc/library/dis.rst:96
msgid ""
"Construct a :class:`Bytecode` instance from the given traceback, setting "
"*current_offset* to the instruction responsible for the exception."
msgstr ""
"Construye una instancia de :class:`Bytecode` a partir del *traceback* dado, "
"estableciendo *current_offset* en la instrucción responsable de la excepción."

#: ../Doc/library/dis.rst:101
msgid "The compiled code object."
msgstr "El objeto de código compilado."

#: ../Doc/library/dis.rst:105
msgid "The first source line of the code object (if available)"
msgstr "La primera línea de origen del objeto de código (si está disponible)"

#: ../Doc/library/dis.rst:109
msgid ""
"Return a formatted view of the bytecode operations (the same as printed by :"
"func:`dis.dis`, but returned as a multi-line string)."
msgstr ""
"Retorna una vista formateada de las operaciones de bytecode (lo mismo que "
"impreso por :func:`dis.dis`, pero retornado como una cadena de caracteres "
"multilínea)."

#: ../Doc/library/dis.rst:114
msgid ""
"Return a formatted multi-line string with detailed information about the "
"code object, like :func:`code_info`."
msgstr ""
"Retorna una cadena de caracteres multilínea formateada con información "
"detallada sobre el objeto de código, como :func:`code_info`."

#: ../Doc/library/dis.rst:117 ../Doc/library/dis.rst:158
#: ../Doc/library/dis.rst:204
msgid "This can now handle coroutine and asynchronous generator objects."
msgstr ""
"Esto ahora puede manejar objetos generadores asíncronos y de corutinas."

#: ../Doc/library/dis.rst:120 ../Doc/library/dis.rst:207
#: ../Doc/library/dis.rst:223 ../Doc/library/dis.rst:250
#: ../Doc/library/dis.rst:269
msgid "Added the ``show_caches`` parameter."
msgstr ""

#: ../Doc/library/dis.rst:123
#, fuzzy
msgid "Example:"
msgstr "Ejemplo::"

#: ../Doc/library/dis.rst:140
msgid "Analysis functions"
msgstr "Funciones de análisis"

#: ../Doc/library/dis.rst:142
msgid ""
"The :mod:`dis` module also defines the following analysis functions that "
"convert the input directly to the desired output. They can be useful if only "
"a single operation is being performed, so the intermediate analysis object "
"isn't useful:"
msgstr ""
"El módulo :mod:`dis` también define las siguientes funciones de análisis que "
"convierten la entrada directamente en la salida deseada. Pueden ser útiles "
"si solo se realiza una sola operación, por lo que el objeto de análisis "
"intermedio no es útil:"

#: ../Doc/library/dis.rst:148
msgid ""
"Return a formatted multi-line string with detailed code object information "
"for the supplied function, generator, asynchronous generator, coroutine, "
"method, source code string or code object."
msgstr ""
"Retorna una cadena de caracteres multilínea formateada con información "
"detallada del objeto de código para la función, generador, generador "
"asíncrono, corutina, método, cadena de código fuente u objeto de código "
"suministrados."

#: ../Doc/library/dis.rst:152
msgid ""
"Note that the exact contents of code info strings are highly implementation "
"dependent and they may change arbitrarily across Python VMs or Python "
"releases."
msgstr ""
"Tenga en cuenta que el contenido exacto de las cadenas de información de "
"código depende en gran medida de la implementación y puede cambiar "
"arbitrariamente en las diferentes máquinas virtuales Python o las versiones "
"de Python."

#: ../Doc/library/dis.rst:164
msgid ""
"Print detailed code object information for the supplied function, method, "
"source code string or code object to *file* (or ``sys.stdout`` if *file* is "
"not specified)."
msgstr ""
"Imprime información detallada del objeto de código para la función, método, "
"cadena de código fuente u objeto de código suministrado en *file* (o ``sys."
"stdout`` si *file* no está especificado)."

#: ../Doc/library/dis.rst:168
msgid ""
"This is a convenient shorthand for ``print(code_info(x), file=file)``, "
"intended for interactive exploration at the interpreter prompt."
msgstr ""
"Esta es una abreviatura conveniente para ``print(code_info(x), file=file)``, "
"destinado a la exploración interactiva en el indicador del intérprete "
"(*prompt*)."

#: ../Doc/library/dis.rst:173 ../Doc/library/dis.rst:198
#: ../Doc/library/dis.rst:220 ../Doc/library/dis.rst:247
msgid "Added *file* parameter."
msgstr "Agrega un parámetro *file*."

#: ../Doc/library/dis.rst:179
msgid ""
"Disassemble the *x* object.  *x* can denote either a module, a class, a "
"method, a function, a generator, an asynchronous generator, a coroutine, a "
"code object, a string of source code or a byte sequence of raw bytecode. For "
"a module, it disassembles all functions. For a class, it disassembles all "
"methods (including class and static methods). For a code object or sequence "
"of raw bytecode, it prints one line per bytecode instruction. It also "
"recursively disassembles nested code objects (the code of comprehensions, "
"generator expressions and nested functions, and the code used for building "
"nested classes). Strings are first compiled to code objects with the :func:"
"`compile` built-in function before being disassembled.  If no object is "
"provided, this function disassembles the last traceback."
msgstr ""
"Desmontar el objeto *x*. *x* puede denotar un módulo, una clase, un método, "
"una función, un generador, un generador asíncrono, una corutina, un objeto "
"de código, una cadena de código fuente o una secuencia de bytes de código de "
"bytes sin procesar. Para un módulo, desmonta todas las funciones. Para una "
"clase, desmonta todos los métodos (incluidos los métodos de clase y "
"estáticos). Para un objeto de código o secuencia de bytecode sin procesar, "
"imprime una línea por instrucción de bytecode. También desmonta "
"recursivamente objetos de código anidados (el código de comprensiones, "
"expresiones generadoras y funciones anidadas, y el código utilizado para "
"construir clases anidadas). Las cadenas de caracteres se compilan primero en "
"objetos de código con la función incorporada :func:`compile` antes de "
"desmontarse. Si no se proporciona ningún objeto, esta función desmonta el "
"último rastreo."

#: ../Doc/library/dis.rst:192 ../Doc/library/dis.rst:217
#: ../Doc/library/dis.rst:244
msgid ""
"The disassembly is written as text to the supplied *file* argument if "
"provided and to ``sys.stdout`` otherwise."
msgstr ""
"El desensamblaje se escribe como texto en el argumento *file* proporcionado "
"si se proporciona y, de lo contrario, ``sys.stdout``."

#: ../Doc/library/dis.rst:195
msgid ""
"The maximal depth of recursion is limited by *depth* unless it is ``None``. "
"``depth=0`` means no recursion."
msgstr ""
"La profundidad máxima de recursión está limitada por *depth* a menos que sea "
"``None``. ``depth=0`` significa que no hay recursión."

#: ../Doc/library/dis.rst:201
msgid "Implemented recursive disassembling and added *depth* parameter."
msgstr "Desensamblaje recursivo implementado y parámetro agregado *depth*."

#: ../Doc/library/dis.rst:213
msgid ""
"Disassemble the top-of-stack function of a traceback, using the last "
"traceback if none was passed.  The instruction causing the exception is "
"indicated."
msgstr ""
"Desmonta la función de inicio de pila de un rastreo, utilizando el último "
"rastreo si no se pasó ninguno. Se indica la instrucción que causa la "
"excepción."

#: ../Doc/library/dis.rst:230
msgid ""
"Disassemble a code object, indicating the last instruction if *lasti* was "
"provided.  The output is divided in the following columns:"
msgstr ""
"Desmonta un objeto de código, que indica la última instrucción si se "
"proporcionó *lasti*. La salida se divide en las siguientes columnas:"

#: ../Doc/library/dis.rst:233
msgid "the line number, for the first instruction of each line"
msgstr "el número de línea, para la primera instrucción de cada línea"

#: ../Doc/library/dis.rst:234
msgid "the current instruction, indicated as ``-->``,"
msgstr "la instrucción actual, indicada como ``-->``,"

#: ../Doc/library/dis.rst:235
msgid "a labelled instruction, indicated with ``>>``,"
msgstr "una instrucción etiquetada, indicada con ``>>``,"

#: ../Doc/library/dis.rst:236
msgid "the address of the instruction,"
msgstr "la dirección de la instrucción,"

#: ../Doc/library/dis.rst:237
msgid "the operation code name,"
msgstr "el nombre del código de operación,"

#: ../Doc/library/dis.rst:238
msgid "operation parameters, and"
msgstr "parámetros de operación, y"

#: ../Doc/library/dis.rst:239
msgid "interpretation of the parameters in parentheses."
msgstr "interpretación de los parámetros entre paréntesis."

#: ../Doc/library/dis.rst:241
msgid ""
"The parameter interpretation recognizes local and global variable names, "
"constant values, branch targets, and compare operators."
msgstr ""
"La interpretación de parámetros reconoce nombres de variables locales y "
"globales, valores constantes, objetivos de ramificación y operadores de "
"comparación."

#: ../Doc/library/dis.rst:256
msgid ""
"Return an iterator over the instructions in the supplied function, method, "
"source code string or code object."
msgstr ""
"Retorna un iterador sobre las instrucciones en la función, método, cadena de "
"código fuente u objeto de código suministrado."

#: ../Doc/library/dis.rst:259
msgid ""
"The iterator generates a series of :class:`Instruction` named tuples giving "
"the details of each operation in the supplied code."
msgstr ""
"El iterador genera una serie de tuplas con nombre :class:`Instruction` que "
"dan los detalles de cada operación en el código suministrado."

#: ../Doc/library/dis.rst:275
#, fuzzy
msgid ""
"This generator function uses the ``co_lines`` method of the code object "
"*code* to find the offsets which are starts of lines in the source code.  "
"They are generated as ``(offset, lineno)`` pairs."
msgstr ""
"Esta función de generador utiliza los atributos ``co_firstlineno`` y "
"``co_lnotab`` del objeto de código *code* para encontrar los desplazamientos "
"que son comienzos de líneas en el código fuente. Se generan como pares "
"``(offset, lineno)``. Ver :source:`Objects/lnotab_notes.txt` para el formato "
"``co_lnotab`` y cómo decodificarlo."

#: ../Doc/library/dis.rst:279
msgid "Line numbers can be decreasing. Before, they were always increasing."
msgstr ""
"Los números de línea pueden estar disminuyendo. Antes, siempre estaban "
"aumentando."

#: ../Doc/library/dis.rst:282
msgid ""
"The :pep:`626` ``co_lines`` method is used instead of the ``co_firstlineno`` "
"and ``co_lnotab`` attributes of the code object."
msgstr ""

#: ../Doc/library/dis.rst:289
msgid ""
"Detect all offsets in the raw compiled bytecode string *code* which are jump "
"targets, and return a list of these offsets."
msgstr ""
"Detecta todos los desplazamientos en la cadena de caracteres de código de "
"byte compilada *code* que son objetivos de salto y retorna una lista de "
"estos desplazamientos."

#: ../Doc/library/dis.rst:295
msgid "Compute the stack effect of *opcode* with argument *oparg*."
msgstr "Calcula el efecto de pila de *opcode* con el argumento *oparg*."

#: ../Doc/library/dis.rst:297
msgid ""
"If the code has a jump target and *jump* is ``True``, :func:`~stack_effect` "
"will return the stack effect of jumping.  If *jump* is ``False``, it will "
"return the stack effect of not jumping. And if *jump* is ``None`` (default), "
"it will return the maximal stack effect of both cases."
msgstr ""
"Si el código tiene un objetivo de salto y *jump* es ``True``, :func:"
"`~stack_effect` retornará el efecto de pila del salto. Si *jump* es "
"``False``, retornará el efecto de acumulación de no saltar. Y si *jump* es "
"``None`` (predeterminado), retornará el efecto de acumulación máxima de "
"ambos casos."

#: ../Doc/library/dis.rst:304
msgid "Added *jump* parameter."
msgstr "Agrega un parámetro *jump*."

#: ../Doc/library/dis.rst:311
msgid "Python Bytecode Instructions"
msgstr "Instrucciones bytecode de Python"

#: ../Doc/library/dis.rst:313
msgid ""
"The :func:`get_instructions` function and :class:`Bytecode` class provide "
"details of bytecode instructions as :class:`Instruction` instances:"
msgstr ""
"La función :func:`get_instructions` y clase :class:`Bytecode` proporcionan "
"detalles de las instrucciones bytecode como instancias :class:`Instruction`:"

#: ../Doc/library/dis.rst:318
msgid "Details for a bytecode operation"
msgstr "Detalles para una operación de bytecode"

#: ../Doc/library/dis.rst:322
msgid ""
"numeric code for operation, corresponding to the opcode values listed below "
"and the bytecode values in the :ref:`opcode_collections`."
msgstr ""
"código numérico para la operación, correspondiente a los valores del opcode "
"listados a continuación y los valores de bytecode en :ref:"
"`opcode_collections`."

#: ../Doc/library/dis.rst:328
msgid "human readable name for operation"
msgstr "nombre legible por humanos para la operación"

#: ../Doc/library/dis.rst:333
msgid "numeric argument to operation (if any), otherwise ``None``"
msgstr ""
"argumento numérico para la operación (si existe), de lo contrario ``None``"

#: ../Doc/library/dis.rst:338
#, fuzzy
msgid "resolved arg value (if any), otherwise ``None``"
msgstr "valor *arg* resuelto (si se conoce), de lo contrario igual que *arg*"

#: ../Doc/library/dis.rst:343
#, fuzzy
msgid ""
"human readable description of operation argument (if any), otherwise an "
"empty string."
msgstr "descripción legible por humanos del argumento de operación"

#: ../Doc/library/dis.rst:349
msgid "start index of operation within bytecode sequence"
msgstr "índice de inicio de operación dentro de la secuencia de bytecode"

#: ../Doc/library/dis.rst:354
msgid "line started by this opcode (if any), otherwise ``None``"
msgstr ""
"línea iniciada por este código de operación (si existe), de lo contrario "
"``None``"

#: ../Doc/library/dis.rst:359
msgid "``True`` if other code jumps to here, otherwise ``False``"
msgstr "``True`` si otro código salta aquí, de lo contrario, ``False``"

#: ../Doc/library/dis.rst:364
msgid ""
":class:`dis.Positions` object holding the start and end locations that are "
"covered by this instruction."
msgstr ""

#: ../Doc/library/dis.rst:371
msgid "Field ``positions`` is added."
msgstr ""

#: ../Doc/library/dis.rst:376
msgid ""
"In case the information is not available, some fields might be ``None``."
msgstr ""

#: ../Doc/library/dis.rst:386
msgid ""
"The Python compiler currently generates the following bytecode instructions."
msgstr ""
"El compilador de Python actualmente genera las siguientes instrucciones de "
"bytecode."

#: ../Doc/library/dis.rst:389
msgid "**General instructions**"
msgstr "**Instrucciones generales**"

#: ../Doc/library/dis.rst:393
#, fuzzy
msgid ""
"Do nothing code.  Used as a placeholder by the bytecode optimizer, and to "
"generate line tracing events."
msgstr ""
"Código que hace nada. Utilizado como marcador de posición por el optimizador "
"de código de bytes."

#: ../Doc/library/dis.rst:399
msgid "Removes the top-of-stack (TOS) item."
msgstr "Elimina el elemento de la parte superior de la pila (TOS)."

#: ../Doc/library/dis.rst:404
msgid ""
"Push the *i*-th item to the top of the stack. The item is not removed from "
"its original location."
msgstr ""

#: ../Doc/library/dis.rst:412
msgid "Swap TOS with the item at position *i*."
msgstr ""

#: ../Doc/library/dis.rst:419
msgid ""
"Rather than being an actual instruction, this opcode is used to mark extra "
"space for the interpreter to cache useful data directly in the bytecode "
"itself. It is automatically hidden by all ``dis`` utilities, but can be "
"viewed with ``show_caches=True``."
msgstr ""

#: ../Doc/library/dis.rst:424
msgid ""
"Logically, this space is part of the preceding instruction. Many opcodes "
"expect to be followed by an exact number of caches, and will instruct the "
"interpreter to skip over them at runtime."
msgstr ""

#: ../Doc/library/dis.rst:428
msgid ""
"Populated caches can look like arbitrary instructions, so great care should "
"be taken when reading or modifying raw, adaptive bytecode containing "
"quickened data."
msgstr ""

#: ../Doc/library/dis.rst:435
msgid "**Unary operations**"
msgstr "**Operaciones unarias**"

#: ../Doc/library/dis.rst:437
msgid ""
"Unary operations take the top of the stack, apply the operation, and push "
"the result back on the stack."
msgstr ""
"Las operaciones unarias toman la parte superior de la pila, aplican la "
"operación y retornan el resultado a la pila."

#: ../Doc/library/dis.rst:442
msgid "Implements ``TOS = +TOS``."
msgstr "Implementa ``TOS = +TOS``."

#: ../Doc/library/dis.rst:447
msgid "Implements ``TOS = -TOS``."
msgstr "Implementa ``TOS = -TOS``."

#: ../Doc/library/dis.rst:452
msgid "Implements ``TOS = not TOS``."
msgstr "Implementa ``TOS = not TOS``."

#: ../Doc/library/dis.rst:457
msgid "Implements ``TOS = ~TOS``."
msgstr "Implementa ``TOS = ~TOS``."

#: ../Doc/library/dis.rst:462
msgid "Implements ``TOS = iter(TOS)``."
msgstr "Implementa ``TOS = iter(TOS)``."

#: ../Doc/library/dis.rst:467
msgid ""
"If ``TOS`` is a :term:`generator iterator` or :term:`coroutine` object it is "
"left as is.  Otherwise, implements ``TOS = iter(TOS)``."
msgstr ""
"Si ``TOS`` es un :term:`iterador generador <generator iterator>` o un "
"objeto :term:`corutina <coroutine>` se deja como está. De lo contrario, "
"implementa ``TOS = iter(TOS)``."

#: ../Doc/library/dis.rst:473
#, fuzzy
msgid "**Binary and in-place operations**"
msgstr "**Operaciones en su lugar**"

#: ../Doc/library/dis.rst:475
msgid ""
"Binary operations remove the top of the stack (TOS) and the second top-most "
"stack item (TOS1) from the stack.  They perform the operation, and put the "
"result back on the stack."
msgstr ""
"Las operaciones binarias eliminan el elemento superior de la pila (TOS) y el "
"segundo elemento de la pila superior (TOS1) de la pila. Realizan la "
"operación y retornan el resultado a la pila."

#: ../Doc/library/dis.rst:479
msgid ""
"In-place operations are like binary operations, in that they remove TOS and "
"TOS1, and push the result back on the stack, but the operation is done in-"
"place when TOS1 supports it, and the resulting TOS may be (but does not have "
"to be) the original TOS1."
msgstr ""
"Las operaciones en el lugar son como operaciones binarias, ya que eliminan "
"TOS y TOS1, y retornan el resultado a la pila, pero la operación se realiza "
"en el lugar cuando TOS1 lo admite, y el TOS resultante puede ser (pero no "
"tiene ser) el TOS1 original."

#: ../Doc/library/dis.rst:487
msgid ""
"Implements the binary and in-place operators (depending on the value of "
"*op*)."
msgstr ""

#: ../Doc/library/dis.rst:495
msgid "Implements ``TOS = TOS1[TOS]``."
msgstr "Implementa ``TOS = TOS1[TOS]``."

#: ../Doc/library/dis.rst:500
msgid "Implements ``TOS1[TOS] = TOS2``."
msgstr "Implementa ``TOS1[TOS] = TOS2``."

#: ../Doc/library/dis.rst:505
msgid "Implements ``del TOS1[TOS]``."
msgstr "Implementa ``del TOS1[TOS]``."

#: ../Doc/library/dis.rst:508
msgid "**Coroutine opcodes**"
msgstr "**Opcodes de corutinas**"

#: ../Doc/library/dis.rst:512
msgid ""
"Implements ``TOS = get_awaitable(TOS)``, where ``get_awaitable(o)`` returns "
"``o`` if ``o`` is a coroutine object or a generator object with the "
"CO_ITERABLE_COROUTINE flag, or resolves ``o.__await__``."
msgstr ""
"Implementa ``TOS = get_awaitable(TOS)``, donde ``get_awaitable(o)`` retorna "
"``o`` si ``o`` es un objeto de corutina o un objeto generador con el "
"indicador CO_ITERABLE_COROUTINE, o resuelve ``o.__await__``."

#: ../Doc/library/dis.rst:517
msgid ""
"If the ``where`` operand is nonzero, it indicates where the instruction "
"occurs:"
msgstr ""

#: ../Doc/library/dis.rst:520
msgid "``1`` After a call to ``__aenter__``"
msgstr ""

#: ../Doc/library/dis.rst:521
msgid "``2`` After a call to ``__aexit__``"
msgstr ""

#: ../Doc/library/dis.rst:525
msgid "Previously, this instruction did not have an oparg."
msgstr ""

#: ../Doc/library/dis.rst:531
msgid "Implements ``TOS = TOS.__aiter__()``."
msgstr "Implementa ``TOS = TOS.__aiter__()``."

#: ../Doc/library/dis.rst:534
msgid "Returning awaitable objects from ``__aiter__`` is no longer supported."
msgstr "Ya no se admite el retorno de objetos *awaitable* de ``__aiter__``."

#: ../Doc/library/dis.rst:541
#, fuzzy
msgid ""
"Pushes ``get_awaitable(TOS.__anext__())`` to the stack.  See "
"``GET_AWAITABLE`` for details about ``get_awaitable``."
msgstr ""
"Implementa ``PUSH(get_awaitable(TOS.__anext__()))``. Consulte "
"``GET_AWAITABLE`` para obtener detalles sobre ``get_awaitable``"

#: ../Doc/library/dis.rst:549
#, fuzzy
msgid ""
"Terminates an :keyword:`async for` loop.  Handles an exception raised when "
"awaiting a next item.  If TOS is :exc:`StopAsyncIteration` pop 3 values from "
"the stack and restore the exception state using the second of them.  "
"Otherwise re-raise the exception using the value from the stack.  An "
"exception handler block is removed from the block stack."
msgstr ""
"Termina un bucle :keyword:`async for`. Maneja una excepción planteada cuando "
"se espera un próximo elemento. Si TOS es :exc:`StopAsyncIteration` desapila "
"7 valores de la pila y restaura el estado de excepción utilizando los tres "
"últimos. De lo contrario, vuelva a lanzar la excepción utilizando los tres "
"valores de la pila. Se elimina un bloque de controlador de excepción de la "
"pila de bloques."

#: ../Doc/library/dis.rst:557 ../Doc/library/dis.rst:635
#: ../Doc/library/dis.rst:646
msgid ""
"Exception representation on the stack now consist of one, not three, items."
msgstr ""

#: ../Doc/library/dis.rst:562
msgid ""
"Resolves ``__aenter__`` and ``__aexit__`` from the object on top of the "
"stack.  Pushes ``__aexit__`` and result of ``__aenter__()`` to the stack."
msgstr ""
"Resuelve ``__aenter__`` y ``__aexit__`` del objeto en la parte superior de "
"la pila. Apila ``__aexit__`` y el resultado de ``__aenter__()`` a la pila."

#: ../Doc/library/dis.rst:569
msgid "**Miscellaneous opcodes**"
msgstr "**Opcodes misceláneos**"

#: ../Doc/library/dis.rst:573
msgid ""
"Implements the expression statement for the interactive mode.  TOS is "
"removed from the stack and printed.  In non-interactive mode, an expression "
"statement is terminated with :opcode:`POP_TOP`."
msgstr ""
"Implementa la declaración de expresión para el modo interactivo. TOS se "
"elimina de la pila y se imprime. En modo no interactivo, una declaración de "
"expresión termina con :opcode:`POP_TOP`."

#: ../Doc/library/dis.rst:580
msgid ""
"Calls ``set.add(TOS1[-i], TOS)``.  Used to implement set comprehensions."
msgstr ""
"Llama a ``set.add(TOS1[-i], TOS)``. Se utiliza para implementar "
"comprensiones de conjuntos."

#: ../Doc/library/dis.rst:585
msgid ""
"Calls ``list.append(TOS1[-i], TOS)``.  Used to implement list comprehensions."
msgstr ""
"Llama a ``list.append(TOS1[-i], TOS)``. Se utiliza para implementar listas "
"por comprensión."

#: ../Doc/library/dis.rst:590
msgid ""
"Calls ``dict.__setitem__(TOS1[-i], TOS1, TOS)``.  Used to implement dict "
"comprehensions."
msgstr ""
"Llama a ``dict.__setitem__(TOS1[-i], TOS1, TOS)``. Se utiliza para "
"implementar comprensiones de diccionarios."

#: ../Doc/library/dis.rst:594
msgid "Map value is TOS and map key is TOS1. Before, those were reversed."
msgstr ""
"El valor del mapa es TOS y la clave del mapa es TOS1. Antes, esos fueron "
"revertidos."

#: ../Doc/library/dis.rst:597
msgid ""
"For all of the :opcode:`SET_ADD`, :opcode:`LIST_APPEND` and :opcode:"
"`MAP_ADD` instructions, while the added value or key/value pair is popped "
"off, the container object remains on the stack so that it is available for "
"further iterations of the loop."
msgstr ""
"Para todas las instrucciones :opcode:`SET_ADD`, :opcode:`LIST_APPEND` y :"
"opcode:`MAP_ADD`, mientras el valor agregado o el par clave/valor aparece, "
"el objeto contenedor permanece en la pila para que quede disponible para "
"futuras iteraciones del bucle."

#: ../Doc/library/dis.rst:605
msgid "Returns with TOS to the caller of the function."
msgstr "Retorna con TOS a quien llama la función."

#: ../Doc/library/dis.rst:610
msgid "Pops TOS and yields it from a :term:`generator`."
msgstr "Desapila TOS y lo genera (*yield*) de un :term:`generator`."

#: ../Doc/library/dis.rst:616
msgid ""
"Checks whether ``__annotations__`` is defined in ``locals()``, if not it is "
"set up to an empty ``dict``. This opcode is only emitted if a class or "
"module body contains :term:`variable annotations <variable annotation>` "
"statically."
msgstr ""
"Comprueba si ``__anotaciones__`` está definido en ``locals()``, si no está "
"configurado como un ``dict`` vacío. Este código de operación solo se emite "
"si el cuerpo de una clase o módulo contiene :term:`anotaciones de variables "
"<variable annotation>` estáticamente."

#: ../Doc/library/dis.rst:626
msgid ""
"Loads all symbols not starting with ``'_'`` directly from the module TOS to "
"the local namespace. The module is popped after loading all names. This "
"opcode implements ``from module import *``."
msgstr ""
"Carga todos los símbolos que no comienzan con ``'_'`` directamente desde el "
"TOS del módulo al espacio de nombres local. El módulo se desapila después de "
"cargar todos los nombres. Este opcode implementa ``from module import *``."

#: ../Doc/library/dis.rst:633
msgid ""
"Pops a value from the stack, which is used to restore the exception state."
msgstr ""

#: ../Doc/library/dis.rst:640
#, fuzzy
msgid ""
"Re-raises the exception currently on top of the stack. If oparg is non-zero, "
"pops an additional value from the stack which is used to set ``f_lasti`` of "
"the current frame."
msgstr ""
"Re-lanza la excepción que se encuentra actualmente al tope de la pila. Si "
"oparg no es cero, restaura ``f_lasti`` del marco actual a su valor cuando se "
"lanza la excepción."

#: ../Doc/library/dis.rst:651
msgid ""
"Pops a value from the stack. Pushes the current exception to the top of the "
"stack. Pushes the value originally popped back to the stack. Used in "
"exception handlers."
msgstr ""

#: ../Doc/library/dis.rst:659
msgid ""
"Performs exception matching for ``except``. Tests whether the TOS1 is an "
"exception matching TOS. Pops TOS and pushes the boolean result of the test."
msgstr ""

#: ../Doc/library/dis.rst:666
msgid ""
"Performs exception matching for ``except*``. Applies ``split(TOS)`` on the "
"exception group representing TOS1."
msgstr ""

#: ../Doc/library/dis.rst:669
msgid ""
"In case of a match, pops two items from the stack and pushes the non-"
"matching subgroup (``None`` in case of full match) followed by the matching "
"subgroup. When there is no match, pops one item (the match type) and pushes "
"``None``."
msgstr ""

#: ../Doc/library/dis.rst:678
msgid ""
"Combines the raised and reraised exceptions list from TOS, into an exception "
"group to propagate from a try-except* block. Uses the original exception "
"group from TOS1 to reconstruct the structure of reraised exceptions. Pops "
"two items from the stack and pushes the exception to reraise or ``None`` if "
"there isn't one."
msgstr ""

#: ../Doc/library/dis.rst:688
#, fuzzy
msgid ""
"Calls the function in position 4 on the stack with arguments (type, val, tb) "
"representing the exception at the top of the stack. Used to implement the "
"call ``context_manager.__exit__(*exc_info())`` when an exception has "
"occurred in a :keyword:`with` statement."
msgstr ""
"Llama a la función en la posición 7 de la pila con los tres elementos "
"superiores de la pila como argumentos. Se usa para implementar la llamada "
"``context_manager.__ exit __(*exc_info())`` cuando se ha producido una "
"excepción en una sentencia :keyword:`with`."

#: ../Doc/library/dis.rst:695
msgid ""
"The ``__exit__`` function is in position 4 of the stack rather than 7. "
"Exception representation on the stack now consist of one, not three, items."
msgstr ""

#: ../Doc/library/dis.rst:702
msgid ""
"Pushes :exc:`AssertionError` onto the stack.  Used by the :keyword:`assert` "
"statement."
msgstr ""
"Inserta :exc:`AssertionError` en la pila. Utilizado por la declaración :"
"keyword:`assert`."

#: ../Doc/library/dis.rst:710
#, fuzzy
msgid ""
"Pushes :func:`builtins.__build_class__` onto the stack.  It is later called "
"to construct a class."
msgstr ""
"Apila :func:`builtins.__build_class__` en la pila. Más tarde se llama por :"
"opcode:`CALL_FUNCTION` para construir una clase."

#: ../Doc/library/dis.rst:716
#, fuzzy
msgid ""
"This opcode performs several operations before a with block starts.  First, "
"it loads :meth:`~object.__exit__` from the context manager and pushes it "
"onto the stack for later use by :opcode:`WITH_EXCEPT_START`.  Then, :meth:"
"`~object.__enter__` is called. Finally, the result of calling the "
"``__enter__()`` method is pushed onto the stack."
msgstr ""
"Este opcode realiza varias operaciones antes de que comience un bloque "
"*with*. Primero, carga :meth:`~object.__exit__` desde el administrador de "
"contexto y lo apila a la pila para su uso posterior por :opcode:"
"`WITH_EXCEPT_START`. Luego, :meth:`~object.__enter__` se llama, y un bloque "
"finally que apunta a *delta* se apila. Finalmente, el resultado de llamar al "
"método ``__enter__()`` se apila en la pila. El siguiente opcode lo ignorará "
"(:opcode:`POP_TOP`), o lo almacenará en (una) variable (s) (:opcode:"
"`STORE_FAST`, :opcode:`STORE_NAME`, o :opcode:`UNPACK_SEQUENCE`) ."

#: ../Doc/library/dis.rst:727
msgid "Push ``len(TOS)`` onto the stack."
msgstr "Apila ``len(TOS)`` en la pila."

#: ../Doc/library/dis.rst:734
msgid ""
"If TOS is an instance of :class:`collections.abc.Mapping` (or, more "
"technically: if it has the :const:`Py_TPFLAGS_MAPPING` flag set in its :c:"
"member:`~PyTypeObject.tp_flags`), push ``True`` onto the stack.  Otherwise, "
"push ``False``."
msgstr ""
"Si TOS es una instancia de :class:`collections.abc.Mapping` (o, más "
"técnicamente, si tiene el indicador :const:`Py_TPFLAGS_MAPPING`  establecido "
"en su :c:member:`~PyTypeObject.tp_flags`), apila ``True`` en la pila. De lo "
"contrario apila ``False``."

#: ../Doc/library/dis.rst:744
msgid ""
"If TOS is an instance of :class:`collections.abc.Sequence` and is *not* an "
"instance of :class:`str`/:class:`bytes`/:class:`bytearray` (or, more "
"technically: if it has the :const:`Py_TPFLAGS_SEQUENCE` flag set in its :c:"
"member:`~PyTypeObject.tp_flags`), push ``True`` onto the stack.  Otherwise, "
"push ``False``."
msgstr ""
"Si TOS es una instancia de :class:`collections.abc.Sequence` y *no* es una "
"instancia de :class:`str`/:class:`bytes`/:class:`bytearray` (o, más "
"técnicamente, si tiene el indicador :const:`Py_TPFLAGS_SEQUENCE`  "
"establecido en su :c:member:`~PyTypeObject.tp_flags`), apila ``True`` en la "
"pila. De lo contrario apila ``False``."

#: ../Doc/library/dis.rst:754
#, fuzzy
msgid ""
"TOS is a tuple of mapping keys, and TOS1 is the match subject.  If TOS1 "
"contains all of the keys in TOS, push a :class:`tuple` containing the "
"corresponding values. Otherwise, push ``None``."
msgstr ""
"TOS es una tuple de llaves de mapeo, y TOS1 es el sujeto de la coincidencia. "
"Si TOS1 contiene todas las llaves en TOS, apila un :class:`tuple` que "
"contiene los valores correspondientes, seguido por ``True``. De lo contrario "
"apila ``None``, seguido de ``False``."

#: ../Doc/library/dis.rst:760 ../Doc/library/dis.rst:1305
msgid ""
"Previously, this instruction also pushed a boolean value indicating success "
"(``True``) or failure (``False``)."
msgstr ""

#: ../Doc/library/dis.rst:767
msgid ""
"Implements ``name = TOS``. *namei* is the index of *name* in the attribute :"
"attr:`co_names` of the code object. The compiler tries to use :opcode:"
"`STORE_FAST` or :opcode:`STORE_GLOBAL` if possible."
msgstr ""
"Implementa ``name = TOS``. *namei* es el índice de *name* en el atributo :"
"attr:`co_names` del objeto de código. El compilador intenta usar :opcode:"
"`STORE_FAST` o :opcode:`STORE_GLOBAL` si es posible."

#: ../Doc/library/dis.rst:774
msgid ""
"Implements ``del name``, where *namei* is the index into :attr:`co_names` "
"attribute of the code object."
msgstr ""
"Implementa ``del name``, donde *namei* es el índice en atributo :attr:"
"`co_names` del objeto de código."

#: ../Doc/library/dis.rst:780
msgid ""
"Unpacks TOS into *count* individual values, which are put onto the stack "
"right-to-left."
msgstr ""
"Descomprime TOS en *count* valores individuales, que se colocan en la pila "
"de derecha a izquierda."

#: ../Doc/library/dis.rst:786
msgid ""
"Implements assignment with a starred target: Unpacks an iterable in TOS into "
"individual values, where the total number of values can be smaller than the "
"number of items in the iterable: one of the new values will be a list of all "
"leftover items."
msgstr ""
"Implementa la asignación con un objetivo destacado: desempaqueta un iterable "
"en TOS en valores individuales, donde el número total de valores puede ser "
"menor que el número de elementos en el iterable: uno de los nuevos valores "
"será una lista de todos los elementos sobrantes."

#: ../Doc/library/dis.rst:791
msgid ""
"The low byte of *counts* is the number of values before the list value, the "
"high byte of *counts* the number of values after it.  The resulting values "
"are put onto the stack right-to-left."
msgstr ""
"El byte bajo de *count* es el número de valores antes del valor de la lista, "
"el byte alto de *count* es el número de valores después de él. Los valores "
"resultantes se colocan en la pila de derecha a izquierda."

#: ../Doc/library/dis.rst:798
msgid ""
"Implements ``TOS.name = TOS1``, where *namei* is the index of name in :attr:"
"`co_names`."
msgstr ""
"Implementa ``TOS.name = TOS1``, donde *namei* es el índice del nombre en :"
"attr:`co_names`."

#: ../Doc/library/dis.rst:804
msgid ""
"Implements ``del TOS.name``, using *namei* as index into :attr:`co_names`."
msgstr ""
"Implementa ``del TOS.name``, usando *namei* como índice en :attr:`co_names`."

#: ../Doc/library/dis.rst:809
msgid "Works as :opcode:`STORE_NAME`, but stores the name as a global."
msgstr ""
"Funciona como :opcode:`STORE_NAME`, pero almacena el nombre como global."

#: ../Doc/library/dis.rst:814
msgid "Works as :opcode:`DELETE_NAME`, but deletes a global name."
msgstr "Funciona como :opcode:`DELETE_NAME`, pero elimina un nombre global."

#: ../Doc/library/dis.rst:819
msgid "Pushes ``co_consts[consti]`` onto the stack."
msgstr "Apila ``co_consts[consti]`` en la pila."

#: ../Doc/library/dis.rst:824
msgid "Pushes the value associated with ``co_names[namei]`` onto the stack."
msgstr "Apila el valor asociado con ``co_names [namei]`` en la pila."

#: ../Doc/library/dis.rst:829
msgid ""
"Creates a tuple consuming *count* items from the stack, and pushes the "
"resulting tuple onto the stack."
msgstr ""
"Crea una tupla que consume elementos *count* de la pila, y apila la tupla "
"resultante a la pila."

#: ../Doc/library/dis.rst:835
msgid "Works as :opcode:`BUILD_TUPLE`, but creates a list."
msgstr "Funciona como :opcode:`BUILD_TUPLE`, pero crea una lista."

#: ../Doc/library/dis.rst:840
msgid "Works as :opcode:`BUILD_TUPLE`, but creates a set."
msgstr "Funciona como :opcode:`BUILD_TUPLE`, pero crea un conjunto."

#: ../Doc/library/dis.rst:845
msgid ""
"Pushes a new dictionary object onto the stack.  Pops ``2 * count`` items so "
"that the dictionary holds *count* entries: ``{..., TOS3: TOS2, TOS1: TOS}``."
msgstr ""
"Apila un nuevo objeto de diccionario en la pila. Desapila ``2 * count`` "
"elementos para que el diccionario contenga *count* entradas: ``{..., TOS3: "
"TOS2, TOS1: TOS}``."

#: ../Doc/library/dis.rst:849
msgid ""
"The dictionary is created from stack items instead of creating an empty "
"dictionary pre-sized to hold *count* items."
msgstr ""
"El diccionario se crea a partir de elementos de la pila en lugar de crear un "
"diccionario vacío dimensionado previamente para contener *count* elementos."

#: ../Doc/library/dis.rst:856
msgid ""
"The version of :opcode:`BUILD_MAP` specialized for constant keys. Pops the "
"top element on the stack which contains a tuple of keys, then starting from "
"``TOS1``, pops *count* values to form values in the built dictionary."
msgstr ""
"La versión de :opcode:`BUILD_MAP` especializada para claves constantes. "
"Desapila el elemento superior en la pila que contiene una tupla de claves, "
"luego, a partir de ``TOS1``, muestra los valores *count* para formar valores "
"en el diccionario incorporado."

#: ../Doc/library/dis.rst:865
msgid ""
"Concatenates *count* strings from the stack and pushes the resulting string "
"onto the stack."
msgstr ""
"Concatena *count* cadenas de caracteres de la pila y empuja la cadena de "
"caracteres resultante en la pila."

#: ../Doc/library/dis.rst:873
msgid ""
"Pops a list from the stack and pushes a tuple containing the same values."
msgstr ""
"Saca una lista de la pila y empuja una tupla que contiene los mismos valores."

#: ../Doc/library/dis.rst:880
msgid "Calls ``list.extend(TOS1[-i], TOS)``.  Used to build lists."
msgstr "Llama a ``list.extend(TOS1[-i], TOS)``. Se utiliza para crear listas."

#: ../Doc/library/dis.rst:887
msgid "Calls ``set.update(TOS1[-i], TOS)``.  Used to build sets."
msgstr ""
"Llama a ``set.update(TOS1[-i], TOS)``. Se usa para construir decorados."

#: ../Doc/library/dis.rst:894
msgid "Calls ``dict.update(TOS1[-i], TOS)``.  Used to build dicts."
msgstr ""
"Llama a ``dict.update(TOS1[-i], TOS)``. Se usa para construir dictados."

#: ../Doc/library/dis.rst:901
msgid "Like :opcode:`DICT_UPDATE` but raises an exception for duplicate keys."
msgstr ""
"Como :opcode:`DICT_UPDATE` pero lanza una excepción para claves duplicadas."

#: ../Doc/library/dis.rst:908
msgid "Replaces TOS with ``getattr(TOS, co_names[namei])``."
msgstr "Reemplaza TOS con ``getattr(TOS, co_names[namei])``."

#: ../Doc/library/dis.rst:913
msgid ""
"Performs a Boolean operation.  The operation name can be found in "
"``cmp_op[opname]``."
msgstr ""
"Realiza una operación booleana. El nombre de la operación se puede encontrar "
"en ``cmp_op[opname]``."

#: ../Doc/library/dis.rst:919
msgid "Performs ``is`` comparison, or ``is not`` if ``invert`` is 1."
msgstr "Realiza una comparación ``is`` o ``is not`` si ``invert`` es 1."

#: ../Doc/library/dis.rst:926
msgid "Performs ``in`` comparison, or ``not in`` if ``invert`` is 1."
msgstr "Realiza una comparación ``in`` o ``not in`` si ``invert`` es 1."

#: ../Doc/library/dis.rst:933
msgid ""
"Imports the module ``co_names[namei]``.  TOS and TOS1 are popped and provide "
"the *fromlist* and *level* arguments of :func:`__import__`.  The module "
"object is pushed onto the stack.  The current namespace is not affected: for "
"a proper import statement, a subsequent :opcode:`STORE_FAST` instruction "
"modifies the namespace."
msgstr ""
"Importa el módulo ``co_names[namei]``. TOS y TOS1 aparecen y proporcionan "
"los argumentos *fromlist* y *level* de :func:`__import__`. El objeto del "
"módulo se empuja a la pila. El espacio de nombres actual no se ve afectado: "
"para una instrucción de importación adecuada, una instrucción posterior :"
"opcode:`STORE_FAST` modifica el espacio de nombres."

#: ../Doc/library/dis.rst:942
msgid ""
"Loads the attribute ``co_names[namei]`` from the module found in TOS. The "
"resulting object is pushed onto the stack, to be subsequently stored by a :"
"opcode:`STORE_FAST` instruction."
msgstr ""
"Carga el atributo ``co_names[namei]`` del módulo que se encuentra en TOS. El "
"objeto resultante se apila en la pila, para luego ser almacenado por la "
"instrucción :opcode:`STORE_FAST`."

#: ../Doc/library/dis.rst:949
msgid "Increments bytecode counter by *delta*."
msgstr "Incrementa el contador de bytecode en *delta*."

#: ../Doc/library/dis.rst:954
#, fuzzy
msgid "Decrements bytecode counter by *delta*. Checks for interrupts."
msgstr "Incrementa el contador de bytecode en *delta*."

#: ../Doc/library/dis.rst:961
#, fuzzy
msgid "Decrements bytecode counter by *delta*. Does not check for interrupts."
msgstr "Incrementa el contador de bytecode en *delta*."

#: ../Doc/library/dis.rst:968
#, fuzzy
msgid ""
"If TOS is true, increments the bytecode counter by *delta*.  TOS is popped."
msgstr ""
"Si TOS es true, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:975
#, fuzzy
msgid ""
"If TOS is true, decrements the bytecode counter by *delta*.  TOS is popped."
msgstr ""
"Si TOS es true, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:982
#, fuzzy
msgid ""
"If TOS is false, increments the bytecode counter by *delta*.  TOS is popped."
msgstr ""
"Si TOS es falso, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:989
#, fuzzy
msgid ""
"If TOS is false, decrements the bytecode counter by *delta*.  TOS is popped."
msgstr ""
"Si TOS es falso, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:996
#, fuzzy
msgid ""
"If TOS is not ``None``, increments the bytecode counter by *delta*.  TOS is "
"popped."
msgstr ""
"Si TOS es true, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:1003
#, fuzzy
msgid ""
"If TOS is not ``None``, decrements the bytecode counter by *delta*.  TOS is "
"popped."
msgstr ""
"Si TOS es true, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:1010
#, fuzzy
msgid ""
"If TOS is ``None``, increments the bytecode counter by *delta*.  TOS is "
"popped."
msgstr ""
"Si TOS es true, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:1017
#, fuzzy
msgid ""
"If TOS is ``None``, decrements the bytecode counter by *delta*.  TOS is "
"popped."
msgstr ""
"Si TOS es true, establece el contador de bytecode en *target*. TOS es "
"desapilado (*popped*)."

#: ../Doc/library/dis.rst:1024
#, fuzzy
msgid ""
"If TOS is true, increments the bytecode counter by *delta* and leaves TOS on "
"the stack.  Otherwise (TOS is false), TOS is popped."
msgstr ""
"Si TOS es verdadero, establece el contador de bytecode en *target* y deja "
"TOS en la pila. De lo contrario (TOS es falso), TOS se desapila."

#: ../Doc/library/dis.rst:1029 ../Doc/library/dis.rst:1039
msgid "The oparg is now a relative delta rather than an absolute target."
msgstr ""

#: ../Doc/library/dis.rst:1034
#, fuzzy
msgid ""
"If TOS is false, increments the bytecode counter by *delta* and leaves TOS "
"on the stack.  Otherwise (TOS is true), TOS is popped."
msgstr ""
"Si TOS es falso, establece el contador de bytecode en *target* y deja TOS en "
"la pila. De lo contrario (TOS es verdadero), TOS se desapila."

#: ../Doc/library/dis.rst:1045
msgid ""
"TOS is an :term:`iterator`.  Call its :meth:`~iterator.__next__` method.  If "
"this yields a new value, push it on the stack (leaving the iterator below "
"it).  If the iterator indicates it is exhausted, TOS is popped, and the byte "
"code counter is incremented by *delta*."
msgstr ""
"TOS es un :term:`iterador`. Llama a su método :meth:`~iterator.__next__`. Si "
"esto produce un nuevo valor, lo apila en la pila (dejando el iterador debajo "
"de él). Si el iterador indica que está agotado, se abre TOS y el contador de "
"código de bytes se incrementa en *delta*."

#: ../Doc/library/dis.rst:1053
#, fuzzy
msgid "Loads the global named ``co_names[namei>>1]`` onto the stack."
msgstr "Carga el nombre global ``co_names[namei]`` en la pila."

#: ../Doc/library/dis.rst:1055
msgid ""
"If the low bit of ``namei`` is set, then a ``NULL`` is pushed to the stack "
"before the global variable."
msgstr ""

#: ../Doc/library/dis.rst:1061
msgid ""
"Pushes a reference to the local ``co_varnames[var_num]`` onto the stack."
msgstr "Apila una referencia al local ``co_varnames[var_num]`` sobre la pila."

#: ../Doc/library/dis.rst:1066
msgid "Stores TOS into the local ``co_varnames[var_num]``."
msgstr "Almacena TOS en el local ``co_varnames[var_num]``."

#: ../Doc/library/dis.rst:1071
msgid "Deletes local ``co_varnames[var_num]``."
msgstr "Elimina la ``co_varnames[var_num]`` local."

#: ../Doc/library/dis.rst:1076
msgid ""
"Creates a new cell in slot ``i``.  If that slot is empty then that value is "
"stored into the new cell."
msgstr ""

#: ../Doc/library/dis.rst:1084
msgid ""
"Pushes a reference to the cell contained in slot ``i`` of the \"fast "
"locals\" storage.  The name of the variable is ``co_fastlocalnames[i]``."
msgstr ""

#: ../Doc/library/dis.rst:1087
msgid ""
"Note that ``LOAD_CLOSURE`` is effectively an alias for ``LOAD_FAST``. It "
"exists to keep bytecode a little more readable."
msgstr ""

#: ../Doc/library/dis.rst:1090 ../Doc/library/dis.rst:1099
#: ../Doc/library/dis.rst:1111 ../Doc/library/dis.rst:1120
#: ../Doc/library/dis.rst:1131
msgid "``i`` is no longer offset by the length of ``co_varnames``."
msgstr ""

#: ../Doc/library/dis.rst:1096
#, fuzzy
msgid ""
"Loads the cell contained in slot ``i`` of the \"fast locals\" storage. "
"Pushes a reference to the object the cell contains on the stack."
msgstr ""
"Carga la celda contenida en la ranura *i* de la celda y el almacenamiento "
"variable libre. Apila una referencia al objeto que contiene la celda en la "
"pila."

#: ../Doc/library/dis.rst:1105
msgid ""
"Much like :opcode:`LOAD_DEREF` but first checks the locals dictionary before "
"consulting the cell.  This is used for loading free variables in class "
"bodies."
msgstr ""
"Al igual que :opcode:`LOAD_DEREF` pero primero verifica el diccionario local "
"antes de consultar la celda. Esto se usa para cargar variables libres en los "
"cuerpos de clase."

#: ../Doc/library/dis.rst:1117
#, fuzzy
msgid ""
"Stores TOS into the cell contained in slot ``i`` of the \"fast locals\" "
"storage."
msgstr ""
"Almacena TOS en la celda contenida en la ranura *i* de la celda y "
"almacenamiento variable libre."

#: ../Doc/library/dis.rst:1126
#, fuzzy
msgid ""
"Empties the cell contained in slot ``i`` of the \"fast locals\" storage. "
"Used by the :keyword:`del` statement."
msgstr ""
"Vacía la celda contenida en la ranura *i* de la celda y el almacenamiento "
"variable libre. Utilizado por la declaración :keyword:`del`."

#: ../Doc/library/dis.rst:1137
msgid ""
"Copies the ``n`` free variables from the closure into the frame. Removes the "
"need for special code on the caller's side when calling closures."
msgstr ""

#: ../Doc/library/dis.rst:1146
msgid ""
"Raises an exception using one of the 3 forms of the ``raise`` statement, "
"depending on the value of *argc*:"
msgstr ""
"Provoca una excepción utilizando una de las 3 formas de la declaración "
"``raise``, dependiendo del valor de *argc*:"

#: ../Doc/library/dis.rst:1149
msgid "0: ``raise`` (re-raise previous exception)"
msgstr "0: ``raise`` (vuelve a lanzar la excepción anterior)"

#: ../Doc/library/dis.rst:1150
msgid "1: ``raise TOS`` (raise exception instance or type at ``TOS``)"
msgstr "1: ``raise TOS`` (lanza instancia de excepción o un tipo en ``TOS``)"

#: ../Doc/library/dis.rst:1151
msgid ""
"2: ``raise TOS1 from TOS`` (raise exception instance or type at ``TOS1`` "
"with ``__cause__`` set to ``TOS``)"
msgstr ""
"2: ``raise TOS1 desde TOS`` (lanza una instancia de excepción o tipo en "
"``TOS1`` con ``__cause__`` establecida en ``TOS``)"

#: ../Doc/library/dis.rst:1157
msgid ""
"Calls a callable object with the number of arguments specified by ``argc``, "
"including the named arguments specified by the preceding :opcode:`KW_NAMES`, "
"if any. On the stack are (in ascending order), either:"
msgstr ""

#: ../Doc/library/dis.rst:1162
msgid "NULL"
msgstr ""

#: ../Doc/library/dis.rst:1163 ../Doc/library/dis.rst:1169
msgid "The callable"
msgstr ""

#: ../Doc/library/dis.rst:1164
msgid "The positional arguments"
msgstr ""

#: ../Doc/library/dis.rst:1165 ../Doc/library/dis.rst:1172
msgid "The named arguments"
msgstr ""

#: ../Doc/library/dis.rst:1167
msgid "or:"
msgstr ""

#: ../Doc/library/dis.rst:1170
msgid "``self``"
msgstr ""

#: ../Doc/library/dis.rst:1171
msgid "The remaining positional arguments"
msgstr ""

#: ../Doc/library/dis.rst:1174
msgid ""
"``argc`` is the total of the positional and named arguments, excluding "
"``self`` when a ``NULL`` is not present."
msgstr ""

#: ../Doc/library/dis.rst:1177
msgid ""
"``CALL`` pops all arguments and the callable object off the stack, calls the "
"callable object with those arguments, and pushes the return value returned "
"by the callable object."
msgstr ""

#: ../Doc/library/dis.rst:1186
msgid ""
"Calls a callable object with variable set of positional and keyword "
"arguments.  If the lowest bit of *flags* is set, the top of the stack "
"contains a mapping object containing additional keyword arguments. Before "
"the callable is called, the mapping object and iterable object are each "
"\"unpacked\" and their contents passed in as keyword and positional "
"arguments respectively. ``CALL_FUNCTION_EX`` pops all arguments and the "
"callable object off the stack, calls the callable object with those "
"arguments, and pushes the return value returned by the callable object."
msgstr ""
"Llama a un objeto invocable con un conjunto variable de argumentos "
"posicionales y de palabras clave. Si se establece el bit más bajo de "
"*flags*, la parte superior de la pila contiene un objeto de mapeo que "
"contiene argumentos de palabras clave adicionales. Antes de que se llame al "
"invocable, el objeto de mapeo y el objeto iterable se \"desempaquetan\" y su "
"contenido se pasa como palabra clave y argumentos posicionales, "
"respectivamente. ``CALL_FUNCTION_EX`` saca todos los argumentos y el objeto "
"invocable de la pila, llama al objeto invocable con esos argumentos y empuja "
"el valor de retorno devuelto por el objeto invocable."

#: ../Doc/library/dis.rst:1201
#, fuzzy
msgid ""
"Loads a method named ``co_names[namei]`` from the TOS object. TOS is popped. "
"This bytecode distinguishes two cases: if TOS has a method with the correct "
"name, the bytecode pushes the unbound method and TOS. TOS will be used as "
"the first argument (``self``) by :opcode:`CALL` when calling the unbound "
"method. Otherwise, ``NULL`` and the object return by the attribute lookup "
"are pushed."
msgstr ""
"Carga un método llamado ``co_names[namei]`` desde el objeto TOS. TOS "
"aparece. Este bytecode distingue dos casos: si TOS tiene un método con el "
"nombre correcto, el bytecode apila el método no vinculado y TOS. TOS se "
"usará como primer argumento (``self``) por :opcode:`CALL_METHOD` cuando se "
"llama al método independiente. De lo contrario, ``NULL`` y el objeto "
"retornado por la búsqueda de atributos son apilados."

#: ../Doc/library/dis.rst:1213
msgid ""
"Prefixes :opcode:`CALL`. Logically this is a no op. It exists to enable "
"effective specialization of calls. ``argc`` is the number of arguments as "
"described in :opcode:`CALL`."
msgstr ""

#: ../Doc/library/dis.rst:1222
msgid ""
"Pushes a ``NULL`` to the stack. Used in the call sequence to match the "
"``NULL`` pushed by :opcode:`LOAD_METHOD` for non-method calls."
msgstr ""

#: ../Doc/library/dis.rst:1231
msgid ""
"Prefixes :opcode:`PRECALL`. Stores a reference to ``co_consts[consti]`` into "
"an internal variable for use by :opcode:`CALL`. ``co_consts[consti]`` must "
"be a tuple of strings."
msgstr ""

#: ../Doc/library/dis.rst:1240
msgid ""
"Pushes a new function object on the stack.  From bottom to top, the consumed "
"stack must consist of values if the argument carries a specified flag value"
msgstr ""
"Apila un nuevo objeto de función en la pila. De abajo hacia arriba, la pila "
"consumida debe constar de valores si el argumento lleva un valor de marca "
"especificado"

#: ../Doc/library/dis.rst:1243
msgid ""
"``0x01`` a tuple of default values for positional-only and positional-or-"
"keyword parameters in positional order"
msgstr ""
"``0x01``, una tupla de valores predeterminados para solo parámetros "
"posicionales y posicionales o de palabras clave en orden posicional"

#: ../Doc/library/dis.rst:1245
msgid "``0x02`` a dictionary of keyword-only parameters' default values"
msgstr ""
"``0x02`` un diccionario de valores predeterminados de solo palabras clave"

#: ../Doc/library/dis.rst:1246
msgid "``0x04`` a tuple of strings containing parameters' annotations"
msgstr ""
"``0x04`` una tupla de cadenas de caracteres que contiene anotaciones de "
"parámetros"

#: ../Doc/library/dis.rst:1247
msgid "``0x08`` a tuple containing cells for free variables, making a closure"
msgstr ""
"``0x08`` una tupla que contiene celdas para variables libres, haciendo un "
"cierre (*closure*)"

#: ../Doc/library/dis.rst:1248
msgid "the code associated with the function (at TOS1)"
msgstr "el código asociado con la función (en TOS1)"

#: ../Doc/library/dis.rst:1249
msgid "the :term:`qualified name` of the function (at TOS)"
msgstr "el :term:`nombre calificado` de la función (en TOS)"

#: ../Doc/library/dis.rst:1251
msgid "Flag value ``0x04`` is a tuple of strings instead of dictionary"
msgstr ""
"El valor indicador ``0x04`` es una tupla de cadena de caracteres en vez de "
"un diccionario"

#: ../Doc/library/dis.rst:1258
msgid ""
"Pushes a slice object on the stack.  *argc* must be 2 or 3.  If it is 2, "
"``slice(TOS1, TOS)`` is pushed; if it is 3, ``slice(TOS2, TOS1, TOS)`` is "
"pushed. See the :func:`slice` built-in function for more information."
msgstr ""
"Apila un objeto de rebanada en la pila. *argc* debe ser 2 o 3. Si es 2, se "
"apila ``slice(TOS1, TOS)``; si es 3, se apila ``slice(TOS2, TOS1, TOS)``. "
"Consulte la función incorporada :func:`slice` para obtener más información."

#: ../Doc/library/dis.rst:1265
msgid ""
"Prefixes any opcode which has an argument too big to fit into the default "
"one byte. *ext* holds an additional byte which act as higher bits in the "
"argument. For each opcode, at most three prefixal ``EXTENDED_ARG`` are "
"allowed, forming an argument from two-byte to four-byte."
msgstr ""
"Prefija cualquier código de operación que tenga un argumento demasiado "
"grande para caber en el byte predeterminado. *ext* contiene un byte "
"adicional que actúa como bits más altos en el argumento. Para cada opcode, "
"como máximo se permiten tres prefijos ``EXTENDED_ARG``, formando un "
"argumento de dos bytes a cuatro bytes."

#: ../Doc/library/dis.rst:1273
msgid ""
"Used for implementing formatted literal strings (f-strings).  Pops an "
"optional *fmt_spec* from the stack, then a required *value*. *flags* is "
"interpreted as follows:"
msgstr ""
"Se utiliza para implementar cadenas literales formateadas (cadenas de "
"caracteres f). Desapila un *fmt_spec* opcional de la pila, luego un *value* "
"requerido. *flags* se interpreta de la siguiente manera:"

#: ../Doc/library/dis.rst:1277
msgid "``(flags & 0x03) == 0x00``: *value* is formatted as-is."
msgstr "``(flags & 0x03) == 0x00``: *value* es formateado como está."

#: ../Doc/library/dis.rst:1278
msgid ""
"``(flags & 0x03) == 0x01``: call :func:`str` on *value* before formatting it."
msgstr ""
"``(flags & 0x03) == 0x01``: llama :func:`str` sobre *value* antes de "
"formatearlo."

#: ../Doc/library/dis.rst:1280
msgid ""
"``(flags & 0x03) == 0x02``: call :func:`repr` on *value* before formatting "
"it."
msgstr ""
"``(flags & 0x03) == 0x02``: llama :func:`repr` sobre *value* antes de "
"formatearlo."

#: ../Doc/library/dis.rst:1282
msgid ""
"``(flags & 0x03) == 0x03``: call :func:`ascii` on *value* before formatting "
"it."
msgstr ""
"``(flags & 0x03) == 0x03``: llama :func:`ascii` sobre *value* antes de "
"formatearlo."

#: ../Doc/library/dis.rst:1284
msgid ""
"``(flags & 0x04) == 0x04``: pop *fmt_spec* from the stack and use it, else "
"use an empty *fmt_spec*."
msgstr ""
"``(flags & 0x04) == 0x04``: desapila *fmt_spec* de la pila y lo usa, de lo "
"contrario usa un *fmt_spec* vacío."

#: ../Doc/library/dis.rst:1287
msgid ""
"Formatting is performed using :c:func:`PyObject_Format`.  The result is "
"pushed on the stack."
msgstr ""
"El formateo se realiza usando :c:func:`PyObject_Format`. El resultado se "
"apila en la pila."

#: ../Doc/library/dis.rst:1295
msgid ""
"TOS is a tuple of keyword attribute names, TOS1 is the class being matched "
"against, and TOS2 is the match subject.  *count* is the number of positional "
"sub-patterns."
msgstr ""
"TOS es una tupla de nombres de atributos clave, TOS1 es la clase contra la "
"cual se hace la coincidencia, y TOS2 es el sujeto de la coincidencia. "
"*count* es el número de sub-patrones posicionales."

#: ../Doc/library/dis.rst:1299
#, fuzzy
msgid ""
"Pop TOS, TOS1, and TOS2.  If TOS2 is an instance of TOS1 and has the "
"positional and keyword attributes required by *count* and TOS, push a tuple "
"of extracted attributes.  Otherwise, push ``None``."
msgstr ""
"Desapila TOS. Si TOS2 es una instancia de TOS1 y tiene los atributos clave y "
"posicionales requeridos por *count* y TOS, establece TOS como ``True`` y "
"TOS1 es una tupla de atributos extraídos. De lo contrario, establece TOS "
"como ``False``."

#: ../Doc/library/dis.rst:1312
msgid "A no-op. Performs internal tracing, debugging and optimization checks."
msgstr ""

#: ../Doc/library/dis.rst:1314
msgid "The ``where`` operand marks where the ``RESUME`` occurs:"
msgstr ""

#: ../Doc/library/dis.rst:1316
msgid "``0`` The start of a function"
msgstr ""

#: ../Doc/library/dis.rst:1317
msgid "``1`` After a ``yield`` expression"
msgstr ""

#: ../Doc/library/dis.rst:1318
msgid "``2`` After a ``yield from`` expression"
msgstr ""

#: ../Doc/library/dis.rst:1319
msgid "``3`` After an ``await`` expression"
msgstr ""

#: ../Doc/library/dis.rst:1326
msgid ""
"Create a generator, coroutine, or async generator from the current frame. "
"Clear the current frame and return the newly created generator."
msgstr ""

#: ../Doc/library/dis.rst:1334
msgid ""
"Sends ``None`` to the sub-generator of this generator. Used in ``yield "
"from`` and ``await`` statements."
msgstr ""

#: ../Doc/library/dis.rst:1342
msgid ""
"Wraps the value on top of the stack in an ``async_generator_wrapped_value``. "
"Used to yield in async generators."
msgstr ""

#: ../Doc/library/dis.rst:1350
msgid ""
"This is not really an opcode.  It identifies the dividing line between "
"opcodes which don't use their argument and those that do (``< "
"HAVE_ARGUMENT`` and ``>= HAVE_ARGUMENT``, respectively)."
msgstr ""
"Esto no es realmente un opcode. Identifica la línea divisoria entre los "
"opcode que no usan su argumento y los que lo hacen (``< HAVE_ARGUMENT`` y "
"``>= HAVE_ARGUMENT``, respectivamente)."

#: ../Doc/library/dis.rst:1354
msgid ""
"Now every instruction has an argument, but opcodes ``< HAVE_ARGUMENT`` "
"ignore it. Before, only opcodes ``>= HAVE_ARGUMENT`` had an argument."
msgstr ""
"Ahora cada instrucción tiene un argumento, pero los códigos de operación "
"``<HAVE_ARGUMENT`` la ignoran. Antes, solo los códigos de operación ``> = "
"HAVE_ARGUMENT`` tenían un argumento."

#: ../Doc/library/dis.rst:1362
msgid "Opcode collections"
msgstr "Colecciones opcode"

#: ../Doc/library/dis.rst:1364
msgid ""
"These collections are provided for automatic introspection of bytecode "
"instructions:"
msgstr ""
"Estas colecciones se proporcionan para la introspección automática de "
"instrucciones de bytecode:"

#: ../Doc/library/dis.rst:1369
msgid "Sequence of operation names, indexable using the bytecode."
msgstr "Secuencia de nombres de operaciones, indexable utilizando el bytecode."

#: ../Doc/library/dis.rst:1374
msgid "Dictionary mapping operation names to bytecodes."
msgstr "Nombres de operaciones de mapeo de diccionario a bytecodes."

#: ../Doc/library/dis.rst:1379
msgid "Sequence of all compare operation names."
msgstr "Secuencia de todos los nombres de operaciones de comparación."

#: ../Doc/library/dis.rst:1384
msgid "Sequence of bytecodes that access a constant."
msgstr "Secuencia de bytecodes que acceden a una constante."

#: ../Doc/library/dis.rst:1389
msgid ""
"Sequence of bytecodes that access a free variable (note that 'free' in this "
"context refers to names in the current scope that are referenced by inner "
"scopes or names in outer scopes that are referenced from this scope.  It "
"does *not* include references to global or builtin scopes)."
msgstr ""
"Secuencia de bytecodes que acceden a una variable libre (tenga en cuenta que "
"'libre' en este contexto se refiere a nombres en el alcance actual a los que "
"hacen referencia los ámbitos internos o los nombres en los ámbitos externos "
"a los que se hace referencia desde este ámbito. **No** incluye referencias a "
"ámbitos globales o integrados)."

#: ../Doc/library/dis.rst:1397
msgid "Sequence of bytecodes that access an attribute by name."
msgstr "Secuencia de bytecodes que acceden a un atributo por nombre."

#: ../Doc/library/dis.rst:1402
msgid "Sequence of bytecodes that have a relative jump target."
msgstr "Secuencia de bytecodes que tienen un objetivo de salto relativo."

#: ../Doc/library/dis.rst:1407
msgid "Sequence of bytecodes that have an absolute jump target."
msgstr "Secuencia de bytecodes que tienen un objetivo de salto absoluto."

#: ../Doc/library/dis.rst:1412
msgid "Sequence of bytecodes that access a local variable."
msgstr "Secuencia de códigos de bytes que acceden a una variable local."

#: ../Doc/library/dis.rst:1417
msgid "Sequence of bytecodes of Boolean operations."
msgstr "Secuencia de bytecodes de operaciones booleanas."

#~ msgid "Swaps the two top-most stack items."
#~ msgstr "Intercambia los dos elementos más apilados."

#~ msgid ""
#~ "Lifts second and third stack item one position up, moves top down to "
#~ "position three."
#~ msgstr ""
#~ "Levanta el segundo y tercer elemento de la pila una posición hacia "
#~ "arriba, mueve el elemento superior hacia abajo a la posición tres."

#~ msgid ""
#~ "Lifts second, third and fourth stack items one position up, moves top "
#~ "down to position four."
#~ msgstr ""
#~ "Eleva los elementos de la segunda, tercera y cuarta pila una posición "
#~ "hacia arriba, se mueve de arriba hacia abajo a la posición cuatro."

#~ msgid "Duplicates the reference on top of the stack."
#~ msgstr "Duplica la referencia en la parte superior de la pila."

#~ msgid ""
#~ "Duplicates the two references on top of the stack, leaving them in the "
#~ "same order."
#~ msgstr ""
#~ "Duplica las dos referencias en la parte superior de la pila, dejándolas "
#~ "en el mismo orden."

#~ msgid "**Binary operations**"
#~ msgstr "**Operaciones binarias**"

#~ msgid "Implements ``TOS = TOS1 ** TOS``."
#~ msgstr "Implementa ``TOS = TOS1 ** TOS``."

#~ msgid "Implements ``TOS = TOS1 * TOS``."
#~ msgstr "Implementa ``TOS = TOS1 * TOS``."

#~ msgid "Implements ``TOS = TOS1 @ TOS``."
#~ msgstr "Implementa ``TOS = TOS1 @ TOS``."

#~ msgid "Implements ``TOS = TOS1 // TOS``."
#~ msgstr "Implementa ``TOS = TOS1 // TOS``."

#~ msgid "Implements ``TOS = TOS1 / TOS``."
#~ msgstr "Implementa ``TOS = TOS1 / TOS``."

#~ msgid "Implements ``TOS = TOS1 % TOS``."
#~ msgstr "Implementa ``TOS = TOS1 % TOS``."

#~ msgid "Implements ``TOS = TOS1 + TOS``."
#~ msgstr "Implementa ``TOS = TOS1 + TOS``."

#~ msgid "Implements ``TOS = TOS1 - TOS``."
#~ msgstr "Implementa ``TOS = TOS1 - TOS``."

#~ msgid "Implements ``TOS = TOS1 << TOS``."
#~ msgstr "Implementa ``TOS = TOS1 << TOS``."

#~ msgid "Implements ``TOS = TOS1 >> TOS``."
#~ msgstr "Implementa ``TOS = TOS1 >> TOS``."

#~ msgid "Implements ``TOS = TOS1 & TOS``."
#~ msgstr "Implementa ``TOS = TOS1 & TOS``."

#~ msgid "Implements ``TOS = TOS1 ^ TOS``."
#~ msgstr "Implementa ``TOS = TOS1 ^ TOS``."

#~ msgid "Implements ``TOS = TOS1 | TOS``."
#~ msgstr "Implementa ``TOS = TOS1 | TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 ** TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 ** TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 * TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 * TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 @ TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 @ TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 // TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 // TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 / TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 / TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 % TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 % TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 + TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 + TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 - TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 - TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 << TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 << TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 >> TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 >> TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 & TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 & TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 ^ TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 ^ TOS``."

#~ msgid "Implements in-place ``TOS = TOS1 | TOS``."
#~ msgstr "Implementa en su lugar ``TOS = TOS1 | TOS``."

#~ msgid "Creates a new frame object."
#~ msgstr "Crea un nuevo objeto marco."

#~ msgid ""
#~ "Pops TOS and delegates to it as a subiterator from a :term:`generator`."
#~ msgstr ""
#~ "Desapila TOS y delega en él como un subiterador de un :term:`generator`."

#~ msgid ""
#~ "Removes one block from the block stack.  Per frame, there is a stack of "
#~ "blocks, denoting :keyword:`try` statements, and such."
#~ msgstr ""
#~ "Elimina un bloque de la pila de bloques. Por cuadro, hay una pila de "
#~ "bloques, que denota declaraciones :keyword:`try`, y tal."

#~ msgid ""
#~ "Removes one block from the block stack. The popped block must be an "
#~ "exception handler block, as implicitly created when entering an except "
#~ "handler.  In addition to popping extraneous values from the frame stack, "
#~ "the last three popped values are used to restore the exception state."
#~ msgstr ""
#~ "Elimina un bloque de la pila de bloques. El bloque desapilado debe ser un "
#~ "bloque de controlador de excepción, como se crea implícitamente al "
#~ "ingresar un controlador de excepción. Además de desapilar valores "
#~ "extraños de la pila de cuadros, los últimos tres valores desapilados se "
#~ "utilizan para restaurar el estado de excepción."

#~ msgid ""
#~ "TOS is a tuple of mapping keys, and TOS1 is the match subject.  Replace "
#~ "TOS with a :class:`dict` formed from the items of TOS1, but without any "
#~ "of the keys in TOS."
#~ msgstr ""
#~ "TOS es una tuple de llaves de mapeo, y TOS1 es el sujeto de la "
#~ "coincidencia. Reemplaza TOS con un :class:`dict` formado por los ítems de "
#~ "TOS1, pero sin ninguna de las llaves en TOS."

#~ msgid "All of the following opcodes use their arguments."
#~ msgstr "Todos los siguientes códigos de operación utilizan sus argumentos."

#~ msgid ""
#~ "Tests whether the second value on the stack is an exception matching TOS, "
#~ "and jumps if it is not. Pops two values from the stack."
#~ msgstr ""
#~ "Comprueba si el segundo valor de la pila es una excepción que coincide "
#~ "con el TOS y salta si no lo es. Saca dos valores de la pila."

#~ msgid "Set bytecode counter to *target*."
#~ msgstr "Establezca el contador de bytecode en *target*."

#~ msgid ""
#~ "Pushes a try block from a try-finally or try-except clause onto the block "
#~ "stack.  *delta* points to the finally block or the first except block."
#~ msgstr ""
#~ "Apila un bloque try de una cláusula try-finally o try-except en la pila "
#~ "de bloques. *delta* apunta al último bloque o al primero excepto el "
#~ "bloque."

#~ msgid ""
#~ "Pushes a reference to the cell contained in slot *i* of the cell and free "
#~ "variable storage.  The name of the variable is ``co_cellvars[i]`` if *i* "
#~ "is less than the length of *co_cellvars*.  Otherwise it is "
#~ "``co_freevars[i - len(co_cellvars)]``."
#~ msgstr ""
#~ "Apila una referencia a la celda contenida en la ranura *i* de la celda y "
#~ "el almacenamiento variable libre. El nombre de la variable es "
#~ "``co_cellvars[i]`` si *i* es menor que la longitud de *co_cellvars*. De "
#~ "lo contrario, es ``co_freevars[i - len(co_cellvars)]``."

#~ msgid ""
#~ "Calls a callable object with positional arguments. *argc* indicates the "
#~ "number of positional arguments. The top of the stack contains positional "
#~ "arguments, with the right-most argument on top.  Below the arguments is a "
#~ "callable object to call. ``CALL_FUNCTION`` pops all arguments and the "
#~ "callable object off the stack, calls the callable object with those "
#~ "arguments, and pushes the return value returned by the callable object."
#~ msgstr ""
#~ "Llama a un objeto invocable con argumentos posicionales. *argc* indica el "
#~ "número de argumentos posicionales. La parte superior de la pila contiene "
#~ "argumentos posicionales, con el argumento más a la derecha en la parte "
#~ "superior. Debajo de los argumentos hay un objeto invocable para llamar. "
#~ "``CALL_FUNCTION`` saca todos los argumentos y el objeto invocable de la "
#~ "pila, llama al objeto invocable con esos argumentos y empuja el valor de "
#~ "retorno retornado por el objeto invocable."

#~ msgid "This opcode is used only for calls with positional arguments."
#~ msgstr ""
#~ "Este código de operación se usa solo para llamadas con argumentos "
#~ "posicionales."

#~ msgid ""
#~ "Calls a callable object with positional (if any) and keyword arguments. "
#~ "*argc* indicates the total number of positional and keyword arguments. "
#~ "The top element on the stack contains a tuple with the names of the "
#~ "keyword arguments, which must be strings. Below that are the values for "
#~ "the keyword arguments, in the order corresponding to the tuple. Below "
#~ "that are positional arguments, with the right-most parameter on top.  "
#~ "Below the arguments is a callable object to call. ``CALL_FUNCTION_KW`` "
#~ "pops all arguments and the callable object off the stack, calls the "
#~ "callable object with those arguments, and pushes the return value "
#~ "returned by the callable object."
#~ msgstr ""
#~ "Llama a un objeto invocable con argumentos posicionales (si los hay) y "
#~ "palabras clave. *argc* indica el número total de argumentos posicionales "
#~ "y de palabras clave. El elemento superior de la pila contiene una tupla "
#~ "con los nombres de los argumentos de la palabra clave, que deben ser "
#~ "cadenas de caracteres. Debajo están los valores para los argumentos de la "
#~ "palabra clave, en el orden correspondiente a la tupla. Debajo están los "
#~ "argumentos posicionales, con el parámetro más a la derecha en la parte "
#~ "superior. Debajo de los argumentos hay un objeto invocable para llamar. "
#~ "``CALL_FUNCTION_KW`` saca todos los argumentos y el objeto invocable de "
#~ "la pila, llama al objeto invocable con esos argumentos y empuja el valor "
#~ "de retorno retornado por el objeto invocable."

#~ msgid ""
#~ "Keyword arguments are packed in a tuple instead of a dictionary, *argc* "
#~ "indicates the total number of arguments."
#~ msgstr ""
#~ "Los argumentos de palabras clave se empaquetan en una tupla en lugar de "
#~ "un diccionario, *argc* indica el número total de argumentos."

#~ msgid ""
#~ "Calls a method.  *argc* is the number of positional arguments. Keyword "
#~ "arguments are not supported.  This opcode is designed to be used with :"
#~ "opcode:`LOAD_METHOD`.  Positional arguments are on top of the stack. "
#~ "Below them, the two items described in :opcode:`LOAD_METHOD` are on the "
#~ "stack (either ``self`` and an unbound method object or ``NULL`` and an "
#~ "arbitrary callable). All of them are popped and the return value is "
#~ "pushed."
#~ msgstr ""
#~ "Llama a un método. *argc* es el número de argumentos posicionales. Los "
#~ "argumentos de palabras clave no son compatibles. Este código de operación "
#~ "está diseñado para usarse con :opcode:`LOAD_METHOD`. Los argumentos "
#~ "posicionales están en la parte superior de la pila. Debajo de ellos, los "
#~ "dos elementos descritos en :opcode:`LOAD_METHOD` están en la pila "
#~ "(``self`` y un objeto de método independiente o ``NULL`` y un invocable "
#~ "arbitrario). Todos ellos aparecen y se apila el valor de retorno."

#~ msgid ""
#~ "Pops TOS. If TOS was not ``None``, raises an exception. The ``kind`` "
#~ "operand corresponds to the type of generator or coroutine and determines "
#~ "the error message. The legal kinds are 0 for generator, 1 for coroutine, "
#~ "and 2 for async generator."
#~ msgstr ""
#~ "Desapila TOS. Si TOS no era ``None``, lanza una excepción. El operando "
#~ "``kind`` corresponde al tipo de generador o corrutina y determina el "
#~ "mensaje de error. Los tipos legales son 0 para generador, 1 para "
#~ "corrutina, y 2 para generador asíncrono."

#~ msgid ""
#~ "Lift the top *count* stack items one position up, and move TOS down to "
#~ "position *count*."
#~ msgstr ""
#~ "Eleva los *count* elementos más altos de la pila una posición hacia "
#~ "arriba, y baja TOS hacia la posición *count*."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-08-20 08:15-0500\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/shlex.rst:2
msgid ":mod:`shlex` --- Simple lexical analysis"
msgstr ":mod:`shlex` --- Análisis léxico simple"

#: ../Doc/library/shlex.rst:12
msgid "**Source code:** :source:`Lib/shlex.py`"
msgstr "**Código fuente:** :source:`Lib/shlex.py`"

#: ../Doc/library/shlex.rst:16
msgid ""
"The :class:`~shlex.shlex` class makes it easy to write lexical analyzers for "
"simple syntaxes resembling that of the Unix shell.  This will often be "
"useful for writing minilanguages, (for example, in run control files for "
"Python applications) or for parsing quoted strings."
msgstr ""
"La clase :class:`~shlex.shlex` facilita la escritura de analizadores léxicos "
"para sintaxis simples que se parecen al intérprete de comandos de Unix. Esto "
"será a menudo útil para escribir pequeños lenguajes, (por ejemplo, en "
"archivos de control para aplicaciones Python) o para analizar cadenas de "
"texto citadas."

#: ../Doc/library/shlex.rst:21
msgid "The :mod:`shlex` module defines the following functions:"
msgstr "El módulo :mod:`shlex` define las siguientes funciones:"

#: ../Doc/library/shlex.rst:26
msgid ""
"Split the string *s* using shell-like syntax. If *comments* is :const:"
"`False` (the default), the parsing of comments in the given string will be "
"disabled (setting the :attr:`~shlex.commenters` attribute of the :class:"
"`~shlex.shlex` instance to the empty string).  This function operates in "
"POSIX mode by default, but uses non-POSIX mode if the *posix* argument is "
"false."
msgstr ""
"Divide la cadena de caracteres *s* usando una sintaxis similar a la de un "
"intérprete de comandos.  Si *comments* es :const:`False` (por defecto), el "
"análisis de los comentarios en la cadena de caracteres dada sera "
"deshabilitada (estableciendo el atributo :attr:`~shlex.commenters` de la "
"instancia :class:`~shlex.shlex` a la cadena de caracteres vacía). Esta "
"función trabaja en modo POSIX por defecto, pero utiliza el modo non-POSIX si "
"el argumento *posix* es falso."

#: ../Doc/library/shlex.rst:35
msgid ""
"Since the :func:`split` function instantiates a :class:`~shlex.shlex` "
"instance, passing ``None`` for *s* will read the string to split from "
"standard input."
msgstr ""
"Como la función :func:`split` inicia una instancia :class:`~shlex.shlex`, al "
"pasar ``None`` por *s* se leerá la cadena de caracteres para separarse de la "
"entrada estándar."

#: ../Doc/library/shlex.rst:42
msgid ""
"Concatenate the tokens of the list *split_command* and return a string. This "
"function is the inverse of :func:`split`."
msgstr ""
"Concatena los tokens de la lista *split_command* y retorna una cadena. Esta "
"función es la inversa de :func:`split`."

#: ../Doc/library/shlex.rst:49
msgid ""
"The returned value is shell-escaped to protect against injection "
"vulnerabilities (see :func:`quote`)."
msgstr ""
"El valor retornado se escapa del intérprete de comandos para protegerlo "
"contra vulnerabilidades de inyección (consulte :func:`quote`)."

#: ../Doc/library/shlex.rst:57
msgid ""
"Return a shell-escaped version of the string *s*.  The returned value is a "
"string that can safely be used as one token in a shell command line, for "
"cases where you cannot use a list."
msgstr ""
"Retorna una versión con escape del intérprete de comandos de la cadena *s*.  "
"El valor retornado es una cadena que se puede usar de forma segura como un "
"token en un intérprete de línea de comandos, para los casos en los que no se "
"puede usar una lista."

#: ../Doc/library/shlex.rst:61
msgid "This idiom would be unsafe:"
msgstr "Este idioma sería inseguro:"

#: ../Doc/library/shlex.rst:68
msgid ":func:`quote` lets you plug the security hole:"
msgstr ":func:`quote` te permite tapar el agujero de seguridad:"

#: ../Doc/library/shlex.rst:78
msgid "The quoting is compatible with UNIX shells and with :func:`split`:"
msgstr ""
"La cita es compatible con los intérpretes de comandos UNIX y con :func:"
"`split`:"

#: ../Doc/library/shlex.rst:90
msgid "The :mod:`shlex` module defines the following class:"
msgstr "El módulo :mod:`shlex` define las siguientes clases:"

#: ../Doc/library/shlex.rst:95
msgid ""
"A :class:`~shlex.shlex` instance or subclass instance is a lexical analyzer "
"object.  The initialization argument, if present, specifies where to read "
"characters from.  It must be a file-/stream-like object with :meth:`~io."
"TextIOBase.read` and :meth:`~io.TextIOBase.readline` methods, or a string.  "
"If no argument is given, input will be taken from ``sys.stdin``. The second "
"optional argument is a filename string, which sets the initial value of the :"
"attr:`~shlex.infile` attribute.  If the *instream* argument is omitted or "
"equal to ``sys.stdin``, this second argument defaults to \"stdin\".  The "
"*posix* argument defines the operational mode: when *posix* is not true "
"(default), the :class:`~shlex.shlex` instance will operate in compatibility "
"mode.  When operating in POSIX mode, :class:`~shlex.shlex` will try to be as "
"close as possible to the POSIX shell parsing rules.  The *punctuation_chars* "
"argument provides a way to make the behaviour even closer to how real shells "
"parse.  This can take a number of values: the default value, ``False``, "
"preserves the behaviour seen under Python 3.5 and earlier.  If set to "
"``True``, then parsing of the characters ``();<>|&`` is changed: any run of "
"these characters (considered punctuation characters) is returned as a single "
"token.  If set to a non-empty string of characters, those characters will be "
"used as the punctuation characters.  Any characters in the :attr:`wordchars` "
"attribute that appear in *punctuation_chars* will be removed from :attr:"
"`wordchars`.  See :ref:`improved-shell-compatibility` for more information. "
"*punctuation_chars* can be set only upon :class:`~shlex.shlex` instance "
"creation and can't be modified later."
msgstr ""
"Una instancia o instancia de la subclase :class:`~shlex.shlex` es un objeto "
"de analizador léxico.  El argumento de inicialización, si está presente, "
"especifica de dónde leer caracteres.  Debe ser un objeto similar a un "
"archivo/stream con los métodos :meth:`~io.TextIOBase.read` y :meth:`~io."
"TextIOBase.readline` o una cadena de caracteres.  Si no se da ningún "
"argumento, la entrada se tomará de ``sys.stdin``. El segundo argumento "
"opcional es una cadena de nombre de archivo, que establece el valor inicial "
"del atributo :attr:`~shlex.infile`.  Si el argumento *instream* es omitido o "
"es igual a ``sys.stdin``, este segundo argumento tiene como valor "
"predeterminado \"stdin\".  El argumento *posix* define el modo operativo: "
"cuando *posix* no es true (predeterminado), la instancia :class:`~shlex."
"shlex` funcionará en modo de compatibilidad.  Cuando se opera en modo "
"POSIX, :class:`~shlex.shlex` intentará estar lo más cerca posible de las "
"reglas de análisis de el intérprete de comandos POSIX.  El argumento "
"*punctuation_chars* proporciona una manera de hacer que el comportamiento "
"sea aún más cercano a la forma en que se analizan los intérpretes de "
"comandos reales.  Esto puede tomar una serie de valores: el valor "
"predeterminado, ``False``, conserva el comportamiento visto en Python 3.5 y "
"versiones anteriores.  Si se establece en ``True``, se cambia el análisis de "
"los caracteres ``();<>|&``: cualquier ejecución de estos caracteres "
"(caracteres considerados de puntuación) se retorna como un único token.  Si "
"se establece en una cadena de caracteres no vacía, esos caracteres se "
"utilizarán como caracteres de puntuación.  Los caracteres del atributo :attr:"
"`wordchars` que aparecen en *punctuation_chars* se eliminarán de :attr:"
"`wordchars`.  Consulte :ref:`improved-shell-compatibility` para obtener más "
"información. *punctuation_chars* solo se puede establecer en la creación de "
"la instancia :class:`~shlex.shlex` y no se puede modificar más adelante."

#: ../Doc/library/shlex.rst:120
msgid "The *punctuation_chars* parameter was added."
msgstr "Se añadió el parámetro *punctuation_chars*."

#: ../Doc/library/shlex.rst:125
msgid "Module :mod:`configparser`"
msgstr "Módulo :mod:`configparser`"

#: ../Doc/library/shlex.rst:126
msgid ""
"Parser for configuration files similar to the Windows :file:`.ini` files."
msgstr ""
"Analizador de archivos de configuración similares a los archivos :file:`."
"ini` de Windows."

#: ../Doc/library/shlex.rst:132
msgid "shlex Objects"
msgstr "objetos ``shlex``"

#: ../Doc/library/shlex.rst:134
msgid "A :class:`~shlex.shlex` instance has the following methods:"
msgstr "Una instancia :class:`~shlex.shlex` tiene los siguientes métodos:"

#: ../Doc/library/shlex.rst:139
msgid ""
"Return a token.  If tokens have been stacked using :meth:`push_token`, pop a "
"token off the stack.  Otherwise, read one from the input stream.  If reading "
"encounters an immediate end-of-file, :attr:`eof` is returned (the empty "
"string (``''``) in non-POSIX mode, and ``None`` in POSIX mode)."
msgstr ""
"Retorna un token.  Si los tokens han sido apiladas usando :meth:"
"`push_token`, saca una ficha de la pila.  De lo contrario, lee uno de la "
"secuencia de entrada.  Si la lectura encuentra un fin de archivo inmediato, :"
"attr:`eof` se retorna (la cadena de caracteres vacía (``''``) en modo no-"
"POSIX, y ``None`` en modo POSIX)."

#: ../Doc/library/shlex.rst:147
msgid "Push the argument onto the token stack."
msgstr "Coloca el argumento en la pila de tokens."

#: ../Doc/library/shlex.rst:152
msgid ""
"Read a raw token.  Ignore the pushback stack, and do not interpret source "
"requests.  (This is not ordinarily a useful entry point, and is documented "
"here only for the sake of completeness.)"
msgstr ""
"Lee un token sin procesar. Ignora la pila de retroceso y no interpreta las "
"peticiones de la fuente.  (Este no es normalmente un punto de entrada útil, "
"y está documentado aquí sólo para completarlo.)"

#: ../Doc/library/shlex.rst:159
msgid ""
"When :class:`~shlex.shlex` detects a source request (see :attr:`source` "
"below) this method is given the following token as argument, and expected to "
"return a tuple consisting of a filename and an open file-like object."
msgstr ""
"Cuando :class:`~shlex.shlex` detecta una petición de fuente (ver :attr:"
"`source` abajo) este método recibe el siguiente token como argumento, y se "
"espera que retorne una tupla que consista en un nombre de archivo y un "
"archivo abierto como objeto."

#: ../Doc/library/shlex.rst:163
msgid ""
"Normally, this method first strips any quotes off the argument.  If the "
"result is an absolute pathname, or there was no previous source request in "
"effect, or the previous source was a stream (such as ``sys.stdin``), the "
"result is left alone.  Otherwise, if the result is a relative pathname, the "
"directory part of the name of the file immediately before it on the source "
"inclusion stack is prepended (this behavior is like the way the C "
"preprocessor handles ``#include \"file.h\"``)."
msgstr ""
"Normalmente, este método primero elimina las comillas del argumento.  Si el "
"resultado es un nombre de ruta absoluto, o no había ninguna solicitud de "
"origen anterior en vigor, o el origen anterior era una secuencia (como ``sys."
"stdin``), el resultado se deja solo.  De lo contrario, si el resultado es un "
"nombre de ruta relativo, la parte del directorio del nombre del archivo se "
"pone inmediatamente antes en la pila de inclusión de origen (este "
"comportamiento es similar a la forma en que el preprocesador de C controla "
"``#include \"file.h\"``)."

#: ../Doc/library/shlex.rst:171
msgid ""
"The result of the manipulations is treated as a filename, and returned as "
"the first component of the tuple, with :func:`open` called on it to yield "
"the second component. (Note: this is the reverse of the order of arguments "
"in instance initialization!)"
msgstr ""
"El resultado de las manipulaciones se trata como un nombre de archivo y se "
"retorna como el primer componente de la tupla, con :func:`open` llamado en "
"él para producir el segundo componente. (Nota: esto es lo contrario del "
"orden de los argumentos en la inicialización de instancia!)"

#: ../Doc/library/shlex.rst:176
msgid ""
"This hook is exposed so that you can use it to implement directory search "
"paths, addition of file extensions, and other namespace hacks. There is no "
"corresponding 'close' hook, but a shlex instance will call the :meth:`~io."
"IOBase.close` method of the sourced input stream when it returns EOF."
msgstr ""
"Este enlace se expone para que pueda usarlo para implementar rutas de "
"búsqueda de directorios, adición de extensiones de archivo y otros trucos de "
"espacios de nombres. No hay ningún enlace 'close' correspondiente, pero una "
"instancia de ``shlex`` llamará el método :meth:`~io.IOBase.close` de la "
"secuencia de entrada de origen cuando retorna EOF."

#: ../Doc/library/shlex.rst:182
msgid ""
"For more explicit control of source stacking, use the :meth:`push_source` "
"and :meth:`pop_source` methods."
msgstr ""
"Para un control más explícito del apilamiento de código fuente, utilice los "
"métodos :meth:`push_source` y :meth:`pop_source`."

#: ../Doc/library/shlex.rst:188
msgid ""
"Push an input source stream onto the input stack.  If the filename argument "
"is specified it will later be available for use in error messages.  This is "
"the same method used internally by the :meth:`sourcehook` method."
msgstr ""
"Inserta una secuencia de fuente de entrada en la pila de entrada.  Si se "
"especifica el argumento de nombre de archivo, más adelante estará disponible "
"para su uso en mensajes de error.  Este es el mismo método utilizado "
"internamente por el método :meth:`sourcehook`."

#: ../Doc/library/shlex.rst:195
msgid ""
"Pop the last-pushed input source from the input stack. This is the same "
"method used internally when the lexer reaches EOF on a stacked input stream."
msgstr ""
"Saca la última fuente de entrada de la pila de entrada. Este es el mismo "
"método que el analizador léxico utiliza cuando llega al EOF en una secuencia "
"de entrada apilada."

#: ../Doc/library/shlex.rst:201
#, python-format
msgid ""
"This method generates an error message leader in the format of a Unix C "
"compiler error label; the format is ``'\"%s\", line %d: '``, where the ``"
"%s`` is replaced with the name of the current source file and the ``%d`` "
"with the current input line number (the optional arguments can be used to "
"override these)."
msgstr ""
"Este método genera un mensaje de error líder en el formato de una etiqueta "
"de error del compilador de Unix C; el formato es ``'\"%s\", line %d: '``, "
"donde el ``%s`` es reemplazado con el nombre del archivo fuente actual y el "
"``%d`` con el número de línea de entrada actual (los argumentos opcionales "
"pueden ser usado para sobrescribir estos)."

#: ../Doc/library/shlex.rst:206
msgid ""
"This convenience is provided to encourage :mod:`shlex` users to generate "
"error messages in the standard, parseable format understood by Emacs and "
"other Unix tools."
msgstr ""
"Esta conveniencia se proporciona para animar a los usuarios de :mod:`shlex` "
"a generar mensajes de error en el formato estándar y analizable que "
"entienden Emacs y otras herramientas de Unix."

#: ../Doc/library/shlex.rst:210
msgid ""
"Instances of :class:`~shlex.shlex` subclasses have some public instance "
"variables which either control lexical analysis or can be used for debugging:"
msgstr ""
"Las instancias de las subclases :class:`~shlex.shlex` tienen algunas "
"variables de instancia pública que controlan el análisis léxico o pueden ser "
"usadas para la depuración:"

#: ../Doc/library/shlex.rst:216
msgid ""
"The string of characters that are recognized as comment beginners. All "
"characters from the comment beginner to end of line are ignored. Includes "
"just ``'#'`` by default."
msgstr ""
"La cadena de caracteres que son reconocidos como comentarios de "
"principiantes. Todos los caracteres desde el comentario principiante hasta "
"el final de la línea son ignorados. Incluye sólo ``'#'`` por defecto."

#: ../Doc/library/shlex.rst:223
msgid ""
"The string of characters that will accumulate into multi-character tokens.  "
"By default, includes all ASCII alphanumerics and underscore.  In POSIX mode, "
"the accented characters in the Latin-1 set are also included.  If :attr:"
"`punctuation_chars` is not empty, the characters ``~-./*?=``, which can "
"appear in filename specifications and command line parameters, will also be "
"included in this attribute, and any characters which appear in "
"``punctuation_chars`` will be removed from ``wordchars`` if they are present "
"there. If :attr:`whitespace_split` is set to ``True``, this will have no "
"effect."
msgstr ""
"La cadena de caracteres que se acumulará en tokens de varios caracteres.  "
"Por defecto, incluye todos los alfanuméricos ASCII y el subrayado.  En el "
"modo POSIX, los caracteres acentuados del conjunto Latin-1 también están "
"incluidos.  Si :attr:`punctuation_chars` no está vacío, los caracteres ``~-./"
"*?=``, que pueden aparecer en las especificaciones del nombre de archivo y "
"en los parámetros de la línea de comandos, también se incluirán en este "
"atributo, y cualquier carácter que aparezca en ``punctuation_chars`` será "
"eliminado de ``wordchars`` si están presentes allí. Si :attr:"
"`whitespace_split` se establece en ``True``, esto no tendrá ningún efecto."

#: ../Doc/library/shlex.rst:236
msgid ""
"Characters that will be considered whitespace and skipped.  Whitespace "
"bounds tokens.  By default, includes space, tab, linefeed and carriage-"
"return."
msgstr ""
"Caracteres que serán considerados como espacio en blanco y salteados.  El "
"espacio blanco limita los tokens.  Por defecto, incluye espacio, tabulación, "
"salto de línea y retorno de carro."

#: ../Doc/library/shlex.rst:242
msgid ""
"Characters that will be considered as escape. This will be only used in "
"POSIX mode, and includes just ``'\\'`` by default."
msgstr ""
"Caracteres que serán considerados como de escape. Esto sólo se usará en el "
"modo POSIX, e incluye sólo ``'\\'`` por defecto."

#: ../Doc/library/shlex.rst:248
msgid ""
"Characters that will be considered string quotes.  The token accumulates "
"until the same quote is encountered again (thus, different quote types "
"protect each other as in the shell.)  By default, includes ASCII single and "
"double quotes."
msgstr ""
"Los caracteres que serán considerados como citas de la cadena.  El token se "
"acumula hasta que la misma cita se encuentra de nuevo (así, los diferentes "
"tipos de citas se protegen entre sí como en el intérprete de comandos.) Por "
"defecto, incluye ASCII comillas simples y dobles."

#: ../Doc/library/shlex.rst:255
msgid ""
"Characters in :attr:`quotes` that will interpret escape characters defined "
"in :attr:`escape`.  This is only used in POSIX mode, and includes just "
"``'\"'`` by default."
msgstr ""
"Caracteres en :attr:`quotes` que interpretarán los caracteres de escape "
"definidos en :attr:`escape`.  Esto sólo se usa en el modo POSIX, e incluye "
"sólo ``'\"'`` por defecto."

#: ../Doc/library/shlex.rst:262
msgid ""
"If ``True``, tokens will only be split in whitespaces.  This is useful, for "
"example, for parsing command lines with :class:`~shlex.shlex`, getting "
"tokens in a similar way to shell arguments.  When used in combination with :"
"attr:`punctuation_chars`, tokens will be split on whitespace in addition to "
"those characters."
msgstr ""
"Si es ``True``, los tokens sólo se dividirán en espacios en blanco.  Esto es "
"útil, por ejemplo, para analizar las líneas de comando con :class:`~shlex."
"shlex`, obteniendo los tokens de forma similar a los argumentos de el "
"intérprete de comandos.  Cuando se utiliza en combinación con :attr:"
"`puntuation_chars`, los tokens se dividirán en espacios en blanco además de "
"esos caracteres."

#: ../Doc/library/shlex.rst:268
msgid ""
"The :attr:`punctuation_chars` attribute was made compatible with the :attr:"
"`whitespace_split` attribute."
msgstr ""
"El atributo :attr:`puntuation_chars` se hizo compatible con el atributo :"
"attr:`whitespace_split`."

#: ../Doc/library/shlex.rst:275
msgid ""
"The name of the current input file, as initially set at class instantiation "
"time or stacked by later source requests.  It may be useful to examine this "
"when constructing error messages."
msgstr ""
"El nombre del archivo de entrada actual, como se estableció inicialmente al "
"momento de la instanciación de la clase o apilado por solicitudes de fuente "
"posteriores.  Puede ser útil examinar esto cuando se construyan mensajes de "
"error."

#: ../Doc/library/shlex.rst:282
msgid ""
"The input stream from which this :class:`~shlex.shlex` instance is reading "
"characters."
msgstr ""
"El flujo de entrada del cual esta instancia :class:`~shlex.shlex` está "
"leyendo caracteres."

#: ../Doc/library/shlex.rst:288
msgid ""
"This attribute is ``None`` by default.  If you assign a string to it, that "
"string will be recognized as a lexical-level inclusion request similar to "
"the ``source`` keyword in various shells.  That is, the immediately "
"following token will be opened as a filename and input will be taken from "
"that stream until EOF, at which point the :meth:`~io.IOBase.close` method of "
"that stream will be called and the input source will again become the "
"original input stream.  Source requests may be stacked any number of levels "
"deep."
msgstr ""
"Este atributo es ``None`` por defecto.  Si le asignas una cadena, esa cadena "
"será reconocida como una solicitud de inclusión a nivel léxico similar a la "
"palabra clave ``source`` en varios intérpretes de comandos.  Es decir, el "
"token inmediatamente siguiente se abrirá como un nombre de archivo y la "
"entrada se tomará de ese flujo hasta EOF, en cuyo momento se llamará al "
"método :meth:`~io.IOBase.close` de ese flujo y la fuente de entrada se "
"convertirá de nuevo en el flujo de entrada original.  Las peticiones de "
"origen pueden ser apiladas a cualquier número de niveles de profundidad."

#: ../Doc/library/shlex.rst:299
msgid ""
"If this attribute is numeric and ``1`` or more, a :class:`~shlex.shlex` "
"instance will print verbose progress output on its behavior.  If you need to "
"use this, you can read the module source code to learn the details."
msgstr ""
"Si este atributo es numérico y ``1`` o más, una instancia :class:`~shlex."
"shlex` imprimirá una salida de progreso verboso en su comportamiento.  Si "
"necesitas usar esto, puedes leer el código fuente del módulo para conocer "
"los detalles."

#: ../Doc/library/shlex.rst:306
msgid "Source line number (count of newlines seen so far plus one)."
msgstr ""
"Numero de linea de fuente (conteo de las nuevas lineas vistas hasta ahora "
"mas uno)."

#: ../Doc/library/shlex.rst:311
msgid ""
"The token buffer.  It may be useful to examine this when catching exceptions."
msgstr ""
"El buffer de tokens.  Puede ser útil examinarlo cuando se capturan "
"excepciones."

#: ../Doc/library/shlex.rst:316
msgid ""
"Token used to determine end of file. This will be set to the empty string "
"(``''``), in non-POSIX mode, and to ``None`` in POSIX mode."
msgstr ""
"Token usado para determinar el final del archivo. Esto se ajustará a la "
"cadena de caracteres vacía (``''``), en el modo no-POSIX, y a ``None`` en el "
"modo POSIX."

#: ../Doc/library/shlex.rst:322
msgid ""
"A read-only property. Characters that will be considered punctuation. Runs "
"of punctuation characters will be returned as a single token. However, note "
"that no semantic validity checking will be performed: for example, '>>>' "
"could be returned as a token, even though it may not be recognised as such "
"by shells."
msgstr ""
"Una propiedad de sólo lectura. Caracteres que serán considerados como "
"puntuación. Las series de caracteres de puntuación se retornarán como un "
"único token. Sin embargo, tenga en cuenta que no se realizará ninguna "
"comprobación de validez semántica: por ejemplo, '>>>' podría ser retornado "
"como un token, aunque no sea reconocido como tal por los intérpretes de "
"comandos."

#: ../Doc/library/shlex.rst:333
msgid "Parsing Rules"
msgstr "Reglas de análisis"

#: ../Doc/library/shlex.rst:335
msgid ""
"When operating in non-POSIX mode, :class:`~shlex.shlex` will try to obey to "
"the following rules."
msgstr ""
"Cuando se opera en modo no-POSIX, :class:`~shlex.shlex` intentará obedecer "
"las siguientes reglas."

#: ../Doc/library/shlex.rst:338
msgid ""
"Quote characters are not recognized within words (``Do\"Not\"Separate`` is "
"parsed as the single word ``Do\"Not\"Separate``);"
msgstr ""
"Los caracteres entre comillas no son reconocidos dentro de las palabras (``Do"
"\"Not\"Separate`` es analizado como la única palabra ``Do\"Not\"Separate``);"

#: ../Doc/library/shlex.rst:341
msgid "Escape characters are not recognized;"
msgstr "Los caracteres de escape no son reconocidos;"

#: ../Doc/library/shlex.rst:343
msgid ""
"Enclosing characters in quotes preserve the literal value of all characters "
"within the quotes;"
msgstr ""
"El encerrar los caracteres entre comillas preserva el valor literal de todos "
"los caracteres dentro de las comillas;"

#: ../Doc/library/shlex.rst:346
msgid ""
"Closing quotes separate words (``\"Do\"Separate`` is parsed as ``\"Do\"`` "
"and ``Separate``);"
msgstr ""
"Las comillas finales separan las palabras (``\"Do\"Separate`` es analizado "
"como ``\"Do\"`` y ``Separate``);"

#: ../Doc/library/shlex.rst:349
msgid ""
"If :attr:`~shlex.whitespace_split` is ``False``, any character not declared "
"to be a word character, whitespace, or a quote will be returned as a single-"
"character token. If it is ``True``, :class:`~shlex.shlex` will only split "
"words in whitespaces;"
msgstr ""
"Si :attr:`~shlex.whitepace_split` es ``False``, cualquier carácter que no "
"sea declarado como un carácter de palabra, espacio en blanco, o una cita "
"será retornado como un token de un solo carácter. Si es ``True``, :class:"
"`~shlex.shlex` sólo dividirá las palabras en espacios en blanco;"

#: ../Doc/library/shlex.rst:354
msgid "EOF is signaled with an empty string (``''``);"
msgstr "EOF es señalado con una cadena de caracteres vacía (``''``);"

#: ../Doc/library/shlex.rst:356
msgid "It's not possible to parse empty strings, even if quoted."
msgstr ""
"No es posible analizar cadenas de caracteres vacías, incluso si se citan."

#: ../Doc/library/shlex.rst:358
msgid ""
"When operating in POSIX mode, :class:`~shlex.shlex` will try to obey to the "
"following parsing rules."
msgstr ""
"Cuando se opera en el modo POSIX, :class:`~shlex.shlex` intentará obedecer a "
"las siguientes reglas de análisis."

#: ../Doc/library/shlex.rst:361
msgid ""
"Quotes are stripped out, and do not separate words (``\"Do\"Not\"Separate"
"\"`` is parsed as the single word ``DoNotSeparate``);"
msgstr ""
"Las comillas se eliminan y no separan las palabras (``\"Do\"Not\"Separate"
"\"`` se analiza como la sola palabra ``DoNotSeparate``);"

#: ../Doc/library/shlex.rst:364
msgid ""
"Non-quoted escape characters (e.g. ``'\\'``) preserve the literal value of "
"the next character that follows;"
msgstr ""
"Los caracteres de escape no citados (por ejemplo ``'\\'``) conservan el "
"valor literal del siguiente carácter que continua;"

#: ../Doc/library/shlex.rst:367
msgid ""
"Enclosing characters in quotes which are not part of :attr:`~shlex."
"escapedquotes` (e.g. ``\"'\"``) preserve the literal value of all characters "
"within the quotes;"
msgstr ""
"Encerrar caracteres entre comillas que no forman parte de :attr:`~shlex."
"escapedquotes` (por ejemplo, ``\"\"``) conservan el valor literal de todos "
"los caracteres dentro de las comillas;"

#: ../Doc/library/shlex.rst:371
msgid ""
"Enclosing characters in quotes which are part of :attr:`~shlex."
"escapedquotes` (e.g. ``'\"'``) preserves the literal value of all characters "
"within the quotes, with the exception of the characters mentioned in :attr:"
"`~shlex.escape`.  The escape characters retain its special meaning only when "
"followed by the quote in use, or the escape character itself. Otherwise the "
"escape character will be considered a normal character."
msgstr ""
"Encerrar caracteres entre comillas que forman parte de :attr:`~shlex."
"escapedquotes` (por ejemplo, ``\"\"``) conserva el valor literal de todos "
"los caracteres dentro de las comillas, con la excepción de los caracteres "
"mencionados en :attr:`~shlex.escape`.  Los caracteres de escape conservan su "
"significado especial solo cuando van seguidos de la comilla en uso, o el "
"propio carácter de escape. De lo contrario, el carácter de escape sera "
"considerado un carácter normal."

#: ../Doc/library/shlex.rst:379
msgid "EOF is signaled with a :const:`None` value;"
msgstr "EOF es señalado con un valor :const:`None`;"

#: ../Doc/library/shlex.rst:381
msgid "Quoted empty strings (``''``) are allowed."
msgstr "Se permiten cadenas de caracteres vacías entrecomilladas (``''``)."

#: ../Doc/library/shlex.rst:386
msgid "Improved Compatibility with Shells"
msgstr "Compatibilidad mejorada con intérprete de comandos"

#: ../Doc/library/shlex.rst:390
msgid ""
"The :class:`shlex` class provides compatibility with the parsing performed "
"by common Unix shells like ``bash``, ``dash``, and ``sh``.  To take "
"advantage of this compatibility, specify the ``punctuation_chars`` argument "
"in the constructor.  This defaults to ``False``, which preserves pre-3.6 "
"behaviour. However, if it is set to ``True``, then parsing of the characters "
"``();<>|&`` is changed: any run of these characters is returned as a single "
"token.  While this is short of a full parser for shells (which would be out "
"of scope for the standard library, given the multiplicity of shells out "
"there), it does allow you to perform processing of command lines more easily "
"than you could otherwise.  To illustrate, you can see the difference in the "
"following snippet:"
msgstr ""
"La clase :class:`shlex` provee compatibilidad con el análisis realizado por "
"los intérprete de comandos comunes de Unix como ``bash``, ``dash`` y "
"``sh``.  Para aprovechar esta compatibilidad, especifica el argumento "
"``punctuation_chars`` en el constructor.  Esto por defecto es ``False``, el "
"cual conserva el comportamiento pre-3.6. Sin embargo, si se establece como "
"``True``, entonces se cambia el análisis de los caracteres ``();<>|&``: "
"cualquier ejecución de estos caracteres se retorna como un único token.  "
"Mientras que esto se queda corto en un analizador completo para los "
"intérprete de comandos (que estaría fuera del alcance de la biblioteca "
"estándar, dada la multiplicidad de intérpretes de comandos que hay), te "
"permite realizar el procesamiento de las líneas de comandos más fácilmente "
"de lo que podrías hacerlo de otra manera.  Para ilustrarlo, puede ver la "
"diferencia en el siguiente fragmento:"

#: ../Doc/library/shlex.rst:416
msgid ""
"Of course, tokens will be returned which are not valid for shells, and "
"you'll need to implement your own error checks on the returned tokens."
msgstr ""
"Por supuesto, se retornarán tokens que no son válidos para los intérpretes "
"de comandos y deberá implementar sus propias comprobaciones de errores en "
"los tokens retornados."

#: ../Doc/library/shlex.rst:419
msgid ""
"Instead of passing ``True`` as the value for the punctuation_chars "
"parameter, you can pass a string with specific characters, which will be "
"used to determine which characters constitute punctuation. For example::"
msgstr ""
"En lugar de pasar ``True`` como valor para el parámetro punctuation_chars, "
"puede pasar una cadena con caracteres específicos, que se usará para "
"determinar qué caracteres constituyen puntuación. Por ejemplo::"

#: ../Doc/library/shlex.rst:428
msgid ""
"When ``punctuation_chars`` is specified, the :attr:`~shlex.wordchars` "
"attribute is augmented with the characters ``~-./*?=``.  That is because "
"these characters can appear in file names (including wildcards) and command-"
"line arguments (e.g. ``--color=auto``). Hence::"
msgstr ""
"Cuando es especificado ``punctuation_chars``, el atributo :attr:`~shlex."
"wordchars` se aumenta con los caracteres ``~-./*?=``.  Esto se debe a que "
"estos caracteres pueden aparecer en los nombres de archivo (incluidos los "
"comodines) y en los argumentos de la línea de comandos (por ejemplo, ``--"
"color=auto``). Por lo tanto::"

#: ../Doc/library/shlex.rst:439
msgid ""
"However, to match the shell as closely as possible, it is recommended to "
"always use ``posix`` and :attr:`~shlex.whitespace_split` when using :attr:"
"`~shlex.punctuation_chars`, which will negate :attr:`~shlex.wordchars` "
"entirely."
msgstr ""
"Sin embargo, para que coincida con el intérprete de comandos lo más cerca "
"posible, se recomienda utilizar siempre ``posix`` y :attr:`~shlex."
"whitespace_split` cuando se utiliza :attr:`~shlex.punctuation_chars`, el "
"cual negará por completo :attr:`~shlex.wordchars`."

#: ../Doc/library/shlex.rst:444
msgid ""
"For best effect, ``punctuation_chars`` should be set in conjunction with "
"``posix=True``. (Note that ``posix=False`` is the default for :class:`~shlex."
"shlex`.)"
msgstr ""
"Para obtener el mejor efecto, ``punctuation_chars`` debe establecerse junto "
"con ``posix=True``. (Tenga en cuenta que ``posix=False`` es el valor "
"predeterminado para :class:`~shlex.shlex`.)"

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-10-08 11:54+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/library/asyncio-queue.rst:7
msgid "Queues"
msgstr "Colas"

#: ../Doc/library/asyncio-queue.rst:9
msgid "**Source code:** :source:`Lib/asyncio/queues.py`"
msgstr "**Código fuente:** :source:`Lib/asyncio/queue.py`"

#: ../Doc/library/asyncio-queue.rst:13
msgid ""
"asyncio queues are designed to be similar to classes of the :mod:`queue` "
"module.  Although asyncio queues are not thread-safe, they are designed to "
"be used specifically in async/await code."
msgstr ""
"Las colas asyncio son diseñadas para ser similares a clases del módulo :mod:"
"`queue`.  Sin embargo las colas asyncio no son seguras para hilos, son "
"diseñadas para usar específicamente en código async/wait."

#: ../Doc/library/asyncio-queue.rst:17
msgid ""
"Note that methods of asyncio queues don't have a *timeout* parameter; use :"
"func:`asyncio.wait_for` function to do queue operations with a timeout."
msgstr ""
"Nota que los métodos de colas de asyncio no tienen un parámetro *timeout*; "
"usa la función :func:`asyncio.wait_for` para hacer operaciones de cola con "
"un tiempo de espera."

#: ../Doc/library/asyncio-queue.rst:21
msgid "See also the `Examples`_ section below."
msgstr "Ver también la sección `Examples`_ a continuación."

#: ../Doc/library/asyncio-queue.rst:24
msgid "Queue"
msgstr "Cola"

#: ../Doc/library/asyncio-queue.rst:28
msgid "A first in, first out (FIFO) queue."
msgstr ""
"Una cola primero en entrar, primero en salir (PEPS, o *FIFO* en inglés)."

#: ../Doc/library/asyncio-queue.rst:30
msgid ""
"If *maxsize* is less than or equal to zero, the queue size is infinite.  If "
"it is an integer greater than ``0``, then ``await put()`` blocks when the "
"queue reaches *maxsize* until an item is removed by :meth:`get`."
msgstr ""
"Si *maxsize* es menor que o igual a cero, el tamaño de la cola es infinito.  "
"Si es un entero mayor a ``0``, entonces ``await put()`` se bloquea cuando "
"una cola alcanza su *maxsize* hasta que un elemento es removido por :meth:"
"`get`."

#: ../Doc/library/asyncio-queue.rst:35
msgid ""
"Unlike the standard library threading :mod:`queue`, the size of the queue is "
"always known and can be returned by calling the :meth:`qsize` method."
msgstr ""
"Diferente de los subprocesos de la biblioteca estándar :mod:`queue`, el "
"tamaño de la cola siempre es conocido y puede ser retornado llamando el "
"método :meth:`qsize`."

#: ../Doc/library/asyncio-queue.rst:42
msgid "The *loop* parameter."
msgstr "El parámetro *loop*."

#: ../Doc/library/asyncio-queue.rst:43
msgid "This class is :ref:`not thread safe <asyncio-multithreading>`."
msgstr "Esta clase es :ref:`no segura para hilos <asyncio-multithreading>`."

#: ../Doc/library/asyncio-queue.rst:47
msgid "Number of items allowed in the queue."
msgstr "Número de ítems permitidos en la cola."

#: ../Doc/library/asyncio-queue.rst:51
msgid "Return ``True`` if the queue is empty, ``False`` otherwise."
msgstr "Retorna ``True`` si la cola es vacía, o ``False`` en caso contrario."

#: ../Doc/library/asyncio-queue.rst:55
msgid "Return ``True`` if there are :attr:`maxsize` items in the queue."
msgstr "Retorna ``True`` si hay :attr:`maxsize` ítems en la cola."

#: ../Doc/library/asyncio-queue.rst:57
msgid ""
"If the queue was initialized with ``maxsize=0`` (the default), then :meth:"
"`full()` never returns ``True``."
msgstr ""
"Si la cola fue inicializada con ``maxsize=0`` (el predeterminado), entonces :"
"meth:`fill()` nunca retorna ``True``."

#: ../Doc/library/asyncio-queue.rst:62
msgid ""
"Remove and return an item from the queue. If queue is empty, wait until an "
"item is available."
msgstr ""
"Remueve y retorna un ítem de la cola. Si la cola es vacía, espera hasta que "
"un ítem esté disponible."

#: ../Doc/library/asyncio-queue.rst:67
msgid ""
"Return an item if one is immediately available, else raise :exc:`QueueEmpty`."
msgstr ""
"Retorna un ítem si uno está inmediatamente disponible, de otra manera "
"levanta :exc:`QueueEmpty`."

#: ../Doc/library/asyncio-queue.rst:72
msgid "Block until all items in the queue have been received and processed."
msgstr ""
"Se bloquea hasta que todos los ítems en la cola han sido recibidos y "
"procesados."

#: ../Doc/library/asyncio-queue.rst:74
msgid ""
"The count of unfinished tasks goes up whenever an item is added to the "
"queue. The count goes down whenever a consumer coroutine calls :meth:"
"`task_done` to indicate that the item was retrieved and all work on it is "
"complete.  When the count of unfinished tasks drops to zero, :meth:`join` "
"unblocks."
msgstr ""
"El conteo de tareas no terminadas sube siempre que un ítem es agregado a la "
"cola. El conteo baja siempre que la ejecución de una corrutina :meth:"
"`task_done` para indicar que el ítem fue recuperado y todo el trabajo en él "
"está completo.  Cuando el conteo de tareas inacabadas llega a cero, :meth:"
"`join` se desbloquea."

#: ../Doc/library/asyncio-queue.rst:82
msgid ""
"Put an item into the queue. If the queue is full, wait until a free slot is "
"available before adding the item."
msgstr ""
"Pone un ítem en la cola. Si la cola está completa, espera hasta que una "
"entrada vacía esté disponible antes de agregar el ítem."

#: ../Doc/library/asyncio-queue.rst:87
msgid "Put an item into the queue without blocking."
msgstr "Pone un ítem en la cola sin bloquearse."

#: ../Doc/library/asyncio-queue.rst:89
msgid "If no free slot is immediately available, raise :exc:`QueueFull`."
msgstr ""
"Si no hay inmediatamente disponibles entradas vacías, lanza :exc:`QueueFull`."

#: ../Doc/library/asyncio-queue.rst:93
msgid "Return the number of items in the queue."
msgstr "Retorna el número de ítems en la cola."

#: ../Doc/library/asyncio-queue.rst:97
msgid "Indicate that a formerly enqueued task is complete."
msgstr "Indica que una tarea formalmente en cola está completa."

#: ../Doc/library/asyncio-queue.rst:99
msgid ""
"Used by queue consumers. For each :meth:`~Queue.get` used to fetch a task, a "
"subsequent call to :meth:`task_done` tells the queue that the processing on "
"the task is complete."
msgstr ""
"Usada por consumidores de la cola. Para cada :meth:`~Queue.get` usado para "
"buscar una tarea, una ejecución subsecuente a :meth:`task_done` dice a la "
"cola que el procesamiento de la tarea está completo."

#: ../Doc/library/asyncio-queue.rst:103
msgid ""
"If a :meth:`join` is currently blocking, it will resume when all items have "
"been processed (meaning that a :meth:`task_done` call was received for every "
"item that had been :meth:`~Queue.put` into the queue)."
msgstr ""
"Si un :meth:`join` está actualmente bloqueando, éste se resumirá cuando "
"todos los ítems han sido procesados (implicado que un método :meth:"
"`task_done` fue recibido por cada ítem que ha sido :meth:`~Queue.put` en la "
"cola."

#: ../Doc/library/asyncio-queue.rst:108
msgid ""
"Raises :exc:`ValueError` if called more times than there were items placed "
"in the queue."
msgstr ""
"Lanza :exc:`ValueError` si fue llamado más veces que los ítems en la cola."

#: ../Doc/library/asyncio-queue.rst:113
msgid "Priority Queue"
msgstr "Cola de prioridad"

#: ../Doc/library/asyncio-queue.rst:117
msgid ""
"A variant of :class:`Queue`; retrieves entries in priority order (lowest "
"first)."
msgstr ""
"Una variante de :class:`Queue`; recupera entradas en su orden de prioridad "
"(el más bajo primero)."

#: ../Doc/library/asyncio-queue.rst:120
msgid "Entries are typically tuples of the form ``(priority_number, data)``."
msgstr ""
"Las entradas son típicamente tuplas de la forma ``(priority_number, data)``."

#: ../Doc/library/asyncio-queue.rst:125
msgid "LIFO Queue"
msgstr "Cola UEPA (o *LIFO* en inglés)"

#: ../Doc/library/asyncio-queue.rst:129
msgid ""
"A variant of :class:`Queue` that retrieves most recently added entries first "
"(last in, first out)."
msgstr ""
"Una variante de una :class:`Queue` que recupera primero el elemento agregado "
"más reciente (último en entrar, primero en salir)."

#: ../Doc/library/asyncio-queue.rst:134
msgid "Exceptions"
msgstr "Excepciones"

#: ../Doc/library/asyncio-queue.rst:138
msgid ""
"This exception is raised when the :meth:`~Queue.get_nowait` method is called "
"on an empty queue."
msgstr ""
"Esta excepción es lanzada cuando el método :meth:`~Queue.get_nowait` es "
"ejecutado en una cola vacía."

#: ../Doc/library/asyncio-queue.rst:144
msgid ""
"Exception raised when the :meth:`~Queue.put_nowait` method is called on a "
"queue that has reached its *maxsize*."
msgstr ""
"Las excepciones son lanzadas cuando el método :meth:`~Queue.put_nowait` es "
"lanzado en una cola que ha alcanzado su *maxsize*."

#: ../Doc/library/asyncio-queue.rst:149
msgid "Examples"
msgstr "Ejemplos"

#: ../Doc/library/asyncio-queue.rst:153
msgid ""
"Queues can be used to distribute workload between several concurrent tasks::"
msgstr ""
"Las colas pueden ser usadas para distribuir cargas de trabajo entre "
"múltiples tareas concurrentes::"

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2021-01-21 17:10-0300\n"
"Last-Translator: \n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/library/faulthandler.rst:2
msgid ":mod:`faulthandler` --- Dump the Python traceback"
msgstr ":mod:`faulthandler` --- Volcar el rastreo de Python"

#: ../Doc/library/faulthandler.rst:11
msgid ""
"This module contains functions to dump Python tracebacks explicitly, on a "
"fault, after a timeout, or on a user signal. Call :func:`faulthandler."
"enable` to install fault handlers for the :const:`SIGSEGV`, :const:"
"`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS`, and :const:`SIGILL` signals. "
"You can also enable them at startup by setting the :envvar:"
"`PYTHONFAULTHANDLER` environment variable or by using the :option:`-X` "
"``faulthandler`` command line option."
msgstr ""
"Este módulo contiene funciones para volcar los rastreos de Python "
"explícitamente, en un fallo, después de un tiempo de espera o en una señal "
"del usuario. Llame a :func:`faulthandler.enable` para instalar los gestores "
"de fallos para las señales :const:`SIGSEGV`, :const:`SIGFPE`, :const:"
"`SIGABRT`, :const:`SIGBUS`, y :const:`SIGILL`. También puede activarlos al "
"inicio estableciendo la variable de entorno :envvar:`PYTHONFAULTHANDLER` o "
"usando la opción de línea de comandos :option:`-X` ``faulthandler``."

#: ../Doc/library/faulthandler.rst:18
msgid ""
"The fault handler is compatible with system fault handlers like Apport or "
"the Windows fault handler. The module uses an alternative stack for signal "
"handlers if the :c:func:`sigaltstack` function is available. This allows it "
"to dump the traceback even on a stack overflow."
msgstr ""
"El gestor de fallos es compatible con el gestor de fallos del sistema como "
"Apport o el gestor de fallos de Windows. El módulo utiliza una pila "
"alternativa para los gestores de señales si la función :c:func:`sigaltstack` "
"está disponible. Esto le permite volcar el rastreo incluso en un "
"desbordamiento de pila."

#: ../Doc/library/faulthandler.rst:23
msgid ""
"The fault handler is called on catastrophic cases and therefore can only use "
"signal-safe functions (e.g. it cannot allocate memory on the heap). Because "
"of this limitation traceback dumping is minimal compared to normal Python "
"tracebacks:"
msgstr ""
"El gestor de fallos se llama en casos catastróficos y, por lo tanto, solo "
"puede utilizar funciones seguras en señales (por ejemplo, no puede asignar "
"memoria en el *heap*). Debido a esta limitación, el volcado del rastreo es "
"mínimo comparado a los rastreos normales de Python:"

#: ../Doc/library/faulthandler.rst:28
msgid ""
"Only ASCII is supported. The ``backslashreplace`` error handler is used on "
"encoding."
msgstr ""
"Solo se soporta ASCII. El gestor de errores ``backslashreplace`` se utiliza "
"en la codificación."

#: ../Doc/library/faulthandler.rst:30
msgid "Each string is limited to 500 characters."
msgstr "Cada cadena de caracteres está limitada a 500 caracteres."

#: ../Doc/library/faulthandler.rst:31
msgid ""
"Only the filename, the function name and the line number are displayed. (no "
"source code)"
msgstr ""
"Solo se muestran el nombre de archivo, el nombre de la función y el número "
"de línea. (sin código fuente)"

#: ../Doc/library/faulthandler.rst:33
msgid "It is limited to 100 frames and 100 threads."
msgstr "Está limitado a 100 *frames* y 100 hilos."

#: ../Doc/library/faulthandler.rst:34
msgid "The order is reversed: the most recent call is shown first."
msgstr "El orden se invierte: la llamada más reciente se muestra primero."

#: ../Doc/library/faulthandler.rst:36
msgid ""
"By default, the Python traceback is written to :data:`sys.stderr`. To see "
"tracebacks, applications must be run in the terminal. A log file can "
"alternatively be passed to :func:`faulthandler.enable`."
msgstr ""
"Por defecto, el rastreo de Python se escribe en :data:`sys.stderr`. Para ver "
"los rastreos, las aplicaciones deben ejecutarse en la terminal. "
"Alternativamente se puede pasar un archivo de registro a :func:`faulthandler."
"enable`."

#: ../Doc/library/faulthandler.rst:40
msgid ""
"The module is implemented in C, so tracebacks can be dumped on a crash or "
"when Python is deadlocked."
msgstr ""
"El módulo está implementado en C, así los rastreos se pueden volcar en un "
"fallo o cuando Python está en bloqueo mutuo."

#: ../Doc/library/faulthandler.rst:43
msgid ""
"The :ref:`Python Development Mode <devmode>` calls :func:`faulthandler."
"enable` at Python startup."
msgstr ""

#: ../Doc/library/faulthandler.rst:48
msgid "Dumping the traceback"
msgstr "Volcar el rastreo"

#: ../Doc/library/faulthandler.rst:52
msgid ""
"Dump the tracebacks of all threads into *file*. If *all_threads* is "
"``False``, dump only the current thread."
msgstr ""
"Vuelca los rastreos de todos los hilos en el archivo *file*. Si "
"*all_threads* es ``False``, vuelca solo el hilo actual."

#: ../Doc/library/faulthandler.rst:55 ../Doc/library/faulthandler.rst:73
#: ../Doc/library/faulthandler.rst:111 ../Doc/library/faulthandler.rst:133
msgid "Added support for passing file descriptor to this function."
msgstr "Se añadió soporte para pasar el descriptor de archivo a esta función."

#: ../Doc/library/faulthandler.rst:60
msgid "Fault handler state"
msgstr "Estado del gestor de fallos"

#: ../Doc/library/faulthandler.rst:64
msgid ""
"Enable the fault handler: install handlers for the :const:`SIGSEGV`, :const:"
"`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` and :const:`SIGILL` signals to "
"dump the Python traceback. If *all_threads* is ``True``, produce tracebacks "
"for every running thread. Otherwise, dump only the current thread."
msgstr ""
"Activa el gestor de fallos: instala gestores para las señales :const:"
"`SIGSEGV`, :const:`SIGFPE`, :const:`SIGABRT`, :const:`SIGBUS` y :const:"
"`SIGILL` para volcar el rastreo de Python. Si *all_threads* es ``True``, "
"produce rastreos por cada hilo activo. De lo contrario, vuelca solo el hilo "
"actual."

#: ../Doc/library/faulthandler.rst:70
msgid ""
"The *file* must be kept open until the fault handler is disabled: see :ref:"
"`issue with file descriptors <faulthandler-fd>`."
msgstr ""
"El archivo *file* se debe mantener abierto hasta que se desactive el gestor "
"de fallos: ver :ref:`problema con descriptores de archivo <faulthandler-fd>`."

#: ../Doc/library/faulthandler.rst:76
msgid "On Windows, a handler for Windows exception is also installed."
msgstr "En Windows, también se instaló un gestor para la excepción de Windows."

#: ../Doc/library/faulthandler.rst:81
msgid ""
"Disable the fault handler: uninstall the signal handlers installed by :func:"
"`enable`."
msgstr ""
"Desactiva el gestor de fallos: desinstala los gestores de señales instalados "
"por :func:`enable`."

#: ../Doc/library/faulthandler.rst:86
msgid "Check if the fault handler is enabled."
msgstr "Comprueba si el gestor de fallos está activado."

#: ../Doc/library/faulthandler.rst:90
msgid "Dumping the tracebacks after a timeout"
msgstr "Volcar los rastreos después de un tiempo de espera"

#: ../Doc/library/faulthandler.rst:94
msgid ""
"Dump the tracebacks of all threads, after a timeout of *timeout* seconds, or "
"every *timeout* seconds if *repeat* is ``True``.  If *exit* is ``True``, "
"call :c:func:`_exit` with status=1 after dumping the tracebacks.  (Note :c:"
"func:`_exit` exits the process immediately, which means it doesn't do any "
"cleanup like flushing file buffers.) If the function is called twice, the "
"new call replaces previous parameters and resets the timeout. The timer has "
"a sub-second resolution."
msgstr ""
"Vuelca los rastreos de todos los hilos, después de un tiempo de espera de "
"*timeout* segundos, o cada *timeout* segundos si *repeat* es ``True``. Si "
"*exit* es ``True``, llama a :c:func:`_exit` con status=1 después de volcar "
"los rastreos. (Nota: :c:func:`_exit` termina el proceso inmediatamente, lo "
"que significa que no hace ninguna limpieza como vaciar los buffers de "
"archivos.) Si la función se llama dos veces, la nueva llamada reemplaza los "
"parámetros previos y reinicia el tiempo de espera. El temporizador tiene una "
"resolución de menos de un segundo."

#: ../Doc/library/faulthandler.rst:102
msgid ""
"The *file* must be kept open until the traceback is dumped or :func:"
"`cancel_dump_traceback_later` is called: see :ref:`issue with file "
"descriptors <faulthandler-fd>`."
msgstr ""
"El archivo *file* se debe mantener abierto hasta que se vuelque el rastreo o "
"se llame a :func:`cancel_dump_traceback_later`: ver :ref:`problema con "
"descriptores de archivo <faulthandler-fd>`."

#: ../Doc/library/faulthandler.rst:106
msgid "This function is implemented using a watchdog thread."
msgstr "Esta función está implementada utilizando un hilo vigilante."

#: ../Doc/library/faulthandler.rst:108
msgid "This function is now always available."
msgstr "Ahora esta función está siempre disponible."

#: ../Doc/library/faulthandler.rst:116
msgid "Cancel the last call to :func:`dump_traceback_later`."
msgstr "Cancela la última llamada a :func:`dump_traceback_later`."

#: ../Doc/library/faulthandler.rst:120
msgid "Dumping the traceback on a user signal"
msgstr "Volcar el rastreo en una señal del usuario"

#: ../Doc/library/faulthandler.rst:124
msgid ""
"Register a user signal: install a handler for the *signum* signal to dump "
"the traceback of all threads, or of the current thread if *all_threads* is "
"``False``, into *file*. Call the previous handler if chain is ``True``."
msgstr ""
"Registra una señal del usuario: instala un gestor para la señal *signum* "
"para volcar el rastreo de todos los hilos, o del hilo actual si "
"*all_threads* es ``False``, en el archivo *file*. Llama al gestor previo si "
"*chain* es ``True``."

#: ../Doc/library/faulthandler.rst:128
msgid ""
"The *file* must be kept open until the signal is unregistered by :func:"
"`unregister`: see :ref:`issue with file descriptors <faulthandler-fd>`."
msgstr ""
"El archivo *file* se debe mantener abierto hasta que la señal sea anulada "
"por :func:`unregister`: ver :ref:`problema con descriptores de archivo "
"<faulthandler-fd>`."

#: ../Doc/library/faulthandler.rst:131 ../Doc/library/faulthandler.rst:142
msgid "Not available on Windows."
msgstr "No está disponible en Windows."

#: ../Doc/library/faulthandler.rst:138
msgid ""
"Unregister a user signal: uninstall the handler of the *signum* signal "
"installed by :func:`register`. Return ``True`` if the signal was registered, "
"``False`` otherwise."
msgstr ""
"Anula una señal del usuario: desinstala el gestor de la señal *signum* "
"instalada por :func:`register`. Retorna ``True`` si la señal fue registrada, "
"``False`` en otro caso."

#: ../Doc/library/faulthandler.rst:148
msgid "Issue with file descriptors"
msgstr "Problema con descriptores de archivo"

#: ../Doc/library/faulthandler.rst:150
msgid ""
":func:`enable`, :func:`dump_traceback_later` and :func:`register` keep the "
"file descriptor of their *file* argument. If the file is closed and its file "
"descriptor is reused by a new file, or if :func:`os.dup2` is used to replace "
"the file descriptor, the traceback will be written into a different file. "
"Call these functions again each time that the file is replaced."
msgstr ""
":func:`enable`, :func:`dump_traceback_later` y :func:`register` guardan el "
"descriptor de archivo de su argumento *file*. Si se cierra el archivo y su "
"descriptor de archivo es reutilizado por un nuevo archivo, o si se usa :func:"
"`os.dup2` para reemplazar el descriptor de archivo, el rastreo se escribirá "
"en un archivo diferente. Llame a estas funciones nuevamente cada vez que se "
"reemplace el archivo."

#: ../Doc/library/faulthandler.rst:158
msgid "Example"
msgstr "Ejemplo"

#: ../Doc/library/faulthandler.rst:160
msgid ""
"Example of a segmentation fault on Linux with and without enabling the fault "
"handler:"
msgstr ""
"Ejemplo de un fallo de segmentación en Linux con y sin activar el gestor de "
"fallos:"

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2021-07-18 20:04+0200\n"
"Last-Translator: Marcos Medrano <marcosmedrano0@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../Doc/library/xml.etree.elementtree.rst:2
msgid ":mod:`xml.etree.ElementTree` --- The ElementTree XML API"
msgstr ":mod:`xml.etree.ElementTree` --- La API XML de ElementTree"

#: ../Doc/library/xml.etree.elementtree.rst:9
msgid "**Source code:** :source:`Lib/xml/etree/ElementTree.py`"
msgstr "**Código fuente:** :source:`Lib/xml/etree/ElementTree.py`"

#: ../Doc/library/xml.etree.elementtree.rst:13
msgid ""
"The :mod:`xml.etree.ElementTree` module implements a simple and efficient "
"API for parsing and creating XML data."
msgstr ""
"El módulo :mod:`xml.etree.ElementTree` implementa una API simple y eficiente "
"para parsear y crear datos XML."

#: ../Doc/library/xml.etree.elementtree.rst:16
msgid "This module will use a fast implementation whenever available."
msgstr ""
"Este módulo utilizará una implementación rápida siempre que esté disponible."

#: ../Doc/library/xml.etree.elementtree.rst:19
msgid "The :mod:`xml.etree.cElementTree` module is deprecated."
msgstr "El módulo :mod:`xml.etree.cElementTree` es obsoleto."

#: ../Doc/library/xml.etree.elementtree.rst:25
msgid ""
"The :mod:`xml.etree.ElementTree` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
"El módulo :mod:`xml.etree.ElementTree` no es seguro contra datos construidos "
"maliciosamente. Si necesita parsear datos no fiables o no autentificados, "
"vea :ref:`xml-vulnerabilities`."

#: ../Doc/library/xml.etree.elementtree.rst:30
msgid "Tutorial"
msgstr "Tutorial"

#: ../Doc/library/xml.etree.elementtree.rst:32
msgid ""
"This is a short tutorial for using :mod:`xml.etree.ElementTree` (``ET`` in "
"short).  The goal is to demonstrate some of the building blocks and basic "
"concepts of the module."
msgstr ""
"Este es un tutorial corto para usar :mod:`xml.etree.ElementTree` (``ET`` en "
"resumen). El objetivo es demostrar algunos de los componentes y conceptos "
"básicos del módulo."

#: ../Doc/library/xml.etree.elementtree.rst:37
msgid "XML tree and elements"
msgstr "Árbol y elementos XML"

#: ../Doc/library/xml.etree.elementtree.rst:39
msgid ""
"XML is an inherently hierarchical data format, and the most natural way to "
"represent it is with a tree.  ``ET`` has two classes for this purpose - :"
"class:`ElementTree` represents the whole XML document as a tree, and :class:"
"`Element` represents a single node in this tree.  Interactions with the "
"whole document (reading and writing to/from files) are usually done on the :"
"class:`ElementTree` level.  Interactions with a single XML element and its "
"sub-elements are done on the :class:`Element` level."
msgstr ""
"XML es un formato de datos inherentemente jerárquico, y la forma más natural "
"de representarlo es con un árbol. ``ET`` tiene dos clases para este "
"propósito - :class:`ElementTree` representa todo el documento XML como un "
"árbol, y :class:`Element` representa un solo nodo en este árbol. Las "
"interacciones con todo el documento (leer y escribir en/desde archivos) se "
"realizan normalmente en el nivel de :class:`ElementTree`. Las interacciones "
"con un solo elemento XML y sus sub-elementos se realizan en el nivel :class:"
"`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:50
msgid "Parsing XML"
msgstr "Procesando XML"

#: ../Doc/library/xml.etree.elementtree.rst:52
msgid ""
"We'll be using the following XML document as the sample data for this "
"section:"
msgstr ""
"Usaremos el siguiente documento XML como los datos de muestra para esta "
"sección:"

#: ../Doc/library/xml.etree.elementtree.rst:80
msgid "We can import this data by reading from a file::"
msgstr "Podemos importar estos datos leyendo desde un archivo::"

#: ../Doc/library/xml.etree.elementtree.rst:86
msgid "Or directly from a string::"
msgstr "O directamente desde una cadena de caracteres::"

#: ../Doc/library/xml.etree.elementtree.rst:90
msgid ""
":func:`fromstring` parses XML from a string directly into an :class:"
"`Element`, which is the root element of the parsed tree.  Other parsing "
"functions may create an :class:`ElementTree`.  Check the documentation to be "
"sure."
msgstr ""
":func:`fromstring` analiza el XML de una cadena de caracteres directamente "
"en un :class:`Element`, que es el elemento raíz del árbol analizado. Otras "
"funciones de análisis pueden crear un :class:`ElementTree`. Compruebe la "
"documentación para estar seguro."

#: ../Doc/library/xml.etree.elementtree.rst:94
msgid ""
"As an :class:`Element`, ``root`` has a tag and a dictionary of attributes::"
msgstr ""
"Como un :class:`Element`, ``root`` tiene una etiqueta y un diccionario de "
"atributos::"

#: ../Doc/library/xml.etree.elementtree.rst:101
msgid "It also has children nodes over which we can iterate::"
msgstr "También tiene nodos hijos sobre los cuales podemos iterar::"

#: ../Doc/library/xml.etree.elementtree.rst:110
msgid "Children are nested, and we can access specific child nodes by index::"
msgstr ""
"Los hijos están anidados, y podemos acceder a nodos hijos específicos por el "
"índice::"

#: ../Doc/library/xml.etree.elementtree.rst:118
msgid ""
"Not all elements of the XML input will end up as elements of the parsed "
"tree. Currently, this module skips over any XML comments, processing "
"instructions, and document type declarations in the input. Nevertheless, "
"trees built using this module's API rather than parsing from XML text can "
"have comments and processing instructions in them; they will be included "
"when generating XML output. A document type declaration may be accessed by "
"passing a custom :class:`TreeBuilder` instance to the :class:`XMLParser` "
"constructor."
msgstr ""
"No todos los elementos de la entrada XML acabarán siendo elementos del árbol "
"analizado. Actualmente, este módulo omite cualquier comentario XML, "
"instrucciones de procesamiento y declaraciones de tipo documento en la "
"entrada. Sin embargo, los árboles construidos utilizando la API de este "
"módulo, en lugar de analizar el texto XML, pueden contener comentarios e "
"instrucciones de procesamiento, que se incluirán al generar la salida XML. "
"Se puede acceder a una declaración de tipo documento pasando una instancia :"
"class:`TreeBuilder` personalizada al constructor :class:`XMLParser`."

#: ../Doc/library/xml.etree.elementtree.rst:132
msgid "Pull API for non-blocking parsing"
msgstr "API de consulta para un procesamiento no bloqueante"

#: ../Doc/library/xml.etree.elementtree.rst:134
msgid ""
"Most parsing functions provided by this module require the whole document to "
"be read at once before returning any result.  It is possible to use an :"
"class:`XMLParser` and feed data into it incrementally, but it is a push API "
"that calls methods on a callback target, which is too low-level and "
"inconvenient for most needs.  Sometimes what the user really wants is to be "
"able to parse XML incrementally, without blocking operations, while enjoying "
"the convenience of fully constructed :class:`Element` objects."
msgstr ""
"La mayoría de las funciones de análisis proporcionadas por este módulo "
"requieren que se lea todo el documento a la vez antes de retornar cualquier "
"resultado. Es posible utilizar un :class:`XMLParser` y alimentar los datos "
"en él de forma incremental, pero se trata de una *push* API que llama a "
"métodos en un objetivo invocable, que es demasiado bajo nivel e "
"inconveniente para la mayoría de las necesidades. A veces, lo que el usuario "
"realmente quiere es ser capaz de analizar XML de forma incremental, sin "
"bloquear las operaciones, mientras disfruta de la comodidad de los objetos :"
"class:`Element` totalmente construidos."

#: ../Doc/library/xml.etree.elementtree.rst:142
msgid ""
"The most powerful tool for doing this is :class:`XMLPullParser`.  It does "
"not require a blocking read to obtain the XML data, and is instead fed with "
"data incrementally with :meth:`XMLPullParser.feed` calls.  To get the parsed "
"XML elements, call :meth:`XMLPullParser.read_events`.  Here is an example::"
msgstr ""
"La herramienta más potente para hacer esto es :class:`XMLPullParser`. No "
"requiere una lectura de bloqueo para obtener los datos XML, y en su lugar se "
"alimenta de datos de forma incremental con llamadas a :meth:`XMLPullParser."
"feed`. Para obtener los elementos XML analizados, llama a :meth:"
"`XMLPullParser.read_events`. He aquí un ejemplo::"

#: ../Doc/library/xml.etree.elementtree.rst:158
msgid ""
"The obvious use case is applications that operate in a non-blocking fashion "
"where the XML data is being received from a socket or read incrementally "
"from some storage device.  In such cases, blocking reads are unacceptable."
msgstr ""
"El caso de uso obvio es el de las aplicaciones que operan de forma no "
"bloqueante, donde los datos XML se reciben de un socket o se leen de forma "
"incremental desde algún dispositivo de almacenamiento. En estos casos, las "
"lecturas bloqueantes son inaceptables."

#: ../Doc/library/xml.etree.elementtree.rst:162
msgid ""
"Because it's so flexible, :class:`XMLPullParser` can be inconvenient to use "
"for simpler use-cases.  If you don't mind your application blocking on "
"reading XML data but would still like to have incremental parsing "
"capabilities, take a look at :func:`iterparse`.  It can be useful when "
"you're reading a large XML document and don't want to hold it wholly in "
"memory."
msgstr ""
"Debido a su flexibilidad, :class:`XMLPullParser` puede ser un inconveniente "
"para los casos de uso más simples. Si no te importa que tu aplicación se "
"bloquee en la lectura de datos XML pero te gustaría tener capacidades de "
"análisis incremental, echa un vistazo a :func:`iterparse`. Puede ser útil "
"cuando estás leyendo un documento XML grande y no quieres mantenerlo "
"completamente en memoria."

#: ../Doc/library/xml.etree.elementtree.rst:169
msgid "Finding interesting elements"
msgstr "Encontrando elementos interesantes"

#: ../Doc/library/xml.etree.elementtree.rst:171
msgid ""
":class:`Element` has some useful methods that help iterate recursively over "
"all the sub-tree below it (its children, their children, and so on).  For "
"example, :meth:`Element.iter`::"
msgstr ""
":class:`Element` tiene algunos métodos útiles que ayudan a iterar "
"recursivamente sobre todo el sub-árbol por debajo de él (sus hijos, los "
"hijos de sus hijos, y así sucesivamente). Por ejemplo, :meth:`Element.iter`::"

#: ../Doc/library/xml.etree.elementtree.rst:184
msgid ""
":meth:`Element.findall` finds only elements with a tag which are direct "
"children of the current element.  :meth:`Element.find` finds the *first* "
"child with a particular tag, and :attr:`Element.text` accesses the element's "
"text content.  :meth:`Element.get` accesses the element's attributes::"
msgstr ""
":meth:`Element.findall` encuentra sólo los elementos con una etiqueta que "
"son hijos directos del elemento actual. :meth:`Element.find` encuentra el "
"*primer* hijo con una etiqueta determinada, y :attr:`Element.text` accede al "
"contenido de texto del elemento. :meth:`Element.get` accede a los atributos "
"del elemento::"

#: ../Doc/library/xml.etree.elementtree.rst:198
msgid ""
"More sophisticated specification of which elements to look for is possible "
"by using :ref:`XPath <elementtree-xpath>`."
msgstr ""
"Es posible especificar de forma más sofisticada qué elementos buscar "
"utilizando :ref:`XPath <elementtree-xpath>`."

#: ../Doc/library/xml.etree.elementtree.rst:202
msgid "Modifying an XML File"
msgstr "Modificando un archivo XML"

#: ../Doc/library/xml.etree.elementtree.rst:204
msgid ""
":class:`ElementTree` provides a simple way to build XML documents and write "
"them to files. The :meth:`ElementTree.write` method serves this purpose."
msgstr ""
":class:`ElementTree` proporciona una forma sencilla de construir documentos "
"XML y escribirlos en archivos. El método :meth:`ElementTree.write` sirve "
"para este propósito."

#: ../Doc/library/xml.etree.elementtree.rst:207
msgid ""
"Once created, an :class:`Element` object may be manipulated by directly "
"changing its fields (such as :attr:`Element.text`), adding and modifying "
"attributes (:meth:`Element.set` method), as well as adding new children (for "
"example with :meth:`Element.append`)."
msgstr ""
"Una vez creado, un objeto :class:`Element` puede ser manipulado cambiando "
"directamente sus campos (como :attr:`Element.text`), añadiendo y modificando "
"atributos (método :meth:`Element.set`), así como añadiendo nuevos hijos (por "
"ejemplo con :meth:`Element.append`)."

#: ../Doc/library/xml.etree.elementtree.rst:212
msgid ""
"Let's say we want to add one to each country's rank, and add an ``updated`` "
"attribute to the rank element::"
msgstr ""
"Digamos que queremos añadir uno al rango de cada país, y añadir un atributo "
"``updated`` al elemento rango::"

#: ../Doc/library/xml.etree.elementtree.rst:222
#: ../Doc/library/xml.etree.elementtree.rst:266
msgid "Our XML now looks like this:"
msgstr "Nuestro XML tiene ahora este aspecto:"

#: ../Doc/library/xml.etree.elementtree.rst:250
msgid ""
"We can remove elements using :meth:`Element.remove`.  Let's say we want to "
"remove all countries with a rank higher than 50::"
msgstr ""
"Podemos eliminar elementos utilizando :meth:`Element.remove`. Digamos que "
"queremos eliminar todos los países con un rango superior a 50::"

#: ../Doc/library/xml.etree.elementtree.rst:261
msgid ""
"Note that concurrent modification while iterating can lead to problems, just "
"like when iterating and modifying Python lists or dicts. Therefore, the "
"example first collects all matching elements with ``root.findall()``, and "
"only then iterates over the list of matches."
msgstr ""
"Tenga en cuenta que la modificación concurrente mientras se itera puede "
"conducir a problemas, al igual que cuando se itera y modifica listas o "
"diccionarios de Python. Por lo tanto, el ejemplo recoge primero todos los "
"elementos coincidentes con ``root.findall()``, y sólo entonces itera sobre "
"la lista de coincidencias."

#: ../Doc/library/xml.etree.elementtree.rst:288
msgid "Building XML documents"
msgstr "Construyendo documentos XML"

#: ../Doc/library/xml.etree.elementtree.rst:290
msgid ""
"The :func:`SubElement` function also provides a convenient way to create new "
"sub-elements for a given element::"
msgstr ""
"La función :func:`SubElement` también proporciona una forma cómoda de crear "
"nuevos sub-elementos para un elemento dado::"

#: ../Doc/library/xml.etree.elementtree.rst:301
msgid "Parsing XML with Namespaces"
msgstr "Procesando XML con espacio de nombres"

#: ../Doc/library/xml.etree.elementtree.rst:303
msgid ""
"If the XML input has `namespaces <https://en.wikipedia.org/wiki/"
"XML_namespace>`__, tags and attributes with prefixes in the form ``prefix:"
"sometag`` get expanded to ``{uri}sometag`` where the *prefix* is replaced by "
"the full *URI*. Also, if there is a `default namespace <https://www.w3.org/"
"TR/xml-names/#defaulting>`__, that full URI gets prepended to all of the non-"
"prefixed tags."
msgstr ""
"Si la entrada XML tiene `espacio de nombres <https://es.wikipedia.org/wiki/"
"Espacio_de_nombres_XML>`__, las etiquetas y los atributos con prefijos de la "
"forma ``prefix:sometag`` se expanden a ``{uri}sometag`` donde el *prefix* se "
"sustituye por el *URI* completo. Además, si hay un `espacio de nombre por "
"defecto <https://www.w3.org/TR/xml-names/#defaulting>`__, ese URI completo "
"se antepone a todas las etiquetas sin prefijo."

#: ../Doc/library/xml.etree.elementtree.rst:311
msgid ""
"Here is an XML example that incorporates two namespaces, one with the prefix "
"\"fictional\" and the other serving as the default namespace:"
msgstr ""
"A continuación se muestra un ejemplo de XML que incorpora dos espacios de "
"nombres, uno con el prefijo \"fictional\" y el otro que sirve como espacio "
"de nombres por defecto:"

#: ../Doc/library/xml.etree.elementtree.rst:332
msgid ""
"One way to search and explore this XML example is to manually add the URI to "
"every tag or attribute in the xpath of a :meth:`~Element.find` or :meth:"
"`~Element.findall`::"
msgstr ""
"Una forma de buscar y explorar este ejemplo XML es añadir manualmente el URI "
"a cada etiqueta o atributo en el XPath de un :meth:`~Element.find` o :meth:"
"`~Element.findall`::"

#: ../Doc/library/xml.etree.elementtree.rst:343
msgid ""
"A better way to search the namespaced XML example is to create a dictionary "
"with your own prefixes and use those in the search functions::"
msgstr ""
"Una mejor manera de buscar en el ejemplo de XML con espacio para nombres es "
"crear un diccionario con sus propios prefijos y utilizarlos en las funciones "
"de búsqueda::"

#: ../Doc/library/xml.etree.elementtree.rst:355
msgid "These two approaches both output::"
msgstr "Estos dos enfoques dan como resultado::"

#: ../Doc/library/xml.etree.elementtree.rst:369
msgid "XPath support"
msgstr "Soporte de XPath"

#: ../Doc/library/xml.etree.elementtree.rst:371
msgid ""
"This module provides limited support for `XPath expressions <https://www.w3."
"org/TR/xpath>`_ for locating elements in a tree.  The goal is to support a "
"small subset of the abbreviated syntax; a full XPath engine is outside the "
"scope of the module."
msgstr ""
"Este módulo proporciona un soporte limitado para las expresiones `XPath "
"<https://www.w3.org/TR/xpath>`_ para localizar elementos en un árbol. El "
"objetivo es soportar un pequeño subconjunto de la sintaxis abreviada; un "
"motor XPath completo está fuera del alcance del módulo."

#: ../Doc/library/xml.etree.elementtree.rst:377
#: ../Doc/library/xml.etree.elementtree.rst:769
msgid "Example"
msgstr "Ejemplo"

#: ../Doc/library/xml.etree.elementtree.rst:379
msgid ""
"Here's an example that demonstrates some of the XPath capabilities of the "
"module.  We'll be using the ``countrydata`` XML document from the :ref:"
"`Parsing XML <elementtree-parsing-xml>` section::"
msgstr ""
"A continuación se muestra un ejemplo que demuestra algunas de las "
"capacidades de XPath del módulo. Utilizaremos el documento XML "
"``countrydata`` de la sección :ref:`Parsing XML <elementtree-parsing-xml>`::"

#: ../Doc/library/xml.etree.elementtree.rst:403
msgid ""
"For XML with namespaces, use the usual qualified ``{namespace}tag`` "
"notation::"
msgstr ""
"Para XML con espacios de nombre, use la notación calificada habitual "
"``{namespace}tag``::"

#: ../Doc/library/xml.etree.elementtree.rst:410
msgid "Supported XPath syntax"
msgstr "Sintaxis XPath soportada"

#: ../Doc/library/xml.etree.elementtree.rst:415
msgid "Syntax"
msgstr "Sintaxis"

#: ../Doc/library/xml.etree.elementtree.rst:415
msgid "Meaning"
msgstr "Significado"

#: ../Doc/library/xml.etree.elementtree.rst:417
msgid "``tag``"
msgstr "``tag``"

#: ../Doc/library/xml.etree.elementtree.rst:417
msgid ""
"Selects all child elements with the given tag. For example, ``spam`` selects "
"all child elements named ``spam``, and ``spam/egg`` selects all "
"grandchildren named ``egg`` in all children named ``spam``.  ``{namespace}"
"*`` selects all tags in the given namespace, ``{*}spam`` selects tags named "
"``spam`` in any (or no) namespace, and ``{}*`` only selects tags that are "
"not in a namespace."
msgstr ""
"Selecciona todos los elementos hijos con la etiqueta dada. Por ejemplo, "
"``spam`` selecciona todos los elementos hijos llamados ``spam``, y ``spam/"
"egg`` selecciona todos los nietos llamados ``egg`` en todos los hijos "
"llamados ``spam``. ``{namespace}*`` selecciona todas las etiquetas en el "
"espacio de nombres dado, ``{*}spam`` selecciona las etiquetas llamadas "
"``spam`` en cualquier (o ningún) espacio de nombres, y ``{}*`` sólo "
"selecciona las etiquetas que no están en un espacio de nombres."

#: ../Doc/library/xml.etree.elementtree.rst:426
msgid "Support for star-wildcards was added."
msgstr "Se ha añadido la posibilidad de utilizar comodines asterisco."

#: ../Doc/library/xml.etree.elementtree.rst:429
msgid "``*``"
msgstr "``*``"

#: ../Doc/library/xml.etree.elementtree.rst:429
msgid ""
"Selects all child elements, including comments and processing instructions.  "
"For example, ``*/egg`` selects all grandchildren named ``egg``."
msgstr ""
"Selecciona todos los elementos hijos, incluidos los comentarios y las "
"instrucciones de procesamiento. Por ejemplo, ``*/egg`` selecciona todos los "
"hijos llamados ``egg``."

#: ../Doc/library/xml.etree.elementtree.rst:433
msgid "``.``"
msgstr "``.``"

#: ../Doc/library/xml.etree.elementtree.rst:433
msgid ""
"Selects the current node.  This is mostly useful at the beginning of the "
"path, to indicate that it's a relative path."
msgstr ""
"Selecciona el nodo actual. Esto es útil sobre todo al principio de la ruta, "
"para indicar que es una ruta relativa."

#: ../Doc/library/xml.etree.elementtree.rst:437
msgid "``//``"
msgstr "``//``"

#: ../Doc/library/xml.etree.elementtree.rst:437
msgid ""
"Selects all subelements, on all levels beneath the current  element.  For "
"example, ``.//egg`` selects all ``egg`` elements in the entire tree."
msgstr ""
"Selecciona todos los sub-elementos, en todos los niveles por debajo del "
"elemento actual. Por ejemplo, ``.//egg`` selecciona todos los elementos "
"``egg`` en todo el árbol."

#: ../Doc/library/xml.etree.elementtree.rst:441
msgid "``..``"
msgstr "``..``"

#: ../Doc/library/xml.etree.elementtree.rst:441
msgid ""
"Selects the parent element.  Returns ``None`` if the path attempts to reach "
"the ancestors of the start element (the element ``find`` was called on)."
msgstr ""
"Selecciona el elemento padre. Retorna ``None`` si la ruta intenta llegar a "
"los ancestros del elemento inicial (el elemento ``find`` fue invocado)."

#: ../Doc/library/xml.etree.elementtree.rst:445
msgid "``[@attrib]``"
msgstr "``[@attrib]``"

#: ../Doc/library/xml.etree.elementtree.rst:445
msgid "Selects all elements that have the given attribute."
msgstr "Selecciona todos los elementos que tengan el atributo dado."

#: ../Doc/library/xml.etree.elementtree.rst:447
msgid "``[@attrib='value']``"
msgstr "``[@attrib='value']``"

#: ../Doc/library/xml.etree.elementtree.rst:447
msgid ""
"Selects all elements for which the given attribute has the given value.  The "
"value cannot contain quotes."
msgstr ""
"Selecciona todos los elementos para los que el atributo dado tiene el valor "
"dado. El valor no puede contener comillas."

#: ../Doc/library/xml.etree.elementtree.rst:451
msgid "``[@attrib!='value']``"
msgstr "``[@attrib!='value']``"

#: ../Doc/library/xml.etree.elementtree.rst:451
msgid ""
"Selects all elements for which the given attribute does not have the given "
"value. The value cannot contain quotes."
msgstr ""
"Selecciona todos los elementos para los que el atributo dado no tiene el "
"valor dado. El valor no puede contener comillas."

#: ../Doc/library/xml.etree.elementtree.rst:457
msgid "``[tag]``"
msgstr "``[tag]``"

#: ../Doc/library/xml.etree.elementtree.rst:457
msgid ""
"Selects all elements that have a child named ``tag``.  Only immediate "
"children are supported."
msgstr ""
"Selecciona todos los elementos que tienen un hijo llamado ``tag``. Sólo se "
"admiten los hijos inmediatos."

#: ../Doc/library/xml.etree.elementtree.rst:460
msgid "``[.='text']``"
msgstr "``[.='text']``"

#: ../Doc/library/xml.etree.elementtree.rst:460
msgid ""
"Selects all elements whose complete text content, including descendants, "
"equals the given ``text``."
msgstr ""
"Selecciona todos los elementos cuyo contenido de texto completo, incluyendo "
"los descendientes, es igual al \"texto\" dado."

#: ../Doc/library/xml.etree.elementtree.rst:465
msgid "``[.!='text']``"
msgstr "``[.!='text']``"

#: ../Doc/library/xml.etree.elementtree.rst:465
msgid ""
"Selects all elements whose complete text content, including descendants, "
"does not equal the given ``text``."
msgstr ""
"Selecciona todos los elementos cuyo contenido de texto completo, incluidos "
"los descendientes, no es igual al ``text`` proporcionado."

#: ../Doc/library/xml.etree.elementtree.rst:471
msgid "``[tag='text']``"
msgstr "``[tag='text']``"

#: ../Doc/library/xml.etree.elementtree.rst:471
msgid ""
"Selects all elements that have a child named ``tag`` whose complete text "
"content, including descendants, equals the given ``text``."
msgstr ""
"Selecciona todos los elementos que tienen un hijo llamado ``tag`` cuyo "
"contenido de texto completo, incluyendo los descendientes, es igual al "
"``text`` dado."

#: ../Doc/library/xml.etree.elementtree.rst:475
msgid "``[tag!='text']``"
msgstr "``[tag!='text']``"

#: ../Doc/library/xml.etree.elementtree.rst:475
msgid ""
"Selects all elements that have a child named ``tag`` whose complete text "
"content, including descendants, does not equal the given ``text``."
msgstr ""
"Selecciona todos los elementos que tienen un hijo llamado ``tag`` cuyo "
"contenido de texto completo, incluidos los descendientes, no es igual al "
"``text`` dado."

#: ../Doc/library/xml.etree.elementtree.rst:481
msgid "``[position]``"
msgstr "``[position]``"

#: ../Doc/library/xml.etree.elementtree.rst:481
msgid ""
"Selects all elements that are located at the given position.  The position "
"can be either an integer (1 is the first position), the expression "
"``last()`` (for the last position), or a position relative to the last "
"position (e.g. ``last()-1``)."
msgstr ""
"Selecciona todos los elementos que se encuentran en la posición dada. La "
"posición puede ser un número entero (1 es la primera posición), la expresión "
"``last()`` (para la última posición), o una posición relativa a la última "
"posición (por ejemplo, ``last()-1``)."

#: ../Doc/library/xml.etree.elementtree.rst:488
msgid ""
"Predicates (expressions within square brackets) must be preceded by a tag "
"name, an asterisk, or another predicate.  ``position`` predicates must be "
"preceded by a tag name."
msgstr ""
"Los predicados (expresiones entre corchetes) deben ir precedidos de un "
"nombre de etiqueta, un asterisco u otro predicado. Los predicados "
"``position`` deben ir precedidos de un nombre de etiqueta."

#: ../Doc/library/xml.etree.elementtree.rst:493
#: ../Doc/library/xml.etree.elementtree.rst:821
msgid "Reference"
msgstr "Referencia"

#: ../Doc/library/xml.etree.elementtree.rst:498
#: ../Doc/library/xml.etree.elementtree.rst:826
msgid "Functions"
msgstr "Funciones"

#: ../Doc/library/xml.etree.elementtree.rst:502
msgid "`C14N 2.0 <https://www.w3.org/TR/xml-c14n2/>`_ transformation function."
msgstr ""
"Función de transformación `C14N 2.0 <https://www.w3.org/TR/xml-c14n2/>`_."

#: ../Doc/library/xml.etree.elementtree.rst:504
msgid ""
"Canonicalization is a way to normalise XML output in a way that allows byte-"
"by-byte comparisons and digital signatures.  It reduced the freedom that XML "
"serializers have and instead generates a more constrained XML "
"representation.  The main restrictions regard the placement of namespace "
"declarations, the ordering of attributes, and ignorable whitespace."
msgstr ""
"La canonización es una forma de normalizar la salida de XML de manera que "
"permita comparaciones byte a byte y firmas digitales. Reduce la libertad que "
"tienen los serializadores XML y en su lugar genera una representación XML "
"más restringida. Las principales restricciones se refieren a la colocación "
"de las declaraciones de espacio de nombres, el orden de los atributos y los "
"espacios en blanco ignorables."

# Traduzco "file-like object" como "objeto tipo archivo" (en lugar de "objeto
# similar a un archivo"). Me parece mas claro.
# Luego "file(-like) object" se refiere a un "objeto archivo" o a un "objeto
# tipo archivo", así que pongo esto último entre parentesis.
#: ../Doc/library/xml.etree.elementtree.rst:510
msgid ""
"This function takes an XML data string (*xml_data*) or a file path or file-"
"like object (*from_file*) as input, converts it to the canonical form, and "
"writes it out using the *out* file(-like) object, if provided, or returns it "
"as a text string if not.  The output file receives text, not bytes.  It "
"should therefore be opened in text mode with ``utf-8`` encoding."
msgstr ""
"Esta función toma una cadena de datos XML (*xml_data*) o una ruta de archivo "
"o un objeto tipo archivo (*from_file*) como entrada, la convierte a la forma "
"canónica y la escribe utilizando el objeto archivo (o tipo archivo) *out*, "
"si se proporciona, o la devuelve como una cadena de texto si no. El archivo "
"de salida recibe texto, no bytes. Por tanto, debe abrirse en modo texto con "
"codificación ``utf-8``."

#: ../Doc/library/xml.etree.elementtree.rst:517
msgid "Typical uses::"
msgstr "Usos típicos::"

# Parece un poco rendunante pero "options" es el nombre del argumento así que
# lo dejo sin traducir y agrego "opciones de configuración"
#: ../Doc/library/xml.etree.elementtree.rst:528
msgid "The configuration *options* are as follows:"
msgstr "Las opciones de configuración *options* son las siguientes:"

# Set to -> Establecer? Configurar? "Setear"?
# El párrafo utiliza true/false en minúsculas. La traducción literal sería
# algo así como: "establecer a verdadero para incluir comentarios (por
# defecto: falso)".
# Sin embargo, creo que en español resulta mas claro si se usa True/False (con
# mayúsculas, como valores booleanos).
#: ../Doc/library/xml.etree.elementtree.rst:530
msgid "*with_comments*: set to true to include comments (default: false)"
msgstr ""
"*with_comments*: configurar a ``True`` para incluir los comentarios (por "
"defecto: ``False``)"

#: ../Doc/library/xml.etree.elementtree.rst:531
msgid ""
"*strip_text*: set to true to strip whitespace before and after text content"
msgstr ""
"*strip_text*: configurar a ``True`` para eliminar los espacios en blanco "
"antes y después del contenido del texto"

#: ../Doc/library/xml.etree.elementtree.rst:532
#: ../Doc/library/xml.etree.elementtree.rst:534
msgid "(default: false)"
msgstr "(por defecto: ``False``)"

#: ../Doc/library/xml.etree.elementtree.rst:533
msgid ""
"*rewrite_prefixes*: set to true to replace namespace prefixes by "
"\"n{number}\""
msgstr ""
"*rewrite_prefixes*: configurar a ``True`` para sustituir los prefijos de "
"espacios de nombres por \"n{number}\""

#: ../Doc/library/xml.etree.elementtree.rst:535
msgid "*qname_aware_tags*: a set of qname aware tag names in which prefixes"
msgstr ""
"*qname_aware_tags*: un conjunto de nombres de etiquetas conscientes de qname "
"en el que los prefijos"

#: ../Doc/library/xml.etree.elementtree.rst:536
#: ../Doc/library/xml.etree.elementtree.rst:538
msgid "should be replaced in text content (default: empty)"
msgstr "deben ser reemplazados en el contenido del texto (por defecto: vacío)"

#: ../Doc/library/xml.etree.elementtree.rst:537
msgid ""
"*qname_aware_attrs*: a set of qname aware attribute names in which prefixes"
msgstr ""
"*qname_aware_attrs*: un conjunto de nombres de atributos conscientes de "
"qname en el que los prefijos"

#: ../Doc/library/xml.etree.elementtree.rst:539
msgid "*exclude_attrs*: a set of attribute names that should not be serialised"
msgstr ""
"*exclude_attrs*: un conjunto de nombres de atributos que no deben "
"serializarse"

#: ../Doc/library/xml.etree.elementtree.rst:540
msgid "*exclude_tags*: a set of tag names that should not be serialised"
msgstr ""
"*exclude_tags*: un conjunto de nombres de etiquetas que no deben serializarse"

#: ../Doc/library/xml.etree.elementtree.rst:542
msgid ""
"In the option list above, \"a set\" refers to any collection or iterable of "
"strings, no ordering is expected."
msgstr ""
"En la lista de opciones anterior, \"un conjunto\" se refiere a cualquier "
"colección o iterable de cadenas, no se espera ningún orden."

#: ../Doc/library/xml.etree.elementtree.rst:550
msgid ""
"Comment element factory.  This factory function creates a special element "
"that will be serialized as an XML comment by the standard serializer.  The "
"comment string can be either a bytestring or a Unicode string.  *text* is a "
"string containing the comment string.  Returns an element instance "
"representing a comment."
msgstr ""
"Fábrica de elementos de comentario. Esta función de fábrica crea un elemento "
"especial que será serializado como un comentario XML por el serializador "
"estándar. La cadena de comentario puede ser una cadena de bytes o una cadena "
"Unicode. *text* es una cadena que contiene la cadena de comentario. Devuelve "
"una instancia de elemento que representa un comentario."

#: ../Doc/library/xml.etree.elementtree.rst:556
msgid ""
"Note that :class:`XMLParser` skips over comments in the input instead of "
"creating comment objects for them. An :class:`ElementTree` will only contain "
"comment nodes if they have been inserted into to the tree using one of the :"
"class:`Element` methods."
msgstr ""
"Tenga en cuenta que :class:`XMLParser` omite los comentarios en la entrada "
"en lugar de crear objetos de comentario para ellos. Un :class:`ElementTree` "
"sólo contendrá nodos de comentario si se han insertado en el árbol "
"utilizando uno de los métodos :class:`Element`."

# Debugging -> Depuración ?
#: ../Doc/library/xml.etree.elementtree.rst:563
msgid ""
"Writes an element tree or element structure to sys.stdout.  This function "
"should be used for debugging only."
msgstr ""
"Escribe un árbol de elementos o una estructura de elementos en sys.stdout. "
"Esta función debe utilizarse únicamente para debugging."

#: ../Doc/library/xml.etree.elementtree.rst:566
msgid ""
"The exact output format is implementation dependent.  In this version, it's "
"written as an ordinary XML file."
msgstr ""
"El formato de salida exacto depende de la implementación. En esta versión, "
"se escribe como un archivo XML ordinario."

#: ../Doc/library/xml.etree.elementtree.rst:569
msgid "*elem* is an element tree or an individual element."
msgstr "*elem* es un árbol de elementos o un elemento individual."

#: ../Doc/library/xml.etree.elementtree.rst:571
msgid ""
"The :func:`dump` function now preserves the attribute order specified by the "
"user."
msgstr ""
"La función :func:`dump` ahora preserva el orden de atributos especificado "
"por el usuario."

#: ../Doc/library/xml.etree.elementtree.rst:578
msgid ""
"Parses an XML section from a string constant.  Same as :func:`XML`.  *text* "
"is a string containing XML data.  *parser* is an optional parser instance. "
"If not given, the standard :class:`XMLParser` parser is used. Returns an :"
"class:`Element` instance."
msgstr ""
"Analiza una sección XML a partir de una constante de cadena. Igual que :func:"
"`XML`. *text* es una cadena que contiene datos XML. *parser* es una "
"instancia de parser opcional. Si no se da, se utiliza el analizador "
"estándar :class:`XMLParser`. Devuelve una instancia de :class:`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:586
msgid ""
"Parses an XML document from a sequence of string fragments.  *sequence* is a "
"list or other sequence containing XML data fragments.  *parser* is an "
"optional parser instance.  If not given, the standard :class:`XMLParser` "
"parser is used.  Returns an :class:`Element` instance."
msgstr ""
"Analiza un documento XML a partir de una secuencia de fragmentos de cadena "
"de caracteres. *sequence* es una lista u otra secuencia que contiene "
"fragmentos de datos XML. *parser* es una instancia de parser opcional. Si no "
"se da, se utiliza el analizador estándar :class:`XMLParser`. Retorna una "
"instancia de :class:`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:596
msgid ""
"Appends whitespace to the subtree to indent the tree visually. This can be "
"used to generate pretty-printed XML output. *tree* can be an Element or "
"ElementTree.  *space* is the whitespace string that will be inserted for "
"each indentation level, two space characters by default.  For indenting "
"partial subtrees inside of an already indented tree, pass the initial "
"indentation level as *level*."
msgstr ""
"Añade espacios en blanco al subárbol para indentar el árbol visualmente. "
"Esto puede utilizarse para generar una salida XML con una impresión bonita. "
"*tree* puede ser un Element o ElementTree. *space* es la cadena de espacio "
"en blanco que se insertará para cada nivel de indentación, dos caracteres de "
"espacio por defecto. Para indentar subárboles parciales dentro de un árbol "
"ya indentado, pase el nivel de indentación inicial como *level*."

#: ../Doc/library/xml.etree.elementtree.rst:608
msgid ""
"Check if an object appears to be a valid element object.  *element* is an "
"element instance.  Return ``True`` if this is an element object."
msgstr ""
"Comprueba si un objeto parece ser un objeto elemento válido. *element* es "
"una instancia de elemento. Retorna ``True`` si se trata de un objeto "
"elemento."

#: ../Doc/library/xml.etree.elementtree.rst:614
msgid ""
"Parses an XML section into an element tree incrementally, and reports what's "
"going on to the user.  *source* is a filename or :term:`file object` "
"containing XML data.  *events* is a sequence of events to report back.  The "
"supported events are the strings ``\"start\"``, ``\"end\"``, "
"``\"comment\"``, ``\"pi\"``, ``\"start-ns\"`` and ``\"end-ns\"`` (the \"ns\" "
"events are used to get detailed namespace information).  If *events* is "
"omitted, only ``\"end\"`` events are reported. *parser* is an optional "
"parser instance.  If not given, the standard :class:`XMLParser` parser is "
"used.  *parser* must be a subclass of :class:`XMLParser` and can only use "
"the default :class:`TreeBuilder` as a target.  Returns an :term:`iterator` "
"providing ``(event, elem)`` pairs."
msgstr ""
"Analiza una sección XML en un árbol de elementos de forma incremental, e "
"informa al usuario de lo que ocurre. *source* es un nombre de archivo o un :"
"term:`file object` que contiene datos XML. *events* es una secuencia de "
"eventos para informar. Los eventos soportados son las cadenas ``\"start\"``, "
"``\"end\"``, ``\"comment\"``, ``\"pi\"``, ``\"start-ns\"`` y ``\"end-ns\"`` "
"(los eventos \"ns\" se utilizan para obtener información detallada del "
"espacio de nombres). Si se omite *events*, sólo se informará de los eventos "
"``\"end\"``. *parser* es una instancia opcional de parser. Si no se da, se "
"utiliza el analizador estándar de :class:`XMLParser`. *parser* debe ser una "
"subclase de :class:`XMLParser` y sólo puede utilizar el :class:`TreeBuilder` "
"por defecto como objetivo. Devuelve un :term:`iterator` que proporciona "
"pares ``(event, elem)``."

#: ../Doc/library/xml.etree.elementtree.rst:626
msgid ""
"Note that while :func:`iterparse` builds the tree incrementally, it issues "
"blocking reads on *source* (or the file it names).  As such, it's unsuitable "
"for applications where blocking reads can't be made.  For fully non-blocking "
"parsing, see :class:`XMLPullParser`."
msgstr ""
"Tenga en cuenta que mientras :func:`iterparse` construye el árbol de forma "
"incremental, emite lecturas de bloqueo en la *source* (o en el fichero que "
"nombra). Por lo tanto, no es adecuado para aplicaciones en las que no se "
"pueden realizar lecturas de bloqueo. Para un análisis completamente no "
"bloqueante, véase :class:`XMLPullParser`."

#: ../Doc/library/xml.etree.elementtree.rst:633
msgid ""
":func:`iterparse` only guarantees that it has seen the \">\" character of a "
"starting tag when it emits a \"start\" event, so the attributes are defined, "
"but the contents of the text and tail attributes are undefined at that "
"point.  The same applies to the element children; they may or may not be "
"present."
msgstr ""
":func:`iterparse` sólo garantiza que ha visto el carácter \">\" de una "
"etiqueta de inicio cuando emite un evento \"start\", por lo que los "
"atributos están definidos, pero el contenido de los atributos text y tail "
"está indefinido en ese momento. Lo mismo ocurre con los hijos del elemento; "
"pueden estar presentes o no."

#: ../Doc/library/xml.etree.elementtree.rst:639
#: ../Doc/library/xml.etree.elementtree.rst:1469
msgid "If you need a fully populated element, look for \"end\" events instead."
msgstr ""
"Si necesita un elemento totalmente poblado, busque los eventos \"end\" en su "
"lugar."

#: ../Doc/library/xml.etree.elementtree.rst:641
msgid "The *parser* argument."
msgstr "El argumento *parser*."

#: ../Doc/library/xml.etree.elementtree.rst:644
#: ../Doc/library/xml.etree.elementtree.rst:1473
msgid "The ``comment`` and ``pi`` events were added."
msgstr "Los eventos ``comment`` y ``pi`` han sido añadidos."

#: ../Doc/library/xml.etree.elementtree.rst:650
msgid ""
"Parses an XML section into an element tree.  *source* is a filename or file "
"object containing XML data.  *parser* is an optional parser instance.  If "
"not given, the standard :class:`XMLParser` parser is used.  Returns an :"
"class:`ElementTree` instance."
msgstr ""
"Analiza una sección XML en un árbol de elementos. *source* es un nombre de "
"archivo o un objeto de archivo que contiene datos XML. *parser* es una "
"instancia de parser opcional. Si no se da, se utiliza el analizador "
"estándar :class:`XMLParser`. Devuelve una instancia de :class:`ElementTree`."

#: ../Doc/library/xml.etree.elementtree.rst:658
msgid ""
"PI element factory.  This factory function creates a special element that "
"will be serialized as an XML processing instruction.  *target* is a string "
"containing the PI target.  *text* is a string containing the PI contents, if "
"given.  Returns an element instance, representing a processing instruction."
msgstr ""
"Fábrica de elementos PI. Esta función de fábrica crea un elemento especial "
"que será serializado como una instrucción de procesamiento XML. *target* es "
"una cadena que contiene el objetivo de PI. *text* es una cadena que contiene "
"el contenido de PI, si se da. Devuelve una instancia de elemento, "
"representando una instrucción de procesamiento."

#: ../Doc/library/xml.etree.elementtree.rst:663
msgid ""
"Note that :class:`XMLParser` skips over processing instructions in the input "
"instead of creating comment objects for them. An :class:`ElementTree` will "
"only contain processing instruction nodes if they have been inserted into to "
"the tree using one of the :class:`Element` methods."
msgstr ""
"Tenga en cuenta que :class:`XMLParser` omite las instrucciones de "
"procesamiento en la entrada en lugar de crear objetos de comentario para "
"ellas. Un :class:`ElementTree` sólo contendrá nodos de instrucciones de "
"procesamiento si se han insertado en el árbol utilizando uno de los métodos :"
"class:`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:671
msgid ""
"Registers a namespace prefix.  The registry is global, and any existing "
"mapping for either the given prefix or the namespace URI will be removed. "
"*prefix* is a namespace prefix.  *uri* is a namespace uri.  Tags and "
"attributes in this namespace will be serialized with the given prefix, if at "
"all possible."
msgstr ""
"Registra un prefijo de espacio de nombres. El registro es global, y "
"cualquier asignación existente para el prefijo dado o el URI del espacio de "
"nombres será eliminado. *prefix* es un prefijo de espacio de nombres. *uri* "
"es una uri del espacio de nombres. Las etiquetas y los atributos de este "
"espacio de nombres se serializarán con el prefijo dado, si es posible."

#: ../Doc/library/xml.etree.elementtree.rst:682
msgid ""
"Subelement factory.  This function creates an element instance, and appends "
"it to an existing element."
msgstr ""
"Fábrica de sub-elementos. Esta función crea una instancia de elemento y la "
"añade a un elemento existente."

#: ../Doc/library/xml.etree.elementtree.rst:685
msgid ""
"The element name, attribute names, and attribute values can be either "
"bytestrings or Unicode strings.  *parent* is the parent element.  *tag* is "
"the subelement name.  *attrib* is an optional dictionary, containing element "
"attributes.  *extra* contains additional attributes, given as keyword "
"arguments.  Returns an element instance."
msgstr ""
"El nombre del elemento, los nombres de los atributos y los valores de los "
"atributos pueden ser cadenas de bytes o cadenas de caracteres Unicode. "
"*parent* es el elemento padre. *tag* es el nombre del sub-elemento. *attrib* "
"es un diccionario opcional que contiene los atributos del elemento. *extra* "
"contiene atributos adicionales, dados como argumentos de palabras clave. "
"Devuelve una instancia de elemento."

#: ../Doc/library/xml.etree.elementtree.rst:696
msgid ""
"Generates a string representation of an XML element, including all "
"subelements.  *element* is an :class:`Element` instance.  *encoding* [1]_ is "
"the output encoding (default is US-ASCII).  Use ``encoding=\"unicode\"`` to "
"generate a Unicode string (otherwise, a bytestring is generated).  *method* "
"is either ``\"xml\"``, ``\"html\"`` or ``\"text\"`` (default is "
"``\"xml\"``). *xml_declaration*, *default_namespace* and "
"*short_empty_elements* has the same meaning as in :meth:`ElementTree.write`. "
"Returns an (optionally) encoded string containing the XML data."
msgstr ""
"Genera una representación de cadena de caracteres de un elemento XML, "
"incluyendo todos los sub-elementos. *element* es una instancia de :class:"
"`Element`. *encoding* [1]_ es la codificación de salida (por defecto es US-"
"ASCII). Utilice ``encoding=\"unicode\"`` para generar una cadena de "
"caracteres Unicode (de lo contrario, se genera una cadena de bytes). "
"*method* es ``\"xml\"``, ``\"html\"`` o ``\"text\"`` (por defecto es "
"``\"xml\"``). *xml_declaration*, *default_namespace* y "
"*short_empty_elements* tienen el mismo significado que en :meth:`ElementTree."
"write`. Devuelve una cadena (opcionalmente) codificada que contiene los "
"datos XML."

#: ../Doc/library/xml.etree.elementtree.rst:705
#: ../Doc/library/xml.etree.elementtree.rst:732
#: ../Doc/library/xml.etree.elementtree.rst:1181
msgid "The *short_empty_elements* parameter."
msgstr "El parámetro *short_empty_elements*."

#: ../Doc/library/xml.etree.elementtree.rst:708
#: ../Doc/library/xml.etree.elementtree.rst:735
msgid "The *xml_declaration* and *default_namespace* parameters."
msgstr "Los parámetros *xml_declaration* y *default_namespace*."

#: ../Doc/library/xml.etree.elementtree.rst:711
msgid ""
"The :func:`tostring` function now preserves the attribute order specified by "
"the user."
msgstr ""
"La función :func:`tostring` ahora preserva el orden de atributos "
"especificado por el usuario."

#: ../Doc/library/xml.etree.elementtree.rst:720
msgid ""
"Generates a string representation of an XML element, including all "
"subelements.  *element* is an :class:`Element` instance.  *encoding* [1]_ is "
"the output encoding (default is US-ASCII).  Use ``encoding=\"unicode\"`` to "
"generate a Unicode string (otherwise, a bytestring is generated).  *method* "
"is either ``\"xml\"``, ``\"html\"`` or ``\"text\"`` (default is "
"``\"xml\"``). *xml_declaration*, *default_namespace* and "
"*short_empty_elements* has the same meaning as in :meth:`ElementTree.write`. "
"Returns a list of (optionally) encoded strings containing the XML data. It "
"does not guarantee any specific sequence, except that ``b\"\"."
"join(tostringlist(element)) == tostring(element)``."
msgstr ""
"Genera una representación de cadena de caracteres de un elemento XML, "
"incluyendo todos los sub-elementos. *element* es una instancia de :class:"
"`Element`. *encoding* [1]_ es la codificación de salida (por defecto es US-"
"ASCII). Utilice ``encoding=\"unicode\"`` para generar una cadena de "
"caracteres Unicode (de lo contrario, se genera una cadena de bytes). "
"*method* es ``\"xml\"``, ``\"html\"`` o ``\"text\"`` (por defecto es "
"``\"xml\"``). *xml_declaration*, *default_namespace* y "
"*short_empty_elements* tienen el mismo significado que en :meth:`ElementTree."
"write`. Devuelve una lista de cadenas (opcionalmente) codificadas que "
"contienen los datos XML. No garantiza ninguna secuencia específica, excepto "
"que ``b\"\".join(tostringlist(element)) == tostring(element)``."

#: ../Doc/library/xml.etree.elementtree.rst:738
msgid ""
"The :func:`tostringlist` function now preserves the attribute order "
"specified by the user."
msgstr ""
"La función :func:`tostringlist` ahora preserva el orden de atributos "
"especificado por el usuario."

#: ../Doc/library/xml.etree.elementtree.rst:745
msgid ""
"Parses an XML section from a string constant.  This function can be used to "
"embed \"XML literals\" in Python code.  *text* is a string containing XML "
"data.  *parser* is an optional parser instance.  If not given, the standard :"
"class:`XMLParser` parser is used.  Returns an :class:`Element` instance."
msgstr ""
"Analiza una sección XML a partir de una constante de cadena de caracteres. "
"Esta función puede utilizarse para incrustar \"literales XML\" en el código "
"de Python. *text* es una cadena de caracteres que contiene datos XML. "
"*parser* es una instancia de parser opcional. Si no se da, se utiliza el "
"analizador estándar :class:`XMLParser`. Devuelve una instancia de :class:"
"`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:753
msgid ""
"Parses an XML section from a string constant, and also returns a dictionary "
"which maps from element id:s to elements.  *text* is a string containing XML "
"data.  *parser* is an optional parser instance.  If not given, the standard :"
"class:`XMLParser` parser is used.  Returns a tuple containing an :class:"
"`Element` instance and a dictionary."
msgstr ""
"Analiza una sección XML a partir de una constante de cadena de caracteres, y "
"también devuelve un diccionario que mapea los id:s de elementos a elementos. "
"*text* es una cadena de caracteres que contiene datos XML. *parser* es una "
"instancia de parser opcional. Si no se da, se utiliza el analizador estándar "
"de :class:`XMLParser`. Devuelve una tupla que contiene una instancia de :"
"class:`Element` y un diccionario."

#: ../Doc/library/xml.etree.elementtree.rst:763
msgid "XInclude support"
msgstr "Soporte de XInclude"

#: ../Doc/library/xml.etree.elementtree.rst:765
msgid ""
"This module provides limited support for `XInclude directives <https://www."
"w3.org/TR/xinclude/>`_, via the :mod:`xml.etree.ElementInclude` helper "
"module.  This module can be used to insert subtrees and text strings into "
"element trees, based on information in the tree."
msgstr ""
"Este módulo proporciona un soporte limitado para las directivas `XInclude "
"<https://www.w3.org/TR/xinclude/>`_, a través del módulo de ayuda :mod:`xml."
"etree.ElementInclude`. Este módulo puede utilizarse para insertar subárboles "
"y cadenas de texto en árboles de elementos, basándose en la información del "
"árbol."

#: ../Doc/library/xml.etree.elementtree.rst:771
msgid ""
"Here's an example that demonstrates use of the XInclude module. To include "
"an XML document in the current document, use the ``{http://www.w3.org/2001/"
"XInclude}include`` element and set the **parse** attribute to ``\"xml\"``, "
"and use the **href** attribute to specify the document to include."
msgstr ""
"Aquí hay un ejemplo que demuestra el uso del módulo XInclude. Para incluir "
"un documento XML en el documento actual, utilice el elemento ``{http://www."
"w3.org/2001/XInclude}include`` y establezca el atributo **parse** como "
"``\"xml\"``, y utilice el atributo **href** para especificar el documento a "
"incluir."

#: ../Doc/library/xml.etree.elementtree.rst:780
msgid ""
"By default, the **href** attribute is treated as a file name. You can use "
"custom loaders to override this behaviour. Also note that the standard "
"helper does not support XPointer syntax."
msgstr ""
"Por defecto, el atributo **href** se trata como un nombre de archivo. Puede "
"utilizar cargadores personalizados para anular este comportamiento. También "
"tenga en cuenta que el ayudante estándar no soporta la sintaxis XPointer."

#: ../Doc/library/xml.etree.elementtree.rst:782
msgid ""
"To process this file, load it as usual, and pass the root element to the :"
"mod:`xml.etree.ElementTree` module:"
msgstr ""
"Para procesar este archivo, cárguelo como de costumbre y pase el elemento "
"raíz al módulo :mod:`xml.etree.ElementTree`:"

#: ../Doc/library/xml.etree.elementtree.rst:793
msgid ""
"The ElementInclude module replaces the ``{http://www.w3.org/2001/XInclude}"
"include`` element with the root element from the **source.xml** document. "
"The result might look something like this:"
msgstr ""
"El módulo ElementInclude sustituye el elemento ``{http://www.w3.org/2001/"
"XInclude}include`` por el elemento raíz del documento **source.xml**. El "
"resultado podría ser algo así:"

#: ../Doc/library/xml.etree.elementtree.rst:801
msgid ""
"If the **parse** attribute is omitted, it defaults to \"xml\". The href "
"attribute is required."
msgstr ""
"Si se omite el atributo **parse**, el valor por defecto es \"xml\". El "
"atributo href es obligatorio."

#: ../Doc/library/xml.etree.elementtree.rst:803
msgid ""
"To include a text document, use the ``{http://www.w3.org/2001/XInclude}"
"include`` element, and set the **parse** attribute to \"text\":"
msgstr ""
"Para incluir un documento de texto, utilice el elemento ``{http://www.w3."
"org/2001/XInclude}include`` y establezca el atributo **parse** como \"text\":"

#: ../Doc/library/xml.etree.elementtree.rst:812
msgid "The result might look something like:"
msgstr "El resultado podría ser algo así:"

#: ../Doc/library/xml.etree.elementtree.rst:831
msgid ""
"Default loader. This default loader reads an included resource from disk.  "
"*href* is a URL. *parse* is for parse mode either \"xml\" or \"text\".  "
"*encoding* is an optional text encoding.  If not given, encoding is "
"``utf-8``.  Returns the expanded resource.  If the parse mode is "
"``\"xml\"``, this is an ElementTree instance.  If the parse mode is "
"\"text\", this is a Unicode string.  If the loader fails, it can return None "
"or raise an exception."
msgstr ""
"Cargador por defecto. Este cargador por defecto lee un recurso incluido del "
"disco. *href* es una URL. *parse* es para el modo de análisis \"xml\" o "
"\"text\". *encoding* es una codificación de texto opcional. Si no se da, la "
"codificación es ``utf-8``. Retorna el recurso expandido. Si el modo de "
"análisis es ``\"xml\"``, es una instancia de ElementTree. Si el modo de "
"análisis es \"text\", se trata de una cadena Unicode. Si el cargador falla, "
"puede retornar None o lanzar una excepción."

#: ../Doc/library/xml.etree.elementtree.rst:843
msgid ""
"This function expands XInclude directives.  *elem* is the root element.  "
"*loader* is an optional resource loader.  If omitted, it defaults to :func:"
"`default_loader`. If given, it should be a callable that implements the same "
"interface as :func:`default_loader`.  *base_url* is base URL of the original "
"file, to resolve relative include file references.  *max_depth* is the "
"maximum number of recursive inclusions.  Limited to reduce the risk of "
"malicious content explosion. Pass a negative value to disable the limitation."
msgstr ""
"Esta función expande las directivas XInclude. *elem* es el elemento raíz. "
"*loader* es un cargador de recursos opcional. Si se omite, se utiliza por "
"defecto :func:`default_loader`. Si se da, debe ser un callable que "
"implemente la misma interfaz que :func:`default_loader`. *base_url* es la "
"URL base del archivo original, para resolver las referencias relativas al "
"archivo de inclusión. *max_depth* es el número máximo de inclusiones "
"recursivas. Limitado para reducir el riesgo de explosión de contenido "
"malicioso. Pase un valor negativo para desactivar la limitación."

#: ../Doc/library/xml.etree.elementtree.rst:851
msgid ""
"Returns the expanded resource.  If the parse mode is ``\"xml\"``, this is an "
"ElementTree instance.  If the parse mode is \"text\", this is a Unicode "
"string.  If the loader fails, it can return None or raise an exception."
msgstr ""
"Retorna el recurso expandido. Si el modo de análisis es ``\"xml\"``, se "
"trata de una instancia de ElementTree. Si el modo de análisis es \"text\", "
"se trata de una cadena Unicode. Si el cargador falla, puede retornar None o "
"lanzar una excepción."

#: ../Doc/library/xml.etree.elementtree.rst:856
msgid "The *base_url* and *max_depth* parameters."
msgstr "Los parámetros *base_url* y *max_depth*."

#: ../Doc/library/xml.etree.elementtree.rst:863
msgid "Element Objects"
msgstr "Objetos Element"

#: ../Doc/library/xml.etree.elementtree.rst:867
msgid ""
"Element class.  This class defines the Element interface, and provides a "
"reference implementation of this interface."
msgstr ""
"Clase Element. Esta clase define la interfaz Element, y provee una "
"implementación de referencia de esta interfaz."

#: ../Doc/library/xml.etree.elementtree.rst:870
msgid ""
"The element name, attribute names, and attribute values can be either "
"bytestrings or Unicode strings.  *tag* is the element name.  *attrib* is an "
"optional dictionary, containing element attributes.  *extra* contains "
"additional attributes, given as keyword arguments."
msgstr ""
"El nombre del elemento, los nombres de los atributos y los valores de los "
"atributos pueden ser cadenas de bytes o cadenas Unicode. *tag* es el nombre "
"del elemento. *attrib* es un diccionario opcional que contiene los atributos "
"del elemento. *extra* contiene atributos adicionales, dados como argumentos "
"de palabras clave."

#: ../Doc/library/xml.etree.elementtree.rst:878
msgid ""
"A string identifying what kind of data this element represents (the element "
"type, in other words)."
msgstr ""
"Una cadena de caracteres que identifica qué tipo de datos representa este "
"elemento (el tipo de elemento, en otras palabras)."

#: ../Doc/library/xml.etree.elementtree.rst:885
msgid ""
"These attributes can be used to hold additional data associated with the "
"element.  Their values are usually strings but may be any application-"
"specific object.  If the element is created from an XML file, the *text* "
"attribute holds either the text between the element's start tag and its "
"first child or end tag, or ``None``, and the *tail* attribute holds either "
"the text between the element's end tag and the next tag, or ``None``.  For "
"the XML data"
msgstr ""
"Estos atributos pueden utilizarse para contener datos adicionales asociados "
"al elemento. Sus valores suelen ser cadenas, pero pueden ser cualquier "
"objeto específico de la aplicación. Si el elemento se crea a partir de un "
"archivo XML, el atributo *text* contiene el texto entre la etiqueta inicial "
"del elemento y su primera etiqueta hija o final, o ``None``, y el atributo "
"*tail* contiene el texto entre la etiqueta final del elemento y la siguiente "
"etiqueta, o ``None``. Para los datos XML"

#: ../Doc/library/xml.etree.elementtree.rst:897
msgid ""
"the *a* element has ``None`` for both *text* and *tail* attributes, the *b* "
"element has *text* ``\"1\"`` and *tail* ``\"4\"``, the *c* element has "
"*text* ``\"2\"`` and *tail* ``None``, and the *d* element has *text* "
"``None`` and *tail* ``\"3\"``."
msgstr ""
"el elemento *a* tiene ``None`` para los atributos *text* y *tail*, el "
"elemento *b* tiene *text* ``\"1\"`` y *tail* ``\"4\"``, el elemento *c* "
"tiene *text* ``\"2\"`` y *tail* ``None``, y el elemento *d* tiene *text* "
"``None`` y *tail* ``\"3\"``."

#: ../Doc/library/xml.etree.elementtree.rst:902
msgid ""
"To collect the inner text of an element, see :meth:`itertext`, for example "
"``\"\".join(element.itertext())``."
msgstr ""
"Para recoger el texto interior de un elemento, véase :meth:`itertext`, por "
"ejemplo ``\"\".join(element.itertext())``."

#: ../Doc/library/xml.etree.elementtree.rst:905
msgid "Applications may store arbitrary objects in these attributes."
msgstr ""
"Las aplicaciones pueden almacenar objetos arbitrarios en estos atributos."

#: ../Doc/library/xml.etree.elementtree.rst:910
msgid ""
"A dictionary containing the element's attributes.  Note that while the "
"*attrib* value is always a real mutable Python dictionary, an ElementTree "
"implementation may choose to use another internal representation, and create "
"the dictionary only if someone asks for it.  To take advantage of such "
"implementations, use the dictionary methods below whenever possible."
msgstr ""
"Un diccionario que contiene los atributos del elemento. Ten en cuenta que "
"aunque el valor *attrib* es siempre un diccionario mutable real de Python, "
"una implementación de ElementTree puede elegir utilizar otra representación "
"interna, y crear el diccionario sólo si alguien lo pide. Para aprovechar "
"este tipo de implementaciones, utiliza los métodos de diccionario que "
"aparecen a continuación siempre que sea posible."

#: ../Doc/library/xml.etree.elementtree.rst:916
msgid "The following dictionary-like methods work on the element attributes."
msgstr ""
"Los siguientes métodos tipo diccionario funcionan con los atributos de los "
"elementos."

#: ../Doc/library/xml.etree.elementtree.rst:921
msgid ""
"Resets an element.  This function removes all subelements, clears all "
"attributes, and sets the text and tail attributes to ``None``."
msgstr ""
"Restablece un elemento.  Esta función elimina todos los sub-elementos, borra "
"todos los atributos y establece los atributos de texto y cola como ``None``."

#: ../Doc/library/xml.etree.elementtree.rst:927
msgid "Gets the element attribute named *key*."
msgstr "Obtiene el atributo del elemento llamado *key*."

#: ../Doc/library/xml.etree.elementtree.rst:929
msgid ""
"Returns the attribute value, or *default* if the attribute was not found."
msgstr ""
"Retorna el valor del atributo, o *default* si el atributo no fue encontrado."

#: ../Doc/library/xml.etree.elementtree.rst:934
msgid ""
"Returns the element attributes as a sequence of (name, value) pairs.  The "
"attributes are returned in an arbitrary order."
msgstr ""
"Retorna los atributos del elemento como una secuencia de pares (nombre, "
"valor). Los atributos se retornan en un orden arbitrario."

#: ../Doc/library/xml.etree.elementtree.rst:940
msgid ""
"Returns the elements attribute names as a list.  The names are returned in "
"an arbitrary order."
msgstr ""
"Retorna los nombres de los atributos de los elementos como una lista. Los "
"nombres se retornan en un orden arbitrario."

#: ../Doc/library/xml.etree.elementtree.rst:946
msgid "Set the attribute *key* on the element to *value*."
msgstr "Establecer el atributo *key* en el elemento a *value*."

#: ../Doc/library/xml.etree.elementtree.rst:948
msgid "The following methods work on the element's children (subelements)."
msgstr ""
"Los siguientes métodos actúan sobre los hijos del elemento (sub-elementos)."

#: ../Doc/library/xml.etree.elementtree.rst:953
msgid ""
"Adds the element *subelement* to the end of this element's internal list of "
"subelements.  Raises :exc:`TypeError` if *subelement* is not an :class:"
"`Element`."
msgstr ""
"Añade el elemento *subelement* al final de la lista interna de sub-elementos "
"de este elemento. Lanza :exc:`TypeError` si *subelement* no es un :class:"
"`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:960
msgid ""
"Appends *subelements* from a sequence object with zero or more elements. "
"Raises :exc:`TypeError` if a subelement is not an :class:`Element`."
msgstr ""
"Añade *subelements* de un objeto de secuencia con cero o más elementos. "
"Lanza :exc:`TypeError` si un sub-elemento no es un :class:`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:968
msgid ""
"Finds the first subelement matching *match*.  *match* may be a tag name or "
"a :ref:`path <elementtree-xpath>`.  Returns an element instance or "
"``None``.  *namespaces* is an optional mapping from namespace prefix to full "
"name.  Pass ``''`` as prefix to move all unprefixed tag names in the "
"expression into the given namespace."
msgstr ""
"Encuentra el primer sub-elemento que coincide con *match*. *match* puede ser "
"un nombre de etiqueta o un :ref:`path <elementtree-xpath>`. Retorna una "
"instancia de elemento o ``None``. *namespaces* es un mapeo opcional del "
"prefijo del espacio de nombres al nombre completo. Pasa ``''`` como prefijo "
"para mover todos los nombres de etiquetas sin prefijo en la expresión al "
"espacio de nombres dado."

#: ../Doc/library/xml.etree.elementtree.rst:977
msgid ""
"Finds all matching subelements, by tag name or :ref:`path <elementtree-"
"xpath>`.  Returns a list containing all matching elements in document "
"order.  *namespaces* is an optional mapping from namespace prefix to full "
"name.  Pass ``''`` as prefix to move all unprefixed tag names in the "
"expression into the given namespace."
msgstr ""
"Encuentra todos los sub-elementos coincidentes, por nombre de etiqueta o :"
"ref:`path <elementtree-xpath>`. Retorna una lista que contiene todos los "
"elementos coincidentes en el orden del documento. *namespaces* es un mapeo "
"opcional del prefijo del espacio de nombres al nombre completo. Pasa ``''`` "
"como prefijo para mover todos los nombres de etiquetas sin prefijo en la "
"expresión al espacio de nombres dado."

#: ../Doc/library/xml.etree.elementtree.rst:986
msgid ""
"Finds text for the first subelement matching *match*.  *match* may be a tag "
"name or a :ref:`path <elementtree-xpath>`.  Returns the text content of the "
"first matching element, or *default* if no element was found. Note that if "
"the matching element has no text content an empty string is returned. "
"*namespaces* is an optional mapping from namespace prefix to full name.  "
"Pass ``''`` as prefix to move all unprefixed tag names in the expression "
"into the given namespace."
msgstr ""
"Busca el texto del primer sub-elemento que coincida con *match*. *match* "
"puede ser un nombre de etiqueta o un :ref:`path <elementtree-xpath>`. "
"Retorna el contenido del texto del primer elemento que coincida, o *default* "
"si no se encuentra ningún elemento. Tenga en cuenta que si el elemento "
"coincidente no tiene contenido de texto se devuelve una cadena vacía. "
"*namespaces* es un mapeo opcional del prefijo del espacio de nombres al "
"nombre completo. Pasa ``''`` como prefijo para mover todos los nombres de "
"etiquetas sin prefijo en la expresión al espacio de nombres dado."

#: ../Doc/library/xml.etree.elementtree.rst:997
msgid ""
"Inserts *subelement* at the given position in this element.  Raises :exc:"
"`TypeError` if *subelement* is not an :class:`Element`."
msgstr ""
"Inserta *subelement* en la posición dada en este elemento. Lanza :exc:"
"`TypeError` si *subelement* no es un :class:`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:1003
msgid ""
"Creates a tree :term:`iterator` with the current element as the root. The "
"iterator iterates over this element and all elements below it, in document "
"(depth first) order.  If *tag* is not ``None`` or ``'*'``, only elements "
"whose tag equals *tag* are returned from the iterator.  If the tree "
"structure is modified during iteration, the result is undefined."
msgstr ""
"Crea un árbol :term:`iterator` con el elemento actual como raíz. El iterador "
"itera sobre este elemento y todos los elementos por debajo de él, en el "
"orden del documento (profundidad primero). Si *tag* no es ``None`` o "
"``'*'``, sólo los elementos cuya etiqueta es igual a *tag* son retornados "
"por el iterador. Si la estructura del árbol se modifica durante la "
"iteración, el resultado es indefinido."

#: ../Doc/library/xml.etree.elementtree.rst:1014
msgid ""
"Finds all matching subelements, by tag name or :ref:`path <elementtree-"
"xpath>`.  Returns an iterable yielding all matching elements in document "
"order. *namespaces* is an optional mapping from namespace prefix to full "
"name."
msgstr ""
"Encuentra todos los subelementos que coinciden, por nombre de etiqueta o :"
"ref:`ruta <elementtree-xpath>`. Retorna un iterable con todos los elementos "
"coincidentes en el orden del documento. *namespaces* es un mapeo opcional "
"del prefijo del espacio de nombres al nombre completo."

#: ../Doc/library/xml.etree.elementtree.rst:1025
msgid ""
"Creates a text iterator.  The iterator loops over this element and all "
"subelements, in document order, and returns all inner text."
msgstr ""
"Crea un iterador de texto. El iterador hace un bucle sobre este elemento y "
"todos los subelementos, en el orden del documento, y retorna todo el texto "
"interior."

#: ../Doc/library/xml.etree.elementtree.rst:1033
msgid ""
"Creates a new element object of the same type as this element.  Do not call "
"this method, use the :func:`SubElement` factory function instead."
msgstr ""
"Crea un nuevo objeto elemento del mismo tipo que este elemento. No llame a "
"este método, utilice la función de fábrica :func:`SubElement` en su lugar."

#: ../Doc/library/xml.etree.elementtree.rst:1039
msgid ""
"Removes *subelement* from the element.  Unlike the find\\* methods this "
"method compares elements based on the instance identity, not on tag value or "
"contents."
msgstr ""
"Elimina el *subelement* del elemento. A diferencia de los métodos find\\*, "
"este método compara los elementos basándose en la identidad de la instancia, "
"no en el valor de la etiqueta o el contenido."

#: ../Doc/library/xml.etree.elementtree.rst:1043
msgid ""
":class:`Element` objects also support the following sequence type methods "
"for working with subelements: :meth:`~object.__delitem__`, :meth:`~object."
"__getitem__`, :meth:`~object.__setitem__`, :meth:`~object.__len__`."
msgstr ""
"Los objetos :class:`Element` también soportan los siguientes métodos de tipo "
"secuencia para trabajar con subelementos: :meth:`~object.__delitem__`, :meth:"
"`~object.__getitem__`, :meth:`~object.__setitem__`, :meth:`~object.__len__`."

#: ../Doc/library/xml.etree.elementtree.rst:1048
msgid ""
"Caution: Elements with no subelements will test as ``False``.  This behavior "
"will change in future versions.  Use specific ``len(elem)`` or ``elem is "
"None`` test instead. ::"
msgstr ""
"Precaución: Los elementos que no tengan subelementos serán evaluados como "
"``False``. Este comportamiento cambiará en futuras versiones. Utilizar en su "
"lugar el test específico ``len(elem)`` o ``elem is None``. ::"

#: ../Doc/library/xml.etree.elementtree.rst:1060
msgid ""
"Prior to Python 3.8, the serialisation order of the XML attributes of "
"elements was artificially made predictable by sorting the attributes by "
"their name. Based on the now guaranteed ordering of dicts, this arbitrary "
"reordering was removed in Python 3.8 to preserve the order in which "
"attributes were originally parsed or created by user code."
msgstr ""
"Antes de Python 3.8, el orden de serialización de los atributos XML de los "
"elementos se hacía predecible artificialmente ordenando los atributos por su "
"nombre. Basado en el ordenamiento -ahora garantizado- de los diccionarios, "
"este reordenamiento arbitrario fue eliminado en Python 3.8 para preservar el "
"orden en que los atributos fueron originalmente analizados o creados por el "
"código del usuario."

#: ../Doc/library/xml.etree.elementtree.rst:1066
msgid ""
"In general, user code should try not to depend on a specific ordering of "
"attributes, given that the `XML Information Set <https://www.w3.org/TR/xml-"
"infoset/>`_ explicitly excludes the attribute order from conveying "
"information. Code should be prepared to deal with any ordering on input. In "
"cases where deterministic XML output is required, e.g. for cryptographic "
"signing or test data sets, canonical serialisation is available with the :"
"func:`canonicalize` function."
msgstr ""
"En general, el código del usuario debería intentar no depender de un orden "
"específico de los atributos, dado que el `XML Information Set <https://www."
"w3.org/TR/xml-infoset/>`_ excluye explícitamente el orden de los atributos "
"para transmitir información. El código debe estar preparado para hacer "
"frente a cualquier orden en la entrada. En los casos en los que se requiere "
"una salida XML determinista, por ejemplo, para la firma criptográfica o los "
"conjuntos de datos de prueba, la serialización canónica está disponible con "
"la función :func:`canonicalize`."

#: ../Doc/library/xml.etree.elementtree.rst:1074
msgid ""
"In cases where canonical output is not applicable but a specific attribute "
"order is still desirable on output, code should aim for creating the "
"attributes directly in the desired order, to avoid perceptual mismatches for "
"readers of the code. In cases where this is difficult to achieve, a recipe "
"like the following can be applied prior to serialisation to enforce an order "
"independently from the Element creation::"
msgstr ""
"En los casos en los que la salida canónica no es aplicable, pero un orden de "
"atributos específico sigue siendo deseable en la salida, el código debe "
"tratar de crear los atributos directamente en el orden deseado, para evitar "
"desajustes perceptivos para los lectores del código. En los casos en que "
"esto es difícil de lograr, una receta como la siguiente se puede aplicar "
"antes de la serialización para hacer cumplir un orden independientemente de "
"la creación de elementos::"

#: ../Doc/library/xml.etree.elementtree.rst:1094
msgid "ElementTree Objects"
msgstr "Objetos ElementTree"

#: ../Doc/library/xml.etree.elementtree.rst:1099
msgid ""
"ElementTree wrapper class.  This class represents an entire element "
"hierarchy, and adds some extra support for serialization to and from "
"standard XML."
msgstr ""
"Clase envoltorio de un ElementTree. Esta clase representa una jerarquía de "
"elementos completa, y añade algún soporte extra para la serialización hacia "
"y desde XML estándar."

#: ../Doc/library/xml.etree.elementtree.rst:1103
msgid ""
"*element* is the root element.  The tree is initialized with the contents of "
"the XML *file* if given."
msgstr ""
"*element* es el elemento raíz. El árbol se inicializa con el contenido del "
"*file* XML si se da."

#: ../Doc/library/xml.etree.elementtree.rst:1109
msgid ""
"Replaces the root element for this tree.  This discards the current contents "
"of the tree, and replaces it with the given element.  Use with care.  "
"*element* is an element instance."
msgstr ""
"Reemplaza el elemento raíz de este árbol. Esto descarta el contenido actual "
"del árbol, y lo reemplaza con el elemento dado. Utilícelo con cuidado. "
"*element* es una instancia de elemento."

#: ../Doc/library/xml.etree.elementtree.rst:1116
msgid "Same as :meth:`Element.find`, starting at the root of the tree."
msgstr "Igual que :meth:`Element.find`, empezando por la raíz del árbol."

#: ../Doc/library/xml.etree.elementtree.rst:1121
msgid "Same as :meth:`Element.findall`, starting at the root of the tree."
msgstr "Igual que :meth:`Element.findall`, empezando por la raíz del árbol."

#: ../Doc/library/xml.etree.elementtree.rst:1126
msgid "Same as :meth:`Element.findtext`, starting at the root of the tree."
msgstr "Igual que :meth:`Element.findtext`, empezando por la raíz del árbol."

#: ../Doc/library/xml.etree.elementtree.rst:1131
msgid "Returns the root element for this tree."
msgstr "Retorna el elemento raíz de este árbol."

#: ../Doc/library/xml.etree.elementtree.rst:1136
msgid ""
"Creates and returns a tree iterator for the root element.  The iterator "
"loops over all elements in this tree, in section order.  *tag* is the tag to "
"look for (default is to return all elements)."
msgstr ""
"Crea y retorna un iterador de árbol para el elemento raíz. El iterador "
"recorre todos los elementos de este árbol, en orden de sección. *tag* es la "
"etiqueta a buscar (por defecto devuelve todos los elementos)."

#: ../Doc/library/xml.etree.elementtree.rst:1143
msgid "Same as :meth:`Element.iterfind`, starting at the root of the tree."
msgstr "Igual que :meth:`Element.iterfind`, empezando por la raíz del árbol."

#: ../Doc/library/xml.etree.elementtree.rst:1150
msgid ""
"Loads an external XML section into this element tree.  *source* is a file "
"name or :term:`file object`.  *parser* is an optional parser instance. If "
"not given, the standard :class:`XMLParser` parser is used.  Returns the "
"section root element."
msgstr ""
"Carga una sección XML externa en este árbol de elementos. *source* es un "
"nombre de archivo o un :term:`file object`. *parser* es una instancia "
"opcional del analizador. Si no se da, se utiliza el analizador estándar :"
"class:`XMLParser`. Retorna el elemento raíz de la sección."

#: ../Doc/library/xml.etree.elementtree.rst:1160
msgid ""
"Writes the element tree to a file, as XML.  *file* is a file name, or a :"
"term:`file object` opened for writing.  *encoding* [1]_ is the output "
"encoding (default is US-ASCII). *xml_declaration* controls if an XML "
"declaration should be added to the file.  Use ``False`` for never, ``True`` "
"for always, ``None`` for only if not US-ASCII or UTF-8 or Unicode (default "
"is ``None``). *default_namespace* sets the default XML namespace (for "
"\"xmlns\"). *method* is either ``\"xml\"``, ``\"html\"`` or ``\"text\"`` "
"(default is ``\"xml\"``). The keyword-only *short_empty_elements* parameter "
"controls the formatting of elements that contain no content.  If ``True`` "
"(the default), they are emitted as a single self-closed tag, otherwise they "
"are emitted as a pair of start/end tags."
msgstr ""
"Escribe el árbol de elementos en un archivo, como XML. *file* es un nombre "
"de archivo, o un :term:`file object` abierto para escritura. *encoding* [1]_ "
"es la codificación de salida (por defecto es US-ASCII). *xml_declaration* "
"controla si se debe añadir una declaración XML al archivo. Utilice ``False`` "
"para nunca, ``True`` para siempre, ``None`` para sólo si no es US-ASCII o "
"UTF-8 o Unicode (por defecto es ``None``). *default_namespace* establece el "
"espacio de nombres XML por defecto (para \"xmlns\"). *method* es "
"``\"xml\"``, ``\"html\"`` o ``\"text\"`` (por defecto es ``\"xml\"``). El "
"parámetro *short_empty_elements* controla el formato de los elementos sin "
"contenido. Si es ``True`` (por defecto), se emiten como una sola etiqueta "
"autocerrada, de lo contrario se emiten como un par de etiquetas de inicio/"
"fin."

#: ../Doc/library/xml.etree.elementtree.rst:1174
msgid ""
"The output is either a string (:class:`str`) or binary (:class:`bytes`). "
"This is controlled by the *encoding* argument.  If *encoding* is "
"``\"unicode\"``, the output is a string; otherwise, it's binary.  Note that "
"this may conflict with the type of *file* if it's an open :term:`file "
"object`; make sure you do not try to write a string to a binary stream and "
"vice versa."
msgstr ""
"La salida es una cadena de caracteres (:class:`str`) o binaria (:class:"
"`bytes`). Esto es controlado por el argumento *encoding*. Si *encoding* es "
"``unicode``, la salida es una cadena de caracteres; en caso contrario, es "
"binaria. Tenga en cuenta que esto puede entrar en conflicto con el tipo de "
"*file* si es un :term:`file object` abierto; asegúrese de no intentar "
"escribir una cadena en un flujo binario y viceversa."

#: ../Doc/library/xml.etree.elementtree.rst:1184
msgid ""
"The :meth:`write` method now preserves the attribute order specified by the "
"user."
msgstr ""
"El método :meth:`write` ahora conserva el orden de los atributos "
"especificado por el usuario."

#: ../Doc/library/xml.etree.elementtree.rst:1189
msgid "This is the XML file that is going to be manipulated::"
msgstr "Este es el archivo XML que será manipulado::"

#: ../Doc/library/xml.etree.elementtree.rst:1201
msgid ""
"Example of changing the attribute \"target\" of every link in first "
"paragraph::"
msgstr ""
"Ejemplo de cambio del atributo \"target\" de cada enlace en el primer "
"párrafo::"

#: ../Doc/library/xml.etree.elementtree.rst:1220
msgid "QName Objects"
msgstr "Objetos QName"

#: ../Doc/library/xml.etree.elementtree.rst:1225
msgid ""
"QName wrapper.  This can be used to wrap a QName attribute value, in order "
"to get proper namespace handling on output.  *text_or_uri* is a string "
"containing the QName value, in the form {uri}local, or, if the tag argument "
"is given, the URI part of a QName.  If *tag* is given, the first argument is "
"interpreted as a URI, and this argument is interpreted as a local name. :"
"class:`QName` instances are opaque."
msgstr ""
"QName wrapper. Se puede utilizar para envolver un valor de atributo QName, "
"con el fin de obtener un manejo adecuado del espacio de nombres en la "
"salida. *text_or_uri* es una cadena de caracteres que contiene el valor "
"QName, en la forma {uri}local, o, si se da el argumento tag, la parte URI de "
"un QName. Si se da *tag*, el primer argumento se interpreta como un URI, y "
"este argumento se interpreta como un nombre local. Las instancias de :class:"
"`QName` son opacas."

#: ../Doc/library/xml.etree.elementtree.rst:1237
msgid "TreeBuilder Objects"
msgstr "Objetos TreeBuilder"

#: ../Doc/library/xml.etree.elementtree.rst:1243
msgid ""
"Generic element structure builder.  This builder converts a sequence of "
"start, data, end, comment and pi method calls to a well-formed element "
"structure.  You can use this class to build an element structure using a "
"custom XML parser, or a parser for some other XML-like format."
msgstr ""
"Constructor genérico de estructuras de elementos. Este constructor convierte "
"una secuencia de llamadas a los métodos start, data, end, comment y pi en "
"una estructura de elementos bien formada. Puedes utilizar esta clase para "
"construir una estructura de elementos utilizando un analizador XML "
"personalizado, o un analizador para algún otro formato similar a XML."

#: ../Doc/library/xml.etree.elementtree.rst:1248
msgid ""
"*element_factory*, when given, must be a callable accepting two positional "
"arguments: a tag and a dict of attributes.  It is expected to return a new "
"element instance."
msgstr ""
"*element_factory*, cuando se da, debe ser un callable que acepta dos "
"argumentos posicionales: una etiqueta y un diccionario de atributos. Se "
"espera que retorne una nueva instancia de elemento."

#: ../Doc/library/xml.etree.elementtree.rst:1252
msgid ""
"The *comment_factory* and *pi_factory* functions, when given, should behave "
"like the :func:`Comment` and :func:`ProcessingInstruction` functions to "
"create comments and processing instructions.  When not given, the default "
"factories will be used.  When *insert_comments* and/or *insert_pis* is true, "
"comments/pis will be inserted into the tree if they appear within the root "
"element (but not outside of it)."
msgstr ""
"Las funciones *comment_factory* y *pi_factory*, cuando se dan, deben "
"comportarse como las funciones :func:`Comment` y :func:"
"`ProcessingInstruction` para crear comentarios e instrucciones de "
"procesamiento. Si no se dan, se utilizarán las fábricas por defecto. Cuando "
"*insert_comments* y/o *insert_pis* es verdadero, los comentarios/pis se "
"insertarán en el árbol si aparecen dentro del elemento raíz (pero no fuera "
"de él)."

#: ../Doc/library/xml.etree.elementtree.rst:1261
msgid ""
"Flushes the builder buffers, and returns the toplevel document element.  "
"Returns an :class:`Element` instance."
msgstr ""
"Vacía los buffers del constructor y retorna el elemento del documento de "
"nivel superior. Retorna una instancia de :class:`Element`."

#: ../Doc/library/xml.etree.elementtree.rst:1267
msgid ""
"Adds text to the current element.  *data* is a string.  This should be "
"either a bytestring, or a Unicode string."
msgstr ""
"Añade texto al elemento actual. *data* es una cadena. Debe ser una cadena de "
"bytes o una cadena Unicode."

#: ../Doc/library/xml.etree.elementtree.rst:1273
msgid ""
"Closes the current element.  *tag* is the element name.  Returns the closed "
"element."
msgstr ""
"Cierra el elemento actual. *tag* es el nombre del elemento. Retorna el "
"elemento cerrado."

#: ../Doc/library/xml.etree.elementtree.rst:1279
msgid ""
"Opens a new element.  *tag* is the element name.  *attrs* is a dictionary "
"containing element attributes.  Returns the opened element."
msgstr ""
"Abre un nuevo elemento. *tag* es el nombre del elemento. *attrs* es un "
"diccionario que contiene los atributos del elemento. Retorna el elemento "
"abierto."

#: ../Doc/library/xml.etree.elementtree.rst:1285
msgid ""
"Creates a comment with the given *text*.  If ``insert_comments`` is true, "
"this will also add it to the tree."
msgstr ""
"Crea un comentario con el *texto* dado. Si ``insert_comments`` es verdadero, "
"esto también lo añadirá al árbol."

#: ../Doc/library/xml.etree.elementtree.rst:1293
msgid ""
"Creates a comment with the given *target* name and *text*.  If "
"``insert_pis`` is true, this will also add it to the tree."
msgstr ""
"Crea un comentario con el nombre *target* y el *texto* dados. Si "
"``insert_pis`` es verdadero, esto también lo añadirá al árbol."

#: ../Doc/library/xml.etree.elementtree.rst:1299
msgid ""
"In addition, a custom :class:`TreeBuilder` object can provide the following "
"methods:"
msgstr ""
"Además, un objeto :class:`TreeBuilder` personalizado puede proporcionar los "
"siguientes métodos:"

#: ../Doc/library/xml.etree.elementtree.rst:1304
msgid ""
"Handles a doctype declaration.  *name* is the doctype name.  *pubid* is the "
"public identifier.  *system* is the system identifier.  This method does not "
"exist on the default :class:`TreeBuilder` class."
msgstr ""
"Maneja una declaración de doctype. *name* es el nombre del doctype. *pubid* "
"es el identificador público. *system* es el identificador del sistema. Este "
"método no existe en la clase por defecto :class:`TreeBuilder`."

#: ../Doc/library/xml.etree.elementtree.rst:1312
msgid ""
"Is called whenever the parser encounters a new namespace declaration, before "
"the ``start()`` callback for the opening element that defines it. *prefix* "
"is ``''`` for the default namespace and the declared namespace prefix name "
"otherwise.  *uri* is the namespace URI."
msgstr ""
"Se llama cada vez que el analizador encuentra una nueva declaración de "
"espacio de nombres, antes de la llamada de retorno ``start()`` para el "
"elemento de apertura que lo define. *prefix* es ``''`` para el espacio de "
"nombres por defecto y el nombre del prefijo del espacio de nombres declarado "
"en caso contrario. *uri* es el URI del espacio de nombres."

#: ../Doc/library/xml.etree.elementtree.rst:1321
msgid ""
"Is called after the ``end()`` callback of an element that declared a "
"namespace prefix mapping, with the name of the *prefix* that went out of "
"scope."
msgstr ""
"Se llama después de la llamada de retorno ``end()`` de un elemento que "
"declaró un mapeo de prefijo de espacio de nombres, con el nombre del "
"*prefijo* que salió del ámbito."

#: ../Doc/library/xml.etree.elementtree.rst:1333
msgid ""
"A `C14N 2.0 <https://www.w3.org/TR/xml-c14n2/>`_ writer.  Arguments are the "
"same as for the :func:`canonicalize` function.  This class does not build a "
"tree but translates the callback events directly into a serialised form "
"using the *write* function."
msgstr ""
"Un escritor `C14N 2.0 <https://www.w3.org/TR/xml-c14n2/>`_. Los argumentos "
"son los mismos que para la función :func:`canonicalize`. Esta clase no "
"construye un árbol, sino que traduce los eventos de devolución de llamada "
"directamente a una forma serializada utilizando la función *write*."

#: ../Doc/library/xml.etree.elementtree.rst:1344
msgid "XMLParser Objects"
msgstr "Objetos XMLParser"

#: ../Doc/library/xml.etree.elementtree.rst:1349
msgid ""
"This class is the low-level building block of the module.  It uses :mod:`xml."
"parsers.expat` for efficient, event-based parsing of XML.  It can be fed XML "
"data incrementally with the :meth:`feed` method, and parsing events are "
"translated to a push API - by invoking callbacks on the *target* object.  If "
"*target* is omitted, the standard :class:`TreeBuilder` is used. If "
"*encoding* [1]_ is given, the value overrides the encoding specified in the "
"XML file."
msgstr ""
"Esta clase es el bloque de construcción de bajo nivel del módulo. Utiliza :"
"mod:`xml.parsers.expat` para un análisis eficiente de XML basado en eventos. "
"Puede ser alimentada con datos XML de forma incremental con el método :meth:"
"`feed`, y los eventos de análisis se traducen en una API push - invocando "
"callbacks en el objeto *target*. Si se omite *target*, se utiliza la clase "
"estándar :class:`TreeBuilder`. Si se da *encoding* [1]_, el valor anula la "
"codificación especificada en el archivo XML."

#: ../Doc/library/xml.etree.elementtree.rst:1357
msgid ""
"Parameters are now :ref:`keyword-only <keyword-only_parameter>`. The *html* "
"argument no longer supported."
msgstr ""
"Los parámetros son ahora :ref:`keyword-only <keyword-only_parameter>`. El "
"argumento *html* ya no se admite."

#: ../Doc/library/xml.etree.elementtree.rst:1364
msgid ""
"Finishes feeding data to the parser.  Returns the result of calling the "
"``close()`` method of the *target* passed during construction; by default, "
"this is the toplevel document element."
msgstr ""
"Finaliza la alimentación de datos al analizador. Retorna el resultado de "
"llamar al método ``close()`` del *target* pasado durante la construcción; "
"por defecto, es el elemento del documento de nivel superior."

#: ../Doc/library/xml.etree.elementtree.rst:1371
msgid "Feeds data to the parser.  *data* is encoded data."
msgstr ""
"Introduce los datos en el analizador sintáctico. *data* son datos "
"codificados."

#: ../Doc/library/xml.etree.elementtree.rst:1373
msgid ""
":meth:`XMLParser.feed` calls *target*\\'s ``start(tag, attrs_dict)`` method "
"for each opening tag, its ``end(tag)`` method for each closing tag, and data "
"is processed by method ``data(data)``.  For further supported callback "
"methods, see the :class:`TreeBuilder` class.  :meth:`XMLParser.close` calls "
"*target*\\'s method ``close()``. :class:`XMLParser` can be used not only for "
"building a tree structure. This is an example of counting the maximum depth "
"of an XML file::"
msgstr ""
":meth:`XMLParser.feed` llama al método ``start(tag, attrs_dict)`` de "
"*target* para cada etiqueta de apertura, a su método ``end(tag)`` para cada "
"etiqueta de cierre, y los datos son procesados por el método ``data(data)``. "
"Para más métodos de callback soportados, véase la clase :class:"
"`TreeBuilder`. :meth:`XMLParser.close` llama al método ``close()`` de "
"*target*. :class:`XMLParser` puede utilizarse no sólo para construir una "
"estructura de árbol. Este es un ejemplo de contar la profundidad máxima de "
"un archivo XML::"

#: ../Doc/library/xml.etree.elementtree.rst:1417
msgid "XMLPullParser Objects"
msgstr "Objetos XMLPullParser"

#: ../Doc/library/xml.etree.elementtree.rst:1421
msgid ""
"A pull parser suitable for non-blocking applications.  Its input-side API is "
"similar to that of :class:`XMLParser`, but instead of pushing calls to a "
"callback target, :class:`XMLPullParser` collects an internal list of parsing "
"events and lets the user read from it. *events* is a sequence of events to "
"report back.  The supported events are the strings ``\"start\"``, "
"``\"end\"``, ``\"comment\"``, ``\"pi\"``, ``\"start-ns\"`` and ``\"end-"
"ns\"`` (the \"ns\" events are used to get detailed namespace information).  "
"If *events* is omitted, only ``\"end\"`` events are reported."
msgstr ""
"Un analizador sintáctico pull adecuado para aplicaciones no bloqueantes. Su "
"API de entrada es similar a la de :class:`XMLParser`, pero en lugar de "
"enviar llamadas a un objetivo de devolución de llamada, :class:"
"`XMLPullParser` recoge una lista interna de eventos de análisis y permite al "
"usuario leer de ella. *events* son una secuencia de eventos a reportar. Los "
"eventos soportados son las cadenas ``\"start\"``, ``\"end\"``, "
"``\"comment\"``, ``\"pi\"``, ``\"start-ns\"`` y ``\"end-ns\"`` (los eventos "
"\"ns\" se utilizan para obtener información detallada del espacio de "
"nombres). Si se omite *events*, sólo se informará de los eventos ``\"end\"``."

#: ../Doc/library/xml.etree.elementtree.rst:1432
msgid "Feed the given bytes data to the parser."
msgstr "Introduce los datos de los bytes dados en el analizador."

#: ../Doc/library/xml.etree.elementtree.rst:1436
msgid ""
"Signal the parser that the data stream is terminated. Unlike :meth:"
"`XMLParser.close`, this method always returns :const:`None`. Any events not "
"yet retrieved when the parser is closed can still be read with :meth:"
"`read_events`."
msgstr ""
"Señala al analizador que el flujo de datos ha terminado. A diferencia de :"
"meth:`XMLParser.close`, este método siempre retorna :const:`None`. Cualquier "
"evento que no haya sido recuperado cuando el analizador se cierra puede ser "
"leído con :meth:`read_events`."

#: ../Doc/library/xml.etree.elementtree.rst:1443
msgid ""
"Return an iterator over the events which have been encountered in the data "
"fed to the parser.  The iterator yields ``(event, elem)`` pairs, where "
"*event* is a string representing the type of event (e.g. ``\"end\"``) and "
"*elem* is the encountered :class:`Element` object, or other context value as "
"follows."
msgstr ""
"Retorna un iterador sobre los eventos que se han encontrado en los datos "
"alimentados al analizador. El iterador retorna pares ``(event, elem)``, "
"donde *event* es una cadena de caracteres que representa el tipo de evento "
"(por ejemplo, ``\"fin\"``) y *elem* es el objeto :class:`Element` "
"encontrado, u otro valor de contexto como el siguiente."

#: ../Doc/library/xml.etree.elementtree.rst:1449
msgid "``start``, ``end``: the current Element."
msgstr "``start``, ``end``: el Element actual."

#: ../Doc/library/xml.etree.elementtree.rst:1450
msgid "``comment``, ``pi``: the current comment / processing instruction"
msgstr ""
"``comment``, ``pi``: el comentario / la instrucción de procesamiento actual"

#: ../Doc/library/xml.etree.elementtree.rst:1451
msgid ""
"``start-ns``: a tuple ``(prefix, uri)`` naming the declared namespace "
"mapping."
msgstr ""
"``start-ns``: una tupla ``(prefix, uri)`` que nombra el mapeo del espacio de "
"nombres declarado."

#: ../Doc/library/xml.etree.elementtree.rst:1453
msgid "``end-ns``: :const:`None` (this may change in a future version)"
msgstr "``end-ns``: :const:`None` (esto puede cambiar en una versión futura)"

#: ../Doc/library/xml.etree.elementtree.rst:1455
msgid ""
"Events provided in a previous call to :meth:`read_events` will not be "
"yielded again.  Events are consumed from the internal queue only when they "
"are retrieved from the iterator, so multiple readers iterating in parallel "
"over iterators obtained from :meth:`read_events` will have unpredictable "
"results."
msgstr ""
"Los eventos proporcionados en una llamada anterior a :meth:`read_events` no "
"serán retornados nuevamente. Los eventos se consumen de la cola interna sólo "
"cuando se recuperan del iterador, por lo que múltiples lectores iterando en "
"paralelo sobre iteradores obtenidos de :meth:`read_events` tendrán "
"resultados impredecibles."

#: ../Doc/library/xml.etree.elementtree.rst:1463
msgid ""
":class:`XMLPullParser` only guarantees that it has seen the \">\" character "
"of a starting tag when it emits a \"start\" event, so the attributes are "
"defined, but the contents of the text and tail attributes are undefined at "
"that point.  The same applies to the element children; they may or may not "
"be present."
msgstr ""
":class:`XMLPullParser` sólo garantiza que ha visto el carácter \">\" de una "
"etiqueta de inicio cuando emite un evento \"start\", por lo que los "
"atributos están definidos, pero el contenido de los atributos text y tail "
"está indefinido en ese momento. Lo mismo ocurre con los hijos del elemento; "
"pueden estar presentes o no."

#: ../Doc/library/xml.etree.elementtree.rst:1478
msgid "Exceptions"
msgstr "Excepciones"

#: ../Doc/library/xml.etree.elementtree.rst:1482
msgid ""
"XML parse error, raised by the various parsing methods in this module when "
"parsing fails.  The string representation of an instance of this exception "
"will contain a user-friendly error message.  In addition, it will have the "
"following attributes available:"
msgstr ""
"Error de análisis de XML, lanzado por los distintos métodos de análisis de "
"este módulo cuando el análisis falla. La representación en cadena de "
"caracteres de una instancia de esta excepción contendrá un mensaje de error "
"fácil de entender. Además, tendrá los siguientes atributos disponibles:"

#: ../Doc/library/xml.etree.elementtree.rst:1489
msgid ""
"A numeric error code from the expat parser. See the documentation of :mod:"
"`xml.parsers.expat` for the list of error codes and their meanings."
msgstr ""
"Un código de error numérico del analizador sintáctico expat. Consulte la "
"documentación de :mod:`xml.parsers.expat` para ver la lista de códigos de "
"error y sus significados."

#: ../Doc/library/xml.etree.elementtree.rst:1494
msgid ""
"A tuple of *line*, *column* numbers, specifying where the error occurred."
msgstr ""
"Una tupla de números de *line*, *column*, que especifica dónde se produjo el "
"error."

#: ../Doc/library/xml.etree.elementtree.rst:1497
msgid "Footnotes"
msgstr "Notas al pie de página"

#: ../Doc/library/xml.etree.elementtree.rst:1498
msgid ""
"The encoding string included in XML output should conform to the appropriate "
"standards.  For example, \"UTF-8\" is valid, but \"UTF8\" is not.  See "
"https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-EncodingDecl and https://"
"www.iana.org/assignments/character-sets/character-sets.xhtml."
msgstr ""
"La cadena de caracteres de codificación incluida en la salida XML debe "
"ajustarse a los estándares adecuados. Por ejemplo, \"UTF-8\" es válido, pero "
"\"UTF8\" no lo es. Consulte https://www.w3.org/TR/2006/REC-xml11-20060816/"
"#NT-EncodingDecl y https://www.iana.org/assignments/character-sets/character-"
"sets.xhtml."

#~ msgid "Additional resources"
#~ msgstr "Recursos adicionales"

#~ msgid ""
#~ "See http://effbot.org/zone/element-index.htm for tutorials and links to "
#~ "other docs."
#~ msgstr ""
#~ "Vea http://effbot.org/zone/element-index.htm para tutoriales y enlaces a "
#~ "otros documentos."

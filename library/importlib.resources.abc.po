# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../Doc/library/importlib.resources.abc.rst:2
msgid ":mod:`importlib.resources.abc` -- Abstract base classes for resources"
msgstr ":mod:`importlib.resources.abc` -- Clases base abstractas para recursos"

#: ../Doc/library/importlib.resources.abc.rst:7
msgid "**Source code:** :source:`Lib/importlib/resources/abc.py`"
msgstr "**Source code:** :source:`Lib/importlib/resources/abc.py`"

#: ../Doc/library/importlib.resources.abc.rst:15
msgid "*Superseded by TraversableResources*"
msgstr "*Superseded by TraversableResources*"

#: ../Doc/library/importlib.resources.abc.rst:17
msgid ""
"An :term:`abstract base class` to provide the ability to read *resources*."
msgstr ""
"Un :term:`abstract base class` para proporcionar la capacidad de leer "
"*resources*."

#: ../Doc/library/importlib.resources.abc.rst:20
msgid ""
"From the perspective of this ABC, a *resource* is a binary artifact that is "
"shipped within a package. Typically this is something like a data file that "
"lives next to the ``__init__.py`` file of the package. The purpose of this "
"class is to help abstract out the accessing of such data files so that it "
"does not matter if the package and its data file(s) are stored in a e.g. zip "
"file versus on the file system."
msgstr ""
"Desde la perspectiva de este ABC, un *resource* es un artefacto binario que "
"se envía dentro de un paquete. Por lo general, esto es algo así como un "
"archivo de datos que se encuentra junto al archivo ``__init__.py`` del "
"paquete. El propósito de esta clase es ayudar a abstraer el acceso a dichos "
"archivos de datos para que no importe si el paquete y sus archivos de datos "
"están almacenados por ejemplo en un .zip en comparación con el sistema de "
"archivos."

#: ../Doc/library/importlib.resources.abc.rst:28
msgid ""
"For any of methods of this class, a *resource* argument is expected to be a :"
"term:`path-like object` which represents conceptually just a file name. This "
"means that no subdirectory paths should be included in the *resource* "
"argument. This is because the location of the package the reader is for, "
"acts as the \"directory\". Hence the metaphor for directories and file names "
"is packages and resources, respectively. This is also why instances of this "
"class are expected to directly correlate to a specific package (instead of "
"potentially representing multiple packages or a module)."
msgstr ""
"Para cualquiera de los métodos de esta clase, se espera que un argumento "
"*resource* sea un :term:`path-like object` que represente conceptualmente "
"solo un nombre de archivo. Esto significa que no se deben incluir rutas de "
"subdirectorios en el argumento *resource*. Esto se debe a que la ubicación "
"del paquete para el que se encuentra el lector actúa como el \"directorio\". "
"Por lo tanto, la metáfora de directorios y nombres de archivos es paquetes y "
"recursos, respectivamente. Esta es también la razón por la que se espera que "
"las instancias de esta clase se correlacionen directamente con un paquete "
"específico (en lugar de representar potencialmente varios paquetes o un "
"módulo)."

#: ../Doc/library/importlib.resources.abc.rst:39
msgid ""
"Loaders that wish to support resource reading are expected to provide a "
"method called ``get_resource_reader(fullname)`` which returns an object "
"implementing this ABC's interface. If the module specified by fullname is "
"not a package, this method should return :const:`None`. An object compatible "
"with this ABC should only be returned when the specified module is a package."
msgstr ""
"Se espera que los cargadores que deseen admitir la lectura de recursos "
"proporcionen un método llamado ``get_resource_reader(fullname)`` que retorna "
"un objeto que implementa la interfaz de este ABC. Si el módulo especificado "
"por nombre completo no es un paquete, este método debería retornar :const:"
"`None`. Un objeto compatible con este ABC solo debe retornarse cuando el "
"módulo especificado es un paquete."

#: ../Doc/library/importlib.resources.abc.rst:50
msgid ""
"Returns an opened, :term:`file-like object` for binary reading of the "
"*resource*."
msgstr ""
"Retorna un :term:`file-like object` abierto para la lectura binaria del "
"*resource*."

#: ../Doc/library/importlib.resources.abc.rst:53
msgid "If the resource cannot be found, :exc:`FileNotFoundError` is raised."
msgstr ""
"Si no se puede encontrar el recurso, se genera :exc:`FileNotFoundError`."

#: ../Doc/library/importlib.resources.abc.rst:58
msgid "Returns the file system path to the *resource*."
msgstr "Retorna la ruta del sistema de archivos al *resource*."

#: ../Doc/library/importlib.resources.abc.rst:60
msgid ""
"If the resource does not concretely exist on the file system, raise :exc:"
"`FileNotFoundError`."
msgstr ""
"Si el recurso no existe concretamente en el sistema de archivos, lanza :exc:"
"`FileNotFoundError`."

#: ../Doc/library/importlib.resources.abc.rst:65
msgid ""
"Returns ``True`` if the named *name* is considered a resource. :exc:"
"`FileNotFoundError` is raised if *name* does not exist."
msgstr ""
"Retorna ``True`` si el *name* con nombre se considera un recurso. :exc:"
"`FileNotFoundError` se genera si *name* no existe."

#: ../Doc/library/importlib.resources.abc.rst:70
msgid ""
"Returns an :term:`iterable` of strings over the contents of the package. Do "
"note that it is not required that all names returned by the iterator be "
"actual resources, e.g. it is acceptable to return names for which :meth:"
"`is_resource` would be false."
msgstr ""
"Retorna un :term:`iterable` de cadenas sobre el contenido del paquete. Tenga "
"en cuenta que no se requiere que todos los nombres devueltos por el iterador "
"sean recursos reales, p. es aceptable devolver nombres para los que :meth:"
"`is_resource` sería falso."

#: ../Doc/library/importlib.resources.abc.rst:76
msgid ""
"Allowing non-resource names to be returned is to allow for situations where "
"how a package and its resources are stored are known a priori and the non-"
"resource names would be useful. For instance, returning subdirectory names "
"is allowed so that when it is known that the package and resources are "
"stored on the file system then those subdirectory names can be used directly."
msgstr ""
"Permitir que se retornen nombres que no son de recursos es permitir "
"situaciones en las que se conoce a priori cómo se almacenan un paquete y sus "
"recursos y los nombres que no son de recursos serían útiles. Por ejemplo, se "
"permite devolver nombres de subdirectorios para que cuando se sepa que el "
"paquete y los recursos están almacenados en el sistema de archivos, esos "
"nombres de subdirectorios se puedan usar directamente."

#: ../Doc/library/importlib.resources.abc.rst:84
msgid "The abstract method returns an iterable of no items."
msgstr "El método abstracto retorna un iterable sin elementos."

#: ../Doc/library/importlib.resources.abc.rst:89
msgid ""
"An object with a subset of pathlib.Path methods suitable for traversing "
"directories and opening files."
msgstr ""
"Un objeto con un subconjunto de métodos pathlib.Path adecuados para "
"atravesar directorios y abrir archivos."

#: ../Doc/library/importlib.resources.abc.rst:96
msgid "Abstract. The base name of this object without any parent references."
msgstr ""
"Resumen. El nombre base de este objeto sin ninguna referencia principal."

#: ../Doc/library/importlib.resources.abc.rst:100
msgid "Yield Traversable objects in self."
msgstr "Produce generador iterador de objetos Traversable en self."

#: ../Doc/library/importlib.resources.abc.rst:104
msgid "Return True if self is a directory."
msgstr "Retorna True si self es un directorio."

#: ../Doc/library/importlib.resources.abc.rst:108
msgid "Return True if self is a file."
msgstr "Retorna True si self es un archivo."

#: ../Doc/library/importlib.resources.abc.rst:112
#: ../Doc/library/importlib.resources.abc.rst:116
msgid "Return Traversable child in self."
msgstr "Regresar Traversable child en self."

#: ../Doc/library/importlib.resources.abc.rst:120
msgid ""
"*mode* may be 'r' or 'rb' to open as text or binary. Return a handle "
"suitable for reading (same as :attr:`pathlib.Path.open`)."
msgstr ""
"*mode* puede ser 'r' o 'rb' para abrir como texto o binario. Retorna un "
"identificador adecuado para la lectura (igual que :attr:`pathlib.Path.open`)."

#: ../Doc/library/importlib.resources.abc.rst:123
msgid ""
"When opening as text, accepts encoding parameters such as those accepted by :"
"attr:`io.TextIOWrapper`."
msgstr ""
"Al abrirse como texto, acepta parámetros de codificación como los aceptados "
"por :attr:`io.TextIOWrapper`."

#: ../Doc/library/importlib.resources.abc.rst:128
msgid "Read contents of self as bytes."
msgstr "Lee el contenido de self como bytes."

#: ../Doc/library/importlib.resources.abc.rst:132
msgid "Read contents of self as text."
msgstr "Lee el contenido de self como texto."

#: ../Doc/library/importlib.resources.abc.rst:137
msgid ""
"An abstract base class for resource readers capable of serving the :meth:"
"`importlib.resources.files` interface. Subclasses :class:`importlib."
"resources.abc.ResourceReader` and provides concrete implementations of the :"
"class:`importlib.resources.abc.ResourceReader`'s abstract methods. "
"Therefore, any loader supplying :class:`importlib.abc.TraversableReader` "
"also supplies ResourceReader."
msgstr ""
"Una clase base abstracta para lectores de recursos capaz de servir la "
"interfaz :meth:`importlib.resources.files`. Subclase :class:`importlib."
"resources.abc.ResourceReader` y proporciona implementaciones concretas de "
"los métodos abstractos de :class:`importlib.resources.abc.ResourceReader`. "
"Por lo tanto, cualquier cargador que suministre :class:`importlib.abc."
"TraversableReader` también suministre ResourceReader."

#: ../Doc/library/importlib.resources.abc.rst:144
msgid ""
"Loaders that wish to support resource reading are expected to implement this "
"interface."
msgstr ""
"Se espera que los cargadores que deseen admitir la lectura de recursos "
"implementen esta interfaz."

#: ../Doc/library/importlib.resources.abc.rst:151
msgid ""
"Returns a :class:`importlib.resources.abc.Traversable` object for the loaded "
"package."
msgstr ""
"Retorna un objeto :class:`importlib.resources.abc.Traversable` para el "
"paquete cargado."

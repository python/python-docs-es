# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get
# the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-06-29 22:50+0200\n"
"Last-Translator: Alvar Maciel <alvarmaciel@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/library/2to3.rst:4
msgid "2to3 - Automated Python 2 to 3 code translation"
msgstr "2to3 - Traducción de código Python 2 a 3"

#: ../Doc/library/2to3.rst:8
#, fuzzy
msgid ""
"2to3 is a Python program that reads Python 2.x source code and applies a "
"series of *fixers* to transform it into valid Python 3.x code.  The standard "
"library contains a rich set of fixers that will handle almost all code.  "
"2to3 supporting library :mod:`lib2to3` is, however, a flexible and generic "
"library, so it is possible to write your own fixers for 2to3."
msgstr ""
"2to3 es un programa hecho en Python que lee código fuente en Python 2.x y "
"aplica una serie de *fixers* para transformarlo en código Python 3.x válido. "
"La librería estándar contiene un buen conjunto de *fixers* que se encargarán "
"de casi todo el código. La librería soporte de 2to3 :mod:`lib2to3` es, de "
"todas maneras, una librería flexible y genérica. Por lo cual es posible "
"escribir sus propios *fixers* para 2to3. :mod:`lib2to3` también puede "
"adaptarse a aplicaciones propias en las cuales el código en Python necesite "
"editarse automáticamente."

#: ../Doc/library/2to3.rst:18
msgid "Using 2to3"
msgstr "Usando 2to3"

#: ../Doc/library/2to3.rst:20
msgid ""
"2to3 will usually be installed with the Python interpreter as a script.  It "
"is also located in the :file:`Tools/scripts` directory of the Python root."
msgstr ""
"2to3 generalmente estará instalada con el interprete de Python como un "
"*script*. También se encuentra ubicada en el directorio :file:`Tools/"
"scripts` en la raíz de Python."

#: ../Doc/library/2to3.rst:23
msgid ""
"2to3's basic arguments are a list of files or directories to transform.  The "
"directories are recursively traversed for Python sources."
msgstr ""
"Los argumentos básicos de 2to3 son una lista de archivos o directorios a "
"convertir. Los directorios se recorren recursivamente en búsqueda de "
"archivos en Python."

#: ../Doc/library/2to3.rst:26
msgid "Here is a sample Python 2.x source file, :file:`example.py`::"
msgstr "Este es un ejemplo de un archivo en Python 2.x, :file: `example.py`::"

#: ../Doc/library/2to3.rst:34
msgid "It can be converted to Python 3.x code via 2to3 on the command line:"
msgstr "Puede ser convertido a Python 3.x vía 2to3 desde la línea de comandos:"

#: ../Doc/library/2to3.rst:40
msgid ""
"A diff against the original source file is printed.  2to3 can also write the "
"needed modifications right back to the source file.  (A backup of the "
"original file is made unless :option:`!-n` is also given.)  Writing the "
"changes back is enabled with the :option:`!-w` flag:"
msgstr ""
"Se imprime un *diff* del archivo fuente original. 2to3 también puede "
"escribir las modificaciones necesarias directamente en el archivo fuente. "
"(Se hace una copia de respaldo del archivo original a menos que se "
"proporcione :option:`!-n`.) La escritura de los cambios se habilita con la "
"opción :option:`!-w`:"

#: ../Doc/library/2to3.rst:49
msgid "After transformation, :file:`example.py` looks like this::"
msgstr ""
"Después de la conversión, :file:`example.py` se ve de la siguiente manera::"

#: ../Doc/library/2to3.rst:57
msgid ""
"Comments and exact indentation are preserved throughout the translation "
"process."
msgstr ""
"Los comentarios y la identación exacta se conservan durante todo el proceso "
"de conversión."

#: ../Doc/library/2to3.rst:59
msgid ""
"By default, 2to3 runs a set of :ref:`predefined fixers <2to3-fixers>`.  The :"
"option:`!-l` flag lists all available fixers.  An explicit set of fixers to "
"run can be given with :option:`!-f`.  Likewise the :option:`!-x` explicitly "
"disables a fixer.  The following example runs only the ``imports`` and "
"``has_key`` fixers:"
msgstr ""
"Por defecto, 2to3 corre un conjunto de :ref:`fixers predefinidos <2to3-"
"fixers>`. La opción :option:`!-l` lista todos los *fixers* posibles. Se "
"puede pasar un conjunto explícito de *fixers* con la opción :option:`!-x`.  "
"Asimismo la opción :option:`!-x` deshabilita el *fixer* que se explicita. El "
"siguiente ejemplo corre solo solo los *fixers* ``imports`` y  ``has_key``:"

#: ../Doc/library/2to3.rst:68
msgid "This command runs every fixer except the ``apply`` fixer:"
msgstr "Este comando corre todos los *fixers* excepto el ``apply`` *fixer*:"

#: ../Doc/library/2to3.rst:74
msgid ""
"Some fixers are *explicit*, meaning they aren't run by default and must be "
"listed on the command line to be run.  Here, in addition to the default "
"fixers, the ``idioms`` fixer is run:"
msgstr ""
"Algunos *fixers* son explícitos, esto quiere decir que no corren por defecto "
"y deben ser listados en la línea de comando para que se ejecuten. Acá, "
"además de los *fixers* por defectos, se ejecuta el *fixer* ``idioms``:"

#: ../Doc/library/2to3.rst:82
msgid "Notice how passing ``all`` enables all default fixers."
msgstr ""
"Puede observarse que pasar ``all`` habilita todos los *fixers* por defecto."

#: ../Doc/library/2to3.rst:84
msgid ""
"Sometimes 2to3 will find a place in your source code that needs to be "
"changed, but 2to3 cannot fix automatically.  In this case, 2to3 will print a "
"warning beneath the diff for a file.  You should address the warning in "
"order to have compliant 3.x code."
msgstr ""
"Algunas veces 2to3 va a encontrar algo en su código que necesita ser "
"modificado, pero 2to3 no puede hacerlo automáticamente. En estos casos, 2to3 "
"va a imprimir una advertencia debajo del *diff* del archivo. Deberá tomar "
"nota de la advertencia para obtener un código compatible con 3.x."

#: ../Doc/library/2to3.rst:89
msgid ""
"2to3 can also refactor doctests.  To enable this mode, use the :option:`!-d` "
"flag.  Note that *only* doctests will be refactored.  This also doesn't "
"require the module to be valid Python.  For example, doctest like examples "
"in a reST document could also be refactored with this option."
msgstr ""
"2to3 también puede refactorizar *doctest*. Para habilitar este modo, use la "
"opción :option:`!-d`. Tenga en cuenta que *solo* los *doctest* serán "
"refactorizados. Esto tampoco requiere que el módulo sea válido en Python. "
"Por ejemplo, *doctest* de ejemplo en un documento reST también pueden ser "
"refactorizados con esta opción."

#: ../Doc/library/2to3.rst:94
msgid ""
"The :option:`!-v` option enables output of more information on the "
"translation process."
msgstr ""
"La opción :option:`!-v` habilita la salida de más información en el proceso "
"de conversión."

# No se si queda clara esta oración
#: ../Doc/library/2to3.rst:97
#, fuzzy
msgid ""
"Since some print statements can be parsed as function calls or statements, "
"2to3 cannot always read files containing the print function.  When 2to3 "
"detects the presence of the ``from __future__ import print_function`` "
"compiler directive, it modifies its internal grammar to interpret :func:"
"`print` as a function.  This change can also be enabled manually with the :"
"option:`!-p` flag.  Use :option:`!-p` to run fixers on code that already has "
"had its print statements converted. Also :option:`!-e` can be used to make :"
"func:`exec` a function."
msgstr ""
"Como algunas declaraciones *print* pueden ser pasadas como llamadas a "
"funciones o declaraciones, 2to3 no siempre lee archivos que contienen la "
"función print. Cuando 2to3 detecta la presencia de la directiva de "
"compilación ``from __future__ import print_function``, modifica su gramática "
"interna para interpretar  :func:`print` como una función. Este cambio "
"también puede habilitarse manualmente con la opción :option:`!-p`. Use la "
"opción :option:`!-p` para ejecutar los *fixers* en el código al que ya se le "
"han convertido sus declaraciones *print*."

#: ../Doc/library/2to3.rst:105
msgid ""
"The :option:`!-o` or :option:`!--output-dir` option allows specification of "
"an alternate directory for processed output files to be written to.  The :"
"option:`!-n` flag is required when using this as backup files do not make "
"sense when not overwriting the input files."
msgstr ""
"La opción :option:`!-o` o la opción :option:`!--output-dir` permiten "
"designar un directorio alternativo para que se guarden los archivos "
"procesados. La opción :option:`!-n` es necesaria ya que los archivos de "
"respaldo no tienen sentido cuando no se sobreescriben los archivos "
"originales."

#: ../Doc/library/2to3.rst:110
msgid "The :option:`!-o` option was added."
msgstr "Se agregó la opción :option:` !-o`."

#: ../Doc/library/2to3.rst:113
msgid ""
"The :option:`!-W` or :option:`!--write-unchanged-files` flag tells 2to3 to "
"always write output files even if no changes were required to the file.  "
"This is most useful with :option:`!-o` so that an entire Python source tree "
"is copied with translation from one directory to another. This option "
"implies the :option:`!-w` flag as it would not make sense otherwise."
msgstr ""
"La opción :option:`!-W` o :option:`!--write-unchanged-files` le dice a 2to3 "
"que siempre escriba archivos de salida, incluso si no se requieren hacer "
"cambios en el archivo. Esto es muy útil con la opción :option:`!-o` para que "
"copie el árbol completo de código Python con su conversión de un directorio "
"a otro. Esta opción incluye a la opción :option:`!-w` ya que no tendría "
"sentido de otra manera."

#: ../Doc/library/2to3.rst:119
msgid "The :option:`!-W` flag was added."
msgstr "Se agregó la opción :option:`!-W`."

#: ../Doc/library/2to3.rst:122
msgid ""
"The :option:`!--add-suffix` option specifies a string to append to all "
"output filenames.  The :option:`!-n` flag is required when specifying this "
"as backups are not necessary when writing to different filenames.  Example:"
msgstr ""
"La opción :option:`!--add-suffix` agrega un texto al final de todos los "
"nombres de archivo. La opción :option:`!-n` es necesaria, ya que las copias "
"de respaldo no son necesarias cuando escribimos a un archivo con distinto "
"nombre. Ejemplo:"

#: ../Doc/library/2to3.rst:130
msgid "Will cause a converted file named ``example.py3`` to be written."
msgstr ""
"Hará que se escriba una archivo convertido con el nombre ``example.py3``."

#: ../Doc/library/2to3.rst:132
msgid "The :option:`!--add-suffix` option was added."
msgstr "Se agrega la opción :option:`!--add-suffix`."

#: ../Doc/library/2to3.rst:135
msgid "To translate an entire project from one directory tree to another use:"
msgstr ""
"Para convertir un proyecto entero de un árbol de directorios a otro use:"

#: ../Doc/library/2to3.rst:145
msgid "Fixers"
msgstr "Fixers"

#: ../Doc/library/2to3.rst:147
msgid ""
"Each step of transforming code is encapsulated in a fixer.  The command "
"``2to3 -l`` lists them.  As :ref:`documented above <2to3-using>`, each can "
"be turned on and off individually.  They are described here in more detail."
msgstr ""
"Cada paso de la transformación del código es encapsulado en un *fixer*. El "
"comando ``2to3 -l`` los lista. Como se :ref:`explicó arriba <2to3-using>`, "
"cada uno de estos puede habilitarse o deshabilitarse individualmente. En "
"esta sección se los describe más detalladamente."

#: ../Doc/library/2to3.rst:154
msgid ""
"Removes usage of :func:`apply`.  For example ``apply(function, *args, "
"**kwargs)`` is converted to ``function(*args, **kwargs)``."
msgstr ""
"Elimina el uso de :func:`apply`. Por ejemplo ``apply(function, *args, "
"**kwargs)`` es convertido a ``function(*args, **kwargs)``."

#: ../Doc/library/2to3.rst:159
msgid "Replaces deprecated :mod:`unittest` method names with the correct ones."
msgstr ""
"Reemplaza los nombre de método :mod:`unittest` en desuso por los correctos."

#: ../Doc/library/2to3.rst:162 ../Doc/library/2to3.rst:350
msgid "From"
msgstr "De"

#: ../Doc/library/2to3.rst:162 ../Doc/library/2to3.rst:350
msgid "To"
msgstr "A"

#: ../Doc/library/2to3.rst:164
msgid "``failUnlessEqual(a, b)``"
msgstr "``failUnlessEqual(a, b)``"

#: ../Doc/library/2to3.rst:164 ../Doc/library/2to3.rst:166
msgid ":meth:`assertEqual(a, b) <unittest.TestCase.assertEqual>`"
msgstr ":meth:`assertEqual(a, b) <unittest.TestCase.assertEqual>`"

#: ../Doc/library/2to3.rst:166
msgid "``assertEquals(a, b)``"
msgstr "``assertEquals(a, b)``"

#: ../Doc/library/2to3.rst:168
msgid "``failIfEqual(a, b)``"
msgstr "``failIfEqual(a, b)``"

#: ../Doc/library/2to3.rst:168 ../Doc/library/2to3.rst:170
msgid ":meth:`assertNotEqual(a, b) <unittest.TestCase.assertNotEqual>`"
msgstr ":meth:`assertNotEqual(a, b) <unittest.TestCase.assertNotEqual>`"

#: ../Doc/library/2to3.rst:170
msgid "``assertNotEquals(a, b)``"
msgstr "``assertNotEquals(a, b)``"

#: ../Doc/library/2to3.rst:172
msgid "``failUnless(a)``"
msgstr "``failUnless(a)``"

#: ../Doc/library/2to3.rst:172 ../Doc/library/2to3.rst:174
msgid ":meth:`assertTrue(a) <unittest.TestCase.assertTrue>`"
msgstr ":meth:`assertTrue(a) <unittest.TestCase.assertTrue>`"

#: ../Doc/library/2to3.rst:174
msgid "``assert_(a)``"
msgstr "``assert_(a)``"

#: ../Doc/library/2to3.rst:176
msgid "``failIf(a)``"
msgstr "``failIf(a)``"

#: ../Doc/library/2to3.rst:176
msgid ":meth:`assertFalse(a) <unittest.TestCase.assertFalse>`"
msgstr ":meth:`assertFalse(a) <unittest.TestCase.assertFalse>`"

#: ../Doc/library/2to3.rst:178
msgid "``failUnlessRaises(exc, cal)``"
msgstr "``failUnlessRaises(exc, cal)``"

#: ../Doc/library/2to3.rst:178
msgid ":meth:`assertRaises(exc, cal) <unittest.TestCase.assertRaises>`"
msgstr ":meth:`assertRaises(exc, cal) <unittest.TestCase.assertRaises>`"

#: ../Doc/library/2to3.rst:180
msgid "``failUnlessAlmostEqual(a, b)``"
msgstr "``failUnlessAlmostEqual(a, b)``"

#: ../Doc/library/2to3.rst:180 ../Doc/library/2to3.rst:182
msgid ":meth:`assertAlmostEqual(a, b) <unittest.TestCase.assertAlmostEqual>`"
msgstr ":meth:`assertAlmostEqual(a, b) <unittest.TestCase.assertAlmostEqual>`"

#: ../Doc/library/2to3.rst:182
msgid "``assertAlmostEquals(a, b)``"
msgstr "``assertAlmostEquals(a, b)``"

#: ../Doc/library/2to3.rst:184
msgid "``failIfAlmostEqual(a, b)``"
msgstr "``failIfAlmostEqual(a, b)``"

#: ../Doc/library/2to3.rst:184 ../Doc/library/2to3.rst:186
msgid ""
":meth:`assertNotAlmostEqual(a, b) <unittest.TestCase.assertNotAlmostEqual>`"
msgstr ""
":meth:`assertNotAlmostEqual(a, b) <unittest.TestCase.assertNotAlmostEqual>`"

#: ../Doc/library/2to3.rst:186
msgid "``assertNotAlmostEquals(a, b)``"
msgstr "``assertNotAlmostEquals(a, b)``"

#: ../Doc/library/2to3.rst:192
msgid "Converts :class:`basestring` to :class:`str`."
msgstr "Convierte :class:`basestring` a :class:`str`."

#: ../Doc/library/2to3.rst:196
msgid ""
"Converts :class:`buffer` to :class:`memoryview`.  This fixer is optional "
"because the :class:`memoryview` API is similar but not exactly the same as "
"that of :class:`buffer`."
msgstr ""
"Convierte :class:`buffer` a :class:`memoryview`. Este *fixer* es opcional "
"porque la API :class:`memoryview` es similar pero no exactamente la misma "
"que la del :class:`buffer`."

#: ../Doc/library/2to3.rst:202
msgid ""
"Fixes dictionary iteration methods.  :meth:`dict.iteritems` is converted to :"
"meth:`dict.items`, :meth:`dict.iterkeys` to :meth:`dict.keys`, and :meth:"
"`dict.itervalues` to :meth:`dict.values`.  Similarly, :meth:`dict."
"viewitems`, :meth:`dict.viewkeys` and :meth:`dict.viewvalues` are converted "
"respectively to :meth:`dict.items`, :meth:`dict.keys` and :meth:`dict."
"values`.  It also wraps existing usages of :meth:`dict.items`, :meth:`dict."
"keys`, and :meth:`dict.values` in a call to :class:`list`."
msgstr ""
"Corrige los métodos de iteración del diccionario, :meth:`dict.iteritems` es "
"convertido a  :meth:`dict.items`, :meth:`dict.iterkeys` a :meth:`dict.keys`, "
"y :meth:`dict.itervalues` a :meth:`dict.values`. Del mismo modo, :meth:`dict."
"viewitems`, :meth:`dict.viewkeys` y :meth:`dict.viewvalues` son convertidos "
"respectivamente a :meth:`dict.items`, :meth:`dict.keys` y :meth:`dict."
"values`. También incluye los usos existentes de :meth:`dict.items`, :meth:"
"`dict.keys`, y :meth:`dict.values` en una llamada a :class:`list`."

#: ../Doc/library/2to3.rst:212
msgid "Converts ``except X, T`` to ``except X as T``."
msgstr "Convierte ``except X, T`` a ``except X as T``."

#: ../Doc/library/2to3.rst:216
msgid "Converts the ``exec`` statement to the :func:`exec` function."
msgstr "Convierte la declaración ``exec`` a la función :func:`exec`."

#: ../Doc/library/2to3.rst:220
msgid ""
"Removes usage of :func:`execfile`.  The argument to :func:`execfile` is "
"wrapped in calls to :func:`open`, :func:`compile`, and :func:`exec`."
msgstr ""
"Elimina el uso de la función :func:`execfile`. El argumento para :func:"
"`execfile` es encapsulado para las funciones :func:`open`, :func:`compile`, "
"y :func:`exec`."

#: ../Doc/library/2to3.rst:225
msgid ""
"Changes assignment of :attr:`sys.exitfunc` to use of the :mod:`atexit` "
"module."
msgstr ""
"Cambia la declaración de :attr:`sys.exitfunc` para usar el módulo :mod:"
"`atexit`."

#: ../Doc/library/2to3.rst:230
msgid "Wraps :func:`filter` usage in a :class:`list` call."
msgstr ""
"Encapsula la función :func:`filter` usando una llamada para la clase :class:"
"`list`."

#: ../Doc/library/2to3.rst:234
msgid ""
"Fixes function attributes that have been renamed.  For example, "
"``my_function.func_closure`` is converted to ``my_function.__closure__``."
msgstr ""
"Corrige los atributos de la función que fueron renombrados. Por ejemplo, "
"``my_function.func_closure`` es convertido a ``my_function.__closure__``."

#: ../Doc/library/2to3.rst:239
msgid "Removes ``from __future__ import new_feature`` statements."
msgstr "Elimina la declaración ``from __future__ import new_feature``."

#: ../Doc/library/2to3.rst:243
msgid "Renames :func:`os.getcwdu` to :func:`os.getcwd`."
msgstr "Renombra la función :func:`os.getcwdu` a :func:`os.getcwd`."

#: ../Doc/library/2to3.rst:247
msgid "Changes ``dict.has_key(key)`` to ``key in dict``."
msgstr "Cambia ``dict.has_key(key)`` a ``key in dict``."

#: ../Doc/library/2to3.rst:251
msgid ""
"This optional fixer performs several transformations that make Python code "
"more idiomatic.  Type comparisons like ``type(x) is SomeClass`` and "
"``type(x) == SomeClass`` are converted to ``isinstance(x, SomeClass)``. "
"``while 1`` becomes ``while True``.  This fixer also tries to make use of :"
"func:`sorted` in appropriate places.  For example, this block ::"
msgstr ""
"Este *fixer* opcional ejecuta varias transformaciones que tornan el código "
"Python más idiomático. Comparaciones de tipo como ``type(x) is SomeClass`` y "
"``type(x) == SomeClass`` son convertidas a ``isinstance(x, SomeClass)``."
"``while 1`` cambia a ``while True``. Este *fixer* también intenta hacer uso "
"de :func:`sorted` en los lugares apropiados. Por ejemplo, en este bloque::"

#: ../Doc/library/2to3.rst:260
msgid "is changed to ::"
msgstr "es convertido a ::"

# sibilings impor es traducido en protugues como importaciones de hermanos. No
# se, no me agrada mucho eso de importaciones hermanas o entre hermanos.
#: ../Doc/library/2to3.rst:266
msgid "Detects sibling imports and converts them to relative imports."
msgstr ""
"Detecta las importaciones entre hermanos y las convierte en importaciones "
"relativas."

#: ../Doc/library/2to3.rst:270
msgid "Handles module renames in the standard library."
msgstr "Maneja los cambios de nombre de módulo en la librería estándar."

#: ../Doc/library/2to3.rst:274
msgid ""
"Handles other modules renames in the standard library.  It is separate from "
"the :2to3fixer:`imports` fixer only because of technical limitations."
msgstr ""
"Maneja otros cambios de nombre de módulo en la biblioteca estándar. Está "
"separada del *fixer* :2to3fixer:`imports` solo por motivos de limitaciones "
"técnicas."

#: ../Doc/library/2to3.rst:279
msgid "Converts ``input(prompt)`` to ``eval(input(prompt))``."
msgstr "Convierte ``input(prompt)`` a ``eval(input(prompt))``."

#: ../Doc/library/2to3.rst:283
msgid "Converts :func:`intern` to :func:`sys.intern`."
msgstr "Convierte :func:`intern` a :func:`sys.intern`."

#: ../Doc/library/2to3.rst:287
msgid ""
"Fixes duplicate types in the second argument of :func:`isinstance`.  For "
"example, ``isinstance(x, (int, int))`` is converted to ``isinstance(x, "
"int)`` and ``isinstance(x, (int, float, int))`` is converted to "
"``isinstance(x, (int, float))``."
msgstr ""
"Corrige tipos duplicados en el segundo argumento de :func:`isinstance`. Por "
"ejemplo,``isinstance(x, (int, int))`` es convertido a ``isinstance(x, int)`` "
"y ``isinstance(x, (int, float, int))`` es convertido a ``isinstance(x, (int, "
"float))``."

#: ../Doc/library/2to3.rst:294
msgid ""
"Removes imports of :func:`itertools.ifilter`, :func:`itertools.izip`, and :"
"func:`itertools.imap`.  Imports of :func:`itertools.ifilterfalse` are also "
"changed to :func:`itertools.filterfalse`."
msgstr ""
"Elimina importaciones de :func:`itertools.ifilter`, :func:`itertools.izip`, "
"y :func:`itertools.imap`. Importación de :func:`itertools.ifilterfalse` "
"también se cambian a :func:`itertools.filterfalse`."

#: ../Doc/library/2to3.rst:300
msgid ""
"Changes usage of :func:`itertools.ifilter`, :func:`itertools.izip`, and :"
"func:`itertools.imap` to their built-in equivalents. :func:`itertools."
"ifilterfalse` is changed to :func:`itertools.filterfalse`."
msgstr ""
"Cambia el uso de :func:`itertools.ifilter`, :func:`itertools.izip`, y :func:"
"`itertools.imap` para sus equivalentes integrados :func:`itertools."
"ifilterfalse` es cambiado a :func:`itertools.filterfalse`."

#: ../Doc/library/2to3.rst:306
msgid "Renames :class:`long` to :class:`int`."
msgstr "Renombra :class:`long` a :class:`int`."

#: ../Doc/library/2to3.rst:310
msgid ""
"Wraps :func:`map` in a :class:`list` call.  It also changes ``map(None, x)`` "
"to ``list(x)``.  Using ``from future_builtins import map`` disables this "
"fixer."
msgstr ""
"Encapsula :func:`map` en una llamada a :class:`list`. También cambia "
"``map(None, x)`` a ``list(x)``. Usando``from future_builtins import map`` se "
"deshabilita este *fixer*."

#: ../Doc/library/2to3.rst:316
msgid ""
"Converts the old metaclass syntax (``__metaclass__ = Meta`` in the class "
"body) to the new (``class X(metaclass=Meta)``)."
msgstr ""
"Convierte la vieja sintaxis de metaclase (``__metaclass__ = Meta`` en el "
"cuerpo de la clase) a la nueva sintaxis (``class X(metaclass=Meta)``)."

#: ../Doc/library/2to3.rst:321
msgid ""
"Fixes old method attribute names.  For example, ``meth.im_func`` is "
"converted to ``meth.__func__``."
msgstr ""
"Corrige nombres de atributos de métodos antiguos. Por ejemplo, ``meth."
"im_func`` is convertido a ``meth.__func__``."

#: ../Doc/library/2to3.rst:326
msgid "Converts the old not-equal syntax, ``<>``, to ``!=``."
msgstr "Convierte la antigua sintaxis no-igual, ``<>``, a ``!=``."

#: ../Doc/library/2to3.rst:330
msgid ""
"Converts the use of iterator's :meth:`~iterator.next` methods to the :func:"
"`next` function.  It also renames :meth:`next` methods to :meth:`~iterator."
"__next__`."
msgstr ""
"Convierte el uso de métodos iteradores :meth:`~iterator.next` para la "
"función :func:`next`. También renombra métodos :meth:`next` a :meth:"
"`~iterator.__next__`."

#: ../Doc/library/2to3.rst:336
msgid "Renames :meth:`__nonzero__` to :meth:`~object.__bool__`."
msgstr "Renombra el método :meth:`__nonzero__` a :meth:`~object.__bool__`."

#: ../Doc/library/2to3.rst:340
msgid "Converts octal literals into the new syntax."
msgstr "Convierte literales octales a la nueva sintaxis."

#: ../Doc/library/2to3.rst:344
msgid ""
"Converts calls to various functions in the :mod:`operator` module to other, "
"but equivalent, function calls.  When needed, the appropriate ``import`` "
"statements are added, e.g. ``import collections.abc``.  The following "
"mapping are made:"
msgstr ""
"Convierte llamadas para varias funciones en el módulo :mod:`operator` a "
"otras, pero equivalentes, llamadas de funciones. Cuando es necesario, se "
"agregan las declaraciones ``import`` apropiadas, por ejemplo ``import "
"collections.abc``. Se realizan los siguientes mapeos:"

#: ../Doc/library/2to3.rst:352
msgid "``operator.isCallable(obj)``"
msgstr "``operator.isCallable(obj)``"

#: ../Doc/library/2to3.rst:352
msgid "``callable(obj)``"
msgstr "``callable(obj)``"

#: ../Doc/library/2to3.rst:353
msgid "``operator.sequenceIncludes(obj)``"
msgstr "``operator.sequenceIncludes(obj)``"

#: ../Doc/library/2to3.rst:353
msgid "``operator.contains(obj)``"
msgstr "``operator.contains(obj)``"

#: ../Doc/library/2to3.rst:354
msgid "``operator.isSequenceType(obj)``"
msgstr "``operator.isSequenceType(obj)``"

#: ../Doc/library/2to3.rst:354
msgid "``isinstance(obj, collections.abc.Sequence)``"
msgstr "``isinstance(obj, collections.abc.Sequence)``"

#: ../Doc/library/2to3.rst:355
msgid "``operator.isMappingType(obj)``"
msgstr "``operator.isMappingType(obj)``"

#: ../Doc/library/2to3.rst:355
msgid "``isinstance(obj, collections.abc.Mapping)``"
msgstr "``isinstance(obj, collections.abc.Mapping)``"

#: ../Doc/library/2to3.rst:356
msgid "``operator.isNumberType(obj)``"
msgstr "``operator.isNumberType(obj)``"

#: ../Doc/library/2to3.rst:356
msgid "``isinstance(obj, numbers.Number)``"
msgstr "``isinstance(obj, numbers.Number)``"

#: ../Doc/library/2to3.rst:357
msgid "``operator.repeat(obj, n)``"
msgstr "``operator.repeat(obj, n)``"

#: ../Doc/library/2to3.rst:357
msgid "``operator.mul(obj, n)``"
msgstr "``operator.mul(obj, n)``"

#: ../Doc/library/2to3.rst:358
msgid "``operator.irepeat(obj, n)``"
msgstr "``operator.irepeat(obj, n)``"

#: ../Doc/library/2to3.rst:358
msgid "``operator.imul(obj, n)``"
msgstr "``operator.imul(obj, n)``"

# No supe bien como traducir list comprehensions, en la traducción portuguesa
# está como "em lista comprehensions."
#: ../Doc/library/2to3.rst:363
msgid ""
"Add extra parenthesis where they are required in list comprehensions.  For "
"example, ``[x for x in 1, 2]`` becomes ``[x for x in (1, 2)]``."
msgstr ""
"Agrega los paréntesis extra donde sean necesarios en las listas de "
"comprensión. Por ejemplo ``[x for x in 1, 2]`` se convierte en ``[x for x in "
"(1, 2)]``."

#: ../Doc/library/2to3.rst:368
msgid "Converts the ``print`` statement to the :func:`print` function."
msgstr "Convierte la declaración ``print`` en la función :func:`print`."

#: ../Doc/library/2to3.rst:372
msgid ""
"Converts ``raise E, V`` to ``raise E(V)``, and ``raise E, V, T`` to ``raise "
"E(V).with_traceback(T)``.  If ``E`` is a tuple, the translation will be "
"incorrect because substituting tuples for exceptions has been removed in 3.0."
msgstr ""
"Convierte ``raise E, V`` a ``raise E(V)``, y ``raise E, V, T`` a ``raise "
"E(V).with_traceback(T)``. SI ``E`` es una tupla, la conversión será "
"incorrecta porque sustituir tuplas por excepciones fue eliminado en Python "
"3.0."

#: ../Doc/library/2to3.rst:378
msgid "Converts :func:`raw_input` to :func:`input`."
msgstr "Conviertes :func:`raw_input` to :func:`input`."

#: ../Doc/library/2to3.rst:382
msgid "Handles the move of :func:`reduce` to :func:`functools.reduce`."
msgstr "Maneja el movimiento de :func:`reduce` a :func:`functools.reduce`."

#: ../Doc/library/2to3.rst:386
msgid "Converts :func:`reload` to :func:`importlib.reload`."
msgstr "Convierte :func:`reload` a :func:`importlib.reload`."

#: ../Doc/library/2to3.rst:390
msgid "Changes :data:`sys.maxint` to :data:`sys.maxsize`."
msgstr "Cambia :data:`sys.maxint` a :data:`sys.maxsize`."

#: ../Doc/library/2to3.rst:394
msgid "Replaces backtick repr with the :func:`repr` function."
msgstr "Sustituye el *backtick* repr por la función :func:`repr`."

#: ../Doc/library/2to3.rst:398
msgid ""
"Replaces use of the :class:`set` constructor with set literals.  This fixer "
"is optional."
msgstr ""
"Sustituye el uso de la clase constructora :class:`set` por su literal. Este "
"*fixer* es opcional."

#: ../Doc/library/2to3.rst:403
msgid "Renames :exc:`StandardError` to :exc:`Exception`."
msgstr "Renombra :exc:`StandardError` a :exc:`Exception`."

#: ../Doc/library/2to3.rst:407
msgid ""
"Changes the deprecated :data:`sys.exc_value`, :data:`sys.exc_type`, :data:"
"`sys.exc_traceback` to use :func:`sys.exc_info`."
msgstr ""
"Cambia los :data:`sys.exc_value`, :data:`sys.exc_type`, :data:`sys."
"exc_traceback` en desuso para usar la función :func:`sys.exc_info`."

#: ../Doc/library/2to3.rst:412
msgid "Fixes the API change in generator's :meth:`throw` method."
msgstr "Corrige el cambio de la API en el método generador :meth:`throw`."

#: ../Doc/library/2to3.rst:416
msgid ""
"Removes implicit tuple parameter unpacking.  This fixer inserts temporary "
"variables."
msgstr ""
"Elimina el desempaquetamiento implícito del parámetro de tupla. Este *fixer* "
"inserta variables temporarias."

#: ../Doc/library/2to3.rst:421
msgid ""
"Fixes code broken from the removal of some members in the :mod:`types` "
"module."
msgstr ""
"Corrige el código roto por la remoción de algunos miembros en el módulo :mod:"
"`types`."

#: ../Doc/library/2to3.rst:426
msgid "Renames :class:`unicode` to :class:`str`."
msgstr "Renombra :class:`unicode` a :class:`str`."

#: ../Doc/library/2to3.rst:430
msgid ""
"Handles the rename of :mod:`urllib` and :mod:`urllib2` to the :mod:`urllib` "
"package."
msgstr ""
"Maneja el renombramiento de los módulos :mod:`urllib` y :mod:`urllib2` para "
"el paquete :mod:`urllib`."

#: ../Doc/library/2to3.rst:435
msgid ""
"Removes excess whitespace from comma separated items.  This fixer is "
"optional."
msgstr ""
"Remueve el exceso de espacios blancos de los ítems separados por coma. Este "
"*fixer* es opcional."

#: ../Doc/library/2to3.rst:440
msgid ""
"Renames :func:`xrange` to :func:`range` and wraps existing :func:`range` "
"calls with :class:`list`."
msgstr ""
"Renombra :func:`xrange` a :func:`range` y encapsula la llamada a la función "
"existente :func:`range` con :class:`list`."

#: ../Doc/library/2to3.rst:445
msgid "Changes ``for x in file.xreadlines()`` to ``for x in file``."
msgstr "Cambia ``for x in file.xreadlines()`` por ``for x in file``."

#: ../Doc/library/2to3.rst:449
msgid ""
"Wraps :func:`zip` usage in a :class:`list` call.  This is disabled when "
"``from future_builtins import zip`` appears."
msgstr ""
"Encapsula el uso de la función  :func:`zip` en una llamada a la clase  :"
"class:`list`. Esto está deshabilitado cuando ``from future_builtins import "
"zip`` aparece."

#: ../Doc/library/2to3.rst:454
msgid ":mod:`lib2to3` - 2to3's library"
msgstr ":mod:`lib2to3` - librería 2to3"

#: ../Doc/library/2to3.rst:463
msgid "**Source code:** :source:`Lib/lib2to3/`"
msgstr "**Código fuente:** :source:`Lib/lib2to3/`"

#: ../Doc/library/2to3.rst:467
msgid ""
"Python 3.9 will switch to a PEG parser (see :pep:`617`), and Python 3.10 may "
"include new language syntax that is not parsable by lib2to3's LL(1) parser. "
"The ``lib2to3`` module may be removed from the standard library in a future "
"Python version. Consider third-party alternatives such as `LibCST`_ or "
"`parso`_."
msgstr ""

#: ../Doc/library/2to3.rst:476
msgid ""
"The :mod:`lib2to3` API should be considered unstable and may change "
"drastically in the future."
msgstr ""
"La API del módulo :mod:`lib2to3` debe considerarse inestable y puede cambiar "
"drásticamente en el futuro."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: 2020-06-29 21:32+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/library/base64.rst:2
msgid ":mod:`base64` --- Base16, Base32, Base64, Base85 Data Encodings"
msgstr ""
":mod:`base64` --- Codificaciones de datos Base16, Base32, Base64, y Base85"

#: ../Doc/library/base64.rst:8
msgid "**Source code:** :source:`Lib/base64.py`"
msgstr "**Código fuente:** :source:`Lib/base64.py`"

#: ../Doc/library/base64.rst:16
msgid ""
"This module provides functions for encoding binary data to printable ASCII "
"characters and decoding such encodings back to binary data. It provides "
"encoding and decoding functions for the encodings specified in :rfc:`3548`, "
"which defines the Base16, Base32, and Base64 algorithms, and for the de-"
"facto standard Ascii85 and Base85 encodings."
msgstr ""
"Este módulo proporciona funciones para codificar datos binarios en "
"caracteres ASCII imprimibles y decodificar dichas codificaciones en datos "
"binarios. Proporciona funciones de codificación y decodificación para las "
"codificaciones especificadas en :rfc:`3548`, que define los algoritmos "
"Base16, Base32 y Base64, y para las codificaciones estándar de facto Ascii85 "
"y Base85."

#: ../Doc/library/base64.rst:22
msgid ""
"The :rfc:`3548` encodings are suitable for encoding binary data so that it "
"can safely sent by email, used as parts of URLs, or included as part of an "
"HTTP POST request.  The encoding algorithm is not the same as the :program:"
"`uuencode` program."
msgstr ""
"Las codificaciones :rfc:`3548` son adecuadas para codificar datos binarios "
"para que puedan enviarse de forma segura por correo electrónico, usarse como "
"partes de URL o incluirse como parte de una solicitud HTTP POST. El "
"algoritmo de codificación no es el mismo que el programa :program:`uuencode`."

#: ../Doc/library/base64.rst:27
msgid ""
"There are two interfaces provided by this module.  The modern interface "
"supports encoding :term:`bytes-like objects <bytes-like object>` to ASCII :"
"class:`bytes`, and decoding :term:`bytes-like objects <bytes-like object>` "
"or strings containing ASCII to :class:`bytes`.  Both base-64 alphabets "
"defined in :rfc:`3548` (normal, and URL- and filesystem-safe) are supported."
msgstr ""
"Hay dos interfaces proporcionadas por este módulo. La interfaz moderna "
"admite la codificación de :term:`objetos similares a bytes <bytes-like "
"object>` a ASCII :class:`bytes`, y decodificación :term:`objetos similares a "
"bytes <bytes-like object>` o cadenas de caracteres que contienen ASCII a :"
"class:`bytes`. Ambos alfabetos de base 64 definidos en :rfc:`3548` (normal y "
"seguro para URL y sistema de archivos) son compatibles."

#: ../Doc/library/base64.rst:33
msgid ""
"The legacy interface does not support decoding from strings, but it does "
"provide functions for encoding and decoding to and from :term:`file objects "
"<file object>`.  It only supports the Base64 standard alphabet, and it adds "
"newlines every 76 characters as per :rfc:`2045`.  Note that if you are "
"looking for :rfc:`2045` support you probably want to be looking at the :mod:"
"`email` package instead."
msgstr ""
"La interfaz heredada no admite la decodificación desde cadenas de "
"caracteres, pero sí proporciona funciones para codificar y decodificar desde "
"y hacia :term:`objetos de archivo <file object>`. Solo admite el alfabeto "
"estándar Base64 y agrega nuevas líneas cada 76 caracteres según :rfc:`2045`. "
"Tenga en cuenta que si está buscando soporte de :rfc:`2045`, probablemente "
"desee ver el paquete :mod:`email` en su lugar."

#: ../Doc/library/base64.rst:41
msgid ""
"ASCII-only Unicode strings are now accepted by the decoding functions of the "
"modern interface."
msgstr ""
"Las cadenas de caracteres Unicode de solo ASCII ahora son aceptadas por las "
"funciones de decodificación de la interfaz moderna."

#: ../Doc/library/base64.rst:45
msgid ""
"Any :term:`bytes-like objects <bytes-like object>` are now accepted by all "
"encoding and decoding functions in this module.  Ascii85/Base85 support "
"added."
msgstr ""
"Cualquier :term:`objeto similar a bytes <bytes-like object>` ahora son "
"aceptados por todas las funciones de codificación y decodificación en este "
"módulo. Ascii85/Base85 soporte agregado."

#: ../Doc/library/base64.rst:49
msgid "The modern interface provides:"
msgstr "Las interfaces modernas proporcionan:"

#: ../Doc/library/base64.rst:53
msgid ""
"Encode the :term:`bytes-like object` *s* using Base64 and return the "
"encoded :class:`bytes`."
msgstr ""
"Codifica el :term:`objeto similar a bytes <bytes-like object>` *s* "
"utilizando Base64 y retorna los :class:`bytes` codificados."

#: ../Doc/library/base64.rst:56
msgid ""
"Optional *altchars* must be a :term:`bytes-like object` of at least length 2 "
"(additional characters are ignored) which specifies an alternative alphabet "
"for the ``+`` and ``/`` characters.  This allows an application to e.g. "
"generate URL or filesystem safe Base64 strings.  The default is ``None``, "
"for which the standard Base64 alphabet is used."
msgstr ""
"Los *altchars* opcionales deben ser un :term:`objeto similar a bytes <bytes-"
"like object>` de al menos longitud 2 (se ignoran los caracteres adicionales) "
"que especifica un alfabeto alternativo para los caracteres ``+`` y ``/``. "
"Esto permite que una aplicación, por ejemplo, generar URL o cadenas de "
"caracteres de Base64 seguras para el sistema de archivos. El valor "
"predeterminado es ``None``, para el que se utiliza el alfabeto estándar "
"Base64."

#: ../Doc/library/base64.rst:65
msgid ""
"Decode the Base64 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Decodifica el :term:`objeto similar a bytes <bytes-like object>` codificado "
"en Base64 o cadena de caracteres ASCII *s* y retorna los :class:`bytes` "
"decodificados."

#: ../Doc/library/base64.rst:68
msgid ""
"Optional *altchars* must be a :term:`bytes-like object` or ASCII string of "
"at least length 2 (additional characters are ignored) which specifies the "
"alternative alphabet used instead of the ``+`` and ``/`` characters."
msgstr ""
"Los *altchars* opcionales deben ser :term:`objetos similares a byte <bytes-"
"like object>` o cadena de caracteres ASCII de al menos longitud 2 (se "
"ignoran los caracteres adicionales) que especifica el alfabeto alternativo "
"utilizado en lugar de los caracteres ``+`` y ``/``."

#: ../Doc/library/base64.rst:72
msgid ""
"A :exc:`binascii.Error` exception is raised if *s* is incorrectly padded."
msgstr ""
"Una excepción :exc:`binascii.Error` se lanza si *s* está incorrectamente "
"rellenado (*padded*)."

#: ../Doc/library/base64.rst:75
msgid ""
"If *validate* is ``False`` (the default), characters that are neither in the "
"normal base-64 alphabet nor the alternative alphabet are discarded prior to "
"the padding check.  If *validate* is ``True``, these non-alphabet characters "
"in the input result in a :exc:`binascii.Error`."
msgstr ""
"Si *validate* es ``False`` (el valor predeterminado), los caracteres que no "
"están en el alfabeto normal de base 64 ni en el alfabeto alternativo se "
"descartan antes de la verificación del relleno. Si *validate* es ``True``, "
"estos caracteres no alfabéticos en la entrada dan como resultado :exc:"
"`binascii.Error`."

#: ../Doc/library/base64.rst:84
msgid ""
"Encode :term:`bytes-like object` *s* using the standard Base64 alphabet and "
"return the encoded :class:`bytes`."
msgstr ""
"Codifica el :term:`objeto similar a bytes <bytes-like object>` *s* usando el "
"alfabeto estándar Base64 y retorna los :class:`bytes` codificados."

#: ../Doc/library/base64.rst:90
msgid ""
"Decode :term:`bytes-like object` or ASCII string *s* using the standard "
"Base64 alphabet and return the decoded :class:`bytes`."
msgstr ""
"Decodifica un :term:`bytes-like object` o cadena de caracteres ASCII *s* "
"utilizando el alfabeto estándar Base64 y retorna los :class:`bytes` "
"decodificados."

#: ../Doc/library/base64.rst:96
msgid ""
"Encode :term:`bytes-like object` *s* using the URL- and filesystem-safe "
"alphabet, which substitutes ``-`` instead of ``+`` and ``_`` instead of ``/"
"`` in the standard Base64 alphabet, and return the encoded :class:`bytes`.  "
"The result can still contain ``=``."
msgstr ""
"Codifica el :term:`objecto similar a bytes <bytes-like object>` *s* usando "
"el alfabeto seguro para URL y sistemas de archivos, que sustituye a ``-`` en "
"lugar de ``+`` y ``_`` en lugar de ``/`` en el alfabeto estándar de Base64, "
"y retorna los :class:`bytes` codificados. El resultado aún puede contener "
"``=``."

#: ../Doc/library/base64.rst:105
msgid ""
"Decode :term:`bytes-like object` or ASCII string *s* using the URL- and "
"filesystem-safe alphabet, which substitutes ``-`` instead of ``+`` and ``_`` "
"instead of ``/`` in the standard Base64 alphabet, and return the decoded :"
"class:`bytes`."
msgstr ""
"Decodifica :term:`objeto similar a bytes <bytes-like object>` o cadena de "
"caracteres ASCII *s* utilizando el alfabeto seguro para URL y sistema de "
"archivos, que sustituye ``-`` en lugar de ``+`` y ``_`` en lugar de ``/`` en "
"el alfabeto estándar de Base64, y retorna los :class:`bytes` decodificados."

#: ../Doc/library/base64.rst:114
msgid ""
"Encode the :term:`bytes-like object` *s* using Base32 and return the "
"encoded :class:`bytes`."
msgstr ""
"Codifica el :term:`objeto similar a bytes <bytes-like object>` *s* "
"utilizando Base32 y retorna los :class:`bytes` codificados."

#: ../Doc/library/base64.rst:120
msgid ""
"Decode the Base32 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Decodifica el :term:`objeto similar a bytes <bytes-like object>` codificado "
"en Base32 o cadena de caracteres ASCII *s* y retorna los :class:`bytes` "
"decodificados."

#: ../Doc/library/base64.rst:123 ../Doc/library/base64.rst:150
msgid ""
"Optional *casefold* is a flag specifying whether a lowercase alphabet is "
"acceptable as input.  For security purposes, the default is ``False``."
msgstr ""
"El opcional *casefold* es un flag que especifica si un alfabeto en minúscula "
"es aceptable como entrada. Por motivos de seguridad, el valor predeterminado "
"es ``Falso``."

#: ../Doc/library/base64.rst:127
msgid ""
":rfc:`3548` allows for optional mapping of the digit 0 (zero) to the letter "
"O (oh), and for optional mapping of the digit 1 (one) to either the letter I "
"(eye) or letter L (el).  The optional argument *map01* when not ``None``, "
"specifies which letter the digit 1 should be mapped to (when *map01* is not "
"``None``, the digit 0 is always mapped to the letter O).  For security "
"purposes the default is ``None``, so that 0 and 1 are not allowed in the "
"input."
msgstr ""
":rfc:`3548` permite el mapeo opcional del dígito 0 (cero) a la letra O (oh), "
"y el mapeo opcional del dígito 1 (uno) a la letra I (*eye*) o la letra L "
"(el) . El argumento opcional *map01* cuando no es ``None``, especifica a qué "
"letra se debe asignar el dígito 1 (cuando *map01* no es ``None``, el dígito "
"0 siempre se asigna a la letra O). Por motivos de seguridad, el valor "
"predeterminado es ``None``, por lo que 0 y 1 no están permitidos en la "
"entrada."

#: ../Doc/library/base64.rst:134 ../Doc/library/base64.rst:154
msgid ""
"A :exc:`binascii.Error` is raised if *s* is incorrectly padded or if there "
"are non-alphabet characters present in the input."
msgstr ""
"Una :exc:`binascii.Error` se lanza si *s* está incorrectamente rellenado "
"(*padded*) o si hay caracteres no alfabéticos presentes en la entrada."

#: ../Doc/library/base64.rst:141
msgid ""
"Encode the :term:`bytes-like object` *s* using Base16 and return the "
"encoded :class:`bytes`."
msgstr ""
"Codifica el :term:`objeto similar a bytes <bytes-like object>` *s* "
"utilizando Base16 y retorna los :class:`bytes` codificados."

#: ../Doc/library/base64.rst:147
msgid ""
"Decode the Base16 encoded :term:`bytes-like object` or ASCII string *s* and "
"return the decoded :class:`bytes`."
msgstr ""
"Decodifica el :term:`objeto similar a bytes <bytes-like object>` codificado "
"en Base16 o cadena de caracteres ASCII *s* y retorna los :class:`bytes` "
"decodificados."

#: ../Doc/library/base64.rst:161
msgid ""
"Encode the :term:`bytes-like object` *b* using Ascii85 and return the "
"encoded :class:`bytes`."
msgstr ""
"Codifica el :term:`objeto similar a bytes <bytes-like object>` *b* "
"utilizando Ascii85 y retorna los :class:`bytes` codificados."

#: ../Doc/library/base64.rst:164
msgid ""
"*foldspaces* is an optional flag that uses the special short sequence 'y' "
"instead of 4 consecutive spaces (ASCII 0x20) as supported by 'btoa'. This "
"feature is not supported by the \"standard\" Ascii85 encoding."
msgstr ""
"*foldspaces* es un flag opcional que utiliza la secuencia corta especial 'y' "
"en lugar de 4 espacios consecutivos (ASCII 0x20) como lo admite 'btoa'. Esta "
"característica no es compatible con la codificación Ascii85 \"estándar\"."

#: ../Doc/library/base64.rst:168
msgid ""
"*wrapcol* controls whether the output should have newline (``b'\\n'``) "
"characters added to it. If this is non-zero, each output line will be at "
"most this many characters long."
msgstr ""
"*wrapcol* controla si la salida debe tener caracteres de nueva línea "
"(``b'\\n'``) agregados. Si esto no es cero, cada línea de salida tendrá como "
"máximo esta cantidad de caracteres."

#: ../Doc/library/base64.rst:172
msgid ""
"*pad* controls whether the input is padded to a multiple of 4 before "
"encoding. Note that the ``btoa`` implementation always pads."
msgstr ""
"*pad* controla si la entrada se rellena (*padded*) a un múltiplo de 4 antes "
"de la codificación. Tenga en cuenta que la implementación de ``btoa`` "
"siempre es rellenada (*pads*)."

#: ../Doc/library/base64.rst:175
msgid ""
"*adobe* controls whether the encoded byte sequence is framed with ``<~`` and "
"``~>``, which is used by the Adobe implementation."
msgstr ""
"*adobe* controla si la secuencia de bytes codificada está enmarcada con "
"``<~`` y ``~>``, que es utilizada por la implementación de Adobe."

#: ../Doc/library/base64.rst:183
msgid ""
"Decode the Ascii85 encoded :term:`bytes-like object` or ASCII string *b* and "
"return the decoded :class:`bytes`."
msgstr ""
"Decodifica el :term:`objeto similar a bytes <bytes-like object>` codificado "
"en Ascii85 o cadena de caracteres ASCII *b* y retorna los :class:`bytes` "
"decodificados."

#: ../Doc/library/base64.rst:186
msgid ""
"*foldspaces* is a flag that specifies whether the 'y' short sequence should "
"be accepted as shorthand for 4 consecutive spaces (ASCII 0x20). This feature "
"is not supported by the \"standard\" Ascii85 encoding."
msgstr ""
"*foldspaces* es un flag que especifica si la secuencia corta 'y' debe "
"aceptarse como abreviatura durante 4 espacios consecutivos (ASCII 0x20). "
"Esta característica no es compatible con la codificación Ascii85 \"estándar"
"\"."

#: ../Doc/library/base64.rst:190
msgid ""
"*adobe* controls whether the input sequence is in Adobe Ascii85 format (i.e. "
"is framed with <~ and ~>)."
msgstr ""
"*adobe* controla si la secuencia de entrada está en formato Adobe Ascii85 "
"(es decir, se enmarca con <~ y ~>)."

#: ../Doc/library/base64.rst:193
msgid ""
"*ignorechars* should be a :term:`bytes-like object` or ASCII string "
"containing characters to ignore from the input. This should only contain "
"whitespace characters, and by default contains all whitespace characters in "
"ASCII."
msgstr ""
"*ignorechars* debe ser un :term:`objeto similar a byte <bytes-like object>` "
"o cadena de caracteres ASCII que contiene caracteres para ignorar desde la "
"entrada. Esto solo debe contener caracteres de espacio en blanco, y por "
"defecto contiene todos los caracteres de espacio en blanco en ASCII."

#: ../Doc/library/base64.rst:203
msgid ""
"Encode the :term:`bytes-like object` *b* using base85 (as used in e.g. git-"
"style binary diffs) and return the encoded :class:`bytes`."
msgstr ""
"Codifica el :term:`objeto similar a bytes <bytes-like object>` *b* "
"utilizando base85 (como se usa en por ejemplo, diferencias binarias de "
"estilo git) y retorna los :class:`bytes` codificados."

#: ../Doc/library/base64.rst:206
msgid ""
"If *pad* is true, the input is padded with ``b'\\0'`` so its length is a "
"multiple of 4 bytes before encoding."
msgstr ""
"Si *pad* es verdadero, la entrada se rellena con ``b'\\0'``, por lo que su "
"longitud es un múltiplo de 4 bytes antes de la codificación."

#: ../Doc/library/base64.rst:214
msgid ""
"Decode the base85-encoded :term:`bytes-like object` or ASCII string *b* and "
"return the decoded :class:`bytes`.  Padding is implicitly removed, if "
"necessary."
msgstr ""
"Decodifica el :term:`objeto similar a bytes <bytes-like object>` codificado "
"en base85 o cadena de caracteres ASCII *b* y retorna los :class:`bytes` "
"decodificados. El relleno se elimina implícitamente, si es necesario."

#: ../Doc/library/base64.rst:221
msgid "The legacy interface:"
msgstr "La interfaz antigua:"

#: ../Doc/library/base64.rst:225
msgid ""
"Decode the contents of the binary *input* file and write the resulting "
"binary data to the *output* file. *input* and *output* must be :term:`file "
"objects <file object>`. *input* will be read until ``input.readline()`` "
"returns an empty bytes object."
msgstr ""
"Decodifica el contenido del archivo binario *input* y escribe los datos "
"binarios resultantes en el archivo *output*. *input* y *output* deben ser :"
"term:`objetos archivo <file object>`. *input* se leerá hasta que ``input."
"readline()`` retorne un objeto de bytes vacío."

#: ../Doc/library/base64.rst:233
msgid ""
"Decode the :term:`bytes-like object` *s*, which must contain one or more "
"lines of base64 encoded data, and return the decoded :class:`bytes`."
msgstr ""
"Decodifica el :term:`objeto similar a bytes <bytes-like object>` *s*, que "
"debe contener una o más líneas de datos codificados en base64, y retornará "
"los :class:`bytes` decodificados."

#: ../Doc/library/base64.rst:240
msgid "Deprecated alias of :func:`decodebytes`."
msgstr "Alias deprecado de :func:`decodebytes`."

#: ../Doc/library/base64.rst:247
msgid ""
"Encode the contents of the binary *input* file and write the resulting "
"base64 encoded data to the *output* file. *input* and *output* must be :term:"
"`file objects <file object>`. *input* will be read until ``input.read()`` "
"returns an empty bytes object. :func:`encode` inserts a newline character "
"(``b'\\n'``) after every 76 bytes of the output, as well as ensuring that "
"the output always ends with a newline, as per :rfc:`2045` (MIME)."
msgstr ""
"Codifica el contenido del archivo binario *input* y escribe los datos "
"codificados en base64 resultantes en el archivo *output*. *input* y *output* "
"deben ser :term:`objetos archivos <file object>`. *input* se leerá hasta que "
"``input.read()`` retorna un objeto de bytes vacío. :func:`encode` inserta un "
"carácter de nueva línea (``b'\\n'``) después de cada 76 bytes de la salida, "
"además de garantizar que la salida siempre termine con una nueva línea, "
"según :rfc:`2045` (MIME)."

#: ../Doc/library/base64.rst:257
msgid ""
"Encode the :term:`bytes-like object` *s*, which can contain arbitrary binary "
"data, and return :class:`bytes` containing the base64-encoded data, with "
"newlines (``b'\\n'``) inserted after every 76 bytes of output, and ensuring "
"that there is a trailing newline, as per :rfc:`2045` (MIME)."
msgstr ""
"Codifica el :term:`objeto similar a bytes <bytes-like object>` *s*, que "
"puede contener datos binarios arbitrarios, y retorna :class:`bytes` que "
"contienen los datos codificados en base64, con líneas nuevas (``b'\\n'``) "
"insertado después de cada 76 bytes de salida, y asegurando que haya una "
"nueva línea final, según :rfc:`2045` (MIME)."

#: ../Doc/library/base64.rst:266
msgid "Deprecated alias of :func:`encodebytes`."
msgstr "Alias deprecado de :func:`encodebytes`."

#: ../Doc/library/base64.rst:271
msgid "An example usage of the module:"
msgstr "Un ejemplo de uso del módulo:"

#: ../Doc/library/base64.rst:285
msgid "Module :mod:`binascii`"
msgstr "Módulo :mod:`binascii`"

#: ../Doc/library/base64.rst:285
msgid ""
"Support module containing ASCII-to-binary and binary-to-ASCII conversions."
msgstr ""
"Módulo de soporte que contiene conversiones de ASCII a binario y binario a "
"ASCII."

#: ../Doc/library/base64.rst:288
msgid ""
":rfc:`1521` - MIME (Multipurpose Internet Mail Extensions) Part One: "
"Mechanisms for Specifying and Describing the Format of Internet Message "
"Bodies"
msgstr ""
":rfc:`1521` - MIME (Extensiones multipropósito de correo de Internet) Parte "
"uno: Mecanismos para especificar y describir el formato de los cuerpos de "
"mensajes de Internet"

#: ../Doc/library/base64.rst:288
msgid ""
"Section 5.2, \"Base64 Content-Transfer-Encoding,\" provides the definition "
"of the base64 encoding."
msgstr ""
"La Sección 5.2, \"Codificación de transferencia de contenido Base64\", "
"proporciona la definición de la codificación base64."

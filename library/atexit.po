# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam. 
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/PyCampES/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/atexit.rst:2
msgid ":mod:`atexit` --- Exit handlers"
msgstr ""

#: ../Doc/library/atexit.rst:12
msgid ""
"The :mod:`atexit` module defines functions to register and unregister "
"cleanup functions.  Functions thus registered are automatically executed "
"upon normal interpreter termination.  :mod:`atexit` runs these functions in "
"the *reverse* order in which they were registered; if you register ``A``, "
"``B``, and ``C``, at interpreter termination time they will be run in the "
"order ``C``, ``B``, ``A``."
msgstr ""

#: ../Doc/library/atexit.rst:19
msgid ""
"**Note:** The functions registered via this module are not called when the "
"program is killed by a signal not handled by Python, when a Python fatal "
"internal error is detected, or when :func:`os._exit` is called."
msgstr ""

#: ../Doc/library/atexit.rst:23
msgid ""
"When used with C-API subinterpreters, registered functions are local to the "
"interpreter they were registered in."
msgstr ""

#: ../Doc/library/atexit.rst:29
msgid ""
"Register *func* as a function to be executed at termination.  Any optional "
"arguments that are to be passed to *func* must be passed as arguments to :"
"func:`register`.  It is possible to register the same function and arguments "
"more than once."
msgstr ""

#: ../Doc/library/atexit.rst:34
msgid ""
"At normal program termination (for instance, if :func:`sys.exit` is called "
"or the main module's execution completes), all functions registered are "
"called in last in, first out order.  The assumption is that lower level "
"modules will normally be imported before higher level modules and thus must "
"be cleaned up later."
msgstr ""

#: ../Doc/library/atexit.rst:40
msgid ""
"If an exception is raised during execution of the exit handlers, a traceback "
"is printed (unless :exc:`SystemExit` is raised) and the exception "
"information is saved.  After all exit handlers have had a chance to run the "
"last exception to be raised is re-raised."
msgstr ""

#: ../Doc/library/atexit.rst:45
msgid ""
"This function returns *func*, which makes it possible to use it as a "
"decorator."
msgstr ""

#: ../Doc/library/atexit.rst:51
msgid ""
"Remove *func* from the list of functions to be run at interpreter shutdown.  "
"After calling :func:`unregister`, *func* is guaranteed not to be called when "
"the interpreter shuts down, even if it was registered more than once.  :func:"
"`unregister` silently does nothing if *func* was not previously registered."
msgstr ""

#: ../Doc/library/atexit.rst:61
msgid "Module :mod:`readline`"
msgstr ""

#: ../Doc/library/atexit.rst:61
msgid ""
"Useful example of :mod:`atexit` to read and write :mod:`readline` history "
"files."
msgstr ""

#: ../Doc/library/atexit.rst:68
msgid ":mod:`atexit` Example"
msgstr ""

#: ../Doc/library/atexit.rst:70
msgid ""
"The following simple example demonstrates how a module can initialize a "
"counter from a file when it is imported and save the counter's updated value "
"automatically when the program terminates without relying on the application "
"making an explicit call into this module at termination. ::"
msgstr ""

#: ../Doc/library/atexit.rst:92
msgid ""
"Positional and keyword arguments may also be passed to :func:`register` to "
"be passed along to the registered function when it is called::"
msgstr ""

#: ../Doc/library/atexit.rst:104
msgid "Usage as a :term:`decorator`::"
msgstr ""

#: ../Doc/library/atexit.rst:112
msgid "This only works with functions that can be called without arguments."
msgstr ""

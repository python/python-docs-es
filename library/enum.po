# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2021-08-07 18:56+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language-Team: python-doc-es\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.10.3\n"

#: ../Doc/library/enum.rst:2
msgid ":mod:`enum` --- Support for enumerations"
msgstr ":mod:`enum` — Soporte para enumeraciones"

#: ../Doc/library/enum.rst:14
msgid "**Source code:** :source:`Lib/enum.py`"
msgstr "**Código fuente:** :source:`Lib/enum.py`"

#: ../Doc/library/enum.rst:18
msgid ""
"This page contains the API reference information. For tutorial information "
"and discussion of more advanced topics, see"
msgstr ""
"Esta página contiene la información de referencia de la API. Para obtener "
"información sobre tutoriales y debates sobre temas más avanzados, consulte"

#: ../Doc/library/enum.rst:21
msgid ":ref:`Basic Tutorial <enum-basic-tutorial>`"
msgstr ":ref:`Tutorial básico <enum-basic-tutorial>`"

#: ../Doc/library/enum.rst:22
msgid ":ref:`Advanced Tutorial <enum-advanced-tutorial>`"
msgstr ":ref:`Tutorial avanzado <enum-advanced-tutorial>`"

#: ../Doc/library/enum.rst:23
msgid ":ref:`Enum Cookbook <enum-cookbook>`"
msgstr ":ref:`Libro de recetas Enum <enum-cookbook>`"

#: ../Doc/library/enum.rst:27
msgid "An enumeration:"
msgstr "Una enumeración:"

#: ../Doc/library/enum.rst:29
msgid "is a set of symbolic names (members) bound to unique values"
msgstr ""
"es un conjunto de nombres simbólicos (miembros) vinculados a valores únicos"

#: ../Doc/library/enum.rst:30
msgid "can be iterated over to return its members in definition order"
msgstr "se puede iterar para retornar sus miembros en orden de definición"

#: ../Doc/library/enum.rst:31
msgid "uses *call* syntax to return members by value"
msgstr "usa la sintaxis *call* para retornar miembros por valor"

#: ../Doc/library/enum.rst:32
msgid "uses *index* syntax to return members by name"
msgstr "usa la sintaxis *index* para retornar miembros por nombre"

#: ../Doc/library/enum.rst:34
msgid ""
"Enumerations are created either by using :keyword:`class` syntax, or by "
"using function-call syntax::"
msgstr ""
"Las enumeraciones se crean mediante la sintaxis :keyword:`class` o mediante "
"la sintaxis de llamadas a funciones:"

#: ../Doc/library/enum.rst:48
msgid ""
"Even though we can use :keyword:`class` syntax to create Enums, Enums are "
"not normal Python classes.  See :ref:`How are Enums different? <enum-class-"
"differences>` for more details."
msgstr ""
"Aunque podemos usar la sintaxis :keyword:`class` para crear enumeraciones, "
"las enumeraciones no son clases normales de Python. Ver :ref:`¿En qué se "
"diferencian las enumeraciones? <enum-class-differences>` para más detalles."

#: ../Doc/library/enum.rst:52
msgid "Nomenclature"
msgstr "Nomenclatura"

#: ../Doc/library/enum.rst:54
msgid "The class :class:`Color` is an *enumeration* (or *enum*)"
msgstr "La clase :class:`Color` es una *enumeración* (o *enum*)"

#: ../Doc/library/enum.rst:55
msgid ""
"The attributes :attr:`Color.RED`, :attr:`Color.GREEN`, etc., are "
"*enumeration members* (or *members*) and are functionally constants."
msgstr ""
"Los atributos :attr:`Color.RED`, :attr:`Color.GREEN`, etc., son "
"*enumeraciones miembros* (o *miembros*) y son funcionalmente constantes."

#: ../Doc/library/enum.rst:57
msgid ""
"The enum members have *names* and *values* (the name of :attr:`Color.RED` is "
"``RED``, the value of :attr:`Color.BLUE` is ``3``, etc.)"
msgstr ""
"Los miembros de la enumeración tienen *nombres* y *valores* (el nombre de :"
"attr:`Color.RED` es ``ROJO``, el valor de :attr:`Color.BLUE` es ``3``, etc. )"

#: ../Doc/library/enum.rst:64
msgid "Module Contents"
msgstr "Contenido del Módulo"

#: ../Doc/library/enum.rst:66
msgid ":class:`EnumType`"
msgstr ":class:`EnumType`"

#: ../Doc/library/enum.rst:68
msgid "The ``type`` for Enum and its subclasses."
msgstr "El ``type`` para Enum y sus subclases."

#: ../Doc/library/enum.rst:70
msgid ":class:`Enum`"
msgstr ":class:`Enum`"

#: ../Doc/library/enum.rst:72
msgid "Base class for creating enumerated constants."
msgstr "Clase base para crear constantes enumeradas."

#: ../Doc/library/enum.rst:74
msgid ":class:`IntEnum`"
msgstr ":class:`IntEnum`"

#: ../Doc/library/enum.rst:76
msgid ""
"Base class for creating enumerated constants that are also subclasses of :"
"class:`int`. (`Notes`_)"
msgstr ""
"Clase base para crear constantes enumeradas que también son subclases de :"
"class:`int`. (`Notes`_)"

#: ../Doc/library/enum.rst:79
msgid ":class:`StrEnum`"
msgstr ":class:`StrEnum`"

#: ../Doc/library/enum.rst:81
msgid ""
"Base class for creating enumerated constants that are also subclasses of :"
"class:`str`. (`Notes`_)"
msgstr ""
"Clase base para crear constantes enumeradas que también son subclases de :"
"class:`str`. (`Notes`_)"

#: ../Doc/library/enum.rst:84
msgid ":class:`Flag`"
msgstr ":class:`Flag`"

#: ../Doc/library/enum.rst:86
msgid ""
"Base class for creating enumerated constants that can be combined using the "
"bitwise operations without losing their :class:`Flag` membership."
msgstr ""
"Clase base para crear constantes enumeradas que se pueden combinar "
"utilizando las operaciones *bitwise* sin perder su membresía :class:`Flag`."

#: ../Doc/library/enum.rst:89
msgid ":class:`IntFlag`"
msgstr ":class:`IntFlag`"

#: ../Doc/library/enum.rst:91
msgid ""
"Base class for creating enumerated constants that can be combined using the "
"bitwise operators without losing their :class:`IntFlag` membership. :class:"
"`IntFlag` members are also subclasses of :class:`int`. (`Notes`_)"
msgstr ""
"Clase base para crear constantes enumeradas que se pueden combinar mediante "
"los operadores bit a bit sin perder su pertenencia a :class:`IntFlag`. Los "
"miembros :class:`IntFlag` también son subclases de :class:`int`. (`Notes`_)"

#: ../Doc/library/enum.rst:95
msgid ":class:`ReprEnum`"
msgstr ":class:`ReprEnum`"

#: ../Doc/library/enum.rst:97
msgid ""
"Used by :class:`IntEnum`, :class:`StrEnum`, and :class:`IntFlag` to keep "
"the :class:`str() <str>` of the mixed-in type."
msgstr ""
"Usado por :class:`IntEnum`, :class:`StrEnum` y :class:`IntFlag` para "
"mantener el :class:`str() <str>` del tipo mixto."

#: ../Doc/library/enum.rst:100
msgid ":class:`EnumCheck`"
msgstr ":class:`EnumCheck`"

#: ../Doc/library/enum.rst:102
msgid ""
"An enumeration with the values ``CONTINUOUS``, ``NAMED_FLAGS``, and "
"``UNIQUE``, for use with :func:`verify` to ensure various constraints are "
"met by a given enumeration."
msgstr ""
"Una enumeración con los valores ``CONTINUOUS``, ``NAMED_FLAGS`` y "
"``UNIQUE``, para usar con :func:`verify` para garantizar que una enumeración "
"determinada cumpla varias restricciones."

#: ../Doc/library/enum.rst:106
msgid ":class:`FlagBoundary`"
msgstr ":class:`FlagBoundary`"

#: ../Doc/library/enum.rst:108
msgid ""
"An enumeration with the values ``STRICT``, ``CONFORM``, ``EJECT``, and "
"``KEEP`` which allows for more fine-grained control over how invalid values "
"are dealt with in an enumeration."
msgstr ""
"Una enumeración con los valores ``STRICT``, ``CONFORM``, ``EJECT`` y "
"``KEEP`` que permite un control más detallado sobre cómo se tratan los "
"valores no válidos en una enumeración."

#: ../Doc/library/enum.rst:112
msgid ":class:`auto`"
msgstr ":class:`auto`"

#: ../Doc/library/enum.rst:114
msgid ""
"Instances are replaced with an appropriate value for Enum members. :class:"
"`StrEnum` defaults to the lower-cased version of the member name, while "
"other Enums default to 1 and increase from there."
msgstr ""
"Las instancias se reemplazan con un valor apropiado para los miembros de "
"Enum. :class:`StrEnum` usa de manera predeterminada la versión en minúsculas "
"del nombre del miembro, mientras que otras enumeraciones tienen el valor "
"predeterminado de 1 y aumentan a partir de ahí."

#: ../Doc/library/enum.rst:118
msgid ":func:`~enum.property`"
msgstr ":func:`~enum.property`"

#: ../Doc/library/enum.rst:120
msgid ""
"Allows :class:`Enum` members to have attributes without conflicting with "
"member names."
msgstr ""
"Permite que los miembros :class:`Enum` tengan atributos sin entrar en "
"conflicto con los nombres de los miembros."

#: ../Doc/library/enum.rst:123
msgid ":func:`unique`"
msgstr ":func:`unique`"

#: ../Doc/library/enum.rst:125
msgid ""
"Enum class decorator that ensures only one name is bound to any one value."
msgstr ""
"El decorador de clase Enum que garantiza que solo un nombre esté vinculado a "
"cualquier valor."

#: ../Doc/library/enum.rst:127
msgid ":func:`verify`"
msgstr ":func:`verify`"

#: ../Doc/library/enum.rst:129
msgid ""
"Enum class decorator that checks user-selectable constraints on an "
"enumeration."
msgstr ""
"Decorador de clase Enum que verifica las restricciones seleccionables por el "
"usuario en una enumeración."

#: ../Doc/library/enum.rst:132
msgid ":func:`member`"
msgstr ":func:`member`"

#: ../Doc/library/enum.rst:134
msgid "Make ``obj`` a member.  Can be used as a decorator."
msgstr "Convierta a ``obj`` en miembro. Se puede utilizar como decorador."

#: ../Doc/library/enum.rst:136
msgid ":func:`nonmember`"
msgstr ":func:`nonmember`"

#: ../Doc/library/enum.rst:138
msgid "Do not make ``obj`` a member.  Can be used as a decorator."
msgstr "No convierta a ``obj`` en miembro. Se puede utilizar como decorador."

#: ../Doc/library/enum.rst:140
msgid ":func:`global_enum`"
msgstr ":func:`global_enum`"

#: ../Doc/library/enum.rst:142
msgid ""
"Modify the :class:`str() <str>` and :func:`repr` of an enum to show its "
"members as belonging to the module instead of its class. Should only be used "
"if the enum members will be exported to the module global namespace."
msgstr ""
"Modifique :class:`str() <str>` y :func:`repr` de una enumeración para "
"mostrar sus miembros como pertenecientes al módulo en lugar de a su clase. "
"Solo debe usarse si los miembros de la enumeración se exportarán al espacio "
"de nombres global del módulo."

#: ../Doc/library/enum.rst:147
msgid ":func:`show_flag_values`"
msgstr ":func:`show_flag_values`"

#: ../Doc/library/enum.rst:149
msgid "Return a list of all power-of-two integers contained in a flag."
msgstr ""
"Retorna una lista de todos los enteros de potencia de dos contenidos en una "
"bandera."

#: ../Doc/library/enum.rst:152
msgid "``Flag``, ``IntFlag``, ``auto``"
msgstr "``Flag``, ``IntFlag``, ``auto``"

#: ../Doc/library/enum.rst:153
msgid ""
"``StrEnum``, ``EnumCheck``, ``ReprEnum``, ``FlagBoundary``, ``property``, "
"``member``, ``nonmember``, ``global_enum``, ``show_flag_values``"
msgstr ""
"``StrEnum``, ``EnumCheck``, ``ReprEnum``, ``FlagBoundary``, ``property``, "
"``member``, ``nonmember``, ``global_enum``, ``show_flag_values``"

#: ../Doc/library/enum.rst:158
msgid "Data Types"
msgstr "Tipos de datos"

#: ../Doc/library/enum.rst:163
msgid ""
"*EnumType* is the :term:`metaclass` for *enum* enumerations.  It is possible "
"to subclass *EnumType* -- see :ref:`Subclassing EnumType <enumtype-"
"examples>` for details."
msgstr ""
"*EnumType* es el :term:`metaclass` para enumeraciones *enum*. Es posible "
"subclasificar *EnumType*; consulte :ref:`Subclassing EnumType <enumtype-"
"examples>` para obtener más detalles."

#: ../Doc/library/enum.rst:167
msgid ""
"*EnumType* is responsible for setting the correct :meth:`__repr__`, :meth:"
"`__str__`, :meth:`__format__`, and :meth:`__reduce__` methods on the final "
"*enum*, as well as creating the enum members, properly handling duplicates, "
"providing iteration over the enum class, etc."
msgstr ""
"*EnumType* es responsable de configurar los métodos :meth:`__repr__`, :meth:"
"`__str__`, :meth:`__format__` y :meth:`__reduce__` correctos en el *enum* "
"final, así como de crear los miembros de enumeración, manejar correctamente "
"los duplicados, proporcionar iteración sobre la clase de enumeración, etc."

#: ../Doc/library/enum.rst:174
msgid "Returns ``True`` if member belongs to the ``cls``::"
msgstr "Retorna ``True`` si el miembro pertenece a ``cls``::"

#: ../Doc/library/enum.rst:182
msgid ""
"In Python 3.12 it will be possible to check for member values and not just "
"members; until then, a ``TypeError`` will be raised if a non-Enum-member is "
"used in a containment check."
msgstr ""
"En Python 3.12, será posible verificar los valores de los miembros y no solo "
"los miembros; hasta entonces, se generará un ``TypeError`` si se usa un "
"miembro que no sea Enum en una verificación de contención."

#: ../Doc/library/enum.rst:188
msgid ""
"Returns ``['__class__', '__doc__', '__members__', '__module__']`` and the "
"names of the members in *cls*::"
msgstr ""
"Retorna ``['__class__', '__doc__', '__members__', '__module__']`` y los "
"nombres de los miembros en *cls*::"

#: ../Doc/library/enum.rst:196
msgid ""
"Returns the Enum member in *cls* matching *name*, or raises an :exc:"
"`AttributeError`::"
msgstr ""
"Retorna el miembro Enum en *cls* que coincide con *name*, o genera un :exc:"
"`AttributeError`::"

#: ../Doc/library/enum.rst:203
msgid ""
"Returns the Enum member in *cls* matching *name*, or raises an :exc:"
"`KeyError`::"
msgstr ""
"Retorna el miembro Enum en *cls* que coincide con *name*, o genera un :exc:"
"`KeyError`::"

#: ../Doc/library/enum.rst:210
msgid "Returns each member in *cls* in definition order::"
msgstr "Retorna cada miembro en *cls* en orden de definición::"

#: ../Doc/library/enum.rst:217
msgid "Returns the number of member in *cls*::"
msgstr "Retorna el número de miembro en *cls*::"

#: ../Doc/library/enum.rst:224
msgid "Returns each member in *cls* in reverse definition order::"
msgstr "Retorna cada miembro en *cls* en orden de definición inverso:"

#: ../Doc/library/enum.rst:232
msgid "*Enum* is the base class for all *enum* enumerations."
msgstr "*Enum* es la clase base para todas las enumeraciones *enum*."

#: ../Doc/library/enum.rst:236
msgid "The name used to define the ``Enum`` member::"
msgstr "El nombre utilizado para definir el miembro ``Enum``::"

#: ../Doc/library/enum.rst:243
msgid "The value given to the ``Enum`` member::"
msgstr "El valor dado al miembro ``Enum``:"

#: ../Doc/library/enum.rst:248
msgid "Enum member values"
msgstr "Valores de miembros de Enum"

#: ../Doc/library/enum.rst:250
msgid ""
"Member values can be anything: :class:`int`, :class:`str`, etc..  If the "
"exact value is unimportant you may use :class:`auto` instances and an "
"appropriate value will be chosen for you.  Care must be taken if you mix :"
"class:`auto` with other values."
msgstr ""
"Los valores de los miembros pueden ser cualquier cosa: :class:`int`, :class:"
"`str`, etc.. Si el valor exacto no es importante, puede usar instancias :"
"class:`auto` y se elegirá un valor apropiado para usted. Se debe tener "
"cuidado si se mezcla :class:`auto` con otros valores."

#: ../Doc/library/enum.rst:257
msgid ""
"``_ignore_`` is only used during creation and is removed from the "
"enumeration once creation is complete."
msgstr ""
"``_ignore_`` solo se usa durante la creación y se elimina de la enumeración "
"una vez que se completa la creación."

#: ../Doc/library/enum.rst:260
msgid ""
"``_ignore_`` is a list of names that will not become members, and whose "
"names will also be removed from the completed enumeration.  See :ref:"
"`TimePeriod <enum-time-period>` for an example."
msgstr ""
"``_ignore_`` es una lista de nombres que no se convertirán en miembros y "
"cuyos nombres también se eliminarán de la enumeración completa. Consulte :"
"ref:`TimePeriod <enum-time-period>` para ver un ejemplo."

#: ../Doc/library/enum.rst:266
msgid "This method is called in two different ways:"
msgstr "Este método se llama de dos maneras diferentes:"

#: ../Doc/library/enum.rst:268
msgid "to look up an existing member:"
msgstr "para buscar un miembro existente:"

#: ../Doc/library/enum.rst
msgid "cls"
msgstr "cls"

#: ../Doc/library/enum.rst:270 ../Doc/library/enum.rst:275
msgid "The enum class being called."
msgstr "La clase de enumeración que se llama."

#: ../Doc/library/enum.rst
msgid "value"
msgstr "value"

#: ../Doc/library/enum.rst:271
msgid "The value to lookup."
msgstr "El valor a buscar."

#: ../Doc/library/enum.rst:273
msgid "to use the ``cls`` enum to create a new enum:"
msgstr "para usar la enumeración ``cls`` para crear una nueva enumeración:"

#: ../Doc/library/enum.rst:276
msgid "The name of the new Enum to create."
msgstr "El nombre del nuevo Enum para crear."

#: ../Doc/library/enum.rst
msgid "names"
msgstr "names"

#: ../Doc/library/enum.rst:277
msgid "The names/values of the members for the new Enum."
msgstr "Los nombres/valores de los miembros para el nuevo Enum."

#: ../Doc/library/enum.rst
msgid "module"
msgstr "module"

#: ../Doc/library/enum.rst:278
msgid "The name of the module the new Enum is created in."
msgstr "El nombre del módulo en el que se crea el nuevo Enum."

#: ../Doc/library/enum.rst
msgid "qualname"
msgstr "qualname"

#: ../Doc/library/enum.rst:279
msgid "The actual location in the module where this Enum can be found."
msgstr "La ubicación real en el módulo donde se puede encontrar este Enum."

#: ../Doc/library/enum.rst
msgid "type"
msgstr "type"

#: ../Doc/library/enum.rst:280
msgid "A mix-in type for the new Enum."
msgstr "Un tipo de mezcla para el nuevo Enum."

#: ../Doc/library/enum.rst
msgid "start"
msgstr "start"

#: ../Doc/library/enum.rst:281
msgid "The first integer value for the Enum (used by :class:`auto`)"
msgstr "El primer valor entero para Enum (usado por :class:`auto`)"

#: ../Doc/library/enum.rst
msgid "boundary"
msgstr "boundary"

#: ../Doc/library/enum.rst:282
msgid ""
"How to handle out-of-range values from bit operations (:class:`Flag` only)"
msgstr ""
"Cómo manejar valores fuera de rango de operaciones de bits (solo :class:"
"`Flag`)"

#: ../Doc/library/enum.rst:286
msgid ""
"Returns ``['__class__', '__doc__', '__module__', 'name', 'value']`` and any "
"public methods defined on *self.__class__*::"
msgstr ""
"Retorna ``['__class__', '__doc__', '__module__', 'name', 'value']`` y "
"cualquier método público definido en *self.__class__*:"

#: ../Doc/library/enum.rst
msgid "name"
msgstr "name"

#: ../Doc/library/enum.rst:306
msgid "The name of the member being defined (e.g. 'RED')."
msgstr "El nombre del miembro que se está definiendo (por ejemplo, 'RED')."

#: ../Doc/library/enum.rst:307
msgid "The start value for the Enum; the default is 1."
msgstr "El valor inicial de Enum; el valor predeterminado es 1."

#: ../Doc/library/enum.rst
msgid "count"
msgstr "count"

#: ../Doc/library/enum.rst:308
msgid "The number of members currently defined, not including this one."
msgstr "El número de miembros actualmente definidos, sin incluir este."

#: ../Doc/library/enum.rst
msgid "last_values"
msgstr "last_values"

#: ../Doc/library/enum.rst:309
msgid "A list of the previous values."
msgstr "Una lista de los valores anteriores."

#: ../Doc/library/enum.rst:311
msgid ""
"A *staticmethod* that is used to determine the next value returned by :class:"
"`auto`::"
msgstr ""
"Un *staticmethod* que se usa para determinar el siguiente valor retornado "
"por :class:`auto`:"

#: ../Doc/library/enum.rst:326
msgid ""
"A *classmethod* that is used to further configure subsequent subclasses. By "
"default, does nothing."
msgstr ""
"Un *classmethod* que se usa para configurar más subclases subsiguientes. Por "
"defecto, no hace nada."

#: ../Doc/library/enum.rst:331
msgid ""
"A *classmethod* for looking up values not found in *cls*.  By default it "
"does nothing, but can be overridden to implement custom search behavior::"
msgstr ""
"Un *classmethod* para buscar valores que no se encuentran en *cls*. De forma "
"predeterminada, no hace nada, pero se puede anular para implementar un "
"comportamiento de búsqueda personalizado:"

#: ../Doc/library/enum.rst:352
msgid ""
"Returns the string used for *repr()* calls.  By default, returns the *Enum* "
"name, member name, and value, but can be overridden::"
msgstr ""
"Retorna la cadena utilizada para las llamadas *repr()*. De forma "
"predeterminada, retorna el nombre *Enum*, el nombre del miembro y el valor, "
"pero se puede anular:"

#: ../Doc/library/enum.rst:367
msgid ""
"Returns the string used for *str()* calls.  By default, returns the *Enum* "
"name and member name, but can be overridden::"
msgstr ""
"Retorna la cadena utilizada para las llamadas *str()*. De forma "
"predeterminada, retorna el nombre *Enum* y el nombre del miembro, pero se "
"puede anular:"

#: ../Doc/library/enum.rst:381
msgid ""
"Returns the string used for *format()* and *f-string* calls.  By default, "
"returns :meth:`__str__` returns, but can be overridden::"
msgstr ""
"Retorna la cadena utilizada para las llamadas *format()* y *f-string*. De "
"forma predeterminada, retorna :meth:`__str__`, pero se puede anular:"

#: ../Doc/library/enum.rst:395
msgid ""
"Using :class:`auto` with :class:`Enum` results in integers of increasing "
"value, starting with ``1``."
msgstr ""
"El uso de :class:`auto` con :class:`Enum` da como resultado números enteros "
"de valor creciente, comenzando con ``1``."

#: ../Doc/library/enum.rst:401
msgid ""
"*IntEnum* is the same as *Enum*, but its members are also integers and can "
"be used anywhere that an integer can be used.  If any integer operation is "
"performed with an *IntEnum* member, the resulting value loses its "
"enumeration status."
msgstr ""
"*IntEnum* es lo mismo que *Enum*, pero sus miembros también son números "
"enteros y se pueden usar en cualquier lugar donde se pueda usar un número "
"entero. Si se realiza alguna operación con enteros con un miembro *IntEnum*, "
"el valor resultante pierde su estado de enumeración."

#: ../Doc/library/enum.rst:421
msgid ""
"Using :class:`auto` with :class:`IntEnum` results in integers of increasing "
"value, starting with ``1``."
msgstr ""
"El uso de :class:`auto` con :class:`IntEnum` da como resultado números "
"enteros de valor creciente, comenzando con ``1``."

#: ../Doc/library/enum.rst:424 ../Doc/library/enum.rst:595
msgid ""
":meth:`__str__` is now :func:`int.__str__` to better support the "
"*replacement of existing constants* use-case. :meth:`__format__` was "
"already :func:`int.__format__` for that same reason."
msgstr ""
":meth:`__str__` ahora es :func:`int.__str__` para admitir mejor el caso de "
"uso de *replacement of existing constants*. :meth:`__format__` ya era :func:"
"`int.__format__` por la misma razón."

#: ../Doc/library/enum.rst:431
msgid ""
"*StrEnum* is the same as *Enum*, but its members are also strings and can be "
"used in most of the same places that a string can be used.  The result of "
"any string operation performed on or with a *StrEnum* member is not part of "
"the enumeration."
msgstr ""
"*StrEnum* es lo mismo que *Enum*, pero sus miembros también son cadenas y se "
"pueden usar en la mayoría de los mismos lugares en los que se puede usar una "
"cadena. El resultado de cualquier operación de cadena realizada en o con un "
"miembro *StrEnum* no forma parte de la enumeración."

#: ../Doc/library/enum.rst:435
msgid ""
"There are places in the stdlib that check for an exact :class:`str` instead "
"of a :class:`str` subclass (i.e. ``type(unknown) == str`` instead of "
"``isinstance(unknown, str)``), and in those locations you will need to use "
"``str(StrEnum.member)``."
msgstr ""
"Hay lugares en stdlib que buscan un :class:`str` exacto en lugar de una "
"subclase :class:`str` (es decir, ``type(unknown) == str`` en lugar de "
"``isinstance(unknown, str)``), y en esos lugares necesitará usar "
"``str(StrEnum.member)``."

#: ../Doc/library/enum.rst:442
msgid ""
"Using :class:`auto` with :class:`StrEnum` results in the lower-cased member "
"name as the value."
msgstr ""
"El uso de :class:`auto` con :class:`StrEnum` da como resultado el nombre de "
"miembro en minúsculas como valor."

#: ../Doc/library/enum.rst:445
msgid ""
":meth:`__str__` is :func:`str.__str__` to better support the *replacement of "
"existing constants* use-case.  :meth:`__format__` is likewise :func:`str."
"__format__` for that same reason."
msgstr ""
":meth:`__str__` es :func:`str.__str__` para admitir mejor el caso de uso de "
"*replacement of existing constants*. :meth:`__format__` también es :func:"
"`str.__format__` por la misma razón."

#: ../Doc/library/enum.rst:453
msgid ""
"*Flag* members support the bitwise operators ``&`` (*AND*), ``|`` (*OR*), "
"``^`` (*XOR*), and ``~`` (*INVERT*); the results of those operators are "
"members of the enumeration."
msgstr ""
"Los miembros *Flag* admiten los operadores bit a bit ``&`` (*AND*), ``|`` "
"(*OR*), ``^`` (*XOR*) y ``~`` (*INVERT*); los resultados de esos operadores "
"son miembros de la enumeración."

#: ../Doc/library/enum.rst:459
msgid "Returns *True* if value is in self::"
msgstr "Retorna *True* si el valor está en sí mismo::"

#: ../Doc/library/enum.rst:479
msgid "Returns all contained members::"
msgstr "Retorna todos los miembros contenidos::"

#: ../Doc/library/enum.rst:488
msgid "Returns number of members in flag::"
msgstr "Retorna el número de miembros en la bandera::"

#: ../Doc/library/enum.rst:497
msgid "Returns *True* if any members in flag, *False* otherwise::"
msgstr ""
"Retorna *True* si hay algún miembro en la bandera, *False* de lo contrario:"

#: ../Doc/library/enum.rst:509
msgid "Returns current flag binary or'ed with other::"
msgstr "Retorna la bandera actual binaria o con otra:"

#: ../Doc/library/enum.rst:516
msgid "Returns current flag binary and'ed with other::"
msgstr "Retorna el binario de la bandera actual y se combina con otro::"

#: ../Doc/library/enum.rst:525
msgid "Returns current flag binary xor'ed with other::"
msgstr "Retorna la bandera actual binaria xor'ed con otra:"

#: ../Doc/library/enum.rst:534
msgid "Returns all the flags in *type(self)* that are not in self::"
msgstr "Retorna todas las banderas en *type(self)* que no están en uno mismo::"

#: ../Doc/library/enum.rst:545
msgid ""
"Function used to format any remaining unnamed numeric values.  Default is "
"the value's repr; common choices are :func:`hex` and :func:`oct`."
msgstr ""
"Función utilizada para dar formato a los valores numéricos restantes sin "
"nombre. El valor predeterminado es la repr del valor; las opciones comunes "
"son :func:`hex` y :func:`oct`."

#: ../Doc/library/enum.rst:550
msgid ""
"Using :class:`auto` with :class:`Flag` results in integers that are powers "
"of two, starting with ``1``."
msgstr ""
"El uso de :class:`auto` con :class:`Flag` da como resultado números enteros "
"que son potencias de dos, comenzando con ``1``."

#: ../Doc/library/enum.rst:553
msgid "The *repr()* of zero-valued flags has changed.  It is now::"
msgstr "El *repr()* de las banderas de valor cero ha cambiado. Esto es ahora::"

#: ../Doc/library/enum.rst:561
msgid ""
"*IntFlag* is the same as *Flag*, but its members are also integers and can "
"be used anywhere that an integer can be used."
msgstr ""
"*IntFlag* es lo mismo que *Flag*, pero sus miembros también son números "
"enteros y se pueden usar en cualquier lugar donde se pueda usar un número "
"entero."

#: ../Doc/library/enum.rst:574
msgid ""
"If any integer operation is performed with an *IntFlag* member, the result "
"is not an *IntFlag*::"
msgstr ""
"Si se realiza alguna operación con enteros con un miembro *IntFlag*, el "
"resultado no es un *IntFlag*::"

#: ../Doc/library/enum.rst:580
msgid "If a *Flag* operation is performed with an *IntFlag* member and:"
msgstr "Si se realiza una operación *Flag* con un miembro *IntFlag* y:"

#: ../Doc/library/enum.rst:582
msgid "the result is a valid *IntFlag*: an *IntFlag* is returned"
msgstr "el resultado es un *IntFlag* válido: se retorna un *IntFlag*"

#: ../Doc/library/enum.rst:583
msgid ""
"the result is not a valid *IntFlag*: the result depends on the "
"*FlagBoundary* setting"
msgstr ""
"el resultado no es un *IntFlag* válido: el resultado depende de la "
"configuración de *FlagBoundary*"

#: ../Doc/library/enum.rst:585
msgid "The *repr()* of unnamed zero-valued flags has changed.  It is now:"
msgstr ""
"El *repr()* de indicadores de valor cero sin nombre ha cambiado. Esto es "
"ahora:"

#: ../Doc/library/enum.rst:592
msgid ""
"Using :class:`auto` with :class:`IntFlag` results in integers that are "
"powers of two, starting with ``1``."
msgstr ""
"El uso de :class:`auto` con :class:`IntFlag` da como resultado números "
"enteros que son potencias de dos, comenzando con ``1``."

#: ../Doc/library/enum.rst:601
msgid ""
":class:`!ReprEum` uses the :meth:`repr() <Enum.__repr__>` of :class:`Enum`, "
"but the :class:`str() <str>` of the mixed-in data type:"
msgstr ""
":class:`!ReprEum` usa el :meth:`repr() <Enum.__repr__>` de :class:`Enum`, "
"pero el :class:`str() <str>` del tipo de datos mixto:"

#: ../Doc/library/enum.rst:604
msgid ":meth:`!int.__str__` for :class:`IntEnum` and :class:`IntFlag`"
msgstr ":meth:`!int.__str__` para :class:`IntEnum` y :class:`IntFlag`"

#: ../Doc/library/enum.rst:605
msgid ":meth:`!str.__str__` for :class:`StrEnum`"
msgstr ":meth:`!str.__str__` para :class:`StrEnum`"

#: ../Doc/library/enum.rst:607
msgid ""
"Inherit from :class:`!ReprEnum` to keep the :class:`str() <str> / :func:"
"`format` of the mixed-in data type instead of using the :class:`Enum`-"
"default :meth:`str() <Enum.__str__>`."
msgstr ""
"Heredar de :class:`!ReprEnum` para mantener :class:`str() <str> / :func:"
"`format` del tipo de datos mixto en lugar de utilizar el :class:`Enum` por "
"defecto :meth:`str() <Enum.__str__>`."

#: ../Doc/library/enum.rst:616
msgid ""
"*EnumCheck* contains the options used by the :func:`verify` decorator to "
"ensure various constraints; failed constraints result in a :exc:`ValueError`."
msgstr ""
"*EnumCheck* contiene las opciones utilizadas por el decorador :func:`verify` "
"para garantizar diversas restricciones; las restricciones fallidas dan como "
"resultado un :exc:`ValueError`."

#: ../Doc/library/enum.rst:621
msgid "Ensure that each value has only one name::"
msgstr "Asegúrese de que cada valor tenga un solo nombre:"

#: ../Doc/library/enum.rst:637
msgid ""
"Ensure that there are no missing values between the lowest-valued member and "
"the highest-valued member::"
msgstr ""
"Asegúrese de que no falten valores entre el miembro de menor valor y el "
"miembro de mayor valor::"

#: ../Doc/library/enum.rst:652
msgid ""
"Ensure that any flag groups/masks contain only named flags -- useful when "
"values are specified instead of being generated by :func:`auto`"
msgstr ""
"Asegúrese de que los grupos/máscaras de banderas contengan solo banderas con "
"nombre, lo cual es útil cuando se especifican valores en lugar de "
"generarlos :func:`auto`."

#: ../Doc/library/enum.rst:669
msgid ""
"CONTINUOUS and NAMED_FLAGS are designed to work with integer-valued members."
msgstr ""
"CONTINUOUS y NAMED_FLAGS están diseñados para funcionar con miembros con "
"valores enteros."

#: ../Doc/library/enum.rst:675
msgid ""
"*FlagBoundary* controls how out-of-range values are handled in *Flag* and "
"its subclasses."
msgstr ""
"*FlagBoundary* controla cómo se manejan los valores fuera de rango en *Flag* "
"y sus subclases."

#: ../Doc/library/enum.rst:680
msgid ""
"Out-of-range values cause a :exc:`ValueError` to be raised.  This is the "
"default for :class:`Flag`::"
msgstr ""
"Los valores fuera de rango hacen que se genere un :exc:`ValueError`. Este es "
"el valor predeterminado para :class:`Flag`::"

#: ../Doc/library/enum.rst:697
msgid ""
"Out-of-range values have invalid values removed, leaving a valid *Flag* "
"value::"
msgstr ""
"Los valores fuera de rango tienen valores no válidos eliminados, dejando un "
"valor *Flag* válido:"

#: ../Doc/library/enum.rst:710
msgid ""
"Out-of-range values lose their *Flag* membership and revert to :class:`int`. "
"This is the default for :class:`IntFlag`::"
msgstr ""
"Los valores fuera de rango pierden su pertenencia a *Flag* y vuelven a :"
"class:`int`. Este es el valor predeterminado para :class:`IntFlag`::"

#: ../Doc/library/enum.rst:723
msgid ""
"Out-of-range values are kept, and the *Flag* membership is kept.  This is "
"used for some stdlib flags:"
msgstr ""
"Se mantienen los valores fuera de rango y se mantiene la pertenencia a "
"*Flag*. Esto se usa para algunas banderas stdlib:"

#: ../Doc/library/enum.rst:739
msgid "Supported ``__dunder__`` names"
msgstr "Nombres soportados ``__dunder__``"

#: ../Doc/library/enum.rst:741
msgid ""
":attr:`__members__` is a read-only ordered mapping of ``member_name``:"
"``member`` items.  It is only available on the class."
msgstr ""
":attr:`__members__` es una asignación ordenada de solo lectura de artículos "
"``member_name``:``member``. Solo está disponible en la clase."

#: ../Doc/library/enum.rst:744
msgid ""
":meth:`__new__`, if specified, must create and return the enum members; it "
"is also a very good idea to set the member's :attr:`_value_` appropriately.  "
"Once all the members are created it is no longer used."
msgstr ""
":meth:`__new__`, si se especifica, debe crear y retornar los miembros de "
"enumeración; también es una muy buena idea establecer el :attr:`_value_` del "
"miembro apropiadamente. Una vez que se crean todos los miembros, ya no se "
"usa."

#: ../Doc/library/enum.rst:750
msgid "Supported ``_sunder_`` names"
msgstr "Nombres ``_sunder_`` compatibles"

#: ../Doc/library/enum.rst:752
msgid "``_name_`` -- name of the member"
msgstr "``_name_``— nombre del miembro"

#: ../Doc/library/enum.rst:753
msgid ""
"``_value_`` -- value of the member; can be set / modified in ``__new__``"
msgstr ""
"``_value_`` — valor del miembro; se puede definir / modificar en ``__new__``"

#: ../Doc/library/enum.rst:755
msgid ""
"``_missing_`` -- a lookup function used when a value is not found; may be "
"overridden"
msgstr ""
"``_missing_`` — una función de búsqueda utilizada cuando no se encuentra un "
"valor; puede ser anulado"

#: ../Doc/library/enum.rst:757
msgid ""
"``_ignore_`` -- a list of names, either as a :class:`list` or a :class:"
"`str`, that will not be transformed into members, and will be removed from "
"the final class"
msgstr ""
"``_ignore_`` -- una lista de nombres, ya sea como una :func:`list` o una :"
"func:`str` que no será transformada en miembros, y que se eliminará de la "
"clase final"

#: ../Doc/library/enum.rst:760
msgid ""
"``_order_`` -- used in Python 2/3 code to ensure member order is consistent "
"(class attribute, removed during class creation)"
msgstr ""
"``_order_`` — usado en código Python 2/3 para asegurar que el orden de los "
"miembros sea consistente (atributo de clase, eliminado durante la creación "
"de la clase)"

#: ../Doc/library/enum.rst:762
msgid ""
"``_generate_next_value_`` -- used to get an appropriate value for an enum "
"member; may be overridden"
msgstr ""
"``_generate_next_value_``: se usa para obtener un valor apropiado para un "
"miembro de enumeración; puede ser anulado"

#: ../Doc/library/enum.rst:767
msgid ""
"For standard :class:`Enum` classes the next value chosen is the last value "
"seen incremented by one."
msgstr ""
"Para las clases :class:`Enum` estándar, el siguiente valor elegido es el "
"último valor visto incrementado en uno."

#: ../Doc/library/enum.rst:770
msgid ""
"For :class:`Flag` classes the next value chosen will be the next highest "
"power-of-two, regardless of the last value seen."
msgstr ""
"Para las clases :class:`Flag`, el siguiente valor elegido será la siguiente "
"potencia de dos más alta, independientemente del último valor visto."

#: ../Doc/library/enum.rst:773
msgid "``_missing_``, ``_order_``, ``_generate_next_value_``"
msgstr "``_missing_``, ``_order_``, ``_generate_next_value_``"

#: ../Doc/library/enum.rst:774
msgid "``_ignore_``"
msgstr "``_ignore_``"

#: ../Doc/library/enum.rst:779
msgid "Utilities and Decorators"
msgstr "Utilidades y decoradores"

#: ../Doc/library/enum.rst:783
msgid ""
"*auto* can be used in place of a value.  If used, the *Enum* machinery will "
"call an *Enum*'s :meth:`_generate_next_value_` to get an appropriate value. "
"For *Enum* and *IntEnum* that appropriate value will be the last value plus "
"one; for *Flag* and *IntFlag* it will be the first power-of-two greater than "
"the last value; for *StrEnum* it will be the lower-cased version of the "
"member's name."
msgstr ""
"*auto* se puede utilizar en lugar de un valor. Si se usa, la maquinaria "
"*Enum* llamará a :meth:`_generate_next_value_` de *Enum* para obtener un "
"valor apropiado. Para *Enum* y *IntEnum*, ese valor apropiado será el último "
"valor más uno; para *Flag* y *IntFlag* será la primera potencia de dos mayor "
"que el último valor; para *StrEnum* será la versión en minúsculas del nombre "
"del miembro."

#: ../Doc/library/enum.rst:790
msgid ""
"``_generate_next_value_`` can be overridden to customize the values used by "
"*auto*."
msgstr ""
"``_generate_next_value_`` se puede anular para personalizar los valores "
"utilizados por *auto*."

#: ../Doc/library/enum.rst:793
msgid ""
"in 3.13 the default ``\"generate_next_value_`` will always return the "
"highest member value incremented by 1, and will fail if any member is an "
"incompatible type."
msgstr ""
"en 3.13, el ``\"generate_next_value_`` predeterminado siempre retornará el "
"valor de miembro más alto incrementado en 1 y fallará si algún miembro es de "
"un tipo incompatible."

#: ../Doc/library/enum.rst:799
msgid ""
"A decorator similar to the built-in *property*, but specifically for "
"enumerations.  It allows member attributes to have the same names as members "
"themselves."
msgstr ""
"Un decorador similar al *property* integrado, pero específico para "
"enumeraciones. Permite que los atributos de los miembros tengan los mismos "
"nombres que los propios miembros."

#: ../Doc/library/enum.rst:803
msgid ""
"the *property* and the member must be defined in separate classes; for "
"example, the *value* and *name* attributes are defined in the *Enum* class, "
"and *Enum* subclasses can define members with the names ``value`` and "
"``name``."
msgstr ""
"el *property* y el miembro deben definirse en clases separadas; por ejemplo, "
"los atributos *value* y *name* se definen en la clase *Enum* y las subclases "
"*Enum* pueden definir miembros con los nombres ``value`` y ``name``."

#: ../Doc/library/enum.rst:812
msgid ""
"A :keyword:`class` decorator specifically for enumerations.  It searches an "
"enumeration's :attr:`__members__`, gathering any aliases it finds; if any "
"are found :exc:`ValueError` is raised with the details::"
msgstr ""
"Un decorador :keyword:`class` específicamente para enumeraciones. Busca el :"
"attr:`__members__` de una enumeración, recopilando cualquier alias que "
"encuentre; si se encuentra alguno, se genera :exc:`ValueError` con los "
"detalles:"

#: ../Doc/library/enum.rst:830
msgid ""
"A :keyword:`class` decorator specifically for enumerations.  Members from :"
"class:`EnumCheck` are used to specify which constraints should be checked on "
"the decorated enumeration."
msgstr ""
"Un decorador :keyword:`class` específicamente para enumeraciones. Los "
"miembros de :class:`EnumCheck` se utilizan para especificar qué "
"restricciones deben verificarse en la enumeración decorada."

#: ../Doc/library/enum.rst:838
msgid "A decorator for use in enums: its target will become a member."
msgstr ""
"Un decorador para usar en enumeraciones: su objetivo se convertirá en "
"miembro."

#: ../Doc/library/enum.rst:844
msgid "A decorator for use in enums: its target will not become a member."
msgstr ""
"Un decorador para usar en enumeraciones: su destino no se convertirá en "
"miembro."

#: ../Doc/library/enum.rst:850
msgid ""
"A decorator to change the :class:`str() <str>` and :func:`repr` of an enum "
"to show its members as belonging to the module instead of its class. Should "
"only be used when the enum members are exported to the module global "
"namespace (see :class:`re.RegexFlag` for an example)."
msgstr ""
"Un decorador para cambiar el :class:`str() <str>` y :func:`repr` de una "
"enumeración para mostrar sus miembros como pertenecientes al módulo en lugar "
"de a su clase. Solo debe usarse cuando los miembros de la enumeración se "
"exportan al espacio de nombres global del módulo (consulte :class:`re."
"RegexFlag` para ver un ejemplo)."

#: ../Doc/library/enum.rst:860
msgid "Return a list of all power-of-two integers contained in a flag *value*."
msgstr ""
"Retorna una lista de todos los enteros de potencia de dos contenidos en un "
"indicador *value*."

#: ../Doc/library/enum.rst:867
msgid "Notes"
msgstr "Notas"

#: ../Doc/library/enum.rst:869
msgid ":class:`IntEnum`, :class:`StrEnum`, and :class:`IntFlag`"
msgstr ":class:`IntEnum`, :class:`StrEnum` y :class:`IntFlag`"

#: ../Doc/library/enum.rst:871
msgid ""
"These three enum types are designed to be drop-in replacements for existing "
"integer- and string-based values; as such, they have extra limitations:"
msgstr ""
"Estos tres tipos de enumeración están diseñados para ser reemplazos directos "
"de los valores existentes basados ​​en cadenas y enteros; como tales, tienen "
"limitaciones adicionales:"

#: ../Doc/library/enum.rst:874
msgid "``__str__`` uses the value and not the name of the enum member"
msgstr "``__str__`` usa el valor y no el nombre del miembro de enumeración"

#: ../Doc/library/enum.rst:876
msgid ""
"``__format__``, because it uses ``__str__``, will also use the value of the "
"enum member instead of its name"
msgstr ""
"``__format__``, debido a que usa ``__str__``, también usará el valor del "
"miembro de enumeración en lugar de su nombre"

#: ../Doc/library/enum.rst:879
msgid ""
"If you do not need/want those limitations, you can either create your own "
"base class by mixing in the ``int`` or ``str`` type yourself::"
msgstr ""
"Si no necesita/quiere esas limitaciones, puede crear su propia clase base "
"mezclando el tipo ``int`` o ``str`` usted mismo:"

#: ../Doc/library/enum.rst:886
msgid "or you can reassign the appropriate :meth:`str`, etc., in your enum::"
msgstr "o puede reasignar el :meth:`str` apropiado, etc., en su enumeración::"

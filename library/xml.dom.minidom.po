# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-10-09 11:58+0200\n"
"Last-Translator: Francisco Jesús Sevilla García <fjsevilla.dev@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/library/xml.dom.minidom.rst:2
msgid ":mod:`xml.dom.minidom` --- Minimal DOM implementation"
msgstr ":mod:`xml.dom.minidom` --- Implementación mínima del DOM"

#: ../Doc/library/xml.dom.minidom.rst:11
msgid "**Source code:** :source:`Lib/xml/dom/minidom.py`"
msgstr "**Código fuente:** :source:`Lib/xml/dom/minidom.py`"

#: ../Doc/library/xml.dom.minidom.rst:15
msgid ""
":mod:`xml.dom.minidom` is a minimal implementation of the Document Object "
"Model interface, with an API similar to that in other languages.  It is "
"intended to be simpler than the full DOM and also significantly smaller.  "
"Users who are not already proficient with the DOM should consider using the :"
"mod:`xml.etree.ElementTree` module for their XML processing instead."
msgstr ""
":mod:`xml.dom.minidom` es una implementación mínima de la interfaz Document "
"Object Model (Modelo de objetos del documento), con una API similar a la de "
"otros lenguajes. Está destinada a ser más simple que una implementación "
"completa del DOM y también significativamente más pequeña. Aquellos usuarios "
"que aún no dominen el DOM deberían considerar usar el módulo :mod:`xml.etree."
"ElementTree` en su lugar para su procesamiento XML."

#: ../Doc/library/xml.dom.minidom.rst:24
msgid ""
"The :mod:`xml.dom.minidom` module is not secure against maliciously "
"constructed data.  If you need to parse untrusted or unauthenticated data "
"see :ref:`xml-vulnerabilities`."
msgstr ""
"El módulo :mod:`xml.dom.minidom` no es seguro contra datos construidos "
"maliciosamente. Si necesitas analizar datos que no son de confianza o no "
"autenticados, consulta :ref:`xml-vulnerabilities`."

#: ../Doc/library/xml.dom.minidom.rst:29
msgid ""
"DOM applications typically start by parsing some XML into a DOM.  With :mod:"
"`xml.dom.minidom`, this is done through the parse functions::"
msgstr ""
"Las aplicaciones DOM suelen comenzar analizando algún XML en un DOM. Con :"
"mod:`xml.dom.minidom`, esto se hace a través de las funciones de análisis "
"sintáctico::"

#: ../Doc/library/xml.dom.minidom.rst:41
msgid ""
"The :func:`parse` function can take either a filename or an open file object."
msgstr ""
"La función :func:`parse` puede tomar un nombre de archivo o un objeto de "
"archivo previamente abierto."

#: ../Doc/library/xml.dom.minidom.rst:46
msgid ""
"Return a :class:`Document` from the given input. *filename_or_file* may be "
"either a file name, or a file-like object. *parser*, if given, must be a "
"SAX2 parser object. This function will change the document handler of the "
"parser and activate namespace support; other parser configuration (like "
"setting an entity resolver) must have been done in advance."
msgstr ""
"Retorna un :class:`Document` a partir de la entrada dada. *filename_or_file* "
"puede ser un nombre de archivo o un objeto similar a un archivo. *parser*, "
"si se proporciona, debe ser un objeto de un analizador sintáctico SAX2. Esta "
"función intercambiará el controlador de documentos del analizador sintáctico "
"y activará el soporte con el espacio de nombres. Otras configuraciones del "
"analizador sintáctico (como configurar un solucionador de entidades) deben "
"haberse realizado de antemano."

#: ../Doc/library/xml.dom.minidom.rst:52
msgid ""
"If you have XML in a string, you can use the :func:`parseString` function "
"instead:"
msgstr ""
"Si tienes XML en una cadena de caracteres, puedes usar la función :func:"
"`parseString` en su lugar:"

#: ../Doc/library/xml.dom.minidom.rst:58
msgid ""
"Return a :class:`Document` that represents the *string*. This method creates "
"an :class:`io.StringIO` object for the string and passes that on to :func:"
"`parse`."
msgstr ""
"Retorna un objeto :class:`Document` que representa a *string*. Este método "
"crea un objeto :class:`io.StringIO` para la cadena de caracteres y lo pasa "
"a :func:`parse`."

#: ../Doc/library/xml.dom.minidom.rst:61
msgid ""
"Both functions return a :class:`Document` object representing the content of "
"the document."
msgstr ""
"Ambas funciones retornan un objeto :class:`Document` que representa el "
"contenido del documento."

#: ../Doc/library/xml.dom.minidom.rst:64
msgid ""
"What the :func:`parse` and :func:`parseString` functions do is connect an "
"XML parser with a \"DOM builder\" that can accept parse events from any SAX "
"parser and convert them into a DOM tree.  The name of the functions are "
"perhaps misleading, but are easy to grasp when learning the interfaces.  The "
"parsing of the document will be completed before these functions return; "
"it's simply that these functions do not provide a parser implementation "
"themselves."
msgstr ""
"Lo que hacen las funciones :func:`parse` y :func:`parseString` es conectar "
"un analizador sintáctico de XML con un \"constructor DOM\" que puede aceptar "
"eventos de análisis de cualquier analizador sintáctico SAX y convertirlos en "
"un árbol DOM. El nombre de las funciones es quizás engañoso, pero es fácil "
"de entender cuando se comprenden las interfaces. El análisis sintáctico del "
"documento se completará antes de que retornen estas funciones, dichas "
"funciones simplemente no proporcionan una implementación del analizador "
"sintáctico por si mismas."

#: ../Doc/library/xml.dom.minidom.rst:71
msgid ""
"You can also create a :class:`Document` by calling a method on a \"DOM "
"Implementation\" object.  You can get this object either by calling the :"
"func:`getDOMImplementation` function in the :mod:`xml.dom` package or the :"
"mod:`xml.dom.minidom` module.  Once you have a :class:`Document`, you can "
"add child nodes to it to populate the DOM::"
msgstr ""
"También puedes crear un objeto :class:`Document` invocando a un método en un "
"objeto de la \"Implementación del DOM\". Puedes obtener este objeto llamando "
"a la función :func:`getDOMImplementation` del paquete :mod:`xml.dom` o del "
"módulo :mod:`xml.dom.minidom`. Una vez que tengas un objeto :class:"
"`Document`, puedes agregarle nodos secundarios para llenar el DOM::"

#: ../Doc/library/xml.dom.minidom.rst:86
msgid ""
"Once you have a DOM document object, you can access the parts of your XML "
"document through its properties and methods.  These properties are defined "
"in the DOM specification.  The main property of the document object is the :"
"attr:`documentElement` property.  It gives you the main element in the XML "
"document: the one that holds all others.  Here is an example program::"
msgstr ""
"Una vez que tengas un objeto del documento DOM, puedes acceder a las partes "
"de tu documento XML a través de sus propiedades y métodos. Estas propiedades "
"se definen en la especificación DOM. La propiedad principal del objeto del "
"documento es :attr:`documentElement`. Te proporciona el elemento principal "
"en el documento XML: el que contiene a todos los demás. Aquí hay un programa "
"de ejemplo::"

#: ../Doc/library/xml.dom.minidom.rst:95
msgid ""
"When you are finished with a DOM tree, you may optionally call the :meth:"
"`unlink` method to encourage early cleanup of the now-unneeded objects.  :"
"meth:`unlink` is an :mod:`xml.dom.minidom`\\ -specific extension to the DOM "
"API that renders the node and its descendants are essentially useless.  "
"Otherwise, Python's garbage collector will eventually take care of the "
"objects in the tree."
msgstr ""
"Cuando hayas terminado con un árbol DOM, puedes invocar opcionalmente el "
"método :meth:`unlink` para forzar la limpieza temprana de los objetos ahora "
"innecesarios. :meth:`unlink` es una extensión de la API del DOM específica "
"del módulo :mod:`xml.dom.minidom`, que hace que el nodo y sus descendientes "
"sean esencialmente inútiles. En caso de no hacer uso de esto, eventualmente "
"el recolector de basura de Python se hará cargo de los objetos en el árbol."

#: ../Doc/library/xml.dom.minidom.rst:104
msgid ""
"`Document Object Model (DOM) Level 1 Specification <https://www.w3.org/TR/"
"REC-DOM-Level-1/>`_"
msgstr ""
"`Document Object Model (DOM) Level 1 Specification <https://www.w3.org/TR/"
"REC-DOM-Level-1/>`_"

#: ../Doc/library/xml.dom.minidom.rst:105
msgid "The W3C recommendation for the DOM supported by :mod:`xml.dom.minidom`."
msgstr ""
"La recomendación del W3C para el DOM soportada por el módulo :mod:`xml.dom."
"minidom`."

#: ../Doc/library/xml.dom.minidom.rst:111
msgid "DOM Objects"
msgstr "Objetos del DOM"

#: ../Doc/library/xml.dom.minidom.rst:113
msgid ""
"The definition of the DOM API for Python is given as part of the :mod:`xml."
"dom` module documentation.  This section lists the differences between the "
"API and :mod:`xml.dom.minidom`."
msgstr ""
"La definición de la API del DOM para Python se proporciona como parte de la "
"documentación del módulo :mod:`xml.dom`. Esta sección simplemente enumera "
"las diferencias entre esta API y el módulo :mod:`xml.dom.minidom`."

#: ../Doc/library/xml.dom.minidom.rst:120
msgid ""
"Break internal references within the DOM so that it will be garbage "
"collected on versions of Python without cyclic GC.  Even when cyclic GC is "
"available, using this can make large amounts of memory available sooner, so "
"calling this on DOM objects as soon as they are no longer needed is good "
"practice.  This only needs to be called on the :class:`Document` object, but "
"may be called on child nodes to discard children of that node."
msgstr ""
"Rompe las referencias internas dentro del DOM para recolectarlo como basura "
"en las versiones de Python sin recolector de basura cíclico. Incluso cuando "
"se dispone del mismo, su uso puede hacer que grandes cantidades de memoria "
"estén disponibles antes, por lo que es una buena práctica invocar este "
"método en objetos DOM, tan pronto como ya no se necesiten. Solo necesita ser "
"invocado en el objeto :class:`Document`, pero se puede llamar en los nodos "
"hijos para descartar los hijos de ese nodo concreto."

#: ../Doc/library/xml.dom.minidom.rst:127
msgid ""
"You can avoid calling this method explicitly by using the :keyword:`with` "
"statement. The following code will automatically unlink *dom* when the :"
"keyword:`!with` block is exited::"
msgstr ""
"Puedes evitar invocar este método explícitamente utilizando la declaración :"
"keyword:`with`. El siguiente código desvinculará automáticamente *dom* "
"cuando se salga del bloque :keyword:`!with`::"

#: ../Doc/library/xml.dom.minidom.rst:138
msgid ""
"Write XML to the writer object.  The writer receives texts but not bytes as "
"input, it should have a :meth:`write` method which matches that of the file "
"object interface.  The *indent* parameter is the indentation of the current "
"node. The *addindent* parameter is the incremental indentation to use for "
"subnodes of the current one.  The *newl* parameter specifies the string to "
"use to terminate newlines."
msgstr ""
"Escribe XML en el objeto escritor. El escritor recibe texto pero no bytes "
"como entrada, debe tener un método :meth:`write` que coincida con el de la "
"interfaz del objeto de archivo. El parámetro *indent* es la sangría del nodo "
"actual. El parámetro *addindent* es la sangría incremental que se utilizará "
"para los subnodos del nodo actual. El parámetro *newl* especifica la cadena "
"que se utilizará como terminación de las nuevas líneas."

#: ../Doc/library/xml.dom.minidom.rst:145
msgid ""
"For the :class:`Document` node, an additional keyword argument *encoding* "
"can be used to specify the encoding field of the XML header."
msgstr ""
"Para el nodo :class:`Document`, se puede usar el argumento por palabra clave "
"adicional *encoding* para especificar el valor del campo de codificación del "
"encabezado XML."

#: ../Doc/library/xml.dom.minidom.rst:148
msgid ""
"Silimarly, explicitly stating the *standalone* argument causes the "
"standalone document declarations to be added to the prologue of the XML "
"document. If the value is set to `True`, `standalone=\"yes\"` is added, "
"otherwise it is set to `\"no\"`. Not stating the argument will omit the "
"declaration from the document."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:155
msgid ""
"The :meth:`writexml` method now preserves the attribute order specified by "
"the user."
msgstr ""
"El método :meth:`writexml` ahora conserva el orden de los atributos "
"especificado por el usuario."

#: ../Doc/library/xml.dom.minidom.rst:161
msgid ""
"Return a string or byte string containing the XML represented by the DOM "
"node."
msgstr ""
"Retorna una cadena de caracteres o una cadena de bytes que contiene el XML "
"representado por el nodo DOM."

#: ../Doc/library/xml.dom.minidom.rst:164
msgid ""
"With an explicit *encoding* [1]_ argument, the result is a byte string in "
"the specified encoding. With no *encoding* argument, the result is a Unicode "
"string, and the XML declaration in the resulting string does not specify an "
"encoding. Encoding this string in an encoding other than UTF-8 is likely "
"incorrect, since UTF-8 is the default encoding of XML."
msgstr ""
"Si se proporciona de forma explícita un valor para el argumento *encoding* "
"[1]_, el resultado es una cadena de bytes con la codificación especificada. "
"Si no se proporciona el argumento *encoding*, el resultado es una cadena "
"Unicode y la declaración XML en la cadena resultante no especifica una "
"codificación. Codificar esta cadena en una codificación que no sea UTF-8 "
"probablemente sea una práctica incorrecta, ya que UTF-8 es la codificación "
"predeterminada para XML."

#: ../Doc/library/xml.dom.minidom.rst:171
#: ../Doc/library/xml.dom.minidom.rst:187
msgid "The *standalone* argument behaves exactly as in :meth:`writexml`."
msgstr ""

#: ../Doc/library/xml.dom.minidom.rst:173
msgid ""
"The :meth:`toxml` method now preserves the attribute order specified by the "
"user."
msgstr ""
"El método :meth:`toxml` ahora conserva el orden de los atributos "
"especificado por el usuario."

#: ../Doc/library/xml.dom.minidom.rst:180
msgid ""
"Return a pretty-printed version of the document. *indent* specifies the "
"indentation string and defaults to a tabulator; *newl* specifies the string "
"emitted at the end of each line and defaults to ``\\n``."
msgstr ""
"Retorna una versión impresa elegante del documento. *indent* especifica la "
"cadena de caracteres a usar como sangría y es una tabulación por defecto; "
"*newl* especifica la cadena de caracteres emitida al final de cada línea y "
"es ``\\n`` por defecto."

#: ../Doc/library/xml.dom.minidom.rst:184
msgid ""
"The *encoding* argument behaves like the corresponding argument of :meth:"
"`toxml`."
msgstr ""
"El argumento *encoding* se comporta como el argumento correspondiente del "
"método :meth:`toxml`."

#: ../Doc/library/xml.dom.minidom.rst:189
msgid ""
"The :meth:`toprettyxml` method now preserves the attribute order specified "
"by the user."
msgstr ""
"El método :meth:`toprettyxml` ahora conserva el orden de los atributos "
"especificado por el usuario."

#: ../Doc/library/xml.dom.minidom.rst:197
msgid "DOM Example"
msgstr "Ejemplo de DOM"

#: ../Doc/library/xml.dom.minidom.rst:199
msgid ""
"This example program is a fairly realistic example of a simple program. In "
"this particular case, we do not take much advantage of the flexibility of "
"the DOM."
msgstr ""
"Este programa de ejemplo es una demostración bastante realista de un "
"programa simple. En este caso particular, no aprovechamos mucho la "
"flexibilidad del DOM."

#: ../Doc/library/xml.dom.minidom.rst:208
msgid "minidom and the DOM standard"
msgstr "minidom y el estándar DOM"

#: ../Doc/library/xml.dom.minidom.rst:210
msgid ""
"The :mod:`xml.dom.minidom` module is essentially a DOM 1.0-compatible DOM "
"with some DOM 2 features (primarily namespace features)."
msgstr ""
"El módulo :mod:`xml.dom.minidom` es esencialmente un DOM compatible con DOM "
"1.0, con algunas características de DOM 2 (principalmente características "
"del espacio de nombres)."

#: ../Doc/library/xml.dom.minidom.rst:213
msgid ""
"Usage of the DOM interface in Python is straight-forward.  The following "
"mapping rules apply:"
msgstr ""
"El uso de la interfaz DOM en Python es sencillo. Se aplican las siguientes "
"reglas de mapeo:"

#: ../Doc/library/xml.dom.minidom.rst:216
msgid ""
"Interfaces are accessed through instance objects. Applications should not "
"instantiate the classes themselves; they should use the creator functions "
"available on the :class:`Document` object. Derived interfaces support all "
"operations (and attributes) from the base interfaces, plus any new "
"operations."
msgstr ""
"Se accede a las interfaces a través de objetos de instancia. Las "
"aplicaciones no deben instanciar las clases en sí mismas; deben usar las "
"funciones de creación disponibles en el objeto :class:`Document`. Las "
"interfaces derivadas admiten todas las operaciones (y atributos) de las "
"interfaces base, además de cualquier operación nueva."

#: ../Doc/library/xml.dom.minidom.rst:221
msgid ""
"Operations are used as methods. Since the DOM uses only :keyword:`in` "
"parameters, the arguments are passed in normal order (from left to right). "
"There are no optional arguments. ``void`` operations return ``None``."
msgstr ""
"Las operaciones se utilizan como métodos. Dado que el DOM usa solo "
"parámetros :keyword:`in`, los argumentos se pasan en el orden normal (de "
"izquierda a derecha). No hay argumentos opcionales. Las operaciones ``void`` "
"retornan ``None``."

#: ../Doc/library/xml.dom.minidom.rst:225
msgid ""
"IDL attributes map to instance attributes. For compatibility with the OMG "
"IDL language mapping for Python, an attribute ``foo`` can also be accessed "
"through accessor methods :meth:`_get_foo` and :meth:`_set_foo`.  "
"``readonly`` attributes must not be changed; this is not enforced at runtime."
msgstr ""
"Los atributos IDL se asignan a atributos de instancia. Por compatibilidad "
"con el mapeo del lenguaje OMG IDL para Python, también se puede acceder a un "
"atributo ``foo`` a través de los métodos de acceso :meth:`_get_foo` y :meth:"
"`_set_foo`. Los atributos ``readonly`` no deben modificarse; esto no se "
"aplica en tiempo de ejecución."

#: ../Doc/library/xml.dom.minidom.rst:230
msgid ""
"The types ``short int``, ``unsigned int``, ``unsigned long long``, and "
"``boolean`` all map to Python integer objects."
msgstr ""
"Los tipos ``short int``, ``unsigned int``, ``unsigned long long`` y "
"``boolean`` se asignan todos a objetos enteros de Python."

#: ../Doc/library/xml.dom.minidom.rst:233
msgid ""
"The type ``DOMString`` maps to Python strings. :mod:`xml.dom.minidom` "
"supports either bytes or strings, but will normally produce strings. Values "
"of type ``DOMString`` may also be ``None`` where allowed to have the IDL "
"``null`` value by the DOM specification from the W3C."
msgstr ""
"El tipo ``DOMString`` se asigna a cadenas de caracteres de Python. El "
"módulo :mod:`xml.dom.minidom` admite bytes o cadenas de caracteres, pero "
"normalmente producirá cadenas de caracteres. Los valores de tipo "
"``DOMString`` también pueden ser ``None`` cuando la especificación DOM del "
"W3C permite tener el valor IDL ``null``."

#: ../Doc/library/xml.dom.minidom.rst:238
msgid ""
"``const`` declarations map to variables in their respective scope (e.g. "
"``xml.dom.minidom.Node.PROCESSING_INSTRUCTION_NODE``); they must not be "
"changed."
msgstr ""
"Las declaraciones ``const`` se asignan a variables en su ámbito respectivo "
"(por ejemplo, ``xml.dom.minidom.Node.PROCESSING_INSTRUCTION_NODE``); no "
"deben modificarse."

#: ../Doc/library/xml.dom.minidom.rst:241
msgid ""
"``DOMException`` is currently not supported in :mod:`xml.dom.minidom`. "
"Instead, :mod:`xml.dom.minidom` uses standard Python exceptions such as :exc:"
"`TypeError` and :exc:`AttributeError`."
msgstr ""
"``DOMException`` no está actualmente soportado por el módulo :mod:`xml.dom."
"minidom`. En su lugar, :mod:`xml.dom.minidom` usa excepciones estándar de "
"Python como :exc:`TypeError` y :exc:`AttributeError`."

#: ../Doc/library/xml.dom.minidom.rst:245
msgid ""
":class:`NodeList` objects are implemented using Python's built-in list type. "
"These objects provide the interface defined in the DOM specification, but "
"with earlier versions of Python they do not support the official API.  They "
"are, however, much more \"Pythonic\" than the interface defined in the W3C "
"recommendations."
msgstr ""
"Los objetos de la clase :class:`NodeList` se implementan usando el tipo "
"lista incorporado de Python. Estos objetos proporcionan la interfaz definida "
"en la especificación DOM, pero en versiones anteriores de Python no son "
"compatibles con la API oficial. Sin embargo, son mucho más \"pythónicas\" "
"que la interfaz definida en las recomendaciones del W3C."

#: ../Doc/library/xml.dom.minidom.rst:251
msgid ""
"The following interfaces have no implementation in :mod:`xml.dom.minidom`:"
msgstr ""
"Las siguientes interfaces no están implementadas en el módulo :mod:`xml.dom."
"minidom`:"

#: ../Doc/library/xml.dom.minidom.rst:253
msgid ":class:`DOMTimeStamp`"
msgstr ":class:`DOMTimeStamp`"

#: ../Doc/library/xml.dom.minidom.rst:255
msgid ":class:`EntityReference`"
msgstr ":class:`EntityReference`"

#: ../Doc/library/xml.dom.minidom.rst:257
msgid ""
"Most of these reflect information in the XML document that is not of general "
"utility to most DOM users."
msgstr ""
"La mayoría de ellas reflejan información en el documento XML que "
"generalmente no es de utilidad para la mayoría de los usuarios de DOM."

#: ../Doc/library/xml.dom.minidom.rst:261
msgid "Footnotes"
msgstr "Notas al pie"

#: ../Doc/library/xml.dom.minidom.rst:262
msgid ""
"The encoding name included in the XML output should conform to the "
"appropriate standards. For example, \"UTF-8\" is valid, but \"UTF8\" is not "
"valid in an XML document's declaration, even though Python accepts it as an "
"encoding name. See https://www.w3.org/TR/2006/REC-xml11-20060816/#NT-"
"EncodingDecl and https://www.iana.org/assignments/character-sets/character-"
"sets.xhtml."
msgstr ""
"El nombre de codificación incluido en la salida XML debe cumplir con los "
"estándares apropiados. Por ejemplo, \"UTF-8\" es válido, pero \"UTF8\" no es "
"válido en la declaración de un documento XML, aunque Python lo acepta como "
"nombre de codificación. Para más detalles, consulta https://www.w3.org/"
"TR/2006/REC-xml11-20060816/#NT-EncodingDecl y https://www.iana.org/"
"assignments/character-sets/character-sets.xhtml."

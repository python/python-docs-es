# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-07-15 21:14-0500\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es_CO\n"
"X-Generator: Poedit 2.3.1\n"

#: ../Doc/library/binascii.rst:2
msgid ":mod:`binascii` --- Convert between binary and ASCII"
msgstr ":mod:`binascii` --- Convertir entre binario y ASCII"

#: ../Doc/library/binascii.rst:15
msgid ""
"The :mod:`binascii` module contains a number of methods to convert between "
"binary and various ASCII-encoded binary representations. Normally, you will "
"not use these functions directly but use wrapper modules like :mod:`uu`, :"
"mod:`base64`, or :mod:`binhex` instead. The :mod:`binascii` module contains "
"low-level functions written in C for greater speed that are used by the "
"higher-level modules."
msgstr ""
"El módulo :mod:`binascii` contiene una serie de métodos para convertir entre "
"representaciones binarias y varias representaciones binarias codificadas en "
"ASCII. Normalmente, usted no usará estas funciones directamente, en su lugar "
"utilice módulos envoltorios (*wrapper*) como :mod:`uu`, :mod:`base64`, o :"
"mod:`binhex` en su lugar. El módulo :mod:`binascii` contiene funciones de "
"bajo nivel escritas en C para una mayor velocidad que son utilizadas por los "
"módulos de nivel superior."

#: ../Doc/library/binascii.rst:24
msgid ""
"``a2b_*`` functions accept Unicode strings containing only ASCII characters. "
"Other functions only accept :term:`bytes-like objects <bytes-like object>` "
"(such as :class:`bytes`, :class:`bytearray` and other objects that support "
"the buffer protocol)."
msgstr ""
"Las funciones ``a2b_*`` aceptan cadenas Unicode que contienen solo "
"caracteres ASCII. Otras funciones solo aceptan :term:`objetos tipo binarios "
"<bytes-like object>` (como :class:`bytes`, :class:`bytearray` y otros "
"objetos que admiten el protocolo de búfer)."

#: ../Doc/library/binascii.rst:29
msgid "ASCII-only unicode strings are now accepted by the ``a2b_*`` functions."
msgstr ""
"Las cadenas ASCII-only unicode  son ahora aceptadas por las funciones "
"``a2b_*``."

#: ../Doc/library/binascii.rst:33
msgid "The :mod:`binascii` module defines the following functions:"
msgstr "El módulo :mod:`binascii` define las siguientes funciones:"

#: ../Doc/library/binascii.rst:38
msgid ""
"Convert a single line of uuencoded data back to binary and return the binary "
"data. Lines normally contain 45 (binary) bytes, except for the last line. "
"Line data may be followed by whitespace."
msgstr ""
"Convierte una sola línea de datos uuencoded de nuevo a binarios y retorna "
"los datos binarios. Las líneas normalmente contienen 45 bytes (binarios), "
"excepto por la última línea. Los datos de línea pueden ir seguidos de "
"espacios en blanco."

#: ../Doc/library/binascii.rst:45
msgid ""
"Convert binary data to a line of ASCII characters, the return value is the "
"converted line, including a newline char. The length of *data* should be at "
"most 45. If *backtick* is true, zeros are represented by ``'`'`` instead of "
"spaces."
msgstr ""
"Convierte datos binarios a una línea de caracteres ASCII, el valor retornado "
"es la línea convertida, incluido un carácter de nueva línea. La longitud de "
"*data* debe ser como máximo 45. Si *backtick* es verdadero, los ceros se "
"representan mediante ``'`'`` en lugar de espacios."

#: ../Doc/library/binascii.rst:49
msgid "Added the *backtick* parameter."
msgstr "Se ha añadido el parámetro *backtick*."

#: ../Doc/library/binascii.rst:55
msgid ""
"Convert a block of base64 data back to binary and return the binary data. "
"More than one line may be passed at a time."
msgstr ""
"Convierte un bloque de datos en base64 de nuevo a binario y retorna los "
"datos binarios. Se puede pasar más de una línea a la vez."

#: ../Doc/library/binascii.rst:61
msgid ""
"Convert binary data to a line of ASCII characters in base64 coding. The "
"return value is the converted line, including a newline char if *newline* is "
"true.  The output of this function conforms to :rfc:`3548`."
msgstr ""
"Convierte datos binarios en una línea de caracteres ASCII en codificación "
"base64. El valor retornado es la línea convertida, incluido un carácter de "
"nueva línea si *newline* es verdadero.  La salida de esta función se ajusta "
"a :rfc:`3548`."

#: ../Doc/library/binascii.rst:65
msgid "Added the *newline* parameter."
msgstr "Se ha añadido el parámetro *newline*."

#: ../Doc/library/binascii.rst:71
msgid ""
"Convert a block of quoted-printable data back to binary and return the "
"binary data. More than one line may be passed at a time. If the optional "
"argument *header* is present and true, underscores will be decoded as spaces."
msgstr ""
"Convierte un bloque de datos imprimibles entre comillas a binario y retorna "
"los datos binarios. Se puede pasar más de una línea a la vez. Si el "
"argumento opcional *header* está presente y es verdadero, los guiones bajos "
"se decodificarán como espacios."

#: ../Doc/library/binascii.rst:78
msgid ""
"Convert binary data to a line(s) of ASCII characters in quoted-printable "
"encoding.  The return value is the converted line(s). If the optional "
"argument *quotetabs* is present and true, all tabs and spaces will be "
"encoded.   If the optional argument *istext* is present and true, newlines "
"are not encoded but trailing whitespace will be encoded. If the optional "
"argument *header* is present and true, spaces will be encoded as underscores "
"per :rfc:`1522`. If the optional argument *header* is present and false, "
"newline characters will be encoded as well; otherwise linefeed conversion "
"might corrupt the binary data stream."
msgstr ""
"Convierte datos binarios en una(s) línea(s) de caracteres ASCII en "
"codificación imprimible entre comillas. El valor de retorno son las líneas "
"convertidas. Si el argumento opcional *quotetabs* está presente y es "
"verdadero, se codificarán todas los tabs y espacios. Si el argumento "
"opcional *istext* está presente y es verdadero, las nuevas líneas no se "
"codifican, pero se codificarán los espacios en blanco finales. Si el "
"argumento opcional *header* está presente y es verdadero, los espacios se "
"codificarán como guiones bajos por: rfc: `1522`. Si el argumento opcional "
"*header* está presente y es falso, los caracteres de nueva línea también se "
"codificarán; de lo contrario, la conversión de salto de línea podría dañar "
"el flujo de datos binarios."

#: ../Doc/library/binascii.rst:91
msgid ""
"Convert binhex4 formatted ASCII data to binary, without doing RLE-"
"decompression. The string should contain a complete number of binary bytes, "
"or (in case of the last portion of the binhex4 data) have the remaining bits "
"zero."
msgstr ""
"Convierte datos ASCII con formato binhex4 a binario, sin descomprimir RLE. "
"La cadena debe contener un número completo de bytes binarios o (en el caso "
"de la última porción de los datos binhex4) tener los bits restantes cero."

#: ../Doc/library/binascii.rst:98
msgid ""
"Perform RLE-decompression on the data, as per the binhex4 standard. The "
"algorithm uses ``0x90`` after a byte as a repeat indicator, followed by a "
"count. A count of ``0`` specifies a byte value of ``0x90``. The routine "
"returns the decompressed data, unless data input data ends in an orphaned "
"repeat indicator, in which case the :exc:`Incomplete` exception is raised."
msgstr ""
"Realiza descompresión RLE en los datos, según el estándar binhex4. El "
"algoritmo usa ``0x90`` después de un byte como indicador de repetición, "
"seguido de un conteo. Un recuento de ``0`` especifica un valor de byte de "
"``0x90``. La rutina retorna los datos descomprimidos, a menos que los datos "
"de entrada de datos terminen en un indicador de repetición huérfano, en cuyo "
"caso se genera la excepción :exc:`Incomplete`."

#: ../Doc/library/binascii.rst:104
msgid "Accept only bytestring or bytearray objects as input."
msgstr "Acepta solo objetos bytestring o bytearray  como entrada."

#: ../Doc/library/binascii.rst:110
msgid "Perform binhex4 style RLE-compression on *data* and return the result."
msgstr ""
"Realiza la compresión RLE de estilo binhex4 en *data* y retorna el resultado."

#: ../Doc/library/binascii.rst:115
msgid ""
"Perform hexbin4 binary-to-ASCII translation and return the resulting string. "
"The argument should already be RLE-coded, and have a length divisible by 3 "
"(except possibly the last fragment)."
msgstr ""
"Realiza la traducción de binario hexbin4  a ASCII y retorna la cadena "
"resultante. El argumento ya debe estar codificado en RLE y tener una "
"longitud divisible por 3 (excepto posiblemente por el último fragmento)."

#: ../Doc/library/binascii.rst:122
msgid ""
"Compute a 16-bit CRC value of *data*, starting with *value* as the initial "
"CRC, and return the result.  This uses the CRC-CCITT polynomial *x*:sup:`16` "
"+ *x*:sup:`12` + *x*:sup:`5` + 1, often represented as 0x1021.  This CRC is "
"used in the binhex4 format."
msgstr ""
"Calcula un valor CRC de 16 bits de *data*, comenzando con *value* como el "
"CRC inicial, y retorna el resultado. Utiliza el polinomio CRC-CCITT *x*:sup:"
"`16` + *x*:sup:`12` + *x*:sup:`5` + 1, a menudo representado como 0x1021. "
"Este CRC se utiliza en el formato binhex4."

#: ../Doc/library/binascii.rst:130
msgid ""
"Compute CRC-32, the 32-bit checksum of *data*, starting with an initial CRC "
"of *value*.  The default initial CRC is zero.  The algorithm is consistent "
"with the ZIP file checksum.  Since the algorithm is designed for use as a "
"checksum algorithm, it is not suitable for use as a general hash algorithm.  "
"Use as follows::"
msgstr ""
"Calcula CRC-32, la suma de comprobación de 32 bits de *data*, comenzando con "
"un CRC inicial de *value*. El CRC inicial predeterminado es cero. El "
"algoritmo es consistente con la suma de verificación del archivo ZIP. Dado "
"que el algoritmo está diseñado para usarse como un algoritmo de suma de "
"verificación, no es adecuado para usarlo como algoritmo hash general. Úselo "
"de la siguiente manera ::"

#: ../Doc/library/binascii.rst:142
msgid ""
"The result is always unsigned. To generate the same numeric value across all "
"Python versions and platforms, use ``crc32(data) & 0xffffffff``."
msgstr ""
"El resultado siempre está sin firmar. Para generar el mismo valor numérico "
"en todas las versiones y plataformas de Python, use ``crc32(data) & "
"0xffffffff``."

#: ../Doc/library/binascii.rst:151
msgid ""
"Return the hexadecimal representation of the binary *data*.  Every byte of "
"*data* is converted into the corresponding 2-digit hex representation.  The "
"returned bytes object is therefore twice as long as the length of *data*."
msgstr ""
"Retorna la representación hexadecimal del binario *data*. Cada byte de "
"*data* se convierte en la representación hexadecimal de 2 dígitos "
"correspondiente. Por lo tanto, el objeto de bytes retornado es el doble de "
"largo que la longitud de *data*."

#: ../Doc/library/binascii.rst:155
msgid ""
"Similar functionality (but returning a text string) is also conveniently "
"accessible using the :meth:`bytes.hex` method."
msgstr ""
"Una funcionalidad similar (pero que retorna una cadena de texto) también es "
"convenientemente accesible usando el método :meth:`bytes.hex`."

#: ../Doc/library/binascii.rst:158
msgid ""
"If *sep* is specified, it must be a single character str or bytes object. It "
"will be inserted in the output after every *bytes_per_sep* input bytes. "
"Separator placement is counted from the right end of the output by default, "
"if you wish to count from the left, supply a negative *bytes_per_sep* value."
msgstr ""
"Si se especifica *sep*, debe ser un solo carácter *str* o un objeto de "
"bytes. Se insertará en la salida después de cada *bytes_per_sep* bytes de "
"entrada . La ubicación del separador se cuenta desde el extremo derecho de "
"la salida de forma predeterminada; si desea contar desde el izquierdo, "
"proporcione un valor negativo *bytes_per_sep*."

#: ../Doc/library/binascii.rst:173
msgid "The *sep* and *bytes_per_sep* parameters were added."
msgstr "Se agregaron los parámetros *sep* y *bytes_per_sep*."

#: ../Doc/library/binascii.rst:179
msgid ""
"Return the binary data represented by the hexadecimal string *hexstr*.  This "
"function is the inverse of :func:`b2a_hex`. *hexstr* must contain an even "
"number of hexadecimal digits (which can be upper or lower case), otherwise "
"an :exc:`Error` exception is raised."
msgstr ""
"Retorna los datos binarios representados por la cadena hexadecimal "
"*hexstr*.  Esta función es la inversa de :func:`b2a_hex`. *hexstr* debe "
"contener un número par de dígitos hexadecimales (que pueden ser mayúsculas o "
"minúsculas), de lo contrario se produce una excepción :exc:`Error`."

#: ../Doc/library/binascii.rst:184
msgid ""
"Similar functionality (accepting only text string arguments, but more "
"liberal towards whitespace) is also accessible using the :meth:`bytes."
"fromhex` class method."
msgstr ""
"Funcionalidad similar (aceptar sólo argumentos de cadena de texto, pero más "
"liberal hacia espacios en blanco) también es accesible mediante el método de "
"clase :meth:`bytes.fromhex`."

#: ../Doc/library/binascii.rst:190
msgid "Exception raised on errors. These are usually programming errors."
msgstr ""
"Excepción provocada por errores. Estos suelen ser errores de programación."

#: ../Doc/library/binascii.rst:195
msgid ""
"Exception raised on incomplete data. These are usually not programming "
"errors, but may be handled by reading a little more data and trying again."
msgstr ""
"Excepción provocada por datos incompletos. Por lo general, estos no son "
"errores de programación, pero se pueden controlar leyendo un poco más de "
"datos e intentándolo de nuevo."

#: ../Doc/library/binascii.rst:203
msgid "Module :mod:`base64`"
msgstr "Módulo :mod:`base64`"

#: ../Doc/library/binascii.rst:202
#, fuzzy
msgid ""
"Support for RFC compliant base64-style encoding in base 16, 32, 64, and 85."
msgstr ""
"Soporte para compatibilidad con RFC de codificación de estilo base64  en "
"base 16, 32, 64 y 85."

#: ../Doc/library/binascii.rst:206
msgid "Module :mod:`binhex`"
msgstr "Módulo :mod:`binhex`"

#: ../Doc/library/binascii.rst:206
msgid "Support for the binhex format used on the Macintosh."
msgstr "Soporte para el formato *binhex* utilizado en Macintosh."

#: ../Doc/library/binascii.rst:209
msgid "Module :mod:`uu`"
msgstr "Módulo :mod:`uu`"

#: ../Doc/library/binascii.rst:209
msgid "Support for UU encoding used on Unix."
msgstr "Soporte para codificación *UU* usada en Unix."

#: ../Doc/library/binascii.rst:211
msgid "Module :mod:`quopri`"
msgstr "Módulo :mod:`quopri`"

#: ../Doc/library/binascii.rst:212
msgid "Support for quoted-printable encoding used in MIME email messages."
msgstr ""
"Soporte para codificación imprimible entre comillas utilizada en mensajes de "
"correo electrónico MIME."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam. 
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: 2019-05-06 17:18-0400\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language-Team: python-doc-es\n"
"Language: es\n"
"X-Generator: Poedit 2.2.1\n"

#: ../Doc/tutorial/appetite.rst:5
msgid "Whetting Your Appetite"
msgstr "Abriendo el apetito"

#: ../Doc/tutorial/appetite.rst:7
msgid ""
"If you do much work on computers, eventually you find that there's some task "
"you'd like to automate.  For example, you may wish to perform a search-and-"
"replace over a large number of text files, or rename and rearrange a bunch "
"of photo files in a complicated way. Perhaps you'd like to write a small "
"custom database, or a specialized GUI application, or a simple game."
msgstr ""
"Si trabajas mucho con ordenadores, en algún momento encontrarás que hay "
"alguna tarea que quieres automatizar. Por ejemplo, quizás quieres buscar y "
"remplazar un texto en muchos ficheros o renombrar y reordenar un montón de "
"imágenes de forma complicada. Quizás lo que quieres es escribir una pequeña "
"base de datos personalizada, una interfaz gráfica o un juego simple."

#: ../Doc/tutorial/appetite.rst:13
msgid ""
"If you're a professional software developer, you may have to work with "
"several C/C++/Java libraries but find the usual write/compile/test/re-"
"compile cycle is too slow.  Perhaps you're writing a test suite for such a "
"library and find writing the testing code a tedious task.  Or maybe you've "
"written a program that could use an extension language, and you don't want "
"to design and implement a whole new language for your application."
msgstr ""
"Si eres un desarrollador profesional, quizás quieres trabajar con varias "
"librerías de C/C++/Java pero encuentras el ciclo de escribir/compilar/probar/"
"recompilar bastante lento. Quizás estás escribiendo una serie de pruebas "
"para éstas librerías y te parece tedioso escribir el código de pruebas. O "
"quizás has escrito un programa que puede utilizar un lenguaje como extensión "
"y no quieres diseñar e implementar un lenguaje entero para tu aplicación."

#: ../Doc/tutorial/appetite.rst:20
msgid "Python is just the language for you."
msgstr "Python es justo el lenguaje para ti."

#: ../Doc/tutorial/appetite.rst:22
msgid ""
"You could write a Unix shell script or Windows batch files for some of these "
"tasks, but shell scripts are best at moving around files and changing text "
"data, not well-suited for GUI applications or games. You could write a C/C++/"
"Java program, but it can take a lot of development time to get even a first-"
"draft program.  Python is simpler to use, available on Windows, Mac OS X, "
"and Unix operating systems, and will help you get the job done more quickly."
msgstr ""
"Podrías escribir un shell script de Unix o un fichero batch de Windows para "
"alguna de estas tareas pero los shell scripts son mejores para mover "
"ficheros y cambiar texto no para aplicaciones con interfaz gráfica o juegos. "
"Podrías escribir un programa en C/C++/Java pero puede llevar mucho tiempo de "
"desarrollo incluso para tener el primer borrador. Python es más simple de "
"utilizar, disponible en los sistemas operativos Windows, Mac OS X y Unix y "
"te ayudará a realizar el trabajo de forma más rápida."

#: ../Doc/tutorial/appetite.rst:29
msgid ""
"Python is simple to use, but it is a real programming language, offering "
"much more structure and support for large programs than shell scripts or "
"batch files can offer.  On the other hand, Python also offers much more "
"error checking than C, and, being a *very-high-level language*, it has high-"
"level data types built in, such as flexible arrays and dictionaries.  "
"Because of its more general data types Python is applicable to a much larger "
"problem domain than Awk or even Perl, yet many things are at least as easy "
"in Python as in those languages."
msgstr ""
"Python es fácil de utilizar siendo un lenguaje de programación real "
"ofreciendo mucha más estructura y soporte para programas grandes que la que "
"ofrecen shell scripts o ficheros batch. Por otro lado, Python también ofrece "
"mayor comprobación de errores que C y siendo un *lenguaje de muy alto nivel* "
"tiene tipos de datos de alto nivel incorporados como listas flexibles y "
"diccionarios. Debido a sus tipos de datos más generales, Python es aplicable "
"a más dominios que Awk o Perl, aunque hay muchas cosas que son tan sencillas "
"en Python como en esos lenguajes."

#: ../Doc/tutorial/appetite.rst:37
msgid ""
"Python allows you to split your program into modules that can be reused in "
"other Python programs.  It comes with a large collection of standard modules "
"that you can use as the basis of your programs --- or as examples to start "
"learning to program in Python.  Some of these modules provide things like "
"file I/O, system calls, sockets, and even interfaces to graphical user "
"interface toolkits like Tk."
msgstr ""
"Python te permite dividir tu programa en módulos que pueden reutilizarse en "
"otros programas de Python. Tiene una gran colección de módulos estándar que "
"puedes utilizar como la base de tus programas o como ejemplos para empezar a "
"aprender Python. Algunos de estos módulos proporcionan cosas como entrada/"
"salida de ficheros, llamadas a sistema, sockets e incluso interfaces a "
"herramientas de interfaz gráfica como Tk."

#: ../Doc/tutorial/appetite.rst:44
msgid ""
"Python is an interpreted language, which can save you considerable time "
"during program development because no compilation and linking is necessary.  "
"The interpreter can be used interactively, which makes it easy to experiment "
"with features of the language, to write throw-away programs, or to test "
"functions during bottom-up program development. It is also a handy desk "
"calculator."
msgstr ""
"Python es un lenguaje interpretado, lo cual puede ahorrarte mucho tiempo "
"durante el desarrollo ya que no es necesario compilar ni enlazar. El "
"intérprete puede usarse interactivamente, lo que facilita experimentar con "
"características del lenguaje, escribir programas desechables o probar "
"funciones cuando se hace desarrollo de programas de abajo hacia arriba. Es "
"también una calculadora de escritorio práctica."

#: ../Doc/tutorial/appetite.rst:50
msgid ""
"Python enables programs to be written compactly and readably.  Programs "
"written in Python are typically much shorter than equivalent C,  C++, or "
"Java programs, for several reasons:"
msgstr ""
"Python permite escribir programas compactos y legibles. Los programas en "
"Python son típicamente más cortos que sus programas equivalentes en C, C++ o "
"Java por varios motivos:"

#: ../Doc/tutorial/appetite.rst:54
msgid ""
"the high-level data types allow you to express complex operations in a "
"single statement;"
msgstr ""
"los tipos de datos de alto nivel permiten expresar operaciones complejas en "
"una sola instrucción;"

#: ../Doc/tutorial/appetite.rst:57
msgid ""
"statement grouping is done by indentation instead of beginning and ending "
"brackets;"
msgstr ""
"la agrupación de instrucciones se hace mediante indentación en vez de llaves "
"de apertura y cierre;"

#: ../Doc/tutorial/appetite.rst:60
msgid "no variable or argument declarations are necessary."
msgstr "no es necesario declarar variables ni argumentos."

#: ../Doc/tutorial/appetite.rst:62
msgid ""
"Python is *extensible*: if you know how to program in C it is easy to add a "
"new built-in function or module to the interpreter, either to perform "
"critical operations at maximum speed, or to link Python programs to "
"libraries that may only be available in binary form (such as a vendor-"
"specific graphics library). Once you are really hooked, you can link the "
"Python interpreter into an application written in C and use it as an "
"extension or command language for that application."
msgstr ""
"Python es *extensible*: si ya sabes programar en C es fácil añadir nuevas "
"funciones o módulos al intérprete, ya sea para realizar operaciones críticas "
"a velocidad máxima, o para enlazar programas de Python con bibliotecas que "
"tal vez sólo estén disponibles de forma binaria (por ejemplo bibliotecas "
"gráficas específicas de un fabricante). Una vez estés realmente "
"entusiasmado, puedes enlazar el intérprete Python en una aplicación hecha en "
"C y usarlo como lenguaje de extensión o de comando para esa aplicación."

#: ../Doc/tutorial/appetite.rst:70
msgid ""
"By the way, the language is named after the BBC show \"Monty Python's Flying "
"Circus\" and has nothing to do with reptiles.  Making references to Monty "
"Python skits in documentation is not only allowed, it is encouraged!"
msgstr ""
"Por cierto, el lenguaje recibe su nombre del programa de televisión de la "
"BBC \"Monty Python's Flying Circus\" y no tiene nada que ver con reptiles. "
"Hacer referencias sobre Monty Python en la documentación no sólo esta "
"permitido, ¡sino que también está bien visto!"

#: ../Doc/tutorial/appetite.rst:74
msgid ""
"Now that you are all excited about Python, you'll want to examine it in some "
"more detail.  Since the best way to learn a language is to use it, the "
"tutorial invites you to play with the Python interpreter as you read."
msgstr ""
"Ahora que estás emocionado con Python, querrás verlo en más detalle. Como la "
"mejor forma de aprender un lenguaje es usarlo, el tutorial te invita a que "
"juegues con el intérprete de Python a medida que vas leyendo."

#: ../Doc/tutorial/appetite.rst:78
msgid ""
"In the next chapter, the mechanics of using the interpreter are explained.  "
"This is rather mundane information, but essential for trying out the "
"examples shown later."
msgstr ""
"En el próximo capítulo se explicará la mecánica de uso del intérprete. Esta "
"es información bastante mundana, pero es esencial para poder probar los "
"ejemplos que aparecerán más adelante."

#: ../Doc/tutorial/appetite.rst:82
msgid ""
"The rest of the tutorial introduces various features of the Python language "
"and system through examples, beginning with simple expressions, statements "
"and data types, through functions and modules, and finally touching upon "
"advanced concepts like exceptions and user-defined classes."
msgstr ""
"El resto del tutorial introduce varias características del lenguaje y el "
"sistema Python a través de ejemplos, empezando con expresiones, "
"instrucciones y tipos de datos simples, pasando por funciones y módulos, y "
"finalmente tocando conceptos avanzados como excepciones y clases definidas "
"por el usuario."

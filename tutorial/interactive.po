# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2019, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: 2020-03-11 09:34+0100\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language-Team: \n"
"X-Generator: Poedit 2.3\n"
"Last-Translator: Adrian Santos <martinezsantosadrian@gmail.com>\n"
"Language: es_ES\n"

#: ../Doc/tutorial/interactive.rst:5
msgid "Interactive Input Editing and History Substitution"
msgstr "Edición Interactiva de Entradas y Sustitución de Historial"

#: ../Doc/tutorial/interactive.rst:7
msgid ""
"Some versions of the Python interpreter support editing of the current input "
"line and history substitution, similar to facilities found in the Korn shell "
"and the GNU Bash shell.  This is implemented using the `GNU Readline`_ "
"library, which supports various styles of editing.  This library has its own "
"documentation which we won't duplicate here."
msgstr ""
"Algunas versiones del intérprete de Python admiten la edición de la línea de "
"entrada actual y la sustitución del historial, similar a las instalaciones "
"que se encuentran en el shell Korn y el shell GNU Bash. Esto se implementa "
"utilizando la biblioteca `GNU Readline`_, que admite varios estilos de "
"edición. Esta biblioteca tiene su propia documentación que no duplicaremos "
"aquí."

#: ../Doc/tutorial/interactive.rst:17
msgid "Tab Completion and History Editing"
msgstr "Edición Interactiva de Entradas y Sustitución de Historial"

#: ../Doc/tutorial/interactive.rst:19
msgid ""
"Completion of variable and module names is :ref:`automatically enabled "
"<rlcompleter-config>` at interpreter startup so that the :kbd:`Tab` key "
"invokes the completion function; it looks at Python statement names, the "
"current local variables, and the available module names.  For dotted "
"expressions such as ``string.a``, it will evaluate the expression up to the "
"final ``'.'`` and then suggest completions from the attributes of the "
"resulting object.  Note that this may execute application-defined code if an "
"object with a :meth:`__getattr__` method is part of the expression.  The "
"default configuration also saves your history into a file named :file:`."
"python_history` in your user directory. The history will be available again "
"during the next interactive interpreter session."
msgstr ""
"La finalización de los nombres de variables y módulos es :ref:`automatically "
"enabled <rlcompleter-config>` en el inicio del intérprete para que la tecla :"
"kbd:`Tab` invoque la función de finalización; analiza los nombres de las "
"declaraciones de Python, las variables locales actuales y los nombres de los "
"módulos disponibles. Para expresiones punteadas como ``string.a``, evaluará "
"la expresión hasta el final `` '.' `` Y luego sugerirá terminaciones de los "
"atributos del objeto resultante. Tenga en cuenta que esto puede ejecutar "
"código definido por la aplicación si un objeto con un método :meth:"
"`__getattr__` es parte de la expresión. La configuración predeterminada "
"también guarda su historial en un archivo llamado :file:`.python_history` en "
"su directorio de usuario. El historial estará disponible nuevamente durante "
"la próxima sesión interactiva de intérprete."

#: ../Doc/tutorial/interactive.rst:36
msgid "Alternatives to the Interactive Interpreter"
msgstr "El Archivo de Inicio Interactivo"

#: ../Doc/tutorial/interactive.rst:38
msgid ""
"This facility is an enormous step forward compared to earlier versions of "
"the interpreter; however, some wishes are left: It would be nice if the "
"proper indentation were suggested on continuation lines (the parser knows if "
"an indent token is required next).  The completion mechanism might use the "
"interpreter's symbol table.  A command to check (or even suggest) matching "
"parentheses, quotes, etc., would also be useful."
msgstr ""
"Esta instalación es un enorme paso adelante en comparación con las versiones "
"anteriores del intérprete; sin embargo, quedan algunos deseos: sería bueno "
"si se sugiriera la sangría adecuada en las líneas de continuación (el "
"analizador sabe si se requiere un token de sangría a continuación). El "
"mecanismo de finalización puede usar la tabla de símbolos del intérprete. "
"También sería útil un comando para verificar (o incluso sugerir) paréntesis, "
"comillas, etc."

#: ../Doc/tutorial/interactive.rst:45
msgid ""
"One alternative enhanced interactive interpreter that has been around for "
"quite some time is IPython_, which features tab completion, object "
"exploration and advanced history management.  It can also be thoroughly "
"customized and embedded into other applications.  Another similar enhanced "
"interactive environment is bpython_."
msgstr ""
"Un intérprete interactivo mejorado mejorado que existe desde hace bastante "
"tiempo es IPython_, que presenta la finalización de pestañas, la exploración "
"de objetos y la gestión avanzada del historial. También se puede "
"personalizar completamente e integrar en otras aplicaciones. Otro entorno "
"interactivo mejorado similar es bpython_."

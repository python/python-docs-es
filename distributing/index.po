# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/PyCampES/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/distributing/index.rst:5
msgid "Distributing Python Modules"
msgstr ""

#: ../Doc/distributing/index.rst
msgid "Email"
msgstr ""

#: ../Doc/distributing/index.rst:7
msgid "distutils-sig@python.org"
msgstr ""

#: ../Doc/distributing/index.rst:10
msgid ""
"As a popular open source development project, Python has an active "
"supporting community of contributors and users that also make their software "
"available for other Python developers to use under open source license terms."
msgstr ""

#: ../Doc/distributing/index.rst:14
msgid ""
"This allows Python users to share and collaborate effectively, benefiting "
"from the solutions others have already created to common (and sometimes even "
"rare!) problems, as well as potentially contributing their own solutions to "
"the common pool."
msgstr ""

#: ../Doc/distributing/index.rst:19
msgid ""
"This guide covers the distribution part of the process. For a guide to "
"installing other Python projects, refer to the :ref:`installation guide "
"<installing-index>`."
msgstr ""

#: ../Doc/distributing/index.rst:25
msgid ""
"For corporate and other institutional users, be aware that many "
"organisations have their own policies around using and contributing to open "
"source software. Please take such policies into account when making use of "
"the distribution and installation tools provided with Python."
msgstr ""

#: ../Doc/distributing/index.rst:32
msgid "Key terms"
msgstr ""

#: ../Doc/distributing/index.rst:34
msgid ""
"the `Python Packaging Index <https://pypi.org>`__ is a public repository of "
"open source licensed packages made available for use by other Python users"
msgstr ""

#: ../Doc/distributing/index.rst:37
msgid ""
"the `Python Packaging Authority <https://www.pypa.io/>`__ are the group of "
"developers and documentation authors responsible for the maintenance and "
"evolution of the standard packaging tools and the associated metadata and "
"file format standards. They maintain a variety of tools, documentation and "
"issue trackers on both `GitHub <https://github.com/pypa>`__ and `Bitbucket "
"<https://bitbucket.org/pypa/>`__."
msgstr ""

#: ../Doc/distributing/index.rst:44
msgid ""
":mod:`distutils` is the original build and distribution system first added "
"to the Python standard library in 1998. While direct use of :mod:`distutils` "
"is being phased out, it still laid the foundation for the current packaging "
"and distribution infrastructure, and it not only remains part of the "
"standard library, but its name lives on in other ways (such as the name of "
"the mailing list used to coordinate Python packaging standards development)."
msgstr ""

#: ../Doc/distributing/index.rst:51
msgid ""
"`setuptools`_ is a (largely) drop-in replacement for :mod:`distutils` first "
"published in 2004. Its most notable addition over the unmodified :mod:"
"`distutils` tools was the ability to declare dependencies on other packages. "
"It is currently recommended as a more regularly updated alternative to :mod:"
"`distutils` that offers consistent support for more recent packaging "
"standards across a wide range of Python versions."
msgstr ""

#: ../Doc/distributing/index.rst:57
msgid ""
"`wheel`_ (in this context) is a project that adds the ``bdist_wheel`` "
"command to :mod:`distutils`/`setuptools`_. This produces a cross platform "
"binary packaging format (called \"wheels\" or \"wheel files\" and defined "
"in :pep:`427`) that allows Python libraries, even those including binary "
"extensions, to be installed on a system without needing to be built locally."
msgstr ""

#: ../Doc/distributing/index.rst:68
msgid "Open source licensing and collaboration"
msgstr ""

#: ../Doc/distributing/index.rst:70
msgid ""
"In most parts of the world, software is automatically covered by copyright. "
"This means that other developers require explicit permission to copy, use, "
"modify and redistribute the software."
msgstr ""

#: ../Doc/distributing/index.rst:74
msgid ""
"Open source licensing is a way of explicitly granting such permission in a "
"relatively consistent way, allowing developers to share and collaborate "
"efficiently by making common solutions to various problems freely available. "
"This leaves many developers free to spend more time focusing on the problems "
"that are relatively unique to their specific situation."
msgstr ""

#: ../Doc/distributing/index.rst:80
msgid ""
"The distribution tools provided with Python are designed to make it "
"reasonably straightforward for developers to make their own contributions "
"back to that common pool of software if they choose to do so."
msgstr ""

#: ../Doc/distributing/index.rst:84
msgid ""
"The same distribution tools can also be used to distribute software within "
"an organisation, regardless of whether that software is published as open "
"source software or not."
msgstr ""

#: ../Doc/distributing/index.rst:90
msgid "Installing the tools"
msgstr ""

#: ../Doc/distributing/index.rst:92
msgid ""
"The standard library does not include build tools that support modern Python "
"packaging standards, as the core development team has found that it is "
"important to have standard tools that work consistently, even on older "
"versions of Python."
msgstr ""

#: ../Doc/distributing/index.rst:97
msgid ""
"The currently recommended build and distribution tools can be installed by "
"invoking the ``pip`` module at the command line::"
msgstr ""

#: ../Doc/distributing/index.rst:104
msgid ""
"For POSIX users (including Mac OS X and Linux users), these instructions "
"assume the use of a :term:`virtual environment`."
msgstr ""

#: ../Doc/distributing/index.rst:107
msgid ""
"For Windows users, these instructions assume that the option to adjust the "
"system PATH environment variable was selected when installing Python."
msgstr ""

#: ../Doc/distributing/index.rst:111
msgid ""
"The Python Packaging User Guide includes more details on the `currently "
"recommended tools`_."
msgstr ""

#: ../Doc/distributing/index.rst:123
msgid "Reading the Python Packaging User Guide"
msgstr ""

#: ../Doc/distributing/index.rst:125
msgid ""
"The Python Packaging User Guide covers the various key steps and elements "
"involved in creating and publishing a project:"
msgstr ""

#: ../Doc/distributing/index.rst:128
msgid "`Project structure`_"
msgstr ""

#: ../Doc/distributing/index.rst:129
msgid "`Building and packaging the project`_"
msgstr ""

#: ../Doc/distributing/index.rst:130
msgid "`Uploading the project to the Python Packaging Index`_"
msgstr ""

#: ../Doc/distributing/index.rst:141
msgid "How do I...?"
msgstr ""

#: ../Doc/distributing/index.rst:143
msgid "These are quick answers or links for some common tasks."
msgstr ""

#: ../Doc/distributing/index.rst:146
msgid "... choose a name for my project?"
msgstr ""

#: ../Doc/distributing/index.rst:148
msgid "This isn't an easy topic, but here are a few tips:"
msgstr ""

#: ../Doc/distributing/index.rst:150
msgid "check the Python Packaging Index to see if the name is already in use"
msgstr ""

#: ../Doc/distributing/index.rst:151
msgid ""
"check popular hosting sites like GitHub, Bitbucket, etc to see if there is "
"already a project with that name"
msgstr ""

#: ../Doc/distributing/index.rst:153
msgid "check what comes up in a web search for the name you're considering"
msgstr ""

#: ../Doc/distributing/index.rst:154
msgid ""
"avoid particularly common words, especially ones with multiple meanings, as "
"they can make it difficult for users to find your software when searching "
"for it"
msgstr ""

#: ../Doc/distributing/index.rst:160
msgid "... create and distribute binary extensions?"
msgstr ""

#: ../Doc/distributing/index.rst:162
msgid ""
"This is actually quite a complex topic, with a variety of alternatives "
"available depending on exactly what you're aiming to achieve. See the Python "
"Packaging User Guide for more information and recommendations."
msgstr ""

#: ../Doc/distributing/index.rst:168
msgid ""
"`Python Packaging User Guide: Binary Extensions <https://packaging.python."
"org/guides/packaging-binary-extensions/>`__"
msgstr ""

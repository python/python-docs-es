# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-12 19:43+0200\n"
"PO-Revision-Date: 2021-10-19 02:00+0200\n"
"Last-Translator: Meta Louis-Kosmas <louiskmeta@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.0\n"

#: ../Doc/c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "Objetos *DateTime*"

#: ../Doc/c-api/datetime.rst:8
#, fuzzy
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`!PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`!PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
"El módulo :mod:`datetime` proporciona varios objetos de fecha y hora. Antes "
"de usar cualquiera de estas funciones, el archivo de encabezado :file:"
"`datetime.h` debe estar incluido en su fuente (tenga en cuenta que esto no "
"está incluido en el archivo :file:`Python.h`), y la macro :c:macro:"
"`PyDateTime_IMPORT` debe llamarse, generalmente como parte de la función de "
"inicialización del módulo. La macro coloca un puntero a una estructura C en "
"una variable estática, :c:data:`PyDateTimeAPI`, que utilizan las siguientes "
"macros."

#: ../Doc/c-api/datetime.rst:18
msgid "This subtype of :c:type:`PyObject` represents a Python date object."
msgstr ""

#: ../Doc/c-api/datetime.rst:22
msgid "This subtype of :c:type:`PyObject` represents a Python datetime object."
msgstr ""

#: ../Doc/c-api/datetime.rst:26
msgid "This subtype of :c:type:`PyObject` represents a Python time object."
msgstr ""

#: ../Doc/c-api/datetime.rst:30
msgid ""
"This subtype of :c:type:`PyObject` represents the difference between two "
"datetime values."
msgstr ""

#: ../Doc/c-api/datetime.rst:34
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python date type; it "
"is the same object as :class:`datetime.date` in the Python layer."
msgstr ""

#: ../Doc/c-api/datetime.rst:39
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python datetime type; "
"it is the same object as :class:`datetime.datetime` in the Python layer."
msgstr ""

#: ../Doc/c-api/datetime.rst:44
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python time type; it "
"is the same object as :class:`datetime.time` in the Python layer."
msgstr ""

#: ../Doc/c-api/datetime.rst:49
msgid ""
"This instance of :c:type:`PyTypeObject` represents Python type for the "
"difference between two datetime values; it is the same object as :class:"
"`datetime.timedelta` in the Python layer."
msgstr ""

#: ../Doc/c-api/datetime.rst:55
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python time zone info "
"type; it is the same object as :class:`datetime.tzinfo` in the Python layer."
msgstr ""

#: ../Doc/c-api/datetime.rst:59
msgid "Macro for access to the UTC singleton:"
msgstr "Macro para acceder al singleton UTC:"

#: ../Doc/c-api/datetime.rst:63
msgid ""
"Returns the time zone singleton representing UTC, the same object as :attr:"
"`datetime.timezone.utc`."
msgstr ""
"Retorna la zona horaria singleton que representa UTC, el mismo objeto que :"
"attr:`datetime.timezone.utc`."

#: ../Doc/c-api/datetime.rst:69
msgid "Type-check macros:"
msgstr "Macros de verificación de tipo:"

#: ../Doc/c-api/datetime.rst:73
#, fuzzy
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`!PyDateTime_DateType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_DateType` o un "
"subtipo de :c:data:`PyDateTime_DateType`. *ob* no debe ser ``NULL``. Esta "
"función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:80
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_DateType`. *ob* no "
"debe ser ``NULL``. Esta función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:86
#, fuzzy
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`!PyDateTime_DateTimeType`.  *ob* must not be ``NULL``.  "
"This function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_DateTimeType` o un "
"subtipo de :c:data:`PyDateTime_DateTimeType`. *ob* no debe ser ``NULL``. "
"Esta función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:93
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_DateTimeType`. *ob* "
"no debe ser ``NULL``. Esta función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:99
#, fuzzy
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`!PyDateTime_TimeType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_TimeType` o un "
"subtipo de :c:data:`PyDateTime_TimeType`. *ob* no debe ser ``NULL``. Esta "
"función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:106
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_TimeType`. *ob* no "
"debe ser ``NULL``. Esta función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:112
#, fuzzy
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`!PyDateTime_DeltaType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_DeltaType` o un "
"subtipo de :c:data:`PyDateTime_DeltaType`. *ob* no debe ser ``NULL``. Esta "
"función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:119
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_DeltaType`. *ob* no "
"debe ser ``NULL``. Esta función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:125
#, fuzzy
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`!PyDateTime_TZInfoType`.  *ob* must not be ``NULL``.  This "
"function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_TZInfoType` o un "
"subtipo de :c:data:`PyDateTime_TZInfoType`.  *ob* no debe ser ``NULL``. Esta "
"función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:132
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be ``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadero si *ob* es de tipo :c:data:`PyDateTime_TZInfoType`. *ob* "
"no debe ser ``NULL``. Esta función siempre finaliza con éxito."

#: ../Doc/c-api/datetime.rst:136
msgid "Macros to create objects:"
msgstr "Macros para crear objetos:"

#: ../Doc/c-api/datetime.rst:140
msgid ""
"Return a :class:`datetime.date` object with the specified year, month and "
"day."
msgstr ""
"Retorna un objeto :class:`datetime.date` con el año, mes y día especificados."

#: ../Doc/c-api/datetime.rst:145
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second and microsecond."
msgstr ""
"Retorna un objeto :class:`datetime.datetime` con el año, mes, día, hora, "
"minuto, segundo y micro segundo especificados."

#: ../Doc/c-api/datetime.rst:151
msgid ""
"Return a :class:`datetime.datetime` object with the specified year, month, "
"day, hour, minute, second, microsecond and fold."
msgstr ""
"Retorna un objeto :class:`datetime.datetime` con el año, mes, día, hora, "
"minuto, segundo, micro segundo y doblez especificados."

#: ../Doc/c-api/datetime.rst:159
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second and microsecond."
msgstr ""
"Retorna un objeto :class:`datetime.time` con la hora, minuto, segundo y "
"micro segundo especificados."

#: ../Doc/c-api/datetime.rst:165
msgid ""
"Return a :class:`datetime.time` object with the specified hour, minute, "
"second, microsecond and fold."
msgstr ""
"Retorna un objeto :class:`datetime.time` con la hora, minuto, segundo, micro "
"segundo y doblez especificados."

#: ../Doc/c-api/datetime.rst:173
msgid ""
"Return a :class:`datetime.timedelta` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for :class:`datetime.timedelta` objects."
msgstr ""
"Retorna un objeto :class:`datetime.timedelta` que representa el número dado "
"de días, segundos y micro segundos. La normalización se realiza de modo que "
"el número resultante de micro segundos y segundos se encuentre en los rangos "
"documentados para los objetos :class:`datetime.timedelta`."

#: ../Doc/c-api/datetime.rst:181
msgid ""
"Return a :class:`datetime.timezone` object with an unnamed fixed offset "
"represented by the *offset* argument."
msgstr ""
"Retorna un objeto :class:`datetime.timezone` con un desplazamiento fijo sin "
"nombre representado por el argumento *offset*."

#: ../Doc/c-api/datetime.rst:189
msgid ""
"Return a :class:`datetime.timezone` object with a fixed offset represented "
"by the *offset* argument and with tzname *name*."
msgstr ""
"Retorna un objeto :class:`datetime.timezone` con un desplazamiento fijo "
"representado por el argumento *offset* y con tzname *name*."

#: ../Doc/c-api/datetime.rst:195
#, fuzzy
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Date`, including subclasses (such as :c:type:"
"`PyDateTime_DateTime`).  The argument must not be ``NULL``, and the type is "
"not checked:"
msgstr ""
"Macros para extraer campos de objetos de fecha. El argumento debe ser una "
"instancia de :c:data:`PyDateTime_Date`, incluidas las subclases (como :c:"
"data:`PyDateTime_DateTime`). El argumento no debe ser ``NULL`` y el tipo no "
"está marcado:"

#: ../Doc/c-api/datetime.rst:202
msgid "Return the year, as a positive int."
msgstr "Regrese el año, como un int positivo."

#: ../Doc/c-api/datetime.rst:207
msgid "Return the month, as an int from 1 through 12."
msgstr "Regresa el mes, como int del 1 al 12."

#: ../Doc/c-api/datetime.rst:212
msgid "Return the day, as an int from 1 through 31."
msgstr "Retorna el día, como int del 1 al 31."

#: ../Doc/c-api/datetime.rst:215
#, fuzzy
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:type:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extraer campos de objetos de fecha y hora. El argumento debe ser "
"una instancia de :c:data:`PyDateTime_DateTime`, incluidas las subclases. El "
"argumento no debe ser ``NULL`` y el tipo no es comprobado:"

#: ../Doc/c-api/datetime.rst:221 ../Doc/c-api/datetime.rst:259
msgid "Return the hour, as an int from 0 through 23."
msgstr "Retorna la hora, como un int de 0 hasta 23."

#: ../Doc/c-api/datetime.rst:226 ../Doc/c-api/datetime.rst:264
msgid "Return the minute, as an int from 0 through 59."
msgstr "Retorna el minuto, como un int de 0 hasta 59."

#: ../Doc/c-api/datetime.rst:231 ../Doc/c-api/datetime.rst:269
msgid "Return the second, as an int from 0 through 59."
msgstr "Retorna el segundo, como un int de 0 hasta 59."

#: ../Doc/c-api/datetime.rst:236 ../Doc/c-api/datetime.rst:274
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "Retorna el micro segundo, como un int de 0 hasta 999999."

#: ../Doc/c-api/datetime.rst:241 ../Doc/c-api/datetime.rst:279
#, fuzzy
msgid "Return the fold, as an int from 0 through 1."
msgstr "Retorna el día, como int del 1 al 31."

#: ../Doc/c-api/datetime.rst:248 ../Doc/c-api/datetime.rst:286
msgid "Return the tzinfo (which may be ``None``)."
msgstr "Retorna el tzinfo (que puede ser ``None``)."

#: ../Doc/c-api/datetime.rst:253
#, fuzzy
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Time`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extraer campos de objetos de tiempo. El argumento debe ser una "
"instancia de :c:data:`PyDateTime_Time`, incluidas las subclases. El "
"argumento no debe ser ``NULL`` y el tipo no está marcado:"

#: ../Doc/c-api/datetime.rst:291
#, fuzzy
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:type:`PyDateTime_Delta`, including subclasses. The argument "
"must not be ``NULL``, and the type is not checked:"
msgstr ""
"Macros para extraer campos de objetos delta de tiempo. El argumento debe ser "
"una instancia de :c:data:`PyDateTime_Delta`, incluidas las subclases. El "
"argumento no debe ser ``NULL`` y el tipo no está marcado:"

#: ../Doc/c-api/datetime.rst:297
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr "Retorna el número de días, como un int desde -999999999 a 999999999."

#: ../Doc/c-api/datetime.rst:304
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "Retorna el número de segundos, como un int de 0 a 86399."

#: ../Doc/c-api/datetime.rst:311
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr "Retorna el número de micro segundos, como un int de 0 a 999999."

#: ../Doc/c-api/datetime.rst:316
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "Macros para la conveniencia de módulos que implementan la API DB:"

#: ../Doc/c-api/datetime.rst:320
msgid ""
"Create and return a new :class:`datetime.datetime` object given an argument "
"tuple suitable for passing to :meth:`datetime.datetime.fromtimestamp()`."
msgstr ""
"Crea y retorna un nuevo objeto :class:`datetime.datetime` dado una tupla de "
"argumentos adecuada para pasar a :meth:`datetime.datetime.fromtimestamp()`."

#: ../Doc/c-api/datetime.rst:326
msgid ""
"Create and return a new :class:`datetime.date` object given an argument "
"tuple suitable for passing to :meth:`datetime.date.fromtimestamp()`."
msgstr ""
"Crea y retorna un nuevo objeto :class:`datetime.date` dado una tupla de "
"argumentos adecuada para pasar a :meth:`datetime.date.fromtimestamp()`."

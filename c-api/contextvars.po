# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-05-16 17:54+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/c-api/contextvars.rst:6
msgid "Context Variables Objects"
msgstr "Objetos de variables de contexto"

#: ../Doc/c-api/contextvars.rst:13
msgid ""
"In Python 3.7.1 the signatures of all context variables C APIs were "
"**changed** to use :c:type:`PyObject` pointers instead of :c:type:"
"`PyContext`, :c:type:`PyContextVar`, and :c:type:`PyContextToken`, e.g.::"
msgstr ""
"En Python 3.7.1, las firmas de todas las variables de contexto C APIs fueron "
"**cambiadas** para usar punteros :c:type:`PyObject` en lugar de :c:type:"
"`PyContext`, :c:type:`PyContextVar`, y :c:type:`PyContextToken`, por "
"ejemplo::"

#: ../Doc/c-api/contextvars.rst:24
msgid "See :issue:`34762` for more details."
msgstr "Ver :issue:`34762` para más detalles."

#: ../Doc/c-api/contextvars.rst:29
msgid ""
"This section details the public C API for the :mod:`contextvars` module."
msgstr ""
"Esta sección detalla la API pública de C para el módulo :mod:`contextvars`."

#: ../Doc/c-api/contextvars.rst:33
msgid ""
"The C structure used to represent a :class:`contextvars.Context` object."
msgstr ""
"La estructura C utilizada para representar un objeto :class:`contextvars."
"Context`."

#: ../Doc/c-api/contextvars.rst:38
msgid ""
"The C structure used to represent a :class:`contextvars.ContextVar` object."
msgstr ""
"La estructura C utilizada para representar un objeto :class:`contextvars."
"ContextVar`."

#: ../Doc/c-api/contextvars.rst:43
msgid "The C structure used to represent a :class:`contextvars.Token` object."
msgstr ""
"La estructura C solía representar un objeto :class:`contextvars.Token`."

#: ../Doc/c-api/contextvars.rst:47
msgid "The type object representing the *context* type."
msgstr "El objeto de tipo que representa el tipo *context*."

#: ../Doc/c-api/contextvars.rst:51
msgid "The type object representing the *context variable* type."
msgstr "El objeto tipo que representa el tipo *variable de contexto*."

#: ../Doc/c-api/contextvars.rst:55
msgid "The type object representing the *context variable token* type."
msgstr "El tipo objeto que representa el tipo *token de variable de contexto*."

#: ../Doc/c-api/contextvars.rst:58
msgid "Type-check macros:"
msgstr "Macros de verificación de tipo:"

#: ../Doc/c-api/contextvars.rst:62
msgid ""
"Return true if *o* is of type :c:data:`PyContext_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadero si *o* es de tipo :c:data:`PyContext_Type`. *o* no debe "
"ser ``NULL``. Esta función siempre tiene éxito."

#: ../Doc/c-api/contextvars.rst:67
msgid ""
"Return true if *o* is of type :c:data:`PyContextVar_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadero si *o* es de tipo :c:data:`PyContextVar_Type`. *o* no debe "
"ser ``NULL``. Esta función siempre tiene éxito."

#: ../Doc/c-api/contextvars.rst:72
msgid ""
"Return true if *o* is of type :c:data:`PyContextToken_Type`. *o* must not be "
"``NULL``.  This function always succeeds."
msgstr ""
"Retorna verdadero si *o* es de tipo :c:data:`PyContextToken_Type`. *o* no "
"debe ser ``NULL``. Esta función siempre tiene éxito."

#: ../Doc/c-api/contextvars.rst:76
msgid "Context object management functions:"
msgstr "Funciones de gestión de objetos de contexto:"

#: ../Doc/c-api/contextvars.rst:80
msgid ""
"Create a new empty context object.  Returns ``NULL`` if an error has "
"occurred."
msgstr ""
"Crea un nuevo objeto de contexto vacío. Retorna ``NULL`` si se ha producido "
"un error."

#: ../Doc/c-api/contextvars.rst:85
msgid ""
"Create a shallow copy of the passed *ctx* context object. Returns ``NULL`` "
"if an error has occurred."
msgstr ""
"Crea una copia superficial del objeto de contexto *ctx* pasado. Retorna "
"``NULL`` si se ha producido un error."

#: ../Doc/c-api/contextvars.rst:90
msgid ""
"Create a shallow copy of the current thread context. Returns ``NULL`` if an "
"error has occurred."
msgstr ""
"Crea una copia superficial del contexto actual del hilo. Retorna ``NULL`` si "
"se ha producido un error."

#: ../Doc/c-api/contextvars.rst:95
msgid ""
"Set *ctx* as the current context for the current thread. Returns ``0`` on "
"success, and ``-1`` on error."
msgstr ""
"Establece *ctx* como el contexto actual para el hilo actual. Retorna ``0`` "
"en caso de éxito y ``-1`` en caso de error."

#: ../Doc/c-api/contextvars.rst:100
msgid ""
"Deactivate the *ctx* context and restore the previous context as the current "
"context for the current thread.  Returns ``0`` on success, and ``-1`` on "
"error."
msgstr ""
"Desactiva el contexto *ctx* y restaura el contexto anterior como el contexto "
"actual para el hilo actual. Retorna ``0`` en caso de éxito y ``-1`` en caso "
"de error."

#: ../Doc/c-api/contextvars.rst:106
msgid ""
"Clear the context variable free list. Return the total number of freed "
"items.  This function always succeeds."
msgstr ""
"Borra la lista libre de variables de contexto. Retorna el número total de "
"artículos liberados. Esta función siempre tiene éxito."

#: ../Doc/c-api/contextvars.rst:110
msgid "Context variable functions:"
msgstr "Funciones variables de contexto:"

#: ../Doc/c-api/contextvars.rst:114
msgid ""
"Create a new ``ContextVar`` object.  The *name* parameter is used for "
"introspection and debug purposes.  The *def* parameter may optionally "
"specify the default value for the context variable.  If an error has "
"occurred, this function returns ``NULL``."
msgstr ""
"Crea un nuevo objeto ``ContextVar``. El parámetro *name* se usa para "
"propósitos de introspección y depuración. El parámetro *def* puede "
"especificar opcionalmente el valor predeterminado para la variable de "
"contexto. Si se ha producido un error, esta función retorna ``NULL``."

#: ../Doc/c-api/contextvars.rst:121
msgid ""
"Get the value of a context variable.  Returns ``-1`` if an error has "
"occurred during lookup, and ``0`` if no error occurred, whether or not a "
"value was found."
msgstr ""
"Obtiene el valor de una variable de contexto. Retorna ``-1`` si se produjo "
"un error durante la búsqueda y ``0`` si no se produjo ningún error, se haya "
"encontrado o no un valor."

#: ../Doc/c-api/contextvars.rst:125
msgid ""
"If the context variable was found, *value* will be a pointer to it. If the "
"context variable was *not* found, *value* will point to:"
msgstr ""
"Si se encontró la variable de contexto, *value* será un puntero a ella. Si "
"la variable de contexto *not* se encontró, *value* apuntará a:"

#: ../Doc/c-api/contextvars.rst:128
msgid "*default_value*, if not ``NULL``;"
msgstr "*default_value*, si no es ``NULL``;"

#: ../Doc/c-api/contextvars.rst:129
msgid "the default value of *var*, if not ``NULL``;"
msgstr "el valor predeterminado de *var*, si no es ``NULL``;"

#: ../Doc/c-api/contextvars.rst:130
msgid "``NULL``"
msgstr "``NULL``"

#: ../Doc/c-api/contextvars.rst:132
msgid "If the value was found, the function will create a new reference to it."
msgstr "Si se encontró el valor, la función creará una nueva referencia a él."

#: ../Doc/c-api/contextvars.rst:136
msgid ""
"Set the value of *var* to *value* in the current context.  Returns a pointer "
"to a :c:type:`PyObject` object, or ``NULL`` if an error has occurred."
msgstr ""
"Establece el valor de *var* en *value* en el contexto actual. Retorna un "
"puntero a un objeto :c:type:`PyObject`, o ``NULL`` si se ha producido un "
"error."

#: ../Doc/c-api/contextvars.rst:142
msgid ""
"Reset the state of the *var* context variable to that it was in before :c:"
"func:`PyContextVar_Set` that returned the *token* was called. This function "
"returns ``0`` on success and ``-1`` on error."
msgstr ""
"Restablece el estado de la variable de contexto *var* a la que estaba antes :"
"c:func:`PyContextVar_Set` que retornó el *token* fue llamado. Esta función "
"retorna ``0`` en caso de éxito y ``-1`` en caso de error."

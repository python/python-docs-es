# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: 2020-05-09 02:48+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/c-api/stable.rst:7
msgid "Stable Application Binary Interface"
msgstr "Interfaz binaria de aplicación estable"

#: ../Doc/c-api/stable.rst:9
msgid ""
"Traditionally, the C API of Python will change with every release.  Most "
"changes will be source-compatible, typically by only adding API, rather than "
"changing existing API or removing API (although some interfaces do get "
"removed after being deprecated first)."
msgstr ""
"Tradicionalmente, la API en C de Python cambiará con cada lanzamiento. La "
"mayoría de los cambios serán compatibles con la fuente, generalmente solo "
"agregando API, en lugar de cambiar la API existente o eliminar la API "
"(aunque algunas interfaces se eliminan después de ser desaprobadas primero)."

#: ../Doc/c-api/stable.rst:14
msgid ""
"Unfortunately, the API compatibility does not extend to binary compatibility "
"(the ABI). The reason is primarily the evolution of struct definitions, "
"where addition of a new field, or changing the type of a field, might not "
"break the API, but can break the ABI.  As a consequence, extension modules "
"need to be recompiled for every Python release (although an exception is "
"possible on Unix when none of the affected interfaces are used). In "
"addition, on Windows, extension modules link with a specific pythonXY.dll "
"and need to be recompiled to link with a newer one."
msgstr ""
"Desafortunadamente, la compatibilidad API no se extiende a la compatibilidad "
"binaria (el ABI). La razón es principalmente la evolución de las "
"definiciones de estructura, donde la adición de un nuevo campo, o el cambio "
"del tipo de campo, puede no romper la API, pero puede romper la ABI. Como "
"consecuencia, los módulos de extensión deben volver a compilarse para cada "
"versión de Python (aunque es posible una excepción en Unix cuando no se "
"utiliza ninguna de las interfaces afectadas). Además, en Windows, los "
"módulos de extensión se vinculan con un pythonXY.dll específico y deben "
"recompilarse para vincularse con uno más nuevo."

#: ../Doc/c-api/stable.rst:23
msgid ""
"Since Python 3.2, a subset of the API has been declared to guarantee a "
"stable ABI. Extension modules wishing to use this API (called \"limited API"
"\") need to define ``Py_LIMITED_API``. A number of interpreter details then "
"become hidden from the extension module; in return, a module is built that "
"works on any 3.x version (x>=2) without recompilation."
msgstr ""
"Desde Python 3.2, se ha declarado un subconjunto de la API para garantizar "
"un ABI estable. Los módulos de extensión que deseen utilizar esta API "
"(llamada \"API limitada\") deben definir ``Py_LIMITED_API``. Varios detalles "
"del intérprete se ocultan del módulo de extensión; a cambio, se construye un "
"módulo que funciona en cualquier versión 3.x (x> = 2) sin recompilación."

#: ../Doc/c-api/stable.rst:29
msgid ""
"In some cases, the stable ABI needs to be extended with new functions. "
"Extension modules wishing to use these new APIs need to set "
"``Py_LIMITED_API`` to the ``PY_VERSION_HEX`` value (see :ref:"
"`apiabiversion`) of the minimum Python version they want to support (e.g. "
"``0x03030000`` for Python 3.3). Such modules will work on all subsequent "
"Python releases, but fail to load (because of missing symbols) on the older "
"releases."
msgstr ""
"En algunos casos, el ABI estable debe ampliarse con nuevas funciones. Los "
"módulos de extensión que deseen utilizar estas nuevas API deben establecer "
"``Py_LIMITED_API`` en el valor ``PY_VERSION_HEX`` (ver :ref:`apiabiversion`) "
"de la versión mínima de Python que desean admitir (por ejemplo,"
"``0x03030000`` para Python 3.3). Dichos módulos funcionarán en todas las "
"versiones posteriores de Python, pero no se cargarán (debido a la falta de "
"símbolos) en las versiones anteriores."

#: ../Doc/c-api/stable.rst:36
msgid ""
"As of Python 3.2, the set of functions available to the limited API is "
"documented in :pep:`384`.  In the C API documentation, API elements that are "
"not part of the limited API are marked as \"Not part of the limited API.\""
msgstr ""
"A partir de Python 3.2, el conjunto de funciones disponibles para la API "
"limitada se documenta en :pep:`384`. En la documentación de la API de C, los "
"elementos de la API que no forman parte de la API limitada se marcan como "
"\"No forma parte de la API limitada\"."

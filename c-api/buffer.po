# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-06-21 16:22+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/c-api/buffer.rst:11
msgid "Buffer Protocol"
msgstr "Protocolo Búfer"

#: ../Doc/c-api/buffer.rst:18
msgid ""
"Certain objects available in Python wrap access to an underlying memory "
"array or *buffer*.  Such objects include the built-in :class:`bytes` and :"
"class:`bytearray`, and some extension types like :class:`array.array`. Third-"
"party libraries may define their own types for special purposes, such as "
"image processing or numeric analysis."
msgstr ""
"Ciertos objetos disponibles en Python ajustan el acceso a un arreglo de "
"memoria subyacente o *buffer*. Dichos objetos incluyen el incorporado :class:"
"`bytes` y :class:`bytearray`, y algunos tipos de extensión como :class:"
"`array.array`. Las bibliotecas de terceros pueden definir sus propios tipos "
"para fines especiales, como el procesamiento de imágenes o el análisis "
"numérico."

#: ../Doc/c-api/buffer.rst:24
msgid ""
"While each of these types have their own semantics, they share the common "
"characteristic of being backed by a possibly large memory buffer.  It is "
"then desirable, in some situations, to access that buffer directly and "
"without intermediate copying."
msgstr ""
"Si bien cada uno de estos tipos tiene su propia semántica, comparten la "
"característica común de estar respaldados por un búfer de memoria "
"posiblemente grande. Es deseable, en algunas situaciones, acceder a ese "
"búfer directamente y sin copia intermedia."

#: ../Doc/c-api/buffer.rst:29
msgid ""
"Python provides such a facility at the C level in the form of the :ref:"
"`buffer protocol <bufferobjects>`.  This protocol has two sides:"
msgstr ""
"Python proporciona una instalación de este tipo en el nivel C en la forma "
"de :ref:`protocolo búfer <bufferobjects>`. Este protocolo tiene dos lados:"

#: ../Doc/c-api/buffer.rst:34
msgid ""
"on the producer side, a type can export a \"buffer interface\" which allows "
"objects of that type to expose information about their underlying buffer. "
"This interface is described in the section :ref:`buffer-structs`;"
msgstr ""
"en el lado del productor, un tipo puede exportar una \"interfaz de búfer\" "
"que permite a los objetos de ese tipo exponer información sobre su búfer "
"subyacente. Esta interfaz se describe en la sección :ref:`buffer-structs`;"

#: ../Doc/c-api/buffer.rst:38
msgid ""
"on the consumer side, several means are available to obtain a pointer to the "
"raw underlying data of an object (for example a method parameter)."
msgstr ""
"en el lado del consumidor, hay varios medios disponibles para obtener un "
"puntero a los datos subyacentes sin procesar de un objeto (por ejemplo, un "
"parámetro de método)."

#: ../Doc/c-api/buffer.rst:41
msgid ""
"Simple objects such as :class:`bytes` and :class:`bytearray` expose their "
"underlying buffer in byte-oriented form.  Other forms are possible; for "
"example, the elements exposed by an :class:`array.array` can be multi-byte "
"values."
msgstr ""
"Los objetos simples como :class:`bytes` y :class:`bytearray` exponen su "
"búfer subyacente en forma orientada a bytes. Otras formas son posibles; por "
"ejemplo, los elementos expuestos por un :class:`array.array` pueden ser "
"valores de varios bytes."

#: ../Doc/c-api/buffer.rst:45
msgid ""
"An example consumer of the buffer interface is the :meth:`~io.BufferedIOBase."
"write` method of file objects: any object that can export a series of bytes "
"through the buffer interface can be written to a file.  While :meth:`write` "
"only needs read-only access to the internal contents of the object passed to "
"it, other methods such as :meth:`~io.BufferedIOBase.readinto` need write "
"access to the contents of their argument.  The buffer interface allows "
"objects to selectively allow or reject exporting of read-write and read-only "
"buffers."
msgstr ""
"Un consumidor de ejemplo de la interfaz del búfer es el método :meth:`~io."
"BufferedIOBase.write` de objetos de archivo: cualquier objeto que pueda "
"exportar una serie de bytes a través de la interfaz del búfer puede "
"escribirse en un archivo. Mientras que :meth:`write` solo necesita acceso de "
"solo lectura a los contenidos internos del objeto que se le pasa, otros "
"métodos como :meth:`~io.BufferedIOBase.readinto` necesitan acceso de "
"escritura a los contenidos de su argumento. La interfaz del búfer permite "
"que los objetos permitan o rechacen selectivamente la exportación de búferes "
"de lectura-escritura y solo lectura."

#: ../Doc/c-api/buffer.rst:53
msgid ""
"There are two ways for a consumer of the buffer interface to acquire a "
"buffer over a target object:"
msgstr ""
"Hay dos formas para que un consumidor de la interfaz del búfer adquiera un "
"búfer sobre un objeto de destino:"

#: ../Doc/c-api/buffer.rst:56
msgid "call :c:func:`PyObject_GetBuffer` with the right parameters;"
msgstr "llamar :c:func:`PyObject_GetBuffer` con los parámetros correctos;"

#: ../Doc/c-api/buffer.rst:58
msgid ""
"call :c:func:`PyArg_ParseTuple` (or one of its siblings) with one of the "
"``y*``, ``w*`` or ``s*`` :ref:`format codes <arg-parsing>`."
msgstr ""
"llamar :c:func:`PyArg_ParseTuple` (o uno de sus hermanos) con uno de los "
"``y*``, ``w*`` o ``s*`` :ref:`códigos de formato <arg-parsing>`."

#: ../Doc/c-api/buffer.rst:61
msgid ""
"In both cases, :c:func:`PyBuffer_Release` must be called when the buffer "
"isn't needed anymore.  Failure to do so could lead to various issues such as "
"resource leaks."
msgstr ""
"En ambos casos, se debe llamar a :c:func:`PyBuffer_Release` cuando ya no se "
"necesita el búfer. De lo contrario, podrían surgir varios problemas, como "
"pérdidas de recursos."

#: ../Doc/c-api/buffer.rst:69
msgid "Buffer structure"
msgstr "Estructura de búfer"

#: ../Doc/c-api/buffer.rst:71
msgid ""
"Buffer structures (or simply \"buffers\") are useful as a way to expose the "
"binary data from another object to the Python programmer.  They can also be "
"used as a zero-copy slicing mechanism.  Using their ability to reference a "
"block of memory, it is possible to expose any data to the Python programmer "
"quite easily.  The memory could be a large, constant array in a C extension, "
"it could be a raw block of memory for manipulation before passing to an "
"operating system library, or it could be used to pass around structured data "
"in its native, in-memory format."
msgstr ""
"Las estructuras de búfer (o simplemente \"búferes\") son útiles como una "
"forma de exponer los datos binarios de otro objeto al programador de Python. "
"También se pueden usar como un mecanismo de corte de copia cero. Usando su "
"capacidad para hacer referencia a un bloque de memoria, es posible exponer "
"cualquier información al programador Python con bastante facilidad. La "
"memoria podría ser una matriz grande y constante en una extensión C, podría "
"ser un bloque de memoria sin procesar para su manipulación antes de pasar a "
"una biblioteca del sistema operativo, o podría usarse para pasar datos "
"estructurados en su formato nativo en memoria ."

#: ../Doc/c-api/buffer.rst:80
msgid ""
"Contrary to most data types exposed by the Python interpreter, buffers are "
"not :c:type:`PyObject` pointers but rather simple C structures.  This allows "
"them to be created and copied very simply.  When a generic wrapper around a "
"buffer is needed, a :ref:`memoryview <memoryview-objects>` object can be "
"created."
msgstr ""
"Contrariamente a la mayoría de los tipos de datos expuestos por el "
"intérprete de Python, los búferes no son punteros :c:type:`PyObject` sino "
"estructuras C simples. Esto les permite ser creados y copiados de manera muy "
"simple. Cuando se necesita un contenedor genérico alrededor de un búfer, un "
"objeto :ref:`memoryview <memoryview-objects>` puede ser creado."

#: ../Doc/c-api/buffer.rst:86
msgid ""
"For short instructions how to write an exporting object, see :ref:`Buffer "
"Object Structures <buffer-structs>`. For obtaining a buffer, see :c:func:"
"`PyObject_GetBuffer`."
msgstr ""
"Para obtener instrucciones breves sobre cómo escribir un objeto de "
"exportación, consulte :ref:`Estructuras de objetos búfer <buffer-structs>`. "
"Para obtener un búfer, consulte :c:func:`PyObject_GetBuffer`."

#: ../Doc/c-api/buffer.rst:94
msgid ""
"A pointer to the start of the logical structure described by the buffer "
"fields. This can be any location within the underlying physical memory block "
"of the exporter. For example, with negative :c:member:`~Py_buffer.strides` "
"the value may point to the end of the memory block."
msgstr ""
"Un puntero al inicio de la estructura lógica descrita por los campos del "
"búfer. Puede ser cualquier ubicación dentro del bloque de memoria física "
"subyacente del exportador. Por ejemplo, con negativo :c:member:`~Py_buffer."
"strides` el valor puede apuntar al final del bloque de memoria."

#: ../Doc/c-api/buffer.rst:99
msgid ""
"For :term:`contiguous` arrays, the value points to the beginning of the "
"memory block."
msgstr ""
"Para arreglos :term:`contiguous`, el valor apunta al comienzo del bloque de "
"memoria."

#: ../Doc/c-api/buffer.rst:104
msgid ""
"A new reference to the exporting object. The reference is owned by the "
"consumer and automatically decremented and set to ``NULL`` by :c:func:"
"`PyBuffer_Release`. The field is the equivalent of the return value of any "
"standard C-API function."
msgstr ""
"Una nueva referencia al objeto exportador. La referencia es propiedad del "
"consumidor y automáticamente disminuye y se establece en ``NULL`` por :c:"
"func:`PyBuffer_Release`. El campo es el equivalente del valor de retorno de "
"cualquier función estándar de C-API."

#: ../Doc/c-api/buffer.rst:109
msgid ""
"As a special case, for *temporary* buffers that are wrapped by :c:func:"
"`PyMemoryView_FromBuffer` or :c:func:`PyBuffer_FillInfo` this field is "
"``NULL``. In general, exporting objects MUST NOT use this scheme."
msgstr ""
"Como un caso especial, para los búferes *temporary* que están envueltos por :"
"c:func:`PyMemoryView_FromBuffer` o :c:func:`PyBuffer_FillInfo` este campo es "
"``NULL``. En general, los objetos de exportación NO DEBEN usar este esquema."

#: ../Doc/c-api/buffer.rst:116
msgid ""
"``product(shape) * itemsize``. For contiguous arrays, this is the length of "
"the underlying memory block. For non-contiguous arrays, it is the length "
"that the logical structure would have if it were copied to a contiguous "
"representation."
msgstr ""
"``product(shape) * itemize``. Para arreglos contiguos, esta es la longitud "
"del bloque de memoria subyacente. Para arreglos no contiguos, es la longitud "
"que tendría la estructura lógica si se copiara en una representación "
"contigua."

#: ../Doc/c-api/buffer.rst:121
msgid ""
"Accessing ``((char *)buf)[0] up to ((char *)buf)[len-1]`` is only valid if "
"the buffer has been obtained by a request that guarantees contiguity. In "
"most cases such a request will be :c:macro:`PyBUF_SIMPLE` or :c:macro:"
"`PyBUF_WRITABLE`."
msgstr ""
"Accede a ``((char *)buf)[0] hasta ((char *)buf)[len-1]`` solo es válido si "
"el búfer se ha obtenido mediante una solicitud que garantiza la contigüidad. "
"En la mayoría de los casos, dicha solicitud será :c:macro:`PyBUF_SIMPLE` o :"
"c:macro:`PyBUF_WRITABLE`."

#: ../Doc/c-api/buffer.rst:127
msgid ""
"An indicator of whether the buffer is read-only. This field is controlled by "
"the :c:macro:`PyBUF_WRITABLE` flag."
msgstr ""
"Un indicador de si el búfer es de solo lectura. Este campo está controlado "
"por el indicador :c:macro:`PyBUF_WRITABLE`."

#: ../Doc/c-api/buffer.rst:132
msgid ""
"Item size in bytes of a single element. Same as the value of :func:`struct."
"calcsize` called on non-``NULL`` :c:member:`~Py_buffer.format` values."
msgstr ""
"Tamaño del elemento en bytes de un solo elemento. Igual que el valor de :"
"func:`struct.calcsize` invocado en valores no ``NULL`` :c:member:`~Py_buffer."
"format`."

#: ../Doc/c-api/buffer.rst:135
msgid ""
"Important exception: If a consumer requests a buffer without the :c:macro:"
"`PyBUF_FORMAT` flag, :c:member:`~Py_buffer.format` will be set to  "
"``NULL``,  but :c:member:`~Py_buffer.itemsize` still has the value for the "
"original format."
msgstr ""
"Excepción importante: si un consumidor solicita un búfer sin el indicador :c:"
"macro:`PyBUF_FORMAT`, :c:member:`~Py_buffer.format` se establecerá en "
"``NULL``, pero :c:member:`~Py_buffer.itemsize` todavía tiene el valor para "
"el formato original."

#: ../Doc/c-api/buffer.rst:140
msgid ""
"If :c:member:`~Py_buffer.shape` is present, the equality ``product(shape) * "
"itemsize == len`` still holds and the consumer can use :c:member:`~Py_buffer."
"itemsize` to navigate the buffer."
msgstr ""
"Si :c:member:`~Py_buffer.shape` está presente, la igualdad ``product(shape) "
"* itemsize == len`` aún se mantiene y el consumidor puede usar :c:member:"
"`~Py_buffer.itemsize` para navegar el búfer."

#: ../Doc/c-api/buffer.rst:144
msgid ""
"If :c:member:`~Py_buffer.shape` is ``NULL`` as a result of a :c:macro:"
"`PyBUF_SIMPLE` or a :c:macro:`PyBUF_WRITABLE` request, the consumer must "
"disregard :c:member:`~Py_buffer.itemsize` and assume ``itemsize == 1``."
msgstr ""
"Si :c:member:`~Py_buffer.shape` es ``NULL`` como resultado de un :c:macro:"
"`PyBUF_SIMPLE` o un :c:macro:`PyBUF_WRITABLE`, el consumidor debe ignorar :c:"
"member:`~Py_buffer.itemsize` y asume ``itemsize == 1``."

#: ../Doc/c-api/buffer.rst:150
msgid ""
"A *NUL* terminated string in :mod:`struct` module style syntax describing "
"the contents of a single item. If this is ``NULL``, ``\"B\"`` (unsigned "
"bytes) is assumed."
msgstr ""
"Una cadena de caracteres terminada en *NUL* en sintaxis de estilo del "
"modulo :mod:`struct` que describe el contenido de un solo elemento. Si esto "
"es ``NULL``, se supone ``\"B\"`` (bytes sin signo)."

#: ../Doc/c-api/buffer.rst:154
msgid "This field is controlled by the :c:macro:`PyBUF_FORMAT` flag."
msgstr "Este campo está controlado por el indicador :c:macro:`PyBUF_FORMAT`."

#: ../Doc/c-api/buffer.rst:158
msgid ""
"The number of dimensions the memory represents as an n-dimensional array. If "
"it is ``0``, :c:member:`~Py_buffer.buf` points to a single item representing "
"a scalar. In this case, :c:member:`~Py_buffer.shape`, :c:member:`~Py_buffer."
"strides` and :c:member:`~Py_buffer.suboffsets` MUST be ``NULL``."
msgstr ""
"El número de dimensiones que representa la memoria como un arreglo n-"
"dimensional. Si es `` 0``, :c:member:`~Py_buffer.buf` apunta a un solo "
"elemento que representa un escalar. En este caso, :c:member:`~Py_buffer."
"shape`, :c:member:`~Py_buffer.strides` y :c:member:`~Py_buffer.suboffsets` "
"DEBE ser ``NULL``."

#: ../Doc/c-api/buffer.rst:163
msgid ""
"The macro :c:macro:`PyBUF_MAX_NDIM` limits the maximum number of dimensions "
"to 64. Exporters MUST respect this limit, consumers of multi-dimensional "
"buffers SHOULD be able to handle up to :c:macro:`PyBUF_MAX_NDIM` dimensions."
msgstr ""
"La macro :c:macro:`PyBUF_MAX_NDIM` limita el número máximo de dimensiones a "
"64. Los exportadores DEBEN respetar este límite, los consumidores de búfer "
"multidimensionales DEBEN poder manejar hasta dimensiones :c:macro:"
"`PyBUF_MAX_NDIM`."

#: ../Doc/c-api/buffer.rst:169
msgid ""
"An array of :c:type:`Py_ssize_t` of length :c:member:`~Py_buffer.ndim` "
"indicating the shape of the memory as an n-dimensional array. Note that "
"``shape[0] * ... * shape[ndim-1] * itemsize`` MUST be equal to :c:member:"
"`~Py_buffer.len`."
msgstr ""
"Un arreglo de :c:type:`Py_ssize_t` de longitud :c:member:`~Py_buffer.ndim` "
"que indica la forma de la memoria como un arreglo n-dimensional. Tenga en "
"cuenta que ``shape[0] * ... * shape[ndim-1] * itemsize`` DEBE ser igual a :c:"
"member:`~Py_buffer.len`."

#: ../Doc/c-api/buffer.rst:174
msgid ""
"Shape values are restricted to ``shape[n] >= 0``. The case ``shape[n] == 0`` "
"requires special attention. See `complex arrays`_ for further information."
msgstr ""
"Los valores de forma están restringidos a ``shape[n] >= 0``. El caso "
"``shape[n] == 0`` requiere atención especial. Vea arreglos complejos "
"(`complex arrays`_) para más información."

#: ../Doc/c-api/buffer.rst:178
msgid "The shape array is read-only for the consumer."
msgstr "El arreglo de formas es de sólo lectura para el consumidor."

#: ../Doc/c-api/buffer.rst:182
msgid ""
"An array of :c:type:`Py_ssize_t` of length :c:member:`~Py_buffer.ndim` "
"giving the number of bytes to skip to get to a new element in each dimension."
msgstr ""
"Un arreglo de :c:type:`Py_ssize_t` de longitud :c:member:`~Py_buffer.ndim` "
"que proporciona el número de bytes que se omiten para llegar a un nuevo "
"elemento en cada dimensión."

#: ../Doc/c-api/buffer.rst:186
msgid ""
"Stride values can be any integer. For regular arrays, strides are usually "
"positive, but a consumer MUST be able to handle the case ``strides[n] <= "
"0``. See `complex arrays`_ for further information."
msgstr ""
"Los valores de *stride* pueden ser cualquier número entero. Para los "
"arreglos regulares, los pasos son generalmente positivos, pero un consumidor "
"DEBE ser capaz de manejar el caso ``strides[n] <= 0``. Ver `complex arrays`_ "
"para más información."

#: ../Doc/c-api/buffer.rst:190
msgid "The strides array is read-only for the consumer."
msgstr "El arreglo *strides* es de sólo lectura para el consumidor."

#: ../Doc/c-api/buffer.rst:194
msgid ""
"An array of :c:type:`Py_ssize_t` of length :c:member:`~Py_buffer.ndim`. If "
"``suboffsets[n] >= 0``, the values stored along the nth dimension are "
"pointers and the suboffset value dictates how many bytes to add to each "
"pointer after de-referencing. A suboffset value that is negative indicates "
"that no de-referencing should occur (striding in a contiguous memory block)."
msgstr ""
"Un arreglo de :c:type:`Py_ssize_t` de longitud :c:member:`~Py_buffer.ndim`. "
"Si ``suboffsets[n] >= 0``, los valores almacenados a lo largo de la enésima "
"dimensión son punteros y el valor del *suboffsets* dicta cuántos bytes "
"agregar a cada puntero después de desreferenciarlos. Un valor de "
"*suboffsets* negativo indica que no debe producirse una desreferenciación "
"(*striding* en un bloque de memoria contiguo)."

#: ../Doc/c-api/buffer.rst:201
msgid ""
"If all suboffsets are negative (i.e. no de-referencing is needed), then this "
"field must be ``NULL`` (the default value)."
msgstr ""
"Si todos los *suboffsets* son negativos (es decir, no se necesita "
"desreferenciar), entonces este campo debe ser ``NULL`` (el valor "
"predeterminado)."

#: ../Doc/c-api/buffer.rst:204
msgid ""
"This type of array representation is used by the Python Imaging Library "
"(PIL). See `complex arrays`_ for further information how to access elements "
"of such an array."
msgstr ""
"*Python Imaging Library (PIL)* utiliza este tipo de representación de "
"arreglos. Consulte `complex arrays`_ para obtener más información sobre cómo "
"acceder a los elementos de dicho arreglo."

#: ../Doc/c-api/buffer.rst:208
msgid "The suboffsets array is read-only for the consumer."
msgstr "El arreglo de *suboffsets* es de sólo lectura para el consumidor."

#: ../Doc/c-api/buffer.rst:212
msgid ""
"This is for use internally by the exporting object. For example, this might "
"be re-cast as an integer by the exporter and used to store flags about "
"whether or not the shape, strides, and suboffsets arrays must be freed when "
"the buffer is released. The consumer MUST NOT alter this value."
msgstr ""
"Esto es para uso interno del objeto exportador. Por ejemplo, el exportador "
"podría volver a emitirlo como un número entero y utilizarlo para almacenar "
"indicadores sobre si las matrices de forma, *strides* y *suboffsets* deben "
"liberarse cuando se libera el búfer. El consumidor NO DEBE alterar este "
"valor."

#: ../Doc/c-api/buffer.rst:221
msgid "Buffer request types"
msgstr "Tipos de solicitud búfer"

#: ../Doc/c-api/buffer.rst:223
msgid ""
"Buffers are usually obtained by sending a buffer request to an exporting "
"object via :c:func:`PyObject_GetBuffer`. Since the complexity of the logical "
"structure of the memory can vary drastically, the consumer uses the *flags* "
"argument to specify the exact buffer type it can handle."
msgstr ""
"Los búferes obtienen generalmente enviando una solicitud de búfer a un "
"objeto de exportación a través de :c:func:`PyObject_GetBuffer`. Dado que la "
"complejidad de la estructura lógica de la memoria puede variar "
"drásticamente, el consumidor usa el argumento *flags* para especificar el "
"tipo de búfer exacto que puede manejar."

#: ../Doc/c-api/buffer.rst:228
msgid ""
"All :c:data:`Py_buffer` fields are unambiguously defined by the request type."
msgstr ""
"Todos los campos :c:data:`Py_buffer` están definidos inequívocamente por el "
"tipo de solicitud."

#: ../Doc/c-api/buffer.rst:232
msgid "request-independent fields"
msgstr "campos independientes de solicitud"

#: ../Doc/c-api/buffer.rst:233
msgid ""
"The following fields are not influenced by *flags* and must always be filled "
"in with the correct values: :c:member:`~Py_buffer.obj`, :c:member:"
"`~Py_buffer.buf`, :c:member:`~Py_buffer.len`, :c:member:`~Py_buffer."
"itemsize`, :c:member:`~Py_buffer.ndim`."
msgstr ""
"Los siguientes campos no están influenciados por *flags* y siempre deben "
"completarse con los valores correctos: :c:member:`~Py_buffer.obj`, :c:member:"
"`~Py_buffer.buf`, :c:member:`~Py_buffer.len`, :c:member:`~Py_buffer."
"itemsize`, :c:member:`~Py_buffer.ndim`."

#: ../Doc/c-api/buffer.rst:239
msgid "readonly, format"
msgstr "formato de sólo lectura"

#: ../Doc/c-api/buffer.rst:243
msgid ""
"Controls the :c:member:`~Py_buffer.readonly` field. If set, the exporter "
"MUST provide a writable buffer or else report failure. Otherwise, the "
"exporter MAY provide either a read-only or writable buffer, but the choice "
"MUST be consistent for all consumers."
msgstr ""
"Controla el campo :c:member:`~Py_buffer.readonly`. Si se establece, el "
"exportador DEBE proporcionar un búfer de escritura o, de lo contrario, "
"informar de un error. De lo contrario, el exportador PUEDE proporcionar un "
"búfer de solo lectura o de escritura, pero la elección DEBE ser coherente "
"para todos los consumidores."

#: ../Doc/c-api/buffer.rst:250
msgid ""
"Controls the :c:member:`~Py_buffer.format` field. If set, this field MUST be "
"filled in correctly. Otherwise, this field MUST be ``NULL``."
msgstr ""
"Controla el campo :c:member:`~Py_buffer.format`. Si se establece, este campo "
"DEBE completarse correctamente. De lo contrario, este campo DEBE ser "
"``NULL``."

#: ../Doc/c-api/buffer.rst:254
msgid ""
":c:macro:`PyBUF_WRITABLE` can be \\|'d to any of the flags in the next "
"section. Since :c:macro:`PyBUF_SIMPLE` is defined as 0, :c:macro:"
"`PyBUF_WRITABLE` can be used as a stand-alone flag to request a simple "
"writable buffer."
msgstr ""
":c:macro:`PyBUF_WRITABLE` puede ser \\|'d a cualquiera de las banderas en la "
"siguiente sección. Dado que :c:macro:`PyBUF_SIMPLE` se define como 0, :c:"
"macro:`PyBUF_WRITABLE` puede usarse como un indicador independiente para "
"solicitar un búfer de escritura simple."

#: ../Doc/c-api/buffer.rst:258
msgid ""
":c:macro:`PyBUF_FORMAT` can be \\|'d to any of the flags except :c:macro:"
"`PyBUF_SIMPLE`. The latter already implies format ``B`` (unsigned bytes)."
msgstr ""
":c:macro:`PyBUF_FORMAT` puede ser \\|'d para cualquiera de las banderas "
"excepto :c:macro:`PyBUF_SIMPLE`. Este último ya implica el formato ``B`` "
"(bytes sin signo)."

#: ../Doc/c-api/buffer.rst:263
msgid "shape, strides, suboffsets"
msgstr "formas, *strides*, *suboffsets*"

#: ../Doc/c-api/buffer.rst:265
msgid ""
"The flags that control the logical structure of the memory are listed in "
"decreasing order of complexity. Note that each flag contains all bits of the "
"flags below it."
msgstr ""
"Las banderas que controlan la estructura lógica de la memoria se enumeran en "
"orden decreciente de complejidad. Tenga en cuenta que cada bandera contiene "
"todos los bits de las banderas debajo de ella."

#: ../Doc/c-api/buffer.rst:272 ../Doc/c-api/buffer.rst:296
#: ../Doc/c-api/buffer.rst:321
msgid "Request"
msgstr "Solicitud"

#: ../Doc/c-api/buffer.rst:272 ../Doc/c-api/buffer.rst:296
#: ../Doc/c-api/buffer.rst:321
msgid "shape"
msgstr "forma"

#: ../Doc/c-api/buffer.rst:272 ../Doc/c-api/buffer.rst:296
#: ../Doc/c-api/buffer.rst:321
msgid "strides"
msgstr "*strides*"

#: ../Doc/c-api/buffer.rst:272 ../Doc/c-api/buffer.rst:296
#: ../Doc/c-api/buffer.rst:321
msgid "suboffsets"
msgstr "*suboffsets*"

#: ../Doc/c-api/buffer.rst:274 ../Doc/c-api/buffer.rst:276
#: ../Doc/c-api/buffer.rst:278 ../Doc/c-api/buffer.rst:298
#: ../Doc/c-api/buffer.rst:300 ../Doc/c-api/buffer.rst:302
#: ../Doc/c-api/buffer.rst:304 ../Doc/c-api/buffer.rst:323
#: ../Doc/c-api/buffer.rst:325 ../Doc/c-api/buffer.rst:327
#: ../Doc/c-api/buffer.rst:329 ../Doc/c-api/buffer.rst:331
#: ../Doc/c-api/buffer.rst:333 ../Doc/c-api/buffer.rst:335
#: ../Doc/c-api/buffer.rst:337
msgid "yes"
msgstr "sí"

#: ../Doc/c-api/buffer.rst:274 ../Doc/c-api/buffer.rst:323
#: ../Doc/c-api/buffer.rst:325
msgid "if needed"
msgstr "si es necesario"

#: ../Doc/c-api/buffer.rst:276 ../Doc/c-api/buffer.rst:278
#: ../Doc/c-api/buffer.rst:280 ../Doc/c-api/buffer.rst:298
#: ../Doc/c-api/buffer.rst:300 ../Doc/c-api/buffer.rst:302
#: ../Doc/c-api/buffer.rst:304 ../Doc/c-api/buffer.rst:327
#: ../Doc/c-api/buffer.rst:329 ../Doc/c-api/buffer.rst:331
#: ../Doc/c-api/buffer.rst:333 ../Doc/c-api/buffer.rst:335
#: ../Doc/c-api/buffer.rst:337
msgid "NULL"
msgstr "NULL"

#: ../Doc/c-api/buffer.rst:287
msgid "contiguity requests"
msgstr "solicitudes de contigüidad"

#: ../Doc/c-api/buffer.rst:289
msgid ""
"C or Fortran :term:`contiguity <contiguous>` can be explicitly requested, "
"with and without stride information. Without stride information, the buffer "
"must be C-contiguous."
msgstr ""
"La :term:`contigüidad <contiguous>` C o Fortran se puede solicitar "
"explícitamente, con y sin información de paso. Sin información de paso, el "
"búfer debe ser C-contiguo."

#: ../Doc/c-api/buffer.rst:296 ../Doc/c-api/buffer.rst:321
msgid "contig"
msgstr "contig"

#: ../Doc/c-api/buffer.rst:298 ../Doc/c-api/buffer.rst:304
#: ../Doc/c-api/buffer.rst:335 ../Doc/c-api/buffer.rst:337
msgid "C"
msgstr "C"

#: ../Doc/c-api/buffer.rst:300
msgid "F"
msgstr "F"

#: ../Doc/c-api/buffer.rst:302
msgid "C or F"
msgstr "C o F"

#: ../Doc/c-api/buffer.rst:304
msgid ":c:macro:`PyBUF_ND`"
msgstr ""

#: ../Doc/c-api/buffer.rst:309
msgid "compound requests"
msgstr "solicitudes compuestas"

#: ../Doc/c-api/buffer.rst:311
msgid ""
"All possible requests are fully defined by some combination of the flags in "
"the previous section. For convenience, the buffer protocol provides "
"frequently used combinations as single flags."
msgstr ""
"Todas las solicitudes posibles están completamente definidas por alguna "
"combinación de las banderas en la sección anterior. Por conveniencia, el "
"protocolo de memoria intermedia proporciona combinaciones de uso frecuente "
"como indicadores únicos."

#: ../Doc/c-api/buffer.rst:315
msgid ""
"In the following table *U* stands for undefined contiguity. The consumer "
"would have to call :c:func:`PyBuffer_IsContiguous` to determine contiguity."
msgstr ""
"En la siguiente tabla *U* significa contigüidad indefinida. El consumidor "
"tendría que llamar a :c:func:`PyBuffer_IsContiguous` para determinar la "
"contigüidad."

#: ../Doc/c-api/buffer.rst:321
msgid "readonly"
msgstr "sólo lectura"

#: ../Doc/c-api/buffer.rst:321
msgid "format"
msgstr "formato"

#: ../Doc/c-api/buffer.rst:323 ../Doc/c-api/buffer.rst:325
#: ../Doc/c-api/buffer.rst:327 ../Doc/c-api/buffer.rst:329
#: ../Doc/c-api/buffer.rst:331 ../Doc/c-api/buffer.rst:333
msgid "U"
msgstr "U"

#: ../Doc/c-api/buffer.rst:323 ../Doc/c-api/buffer.rst:327
#: ../Doc/c-api/buffer.rst:331 ../Doc/c-api/buffer.rst:335
msgid "0"
msgstr "0"

#: ../Doc/c-api/buffer.rst:325 ../Doc/c-api/buffer.rst:329
#: ../Doc/c-api/buffer.rst:333 ../Doc/c-api/buffer.rst:337
msgid "1 or 0"
msgstr "1 o 0"

#: ../Doc/c-api/buffer.rst:342
msgid "Complex arrays"
msgstr "Arreglos complejos"

#: ../Doc/c-api/buffer.rst:345
msgid "NumPy-style: shape and strides"
msgstr "Estilo NumPy: forma y *strides*"

#: ../Doc/c-api/buffer.rst:347
msgid ""
"The logical structure of NumPy-style arrays is defined by :c:member:"
"`~Py_buffer.itemsize`, :c:member:`~Py_buffer.ndim`, :c:member:`~Py_buffer."
"shape` and :c:member:`~Py_buffer.strides`."
msgstr ""
"La estructura lógica de las matrices de estilo NumPy está definida por :c:"
"member:`~Py_buffer.itemsize`, :c:member:`~Py_buffer.ndim`, :c:member:"
"`~Py_buffer.shape` y :c:member:`~Py_buffer.strides`."

#: ../Doc/c-api/buffer.rst:350
msgid ""
"If ``ndim == 0``, the memory location pointed to by :c:member:`~Py_buffer."
"buf` is interpreted as a scalar of size :c:member:`~Py_buffer.itemsize`. In "
"that case, both :c:member:`~Py_buffer.shape` and :c:member:`~Py_buffer."
"strides` are ``NULL``."
msgstr ""
"Si ``ndim == 0``, la ubicación de memoria señalada por :c:member:`~Py_buffer."
"buf` se interpreta como un escalar de tamaño :c:member:`~Py_buffer."
"itemsize`. En ese caso, tanto :c:member:`~Py_buffer.shape` como :c:member:"
"`~Py_buffer.strides` son ``NULL``."

#: ../Doc/c-api/buffer.rst:354
msgid ""
"If :c:member:`~Py_buffer.strides` is ``NULL``, the array is interpreted as a "
"standard n-dimensional C-array. Otherwise, the consumer must access an n-"
"dimensional array as follows:"
msgstr ""
"Si :c:member:`~Py_buffer.strides` es ``NULL``, el arreglo se interpreta como "
"un arreglo C n-dimensional estándar. De lo contrario, el consumidor debe "
"acceder a un arreglo n-dimensional de la siguiente manera:"

#: ../Doc/c-api/buffer.rst:364
msgid ""
"As noted above, :c:member:`~Py_buffer.buf` can point to any location within "
"the actual memory block. An exporter can check the validity of a buffer with "
"this function:"
msgstr ""
"Como se señaló anteriormente, :c:member:`~Py_buffer.buf` puede apuntar a "
"cualquier ubicación dentro del bloque de memoria real. Un exportador puede "
"verificar la validez de un búfer con esta función:"

#: ../Doc/c-api/buffer.rst:398
msgid "PIL-style: shape, strides and suboffsets"
msgstr "Estilo PIL: forma, *strides* y *suboffsets*"

#: ../Doc/c-api/buffer.rst:400
msgid ""
"In addition to the regular items, PIL-style arrays can contain pointers that "
"must be followed in order to get to the next element in a dimension. For "
"example, the regular three-dimensional C-array ``char v[2][2][3]`` can also "
"be viewed as an array of 2 pointers to 2 two-dimensional arrays: ``char "
"(*v[2])[2][3]``. In suboffsets representation, those two pointers can be "
"embedded at the start of :c:member:`~Py_buffer.buf`, pointing to two ``char "
"x[2][3]`` arrays that can be located anywhere in memory."
msgstr ""
"Además de los elementos normales, los arreglos de estilo PIL pueden contener "
"punteros que deben seguirse para llegar al siguiente elemento en una "
"dimensión. Por ejemplo, el arreglo C tridimensional regular ``char v[2][2]"
"[3]`` también se puede ver como un arreglo de 2 punteros a 2 arreglos "
"bidimensionales: ``char (*v[2])[2][3]``. En la representación de "
"*suboffsets*, esos dos punteros pueden incrustarse al comienzo de :c:member:"
"`~Py_buffer.buf`, apuntando a dos matrices ``char x[2][3]`` que pueden "
"ubicarse en cualquier lugar de la memoria."

#: ../Doc/c-api/buffer.rst:409
msgid ""
"Here is a function that returns a pointer to the element in an N-D array "
"pointed to by an N-dimensional index when there are both non-``NULL`` "
"strides and suboffsets::"
msgstr ""
"Aquí hay una función que retorna un puntero al elemento en un arreglo N-D a "
"la que apunta un índice N-dimensional cuando hay *strides* y *suboffsets* no "
"``NULL``:"

#: ../Doc/c-api/buffer.rst:428
msgid "Buffer-related functions"
msgstr "Funciones relacionadas a búfer"

#: ../Doc/c-api/buffer.rst:432
msgid ""
"Return ``1`` if *obj* supports the buffer interface otherwise ``0``.  When "
"``1`` is returned, it doesn't guarantee that :c:func:`PyObject_GetBuffer` "
"will succeed.  This function always succeeds."
msgstr ""
"Retorna ``1`` si *obj* admite la interfaz de búfer; de lo contrario, ``0`` "
"cuando se retorna ``1``, no garantiza que :c:func:`PyObject_GetBuffer` tenga "
"éxito. Esta función siempre tiene éxito."

#: ../Doc/c-api/buffer.rst:439
#, fuzzy
msgid ""
"Send a request to *exporter* to fill in *view* as specified by  *flags*. If "
"the exporter cannot provide a buffer of the exact type, it MUST raise :c:"
"data:`PyExc_BufferError`, set ``view->obj`` to ``NULL`` and return ``-1``."
msgstr ""
"Envía una solicitud a *exporter* para completar *view* según lo especificado "
"por *flags*. Si el exportador no puede proporcionar un búfer del tipo "
"exacto, DEBE generar :c:data:`PyExc_BufferError`, establece :c:member:`view-"
">obj` a ``NULL`` y retorna ``-1``."

#: ../Doc/c-api/buffer.rst:444
#, fuzzy
msgid ""
"On success, fill in *view*, set ``view->obj`` to a new reference to "
"*exporter* and return 0. In the case of chained buffer providers that "
"redirect requests to a single object, ``view->obj`` MAY refer to this object "
"instead of *exporter* (See :ref:`Buffer Object Structures <buffer-structs>`)."
msgstr ""
"En caso de éxito, llena *view*, establece :c:member:`view->obj` en una nueva "
"referencia a *exporter* y retorna 0. En el caso de proveedores de búfer "
"encadenados que redirigen las solicitudes a un solo objeto, :c:member:`view-"
">obj` PUEDE referirse a este objeto en lugar de *exporter* (Ver :ref:"
"`Estructuras de Objetos Búfer <buffer-structs>`)."

#: ../Doc/c-api/buffer.rst:449
msgid ""
"Successful calls to :c:func:`PyObject_GetBuffer` must be paired with calls "
"to :c:func:`PyBuffer_Release`, similar to :c:func:`malloc` and :c:func:"
"`free`. Thus, after the consumer is done with the buffer, :c:func:"
"`PyBuffer_Release` must be called exactly once."
msgstr ""
"Las llamadas exitosas a :c:func:`PyObject_GetBuffer` deben combinarse con "
"las llamadas a :c:func:`PyBuffer_Release`, similar a :c:func:`malloc` y :c:"
"func:`free`. Por lo tanto, después de que el consumidor haya terminado con "
"el búfer, :c:func:`PyBuffer_Release` debe llamarse exactamente una vez."

#: ../Doc/c-api/buffer.rst:457
#, fuzzy
msgid ""
"Release the buffer *view* and decrement the reference count for ``view-"
">obj``. This function MUST be called when the buffer is no longer being "
"used, otherwise reference leaks may occur."
msgstr ""
"Libera el búfer *view* y disminuye el conteo de referencias para :c:member:"
"`view-> obj`. Esta función DEBE llamarse cuando el búfer ya no se utiliza, "
"de lo contrario, pueden producirse fugas de referencia."

#: ../Doc/c-api/buffer.rst:461
msgid ""
"It is an error to call this function on a buffer that was not obtained via :"
"c:func:`PyObject_GetBuffer`."
msgstr ""
"Es un error llamar a esta función en un búfer que no se obtuvo a través de :"
"c:func:`PyObject_GetBuffer`."

#: ../Doc/c-api/buffer.rst:467
#, fuzzy
msgid ""
"Return the implied :c:data:`~Py_buffer.itemsize` from :c:data:`~Py_buffer."
"format`. On error, raise an exception and return -1."
msgstr ""
"Retorna el :c:data:`~Py_buffer.itemsize` implícito de :c:data:`~Py_buffer."
"format`. Esta función aún no está implementada."

#: ../Doc/c-api/buffer.rst:475
msgid ""
"Return ``1`` if the memory defined by the *view* is C-style (*order* is "
"``'C'``) or Fortran-style (*order* is ``'F'``) :term:`contiguous` or either "
"one (*order* is ``'A'``).  Return ``0`` otherwise.  This function always "
"succeeds."
msgstr ""
"Retorna ``1`` si la memoria definida por *view* es de estilo C (*order* es "
"``'C'``) o de estilo Fortran (*order* es ``'F'``) :term:`contiguous` o uno "
"cualquiera (*order* es ``'A'``). Retorna ``0`` de lo contrario. Esta función "
"siempre tiene éxito."

#: ../Doc/c-api/buffer.rst:482
msgid ""
"Get the memory area pointed to by the *indices* inside the given *view*. "
"*indices* must point to an array of ``view->ndim`` indices."
msgstr ""
"Obtiene el área de memoria señalada por los *indices* dentro del *view* "
"dado. *indices* deben apuntar a un arreglo de índices ``view->ndim``."

#: ../Doc/c-api/buffer.rst:488
msgid ""
"Copy contiguous *len* bytes from *buf* to *view*. *fort* can be ``'C'`` or "
"``'F'`` (for C-style or Fortran-style ordering). ``0`` is returned on "
"success, ``-1`` on error."
msgstr ""
"Copia *len* bytes contiguos de *buf* a *view*. *fort* puede ser ``'C'`` o "
"``'F'`` (para pedidos al estilo C o al estilo Fortran). ``0`` se retorna en "
"caso de éxito, ``-1`` en caso de error."

#: ../Doc/c-api/buffer.rst:495
msgid ""
"Copy *len* bytes from *src* to its contiguous representation in *buf*. "
"*order* can be ``'C'`` or ``'F'`` or ``'A'`` (for C-style or Fortran-style "
"ordering or either one). ``0`` is returned on success, ``-1`` on error."
msgstr ""
"Copia *len* bytes de *src* a su representación contigua en *buf*. *order* "
"puede ser ``'C'`` o ``'F'`` o ``''A'`` (para pedidos al estilo C o al estilo "
"Fortran o cualquiera) ``0`` se retorna en caso de éxito, ``-1`` en caso de "
"error."

#: ../Doc/c-api/buffer.rst:499
msgid "This function fails if *len* != *src->len*."
msgstr "Esta función falla si *len* != *src->len*."

#: ../Doc/c-api/buffer.rst:504
msgid ""
"Fill the *strides* array with byte-strides of a :term:`contiguous` (C-style "
"if *order* is ``'C'`` or Fortran-style if *order* is ``'F'``) array of the "
"given shape with the given number of bytes per element."
msgstr ""
"Rellena el arreglo *strides* con bytes de paso de un :term:`contiguous` "
"(estilo C si *order* es ``'C'`` o estilo Fortran si *order* es ``'F '`` ) "
"arreglo de la forma dada con el número dado de bytes por elemento."

#: ../Doc/c-api/buffer.rst:511
msgid ""
"Handle buffer requests for an exporter that wants to expose *buf* of size "
"*len* with writability set according to *readonly*. *buf* is interpreted as "
"a sequence of unsigned bytes."
msgstr ""
"Maneje las solicitudes de búfer para un exportador que quiera exponer *buf* "
"de tamaño *len* con capacidad de escritura establecida de acuerdo con "
"*readonly*. *buf* se interpreta como una secuencia de bytes sin signo."

#: ../Doc/c-api/buffer.rst:515
msgid ""
"The *flags* argument indicates the request type. This function always fills "
"in *view* as specified by flags, unless *buf* has been designated as read-"
"only and :c:macro:`PyBUF_WRITABLE` is set in *flags*."
msgstr ""
"El argumento *flags* indica el tipo de solicitud. Esta función siempre llena "
"*view* según lo especificado por *flags*, a menos que *buf* haya sido "
"designado como solo lectura y :c:macro:`PyBUF_WRITABLE` esté configurado en "
"*flags*."

#: ../Doc/c-api/buffer.rst:519
#, fuzzy
msgid ""
"On success, set ``view->obj`` to a new reference to *exporter* and return 0. "
"Otherwise, raise :c:data:`PyExc_BufferError`, set ``view->obj`` to ``NULL`` "
"and return ``-1``;"
msgstr ""
"En caso de éxito, establece :c:member:`view->obj` en una nueva referencia a "
"*exporter* y retorna 0. De lo contrario, genera :c:data:`PyExc_BufferError`, "
"establece :c:member:`view->obj` a ``NULL`` y retorna ``-1``;"

#: ../Doc/c-api/buffer.rst:523
msgid ""
"If this function is used as part of a :ref:`getbufferproc <buffer-structs>`, "
"*exporter* MUST be set to the exporting object and *flags* must be passed "
"unmodified. Otherwise, *exporter* MUST be ``NULL``."
msgstr ""
"Si esta función se usa como parte de a :ref:`getbufferproc <buffer-"
"structs>`, *exporter* DEBE establecerse en el objeto exportador y *flags* "
"deben pasarse sin modificaciones. De lo contrario, *exporter* DEBE ser "
"``NULL``."

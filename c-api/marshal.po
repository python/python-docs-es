# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-05-10 15:52+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/c-api/marshal.rst:6
msgid "Data marshalling support"
msgstr "Soporte de empaquetado (*marshalling*) de datos"

#: ../Doc/c-api/marshal.rst:8
msgid ""
"These routines allow C code to work with serialized objects using the same "
"data format as the :mod:`marshal` module.  There are functions to write data "
"into the serialization format, and additional functions that can be used to "
"read the data back.  Files used to store marshalled data must be opened in "
"binary mode."
msgstr ""
"Estas rutinas permiten que el código C funcione con objetos serializados "
"utilizando el mismo formato de datos que el módulo :mod:`marshal`. Hay "
"funciones para escribir datos en el formato de serialización y funciones "
"adicionales que se pueden usar para volver a leer los datos. Los archivos "
"utilizados para almacenar datos ordenados deben abrirse en modo binario."

#: ../Doc/c-api/marshal.rst:14
msgid "Numeric values are stored with the least significant byte first."
msgstr ""
"Los valores numéricos se almacenan con el byte menos significativo primero."

#: ../Doc/c-api/marshal.rst:16
msgid ""
"The module supports two versions of the data format: version 0 is the "
"historical version, version 1 shares interned strings in the file, and upon "
"unmarshalling.  Version 2 uses a binary format for floating point numbers. "
"``Py_MARSHAL_VERSION`` indicates the current file format (currently 2)."
msgstr ""
"El módulo admite dos versiones del formato de datos: la versión 0 es la "
"versión histórica, la versión 1 comparte cadenas de caracteres internas en "
"el archivo y al desempaquetar (*unmarshalling*). La versión 2 usa un formato "
"binario para números de punto flotante. ``Py_MARSHAL_VERSION`` indica el "
"formato de archivo actual (actualmente 2)."

#: ../Doc/c-api/marshal.rst:24
msgid ""
"Marshal a :c:type:`long` integer, *value*, to *file*.  This will only write "
"the least-significant 32 bits of *value*; regardless of the size of the "
"native :c:type:`long` type.  *version* indicates the file format."
msgstr ""
"Empaqueta (*marshal*) un entero :c:type:`long`, *value*, a un archivo "
"*file*. Esto solo escribirá los 32 bits menos significativos de *value*; "
"independientemente del tamaño del tipo nativo :c:type:`long`. *version* "
"indica el formato del archivo."

#: ../Doc/c-api/marshal.rst:31
msgid ""
"Marshal a Python object, *value*, to *file*. *version* indicates the file "
"format."
msgstr ""
"Empaqueta (*marshal*) un objeto Python, *value*, a un archivo *file*. "
"*version* indica el formato del archivo."

#: ../Doc/c-api/marshal.rst:37
msgid ""
"Return a bytes object containing the marshalled representation of *value*. "
"*version* indicates the file format."
msgstr ""
"Retorna un objeto de bytes que contiene la representación empaquetada "
"(*marshalled*) de *value*. *version* indica el formato del archivo."

#: ../Doc/c-api/marshal.rst:41
msgid "The following functions allow marshalled values to be read back in."
msgstr ""
"Las siguientes funciones permiten volver a leer los valores empaquetados "
"(*marshalled*)."

#: ../Doc/c-api/marshal.rst:46
#, fuzzy
msgid ""
"Return a C :c:type:`long` from the data stream in a :c:type:`FILE*` opened "
"for reading.  Only a 32-bit value can be read in using this function, "
"regardless of the native size of :c:type:`long`."
msgstr ""
"Retorna un C :c:type:`long` del flujo de datos en un :c:type:`FILE\\*` "
"abierto para lectura. Solo se puede leer un valor de 32 bits con esta "
"función, independientemente del tamaño nativo de :c:type:`long`."

#: ../Doc/c-api/marshal.rst:50 ../Doc/c-api/marshal.rst:60
msgid ""
"On error, sets the appropriate exception (:exc:`EOFError`) and returns "
"``-1``."
msgstr ""
"En caso de error, establece la excepción apropiada (:exc:`EOFError`) y "
"retorna ``-1``."

#: ../Doc/c-api/marshal.rst:56
#, fuzzy
msgid ""
"Return a C :c:type:`short` from the data stream in a :c:type:`FILE*` opened "
"for reading.  Only a 16-bit value can be read in using this function, "
"regardless of the native size of :c:type:`short`."
msgstr ""
"Retorna un C :c:type:`short` desde el flujo de datos en un :c:type:`FILE\\*` "
"abierto para lectura. Solo se puede leer un valor de 16 bits con esta "
"función, independientemente del tamaño nativo de :c:type:`short`."

#: ../Doc/c-api/marshal.rst:66
#, fuzzy
msgid ""
"Return a Python object from the data stream in a :c:type:`FILE*` opened for "
"reading."
msgstr ""
"Retorna un objeto Python del flujo de datos en un :c:type:`FILE\\*` abierto "
"para lectura."

#: ../Doc/c-api/marshal.rst:69 ../Doc/c-api/marshal.rst:83
#: ../Doc/c-api/marshal.rst:92
msgid ""
"On error, sets the appropriate exception (:exc:`EOFError`, :exc:`ValueError` "
"or :exc:`TypeError`) and returns ``NULL``."
msgstr ""
"En caso de error, establece la excepción apropiada (:exc:`EOFError`, :exc:"
"`ValueError` o :exc:`TypeError`) y retorna ``NULL``."

#: ../Doc/c-api/marshal.rst:75
#, fuzzy
msgid ""
"Return a Python object from the data stream in a :c:type:`FILE*` opened for "
"reading.  Unlike :c:func:`PyMarshal_ReadObjectFromFile`, this function "
"assumes that no further objects will be read from the file, allowing it to "
"aggressively load file data into memory so that the de-serialization can "
"operate from data in memory rather than reading a byte at a time from the "
"file.  Only use these variant if you are certain that you won't be reading "
"anything else from the file."
msgstr ""
"Retorna un objeto Python del flujo de datos en un :c:type:`FILE\\*` abierto "
"para lectura. A diferencia de :c:func:`PyMarshal_ReadObjectFromFile`, esta "
"función asume que no se leerán más objetos del archivo, lo que le permite "
"cargar agresivamente los datos del archivo en la memoria para que la "
"deserialización pueda operar desde los datos en la memoria en lugar de leer "
"un byte a la vez desde el archivo. Solo use esta variante si está seguro de "
"que no leerá nada más del archivo."

#: ../Doc/c-api/marshal.rst:89
msgid ""
"Return a Python object from the data stream in a byte buffer containing "
"*len* bytes pointed to by *data*."
msgstr ""
"Retorna un objeto Python del flujo de datos en un búfer de bytes que "
"contiene *len* bytes a los que apunta *data*."

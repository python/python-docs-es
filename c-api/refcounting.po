# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-05-10 01:57+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/c-api/refcounting.rst:8
msgid "Reference Counting"
msgstr "Conteo de referencias"

#: ../Doc/c-api/refcounting.rst:10
msgid ""
"The macros in this section are used for managing reference counts of Python "
"objects."
msgstr ""
"Los macros de esta sección se utilizan para administrar conteos de "
"referencia de objetos Python."

#: ../Doc/c-api/refcounting.rst:16
msgid ""
"Increment the reference count for object *o*.  The object must not be "
"``NULL``; if you aren't sure that it isn't ``NULL``, use :c:func:"
"`Py_XINCREF`."
msgstr ""
"Incrementa el conteo de referencia para el objeto *o*. El objeto no debe ser "
"``NULL``; si no está seguro de que no sea ``NULL``, use :c:func:`Py_XINCREF`."

#: ../Doc/c-api/refcounting.rst:22
msgid ""
"Increment the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect."
msgstr ""
"Incrementa el conteo de referencia para el objeto *o*. El objeto puede ser "
"``NULL``, en cuyo caso el macro no tiene efecto."

#: ../Doc/c-api/refcounting.rst:28
msgid ""
"Decrement the reference count for object *o*.  The object must not be "
"``NULL``; if you aren't sure that it isn't ``NULL``, use :c:func:"
"`Py_XDECREF`.  If the reference count reaches zero, the object's type's "
"deallocation function (which must not be ``NULL``) is invoked."
msgstr ""
"Disminuye el conteo de referencia para el objeto *o*. El objeto no debe ser "
"``NULL``; si no está seguro de que no sea ``NULL``, use :c:func:"
"`Py_XDECREF`. Si el conteo de referencia llega a cero, se invoca la función "
"de desasignación del tipo de objeto (que no debe ser ``NULL``)."

#: ../Doc/c-api/refcounting.rst:35
msgid ""
"The deallocation function can cause arbitrary Python code to be invoked (e."
"g. when a class instance with a :meth:`__del__` method is deallocated).  "
"While exceptions in such code are not propagated, the executed code has free "
"access to all Python global variables.  This means that any object that is "
"reachable from a global variable should be in a consistent state before :c:"
"func:`Py_DECREF` is invoked.  For example, code to delete an object from a "
"list should copy a reference to the deleted object in a temporary variable, "
"update the list data structure, and then call :c:func:`Py_DECREF` for the "
"temporary variable."
msgstr ""
"La función de desasignación puede hacer que se invoque un código arbitrario "
"de Python (por ejemplo, cuando se desasigna una instancia de clase con un "
"método :meth:`__del__`). Si bien las excepciones en dicho código no se "
"propagan, el código ejecutado tiene acceso libre a todas las variables "
"globales de Python. Esto significa que cualquier objeto al que se pueda "
"acceder desde una variable global debe estar en un estado coherente antes de "
"invocar :c:func:`Py_DECREF`. Por ejemplo, el código para eliminar un objeto "
"de una lista debe copiar una referencia al objeto eliminado en una variable "
"temporal, actualizar la estructura de datos de la lista y luego llamar a :c:"
"func:`Py_DECREF` para la variable temporal."

#: ../Doc/c-api/refcounting.rst:47
msgid ""
"Decrement the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect; otherwise the effect is the same as "
"for :c:func:`Py_DECREF`, and the same warning applies."
msgstr ""
"Disminuye el conteo de referencia para el objeto *o*. El objeto puede ser "
"``NULL``, en cuyo caso el macro no tiene efecto; de lo contrario, el efecto "
"es el mismo que para :c:func:`Py_DECREF`, y se aplica la misma advertencia."

#: ../Doc/c-api/refcounting.rst:54
msgid ""
"Decrement the reference count for object *o*.  The object may be ``NULL``, "
"in which case the macro has no effect; otherwise the effect is the same as "
"for :c:func:`Py_DECREF`, except that the argument is also set to ``NULL``.  "
"The warning for :c:func:`Py_DECREF` does not apply with respect to the "
"object passed because the macro carefully uses a temporary variable and sets "
"the argument to ``NULL`` before decrementing its reference count."
msgstr ""
"Disminuye el conteo de referencia para el objeto *o*. El objeto puede ser "
"``NULL``, en cuyo caso el macro no tiene efecto; de lo contrario, el efecto "
"es el mismo que para :c:func:`Py_DECREF`, excepto que el argumento también "
"se establece en ``NULL``. La advertencia para :c:func:`Py_DECREF` no se "
"aplica con respecto al objeto pasado porque el macro usa cuidadosamente una "
"variable temporal y establece el argumento en ``NULL`` antes de disminuir su "
"conteo de referencia."

#: ../Doc/c-api/refcounting.rst:61
msgid ""
"It is a good idea to use this macro whenever decrementing the reference "
"count of an object that might be traversed during garbage collection."
msgstr ""
"Es una buena idea usar este macro siempre que disminuya el conteo de "
"referencia de un objeto que pueda atravesarse durante la recolección de "
"basura."

#: ../Doc/c-api/refcounting.rst:65
msgid ""
"The following functions are for runtime dynamic embedding of Python: "
"``Py_IncRef(PyObject *o)``, ``Py_DecRef(PyObject *o)``. They are simply "
"exported function versions of :c:func:`Py_XINCREF` and :c:func:`Py_XDECREF`, "
"respectively."
msgstr ""
"Las siguientes funciones son para la incorporación dinámica de Python en "
"tiempo de ejecución: ``Py_IncRef(PyObject *o)``, ``Py_DecRef(PyObject *o)``. "
"Simplemente son versiones de funciones exportadas de :c:func:`Py_XINCREF` y :"
"c:func:`Py_XDECREF`, respectivamente."

#: ../Doc/c-api/refcounting.rst:70
msgid ""
"The following functions or macros are only for use within the interpreter "
"core: :c:func:`_Py_Dealloc`, :c:func:`_Py_ForgetReference`, :c:func:"
"`_Py_NewReference`, as well as the global variable :c:data:`_Py_RefTotal`."
msgstr ""
"Las siguientes funciones o macros son solo para uso dentro del núcleo del "
"intérprete: :c:func:`_Py_Dealloc`, :c:func:`_Py_ForgetReference`, :c:func:"
"`_Py_NewReference`, así como la variable global :c:data:`_Py_RefTotal`."

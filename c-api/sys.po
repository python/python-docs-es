# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-05-21 23:31+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/c-api/sys.rst:6
msgid "Operating System Utilities"
msgstr "Utilidades del sistema operativo"

#: ../Doc/c-api/sys.rst:10
msgid ""
"Return the file system representation for *path*. If the object is a :class:"
"`str` or :class:`bytes` object, then its reference count is incremented. If "
"the object implements the :class:`os.PathLike` interface, then :meth:`~os."
"PathLike.__fspath__` is returned as long as it is a :class:`str` or :class:"
"`bytes` object. Otherwise :exc:`TypeError` is raised and ``NULL`` is "
"returned."
msgstr ""
"Retorna la representación del sistema de archivos para *path*. Si el objeto "
"es :class:`str` o :class:`bytes`, entonces su conteo de referencias se "
"incrementa. Si el objeto implementa la interfaz :class:`os.PathLike`, "
"entonces :meth:`~os.PathLike.__fspath__` se retorna siempre que sea un "
"objeto :class:`str` o :class:`bytes`. De lo contrario :exc:`TypeError` se "
"lanza y se retorna ``NULL``."

#: ../Doc/c-api/sys.rst:22
msgid ""
"Return true (nonzero) if the standard I/O file *fp* with name *filename* is "
"deemed interactive.  This is the case for files for which "
"``isatty(fileno(fp))`` is true.  If the global flag :c:data:"
"`Py_InteractiveFlag` is true, this function also returns true if the "
"*filename* pointer is ``NULL`` or if the name is equal to one of the strings "
"``'<stdin>'`` or ``'???'``."
msgstr ""
"Retorna verdadero (distinto de cero) si el archivo de E/S (*I/O*) estándar "
"*fp* con nombre *filename* se considera interactivo. Este es el caso de los "
"archivos para los que ``isatty(fileno(fp))`` es verdadero. Si el indicador "
"global :c:data:`Py_InteractiveFlag` es verdadero, esta función también "
"retorna verdadero si el puntero *filename* es ``NULL`` o si el nombre es "
"igual a una de las cadenas de caracteres ``'<stdin>'`` o ``'???'``."

#: ../Doc/c-api/sys.rst:31
msgid ""
"Function to prepare some internal state before a process fork.  This should "
"be called before calling :c:func:`fork` or any similar function that clones "
"the current process. Only available on systems where :c:func:`fork` is "
"defined."
msgstr ""
"Función para preparar algún estado interno antes de una bifurcación de "
"proceso (*process fork*). Esto debería llamarse antes de llamar a :c:func:"
"`fork` o cualquier función similar que clone el proceso actual. Solo "
"disponible en sistemas donde :c:func:`fork` está definido."

#: ../Doc/c-api/sys.rst:37
msgid ""
"The C :c:func:`fork` call should only be made from the :ref:`\"main\" thread "
"<fork-and-threads>` (of the :ref:`\"main\" interpreter <sub-interpreter-"
"support>`).  The same is true for ``PyOS_BeforeFork()``."
msgstr ""
"La llamada C :c:func:`fork` solo debe hacerse desde :ref:`hilo \"principal\" "
"<fork-and-threads>` (del intérprete :ref:`\"principal\" <sub-interpreter-"
"support>`). Lo mismo es cierto para ``PyOS_BeforeFork()``."

#: ../Doc/c-api/sys.rst:47
msgid ""
"Function to update some internal state after a process fork.  This should be "
"called from the parent process after calling :c:func:`fork` or any similar "
"function that clones the current process, regardless of whether process "
"cloning was successful. Only available on systems where :c:func:`fork` is "
"defined."
msgstr ""
"Función para actualizar algún estado interno después de una bifurcación de "
"proceso. Se debe invocar desde el proceso principal después de llamar a :c:"
"func:`fork` o cualquier función similar que clone el proceso actual, "
"independientemente de si la clonación del proceso fue exitosa. Solo "
"disponible en sistemas donde :c:func:`fork` está definido."

#: ../Doc/c-api/sys.rst:54
msgid ""
"The C :c:func:`fork` call should only be made from the :ref:`\"main\" thread "
"<fork-and-threads>` (of the :ref:`\"main\" interpreter <sub-interpreter-"
"support>`).  The same is true for ``PyOS_AfterFork_Parent()``."
msgstr ""
"La llamada C :c:func:`fork` solo debe hacerse desde :ref:`hilo \"principal\" "
"<fork-and-threads>` (del intérprete :ref:`\"principal\" <sub-interpreter-"
"support>`). Lo mismo es cierto para ``PyOS_AfterFork_Parent()``."

#: ../Doc/c-api/sys.rst:64
msgid ""
"Function to update internal interpreter state after a process fork. This "
"must be called from the child process after calling :c:func:`fork`, or any "
"similar function that clones the current process, if there is any chance the "
"process will call back into the Python interpreter. Only available on "
"systems where :c:func:`fork` is defined."
msgstr ""
"Función para actualizar el estado del intérprete interno después de una "
"bifurcación de proceso (*process fork*). Debe llamarse desde el proceso "
"secundario después de llamar a :c:func:`fork`, o cualquier función similar "
"que clone el proceso actual, si existe alguna posibilidad de que el proceso "
"vuelva a llamar al intérprete de Python. Solo disponible en sistemas donde :"
"c:func:`fork` está definido."

#: ../Doc/c-api/sys.rst:71
msgid ""
"The C :c:func:`fork` call should only be made from the :ref:`\"main\" thread "
"<fork-and-threads>` (of the :ref:`\"main\" interpreter <sub-interpreter-"
"support>`).  The same is true for ``PyOS_AfterFork_Child()``."
msgstr ""
"La llamada C :c:func:`fork` solo debe hacerse desde :ref:`hilo \"principal\" "
"<fork-and-threads>` (del intérprete :ref:`\"principal\" <sub-interpreter-"
"support>`). Lo mismo es cierto para ``PyOS_AfterFork_Child()``."

#: ../Doc/c-api/sys.rst:79
msgid ""
":func:`os.register_at_fork` allows registering custom Python functions to be "
"called by :c:func:`PyOS_BeforeFork()`, :c:func:`PyOS_AfterFork_Parent` and  :"
"c:func:`PyOS_AfterFork_Child`."
msgstr ""
":func:`os.register_at_fork` permite registrar funciones personalizadas de "
"Python a las que puede llamar :c:func:`PyOS_BeforeFork()`, :c:func:"
"`PyOS_AfterFork_Parent` y :c:func:`PyOS_AfterFork_Child`."

#: ../Doc/c-api/sys.rst:86
msgid ""
"Function to update some internal state after a process fork; this should be "
"called in the new process if the Python interpreter will continue to be "
"used. If a new executable is loaded into the new process, this function does "
"not need to be called."
msgstr ""
"Función para actualizar algún estado interno después de una bifurcación de "
"proceso (*process fork*); Esto debería llamarse en el nuevo proceso si el "
"intérprete de Python continuará siendo utilizado. Si se carga un nuevo "
"ejecutable en el nuevo proceso, no es necesario llamar a esta función."

#: ../Doc/c-api/sys.rst:91
msgid "This function is superseded by :c:func:`PyOS_AfterFork_Child()`."
msgstr "Esta función es reemplazada por :c:func:`PyOS_AfterFork_Child()`."

#: ../Doc/c-api/sys.rst:97
msgid ""
"Return true when the interpreter runs out of stack space.  This is a "
"reliable check, but is only available when :const:`USE_STACKCHECK` is "
"defined (currently on Windows using the Microsoft Visual C++ compiler).  :"
"const:`USE_STACKCHECK` will be defined automatically; you should never "
"change the definition in your own code."
msgstr ""
"Retorna verdadero cuando el intérprete se queda sin espacio de pila (*stack "
"space*). Esta es una verificación confiable, pero solo está disponible "
"cuando :const:`USE_STACKCHECK` está definido (actualmente en Windows usando "
"el compilador *Microsoft Visual C++*). :const:`USE_STACKCHECK` se definirá "
"automáticamente; nunca debe cambiar la definición en su propio código."

#: ../Doc/c-api/sys.rst:106
msgid ""
"Return the current signal handler for signal *i*.  This is a thin wrapper "
"around either :c:func:`sigaction` or :c:func:`signal`.  Do not call those "
"functions directly! :c:type:`PyOS_sighandler_t` is a typedef alias for :c:"
"type:`void (\\*)(int)`."
msgstr ""
"Retorna el controlador de señal actual para la señal *i*. Esta es una "
"pequeña envoltura alrededor de :c:func:`sigaction` o :c:func:`signal`. ¡No "
"llame a esas funciones directamente! :c:type:`PyOS_sighandler_t` es un alias "
"*typedef* para :c:type:`void (\\*)(int)`."

#: ../Doc/c-api/sys.rst:114
msgid ""
"Set the signal handler for signal *i* to be *h*; return the old signal "
"handler. This is a thin wrapper around either :c:func:`sigaction` or :c:func:"
"`signal`.  Do not call those functions directly!  :c:type:"
"`PyOS_sighandler_t` is a typedef alias for :c:type:`void (\\*)(int)`."
msgstr ""
"Configura el controlador de señal para la señal *i* como *h*; retorna el "
"antiguo manejador de señal. Esta es una pequeña envoltura alrededor de :c:"
"func:`sigaction` o :c:func:`signal`. ¡No llame a esas funciones "
"directamente! :c:type:`PyOS_sighandler_t` es un alias *typedef* para :c:type:"
"`void (\\*)(int)`."

#: ../Doc/c-api/sys.rst:121
msgid ""
"Decode a byte string from the locale encoding with the :ref:`surrogateescape "
"error handler <surrogateescape>`: undecodable bytes are decoded as "
"characters in range U+DC80..U+DCFF. If a byte sequence can be decoded as a "
"surrogate character, escape the bytes using the surrogateescape error "
"handler instead of decoding them."
msgstr ""
"Decodifica una cadena de bytes de la codificación de configuración regional "
"con :ref:`controlador de error de subrogateescape <surrogateescape>`: los "
"bytes no codificables se decodifican como caracteres en el rango U+DC80..U"
"+DCFF. Si una secuencia de bytes se puede decodificar como un carácter "
"sustituto, escape los bytes usando el controlador de error de escape "
"sustituto en lugar de decodificarlos."

#: ../Doc/c-api/sys.rst:127 ../Doc/c-api/sys.rst:173
msgid "Encoding, highest priority to lowest priority:"
msgstr "Codificación, de máxima prioridad a menor prioridad:"

#: ../Doc/c-api/sys.rst:129 ../Doc/c-api/sys.rst:175
msgid "``UTF-8`` on macOS, Android, and VxWorks;"
msgstr "`` UTF-8`` en macOS, Android y VxWorks;"

#: ../Doc/c-api/sys.rst:130 ../Doc/c-api/sys.rst:176
msgid ""
"``UTF-8`` on Windows if :c:data:`Py_LegacyWindowsFSEncodingFlag` is zero;"
msgstr ""
"``UTF-8`` en Windows si :c:data:`Py_LegacyWindowsFSEncodingFlag` es cero;"

#: ../Doc/c-api/sys.rst:131 ../Doc/c-api/sys.rst:177
msgid "``UTF-8`` if the Python UTF-8 mode is enabled;"
msgstr "`` UTF-8`` si el modo Python UTF-8 está habilitado;"

#: ../Doc/c-api/sys.rst:132 ../Doc/c-api/sys.rst:178
msgid ""
"``ASCII`` if the ``LC_CTYPE`` locale is ``\"C\"``, ``nl_langinfo(CODESET)`` "
"returns the ``ASCII`` encoding (or an alias), and :c:func:`mbstowcs` and :c:"
"func:`wcstombs` functions uses the ``ISO-8859-1`` encoding."
msgstr ""
"``ASCII`` si la configuración regional ``LC_CTYPE`` es ``\"C\"``, "
"``nl_langinfo (CODESET)`` retorna la codificación ``ASCII`` (o un alias) y "
"las funciones :c:func:`mbstowcs` y :c:func:`wcstombs` utilizan la "
"codificación ``ISO-8859-1``."

#: ../Doc/c-api/sys.rst:136 ../Doc/c-api/sys.rst:182
msgid "the current locale encoding."
msgstr "la codificación de la configuración regional actual."

#: ../Doc/c-api/sys.rst:138
msgid ""
"Return a pointer to a newly allocated wide character string, use :c:func:"
"`PyMem_RawFree` to free the memory. If size is not ``NULL``, write the "
"number of wide characters excluding the null character into ``*size``"
msgstr ""
"Retorna un puntero a una cadena de caracteres anchos recientemente asignada, "
"use :c:func:`PyMem_RawFree` para liberar la memoria. Si el tamaño no es "
"``NULL``, escribe el número de caracteres anchos excluyendo el carácter nulo "
"en ``*size``"

#: ../Doc/c-api/sys.rst:142
msgid ""
"Return ``NULL`` on decoding error or memory allocation error. If *size* is "
"not ``NULL``, ``*size`` is set to ``(size_t)-1`` on memory error or set to "
"``(size_t)-2`` on decoding error."
msgstr ""
"Retorna ``NULL`` en caso de error de decodificación o error de asignación de "
"memoria. Si *size* no es ``NULL``, ``*size`` se establece en ``(size_t) -1`` "
"en caso de error de memoria o en ``(size_t) -2`` en caso de error de "
"decodificación."

#: ../Doc/c-api/sys.rst:146
msgid ""
"Decoding errors should never happen, unless there is a bug in the C library."
msgstr ""
"Los errores de decodificación nunca deberían ocurrir, a menos que haya un "
"error en la biblioteca C."

#: ../Doc/c-api/sys.rst:149
msgid ""
"Use the :c:func:`Py_EncodeLocale` function to encode the character string "
"back to a byte string."
msgstr ""
"Utilice la función :c:func:`Py_EncodeLocale` para codificar la cadena de "
"caracteres en una cadena de bytes."

#: ../Doc/c-api/sys.rst:154
msgid ""
"The :c:func:`PyUnicode_DecodeFSDefaultAndSize` and :c:func:"
"`PyUnicode_DecodeLocaleAndSize` functions."
msgstr ""
"Las funciones :c:func:`PyUnicode_DecodeFSDefaultAndSize` y :c:func:"
"`PyUnicode_DecodeLocaleAndSize`."

#: ../Doc/c-api/sys.rst:159 ../Doc/c-api/sys.rst:203
msgid "The function now uses the UTF-8 encoding in the UTF-8 mode."
msgstr "La función ahora usa la codificación UTF-8 en el modo UTF-8."

#: ../Doc/c-api/sys.rst:162 ../Doc/c-api/sys.rst:206
msgid ""
"The function now uses the UTF-8 encoding on Windows if :c:data:"
"`Py_LegacyWindowsFSEncodingFlag` is zero;"
msgstr ""
"La función ahora usa la codificación UTF-8 en Windows si :c:data:"
"`Py_LegacyWindowsFSEncodingFlag` es cero;"

#: ../Doc/c-api/sys.rst:169
msgid ""
"Encode a wide character string to the locale encoding with the :ref:"
"`surrogateescape error handler <surrogateescape>`: surrogate characters in "
"the range U+DC80..U+DCFF are converted to bytes 0x80..0xFF."
msgstr ""
"Codifica una cadena de caracteres anchos en la codificación de configuración "
"regional con :ref:`controlador de error de surrogateescape "
"<surrogateescape>`: los caracteres sustitutos en el rango U+DC80..U+DCFF se "
"convierten en bytes 0x80..0xFF."

#: ../Doc/c-api/sys.rst:184
msgid "The function uses the UTF-8 encoding in the Python UTF-8 mode."
msgstr "La función utiliza la codificación UTF-8 en el modo Python UTF-8."

#: ../Doc/c-api/sys.rst:186
msgid ""
"Return a pointer to a newly allocated byte string, use :c:func:`PyMem_Free` "
"to free the memory. Return ``NULL`` on encoding error or memory allocation "
"error"
msgstr ""
"Retorna un puntero a una cadena de bytes recién asignada, use :c:func:"
"`PyMem_Free` para liberar la memoria. Retorna ``NULL`` en el error de "
"codificación o error de asignación de memoria"

#: ../Doc/c-api/sys.rst:190
msgid ""
"If error_pos is not ``NULL``, ``*error_pos`` is set to ``(size_t)-1`` on "
"success,  or set to the index of the invalid character on encoding error."
msgstr ""
"Si *error_pos* no es ``NULL``, ``*error_pos`` se establece en ``(size_t)-1`` "
"en caso de éxito, o se establece en el índice del carácter no válido en el "
"error de codificación."

#: ../Doc/c-api/sys.rst:193
msgid ""
"Use the :c:func:`Py_DecodeLocale` function to decode the bytes string back "
"to a wide character string."
msgstr ""
"Use la función :c:func:`Py_DecodeLocale` para decodificar la cadena de bytes "
"en una cadena de caracteres anchos."

#: ../Doc/c-api/sys.rst:198
msgid ""
"The :c:func:`PyUnicode_EncodeFSDefault` and :c:func:`PyUnicode_EncodeLocale` "
"functions."
msgstr ""
"Las funciones :c:func:`PyUnicode_EncodeFSDefault` y :c:func:"
"`PyUnicode_EncodeLocale`."

#: ../Doc/c-api/sys.rst:214
msgid "System Functions"
msgstr "Funciones del Sistema"

#: ../Doc/c-api/sys.rst:216
msgid ""
"These are utility functions that make functionality from the :mod:`sys` "
"module accessible to C code.  They all work with the current interpreter "
"thread's :mod:`sys` module's dict, which is contained in the internal thread "
"state structure."
msgstr ""
"Estas son funciones de utilidad que hacen que la funcionalidad del módulo :"
"mod:`sys` sea accesible para el código C. Todos funcionan con el diccionario "
"del módulo :mod:`sys` del subproceso actual del intérprete, que está "
"contenido en la estructura interna del estado del subproceso."

#: ../Doc/c-api/sys.rst:222
msgid ""
"Return the object *name* from the :mod:`sys` module or ``NULL`` if it does "
"not exist, without setting an exception."
msgstr ""
"Retorna el objeto *name* del módulo :mod:`sys` o ``NULL`` si no existe, sin "
"establecer una excepción."

#: ../Doc/c-api/sys.rst:227
msgid ""
"Set *name* in the :mod:`sys` module to *v* unless *v* is ``NULL``, in which "
"case *name* is deleted from the sys module. Returns ``0`` on success, ``-1`` "
"on error."
msgstr ""
"Establece *name* en el módulo :mod:`sys` en *v* a menos que *v* sea "
"``NULL``, en cuyo caso *name* se elimina del módulo *sys*. Retorna ``0`` en "
"caso de éxito, ``-1`` en caso de error."

#: ../Doc/c-api/sys.rst:233
msgid ""
"Reset :data:`sys.warnoptions` to an empty list. This function may be called "
"prior to :c:func:`Py_Initialize`."
msgstr ""
"Restablece :data:`sys.warnoptions` a una lista vacía. Esta función puede "
"llamarse antes de :c:func:`Py_Initialize`."

#: ../Doc/c-api/sys.rst:238
msgid ""
"Append *s* to :data:`sys.warnoptions`. This function must be called prior "
"to :c:func:`Py_Initialize` in order to affect the warnings filter list."
msgstr ""
"Agrega *s* a :data:`sys.warnoptions`. Esta función debe llamarse antes de :c:"
"func:`Py_Initialize` para afectar la lista de filtros de advertencias."

#: ../Doc/c-api/sys.rst:243
msgid "Append *unicode* to :data:`sys.warnoptions`."
msgstr "Agrega *unicode* a :data:`sys.warnoptions`."

#: ../Doc/c-api/sys.rst:245
msgid ""
"Note: this function is not currently usable from outside the CPython "
"implementation, as it must be called prior to the implicit import of :mod:"
"`warnings` in :c:func:`Py_Initialize` to be effective, but can't be called "
"until enough of the runtime has been initialized to permit the creation of "
"Unicode objects."
msgstr ""
"Nota: esta función no se puede utilizar actualmente desde fuera de la "
"implementación de CPython, ya que debe llamarse antes de la importación "
"implícita de :mod:`warnings` en :c:func:`Py_Initialize` para que sea "
"efectiva, pero no se puede llamar hasta que se haya inicializado suficiente "
"tiempo de ejecución para permitir la creación de objetos Unicode."

#: ../Doc/c-api/sys.rst:253
msgid ""
"Set :data:`sys.path` to a list object of paths found in *path* which should "
"be a list of paths separated with the platform's search path delimiter (``:"
"`` on Unix, ``;`` on Windows)."
msgstr ""
"Establece :data:`sys.path` en un objeto lista de rutas que se encuentra en "
"*path*, que debería ser una lista de rutas separadas con el delimitador de "
"ruta de búsqueda de la plataforma (``:`` en Unix, ``;`` en Windows )"

#: ../Doc/c-api/sys.rst:259
msgid ""
"Write the output string described by *format* to :data:`sys.stdout`.  No "
"exceptions are raised, even if truncation occurs (see below)."
msgstr ""
"Escribe la cadena de caracteres de salida descrita por *format* en :data:"
"`sys.stdout`. No se lanzan excepciones, incluso si se produce el "
"truncamiento (ver más abajo)."

#: ../Doc/c-api/sys.rst:262
#, python-format
msgid ""
"*format* should limit the total size of the formatted output string to 1000 "
"bytes or less -- after 1000 bytes, the output string is truncated. In "
"particular, this means that no unrestricted \"%s\" formats should occur; "
"these should be limited using \"%.<N>s\" where <N> is a decimal number "
"calculated so that <N> plus the maximum size of other formatted text does "
"not exceed 1000 bytes.  Also watch out for \"%f\", which can print hundreds "
"of digits for very large numbers."
msgstr ""
"*format* debe limitar el tamaño total de la cadena de caracteres de salida "
"formateada a 1000 bytes o menos; después de 1000 bytes, la cadena de "
"caracteres de salida se trunca. En particular, esto significa que no deben "
"existir formatos \"%s\" sin restricciones; estos deben limitarse usando \"%."
"<N>s\" donde <N> es un número decimal calculado de modo que <N> más el "
"tamaño máximo de otro texto formateado no exceda los 1000 bytes. También "
"tenga cuidado con \"%f\", que puede imprimir cientos de dígitos para números "
"muy grandes."

#: ../Doc/c-api/sys.rst:270
msgid ""
"If a problem occurs, or :data:`sys.stdout` is unset, the formatted message "
"is written to the real (C level) *stdout*."
msgstr ""
"Si ocurre un problema, o :data:`sys.stdout` no está configurado, el mensaje "
"formateado se escribe en el real (nivel C) *stdout*."

#: ../Doc/c-api/sys.rst:275
msgid ""
"As :c:func:`PySys_WriteStdout`, but write to :data:`sys.stderr` or *stderr* "
"instead."
msgstr ""
"Como :c:func:`PySys_WriteStdout`, pero escribe a :data:`sys.stderr` o "
"*stderr* en su lugar."

#: ../Doc/c-api/sys.rst:280
msgid ""
"Function similar to PySys_WriteStdout() but format the message using :c:func:"
"`PyUnicode_FromFormatV` and don't truncate the message to an arbitrary "
"length."
msgstr ""
"Función similar a ``PySys_WriteStdout()`` pero formatea el mensaje usando :c:"
"func:`PyUnicode_FromFormatV` y no trunca el mensaje a una longitud "
"arbitraria."

#: ../Doc/c-api/sys.rst:288
msgid ""
"As :c:func:`PySys_FormatStdout`, but write to :data:`sys.stderr` or *stderr* "
"instead."
msgstr ""
"Como :c:func:`PySys_FormatStdout`, pero escribe a :data:`sys.stderr` o "
"*stderr* en su lugar."

#: ../Doc/c-api/sys.rst:295
msgid ""
"Parse *s* as a set of :option:`-X` options and add them to the current "
"options mapping as returned by :c:func:`PySys_GetXOptions`. This function "
"may be called prior to :c:func:`Py_Initialize`."
msgstr ""
"Analiza (*parse*) *s* como un conjunto de opciones :option:`-X` y los agrega "
"a la asignación de opciones actual tal como lo retorna :c:func:"
"`PySys_GetXOptions`. Esta función puede llamarse antes de :c:func:"
"`Py_Initialize`."

#: ../Doc/c-api/sys.rst:303
msgid ""
"Return the current dictionary of :option:`-X` options, similarly to :data:"
"`sys._xoptions`.  On error, ``NULL`` is returned and an exception is set."
msgstr ""
"Retorna el diccionario actual de opciones :option:`-X`, de manera similar a :"
"data:`sys._xoptions`. En caso de error, se retorna ``NULL`` y se establece "
"una excepción."

#: ../Doc/c-api/sys.rst:312
msgid ""
"Raise an auditing event with any active hooks. Return zero for success and "
"non-zero with an exception set on failure."
msgstr ""
"Lanza un evento de auditoría con cualquier gancho activo. Retorna cero para "
"el éxito y no cero con una excepción establecida en caso de error."

#: ../Doc/c-api/sys.rst:315
msgid ""
"If any hooks have been added, *format* and other arguments will be used to "
"construct a tuple to pass. Apart from ``N``, the same format characters as "
"used in :c:func:`Py_BuildValue` are available. If the built value is not a "
"tuple, it will be added into a single-element tuple. (The ``N`` format "
"option consumes a reference, but since there is no way to know whether "
"arguments to this function will be consumed, using it may cause reference "
"leaks.)"
msgstr ""
"Si se han agregado ganchos, *format* y otros argumentos se utilizarán para "
"construir una tupla para pasar. Además de ``N``, están disponibles los "
"mismos caracteres de formato que los utilizados en :c:func:`Py_BuildValue`. "
"Si el valor generado no es una tupla, se agregará a una tupla de un solo "
"elemento. (La opción de formato ``N`` consume una referencia, pero dado que "
"no hay forma de saber si se consumirán argumentos para esta función, su uso "
"puede causar fugas de referencia)."

#: ../Doc/c-api/sys.rst:323
msgid ""
"Note that ``#`` format characters should always be treated as "
"``Py_ssize_t``, regardless of whether ``PY_SSIZE_T_CLEAN`` was defined."
msgstr ""
"Tenga en cuenta que los caracteres de formato ``#`` siempre deben tratarse "
"como ``Py_ssize_t``, independientemente de si se definió "
"``PY_SSIZE_T_CLEAN``."

#: ../Doc/c-api/sys.rst:326
msgid ":func:`sys.audit` performs the same function from Python code."
msgstr ":func:`sys.audit` realiza la misma función del código Python."

#: ../Doc/c-api/sys.rst:332
msgid ""
"Require ``Py_ssize_t`` for ``#`` format characters. Previously, an "
"unavoidable deprecation warning was raised."
msgstr ""
"Requiere ``Py_ssize_t`` para los caracteres de formato ``#``. Anteriormente, "
"se lanza una advertencia de deprecación inevitable."

#: ../Doc/c-api/sys.rst:338
msgid ""
"Append the callable *hook* to the list of active auditing hooks. Return zero "
"for success and non-zero on failure. If the runtime has been initialized, "
"also set an error on failure. Hooks added through this API are called for "
"all interpreters created by the runtime."
msgstr ""
"Agrega el gancho *hook* invocable a la lista de enlaces de auditoría "
"activos. Retorna cero para el éxito y no cero en caso de error. Si el tiempo "
"de ejecución se ha inicializado, también configura un error en caso de "
"fallo. Los ganchos agregados a través de esta API se llaman para todos los "
"intérpretes creados por el tiempo de ejecución."

#: ../Doc/c-api/sys.rst:344
msgid ""
"The *userData* pointer is passed into the hook function. Since hook "
"functions may be called from different runtimes, this pointer should not "
"refer directly to Python state."
msgstr ""
"El puntero *userData* se pasa a la función gancho. Dado que las funciones de "
"enlace pueden llamarse desde diferentes tiempos de ejecución, este puntero "
"no debe referirse directamente al estado de Python."

#: ../Doc/c-api/sys.rst:348
msgid ""
"This function is safe to call before :c:func:`Py_Initialize`. When called "
"after runtime initialization, existing audit hooks are notified and may "
"silently abort the operation by raising an error subclassed from :class:"
"`Exception` (other errors will not be silenced)."
msgstr ""
"Es seguro llamar a esta función antes de :c:func:`Py_Initialize`. Cuando se "
"llama después de la inicialización del tiempo de ejecución, se notifican los "
"enlaces de auditoría existentes y pueden anular silenciosamente la operación "
"al generar un error subclasificado de :class:`Excepción` (otros errores no "
"se silenciarán)."

#: ../Doc/c-api/sys.rst:353
msgid ""
"The hook function is of type :c:type:`int (*)(const char *event, PyObject "
"*args, void *userData)`, where *args* is guaranteed to be a :c:type:"
"`PyTupleObject`. The hook function is always called with the GIL held by the "
"Python interpreter that raised the event."
msgstr ""
"La función gancho (*hook*) es de tipo :c:type:`int (*)(const char *event, "
"PyObject *args, void *userData)`, donde *args* está garantizado como un :c:"
"type:`PyTupleObject`. La función gancho siempre se llama con el GIL en poder "
"del intérprete de Python que lanzó el evento."

#: ../Doc/c-api/sys.rst:358
msgid ""
"See :pep:`578` for a detailed description of auditing.  Functions in the "
"runtime and standard library that raise events are listed in the :ref:`audit "
"events table <audit-events>`. Details are in each function's documentation."
msgstr ""
"Ver :pep:`578` para una descripción detallada de la auditoría. Las funciones "
"en el tiempo de ejecución y la biblioteca estándar que generan eventos se "
"enumeran en :ref:`table de eventos de auditoria <audit-events>`. Los "
"detalles se encuentran en la documentación de cada función."

#: ../Doc/c-api/sys.rst:363
msgid ""
"Raises an :ref:`auditing event <auditing>` ``sys.addaudithook`` with no "
"arguments."
msgstr ""
"Lanza un :ref:`evento de auditoria <auditing>` ``sys.addaudithook`` sin "
"argumentos."

#: ../Doc/c-api/sys.rst:365
msgid ""
"If the interpreter is initialized, this function raises a auditing event "
"``sys.addaudithook`` with no arguments. If any existing hooks raise an "
"exception derived from :class:`Exception`, the new hook will not be added "
"and the exception is cleared. As a result, callers cannot assume that their "
"hook has been added unless they control all existing hooks."
msgstr ""
"Si el intérprete se inicializa, esta función genera un evento de auditoría "
"``sys.addaudithook`` sin argumentos. Si algún enlace existente genera una "
"excepción derivada de :class:`Exception`, el nuevo gancho no se agregará y "
"la excepción se borrará. Como resultado, las personas que llaman no pueden "
"asumir que su gancho ha sido agregado a menos que controlen todos los "
"ganchos existentes."

#: ../Doc/c-api/sys.rst:377
msgid "Process Control"
msgstr "Control de procesos"

#: ../Doc/c-api/sys.rst:384
msgid ""
"Print a fatal error message and kill the process.  No cleanup is performed. "
"This function should only be invoked when a condition is detected that would "
"make it dangerous to continue using the Python interpreter; e.g., when the "
"object administration appears to be corrupted.  On Unix, the standard C "
"library function :c:func:`abort` is called which will attempt to produce a :"
"file:`core` file."
msgstr ""
"Imprime un mensaje de error fatal y elimina el proceso. No se realiza "
"limpieza. Esta función solo debe invocarse cuando se detecta una condición "
"que haría peligroso continuar usando el intérprete de Python; por ejemplo, "
"cuando la administración del objeto parece estar dañada. En Unix, se llama a "
"la función de biblioteca C estándar :c:func:`abort` que intentará producir "
"un archivo :file:`core`."

#: ../Doc/c-api/sys.rst:391
msgid ""
"The ``Py_FatalError()`` function is replaced with a macro which logs "
"automatically the name of the current function, unless the "
"``Py_LIMITED_API`` macro is defined."
msgstr ""

#: ../Doc/c-api/sys.rst:395
msgid "Log the function name automatically."
msgstr ""

#: ../Doc/c-api/sys.rst:405
msgid ""
"Exit the current process.  This calls :c:func:`Py_FinalizeEx` and then calls "
"the standard C library function ``exit(status)``.  If :c:func:"
"`Py_FinalizeEx` indicates an error, the exit status is set to 120."
msgstr ""
"Sale del proceso actual. Esto llama :c:func:`Py_FinalizeEx` y luego llama a "
"la función estándar de la biblioteca C ``exit(status)``. Si :c:func:"
"`Py_FinalizeEx` indica un error, el estado de salida se establece en 120."

#: ../Doc/c-api/sys.rst:409
msgid "Errors from finalization no longer ignored."
msgstr "Los errores de finalización ya no se ignoran."

#: ../Doc/c-api/sys.rst:419
msgid ""
"Register a cleanup function to be called by :c:func:`Py_FinalizeEx`.  The "
"cleanup function will be called with no arguments and should return no "
"value.  At most 32 cleanup functions can be registered.  When the "
"registration is successful, :c:func:`Py_AtExit` returns ``0``; on failure, "
"it returns ``-1``.  The cleanup function registered last is called first. "
"Each cleanup function will be called at most once.  Since Python's internal "
"finalization will have completed before the cleanup function, no Python APIs "
"should be called by *func*."
msgstr ""
"Registra una función de limpieza a la que llamará :c:func:`Py_FinalizeEx`. "
"Se llamará a la función de limpieza sin argumentos y no debería retornar "
"ningún valor. Como máximo se pueden registrar 32 funciones de limpieza. "
"Cuando el registro es exitoso, :c:func:`Py_AtExit` retorna ``0``; en caso de "
"error, retorna ``-1``. La última función de limpieza registrada se llama "
"primero. Cada función de limpieza se llamará como máximo una vez. Dado que "
"la finalización interna de Python se habrá completado antes de la función de "
"limpieza, *func* no debería llamar a las API de Python."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-05-16 18:25+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/c-api/set.rst:6
msgid "Set Objects"
msgstr "Objetos Conjunto"

#: ../Doc/c-api/set.rst:15
msgid ""
"This section details the public API for :class:`set` and :class:`frozenset` "
"objects.  Any functionality not listed below is best accessed using the "
"either the abstract object protocol (including :c:func:"
"`PyObject_CallMethod`, :c:func:`PyObject_RichCompareBool`, :c:func:"
"`PyObject_Hash`, :c:func:`PyObject_Repr`, :c:func:`PyObject_IsTrue`, :c:func:"
"`PyObject_Print`, and :c:func:`PyObject_GetIter`) or the abstract number "
"protocol (including :c:func:`PyNumber_And`, :c:func:`PyNumber_Subtract`, :c:"
"func:`PyNumber_Or`, :c:func:`PyNumber_Xor`, :c:func:`PyNumber_InPlaceAnd`, :"
"c:func:`PyNumber_InPlaceSubtract`, :c:func:`PyNumber_InPlaceOr`, and :c:func:"
"`PyNumber_InPlaceXor`)."
msgstr ""
"Esta sección detalla la API pública para objetos :class:`set` y :class:"
"`frozenset`. Se puede acceder mejor a cualquier funcionalidad que no se "
"enumere a continuación utilizando el protocolo de objeto abstracto (que "
"incluye :c:func:`PyObject_CallMethod`, :c:func:`PyObject_RichCompareBool`, :"
"c:func:`PyObject_Hash`, :c:func:`PyObject_Repr`, :c:func:`PyObject_IsTrue`, :"
"c:func:`PyObject_Print`, y :c:func:`PyObject_GetIter`) o el protocolo de "
"número abstracto (que incluye :c:func:`PyNumber_And`, :c:func:"
"`PyNumber_Subtract`, :c:func:`PyNumber_Or`, :c:func:`PyNumber_Xor`, :c:func:"
"`PyNumber_InPlaceAnd`, :c:func:`PyNumber_InPlaceSubtract`, :c:func:"
"`PyNumber_InPlaceOr`, y :c:func:`PyNumber_InPlaceXor`)."

#: ../Doc/c-api/set.rst:29
msgid ""
"This subtype of :c:type:`PyObject` is used to hold the internal data for "
"both :class:`set` and :class:`frozenset` objects.  It is like a :c:type:"
"`PyDictObject` in that it is a fixed size for small sets (much like tuple "
"storage) and will point to a separate, variable sized block of memory for "
"medium and large sized sets (much like list storage). None of the fields of "
"this structure should be considered public and are subject to change.  All "
"access should be done through the documented API rather than by manipulating "
"the values in the structure."
msgstr ""
"Este subtipo de :c:type:`PyObject` se utiliza para contener los datos "
"internos de los objetos :class:`set` y :class:`frozenset`. Es como un :c:"
"type:`PyDictObject` en el sentido de que es un tamaño fijo para conjuntos "
"pequeños (muy parecido al almacenamiento de tuplas) y apuntará a un bloque "
"de memoria separado de tamaño variable para conjuntos de tamaño medio y "
"grande (muy similar a la lista almacenamiento). Ninguno de los campos de "
"esta estructura debe considerarse público y está sujeto a cambios. Todo el "
"acceso debe hacerse a través de la API documentada en lugar de manipular los "
"valores en la estructura."

#: ../Doc/c-api/set.rst:40
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`set` type."
msgstr ""
"Esta es una instancia de :c:type:`PyTypeObject` que representa el tipo "
"Python :class:`set`."

#: ../Doc/c-api/set.rst:46
msgid ""
"This is an instance of :c:type:`PyTypeObject` representing the Python :class:"
"`frozenset` type."
msgstr ""
"Esta es una instancia de :c:type:`PyTypeObject` que representa el tipo "
"Python :class:`frozenset`."

#: ../Doc/c-api/set.rst:49
msgid ""
"The following type check macros work on pointers to any Python object. "
"Likewise, the constructor functions work with any iterable Python object."
msgstr ""
"Los siguientes macros de comprobación de tipos funcionan en punteros a "
"cualquier objeto de Python. Del mismo modo, las funciones del constructor "
"funcionan con cualquier objeto Python iterable."

#: ../Doc/c-api/set.rst:55
#, fuzzy
msgid ""
"Return true if *p* is a :class:`set` object or an instance of a subtype. "
"This function always succeeds."
msgstr ""
"Retorna verdadero si *p* es un objeto :class:`set` o una instancia de un "
"subtipo."

#: ../Doc/c-api/set.rst:60
#, fuzzy
msgid ""
"Return true if *p* is a :class:`frozenset` object or an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"Retorna verdadero si *p* es un objeto :class:`frozenset` o una instancia de "
"un subtipo."

#: ../Doc/c-api/set.rst:65
#, fuzzy
msgid ""
"Return true if *p* is a :class:`set` object, a :class:`frozenset` object, or "
"an instance of a subtype.  This function always succeeds."
msgstr ""
"Retorna verdadero si *p* es un objeto :class:`set`, un objeto :class:"
"`frozenset`, o una instancia de un subtipo."

#: ../Doc/c-api/set.rst:71
#, fuzzy
msgid ""
"Return true if *p* is a :class:`set` object or a :class:`frozenset` object "
"but not an instance of a subtype.  This function always succeeds."
msgstr ""
"Retorna verdadero si *p* es un objeto :class:`set` o un objeto :class:"
"`frozenset` pero no una instancia de un subtipo."

#: ../Doc/c-api/set.rst:77
#, fuzzy
msgid ""
"Return true if *p* is a :class:`frozenset` object but not an instance of a "
"subtype.  This function always succeeds."
msgstr ""
"Retorna verdadero si *p* es un objeto :class:`frozenset` pero no una "
"instancia de un subtipo."

#: ../Doc/c-api/set.rst:83
msgid ""
"Return a new :class:`set` containing objects returned by the *iterable*.  "
"The *iterable* may be ``NULL`` to create a new empty set.  Return the new "
"set on success or ``NULL`` on failure.  Raise :exc:`TypeError` if *iterable* "
"is not actually iterable.  The constructor is also useful for copying a set "
"(``c=set(s)``)."
msgstr ""
"Retorna un nuevo :class:`set` que contiene objetos retornados por "
"*iterable*. El *iterable* puede ser ``NULL`` para crear un nuevo conjunto "
"vacío. Retorna el nuevo conjunto en caso de éxito o ``NULL`` en caso de "
"error. Lanza :exc:`TypeError` si *iterable* no es realmente iterable. El "
"constructor también es útil para copiar un conjunto (``c=set(s)``)."

#: ../Doc/c-api/set.rst:92
msgid ""
"Return a new :class:`frozenset` containing objects returned by the "
"*iterable*. The *iterable* may be ``NULL`` to create a new empty frozenset.  "
"Return the new set on success or ``NULL`` on failure.  Raise :exc:"
"`TypeError` if *iterable* is not actually iterable."
msgstr ""
"Retorna un nuevo :class:`frozenset` que contiene objetos retornados por "
"*iterable*. El *iterable* puede ser ``NULL`` para crear un nuevo conjunto "
"congelado vacío. Retorna el nuevo conjunto en caso de éxito o ``NULL`` en "
"caso de error. Lanza :exc:`TypeError` si *iterable* no es realmente iterable."

#: ../Doc/c-api/set.rst:98
msgid ""
"The following functions and macros are available for instances of :class:"
"`set` or :class:`frozenset` or instances of their subtypes."
msgstr ""
"Las siguientes funciones y macros están disponibles para instancias de :"
"class:`set` o :class:`frozenset` o instancias de sus subtipos."

#: ../Doc/c-api/set.rst:106
msgid ""
"Return the length of a :class:`set` or :class:`frozenset` object. Equivalent "
"to ``len(anyset)``.  Raises a :exc:`PyExc_SystemError` if *anyset* is not a :"
"class:`set`, :class:`frozenset`, or an instance of a subtype."
msgstr ""
"Retorna la longitud de un objeto :class:`set` o :class:`frozenset`. "
"Equivalente a ``len(anyset)``. Lanza un :exc:`PyExc_SystemError` si *anyset* "
"no es :class:`set`, :class:`frozenset`, o una instancia de un subtipo."

#: ../Doc/c-api/set.rst:113
msgid "Macro form of :c:func:`PySet_Size` without error checking."
msgstr "Forma macro de :c:func:`PySet_Size` sin comprobación de errores."

#: ../Doc/c-api/set.rst:118
msgid ""
"Return ``1`` if found, ``0`` if not found, and ``-1`` if an error is "
"encountered.  Unlike the Python :meth:`__contains__` method, this function "
"does not automatically convert unhashable sets into temporary frozensets.  "
"Raise a :exc:`TypeError` if the *key* is unhashable. Raise :exc:"
"`PyExc_SystemError` if *anyset* is not a :class:`set`, :class:`frozenset`, "
"or an instance of a subtype."
msgstr ""
"Retorna ``1`` si se encuentra, ``0`` si no se encuentra y ``-1`` si se "
"encuentra un error. A diferencia del método Python :meth:`__contains__`, "
"esta función no convierte automáticamente conjuntos no compartibles en "
"congelados temporales. Lanza un :exc:`TypeError` si la *key* no se puede "
"compartir. Lanza :exc:`PyExc_SystemError` si *anyset* no es un :class:"
"`set`, :class:`frozenset`, o una instancia de un subtipo."

#: ../Doc/c-api/set.rst:127
msgid ""
"Add *key* to a :class:`set` instance.  Also works with :class:`frozenset` "
"instances (like :c:func:`PyTuple_SetItem` it can be used to fill-in the "
"values of brand new frozensets before they are exposed to other code).  "
"Return ``0`` on success or ``-1`` on failure. Raise a :exc:`TypeError` if "
"the *key* is unhashable. Raise a :exc:`MemoryError` if there is no room to "
"grow.  Raise a :exc:`SystemError` if *set* is not an instance of :class:"
"`set` or its subtype."
msgstr ""
"Agrega *key* a una instancia de :class:`set`. También funciona con "
"instancias :class:`frozenset` (como :c:func:`PyTuple_SetItem` se puede usar "
"para completar los valores de los *frozensets* nuevos antes de que estén "
"expuestos a otro código). Retorna ``0`` en caso de éxito o ``-1`` en caso de "
"error. Lanza un :exc:`TypeError` si la *key* no se puede compartir. Lanza "
"un :exc:`MemoryError` si no hay espacio para crecer. Lanza un :exc:"
"`SystemError` si *set* no es una instancia de :class:`set` o su subtipo."

#: ../Doc/c-api/set.rst:136
msgid ""
"The following functions are available for instances of :class:`set` or its "
"subtypes but not for instances of :class:`frozenset` or its subtypes."
msgstr ""
"Las siguientes funciones están disponibles para instancias de :class:`set` o "
"sus subtipos, pero no para instancias de :class:`frozenset` o sus subtipos."

#: ../Doc/c-api/set.rst:142
msgid ""
"Return ``1`` if found and removed, ``0`` if not found (no action taken), and "
"``-1`` if an error is encountered.  Does not raise :exc:`KeyError` for "
"missing keys.  Raise a :exc:`TypeError` if the *key* is unhashable.  Unlike "
"the Python :meth:`~set.discard` method, this function does not automatically "
"convert unhashable sets into temporary frozensets. Raise :exc:"
"`PyExc_SystemError` if *set* is not an instance of :class:`set` or its "
"subtype."
msgstr ""
"Retorna ``1`` si se encuentra y se elimina, ``0`` si no se encuentra (no se "
"realiza ninguna acción) y ``-1`` si se encuentra un error. No lanza :exc:"
"`KeyError` por faltar claves. Lanza un :exc:`TypeError` si la *key* no se "
"puede compartir. A diferencia del método Python :meth:`~set.discard`, esta "
"función no convierte automáticamente conjuntos no compartibles en congelados "
"temporales. Lanza :exc:`PyExc_SystemError` si *set* no es una instancia de :"
"class:`set` o su subtipo."

#: ../Doc/c-api/set.rst:152
msgid ""
"Return a new reference to an arbitrary object in the *set*, and removes the "
"object from the *set*.  Return ``NULL`` on failure.  Raise :exc:`KeyError` "
"if the set is empty. Raise a :exc:`SystemError` if *set* is not an instance "
"of :class:`set` or its subtype."
msgstr ""
"Retorna una nueva referencia a un objeto arbitrario en el *set* y elimina el "
"objeto del *set*. Retorna ``NULL`` en caso de falla. Lanza :exc:`KeyError` "
"si el conjunto está vacío. Lanza a :exc:`SystemError` si *set* no es una "
"instancia de :class:`set` o su subtipo."

#: ../Doc/c-api/set.rst:160
msgid "Empty an existing set of all elements."
msgstr "Vacía un conjunto existente de todos los elementos."

#~ msgid "Clear the free list. Return the total number of freed items."
#~ msgstr ""
#~ "Borra la lista libre. Retorna el número total de artículos liberados."

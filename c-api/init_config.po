# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-06-23 12:35+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"Language-Team: \n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/c-api/init_config.rst:7
msgid "Python Initialization Configuration"
msgstr "Configuración de inicialización de Python"

#: ../Doc/c-api/init_config.rst:11
msgid "Structures:"
msgstr "Estructuras:"

#: ../Doc/c-api/init_config.rst:13
msgid ":c:type:`PyConfig`"
msgstr ":c:type:`PyConfig`"

#: ../Doc/c-api/init_config.rst:14
msgid ":c:type:`PyPreConfig`"
msgstr ":c:type:`PyPreConfig`"

#: ../Doc/c-api/init_config.rst:15
msgid ":c:type:`PyStatus`"
msgstr ":c:type:`PyStatus`"

#: ../Doc/c-api/init_config.rst:16
msgid ":c:type:`PyWideStringList`"
msgstr ":c:type:`PyWideStringList`"

#: ../Doc/c-api/init_config.rst:18
msgid "Functions:"
msgstr "Funciones:"

#: ../Doc/c-api/init_config.rst:20
msgid ":c:func:`PyConfig_Clear`"
msgstr ":c:func:`PyConfig_Clear`"

#: ../Doc/c-api/init_config.rst:21
msgid ":c:func:`PyConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyConfig_InitIsolatedConfig`"

#: ../Doc/c-api/init_config.rst:22
msgid ":c:func:`PyConfig_InitPythonConfig`"
msgstr ":c:func:`PyConfig_InitPythonConfig`"

#: ../Doc/c-api/init_config.rst:23
msgid ":c:func:`PyConfig_Read`"
msgstr ":c:func:`PyConfig_Read`"

#: ../Doc/c-api/init_config.rst:24
msgid ":c:func:`PyConfig_SetArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: ../Doc/c-api/init_config.rst:25
msgid ":c:func:`PyConfig_SetBytesArgv`"
msgstr ":c:func:`PyConfig_SetBytesArgv`"

#: ../Doc/c-api/init_config.rst:26
msgid ":c:func:`PyConfig_SetBytesString`"
msgstr ":c:func:`PyConfig_SetBytesString`"

#: ../Doc/c-api/init_config.rst:27
msgid ":c:func:`PyConfig_SetString`"
msgstr ":c:func:`PyConfig_SetString`"

#: ../Doc/c-api/init_config.rst:28
msgid ":c:func:`PyConfig_SetWideStringList`"
msgstr ":c:func:`PyConfig_SetWideStringList`"

#: ../Doc/c-api/init_config.rst:29
msgid ":c:func:`PyPreConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyPreConfig_InitIsolatedConfig`"

#: ../Doc/c-api/init_config.rst:30
msgid ":c:func:`PyPreConfig_InitPythonConfig`"
msgstr ":c:func:`PyPreConfig_InitPythonConfig`"

#: ../Doc/c-api/init_config.rst:31
msgid ":c:func:`PyStatus_Error`"
msgstr ":c:func:`PyStatus_Error`"

#: ../Doc/c-api/init_config.rst:32
msgid ":c:func:`PyStatus_Exception`"
msgstr ":c:func:`PyStatus_Error`"

#: ../Doc/c-api/init_config.rst:33
msgid ":c:func:`PyStatus_Exit`"
msgstr ":c:func:`PyStatus_Error`"

#: ../Doc/c-api/init_config.rst:34
msgid ":c:func:`PyStatus_IsError`"
msgstr ":c:func:`PyStatus_IsError`"

#: ../Doc/c-api/init_config.rst:35
msgid ":c:func:`PyStatus_IsExit`"
msgstr ":c:func:`PyStatus_IsExit`"

#: ../Doc/c-api/init_config.rst:36
msgid ":c:func:`PyStatus_NoMemory`"
msgstr ":c:func:`PyStatus_NoMemory`"

#: ../Doc/c-api/init_config.rst:37
msgid ":c:func:`PyStatus_Ok`"
msgstr ":c:func:`PyStatus_Ok`"

#: ../Doc/c-api/init_config.rst:38
msgid ":c:func:`PyWideStringList_Append`"
msgstr ":c:func:`PyWideStringList_Append`"

#: ../Doc/c-api/init_config.rst:39
msgid ":c:func:`PyWideStringList_Insert`"
msgstr ":c:func:`PyWideStringList_Insert`"

#: ../Doc/c-api/init_config.rst:40
msgid ":c:func:`Py_ExitStatusException`"
msgstr ":c:func:`Py_ExitStatusException`"

#: ../Doc/c-api/init_config.rst:41
msgid ":c:func:`Py_InitializeFromConfig`"
msgstr ":c:func:`Py_InitializeFromConfig`"

#: ../Doc/c-api/init_config.rst:42
msgid ":c:func:`Py_PreInitialize`"
msgstr ":c:func:`Py_PreInitialize`"

#: ../Doc/c-api/init_config.rst:43
msgid ":c:func:`Py_PreInitializeFromArgs`"
msgstr ":c:func:`Py_PreInitializeFromArgs`"

#: ../Doc/c-api/init_config.rst:44
msgid ":c:func:`Py_PreInitializeFromBytesArgs`"
msgstr ":c:func:`Py_PreInitializeFromBytesArgs`"

#: ../Doc/c-api/init_config.rst:45
msgid ":c:func:`Py_RunMain`"
msgstr ":c:func:`Py_RunMain`"

#: ../Doc/c-api/init_config.rst:46
#, fuzzy
msgid ":c:func:`Py_GetArgcArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: ../Doc/c-api/init_config.rst:48
msgid ""
"The preconfiguration (``PyPreConfig`` type) is stored in ``_PyRuntime."
"preconfig`` and the configuration (``PyConfig`` type) is stored in "
"``PyInterpreterState.config``."
msgstr ""
"La preconfiguración (tipo ``PyPreConfig``) se almacena en ``_PyRuntime."
"preconfig`` y la configuración (tipo ``PyConfig``) se almacena en "
"``PyInterpreterState.config``."

#: ../Doc/c-api/init_config.rst:52
msgid ""
"See also :ref:`Initialization, Finalization, and Threads <initialization>`."
msgstr ""
"Consulte también :ref:`Inicialización, finalización y subprocesos "
"<initialization>`."

#: ../Doc/c-api/init_config.rst:55
msgid ":pep:`587` \"Python Initialization Configuration\"."
msgstr ":pep:`587` \"Configuración de inicialización de Python\"."

#: ../Doc/c-api/init_config.rst:59
msgid "PyWideStringList"
msgstr "PyWideStringList"

#: ../Doc/c-api/init_config.rst:63
msgid "List of ``wchar_t*`` strings."
msgstr "Lista de cadenas de caracteres ``wchar_t*``."

#: ../Doc/c-api/init_config.rst:65
msgid ""
"If *length* is non-zero, *items* must be non-``NULL`` and all strings must "
"be non-``NULL``."
msgstr ""
"Si *length* no es cero, *items* no deben ser ``NULL`` y todas las cadenas de "
"caracteres deben ser no ``NULL``."

#: ../Doc/c-api/init_config.rst:68
msgid "Methods:"
msgstr "Métodos:"

#: ../Doc/c-api/init_config.rst:72
msgid "Append *item* to *list*."
msgstr "Agregar *item* a *list*."

#: ../Doc/c-api/init_config.rst:74 ../Doc/c-api/init_config.rst:85
msgid "Python must be preinitialized to call this function."
msgstr "Python debe estar preinicializado para llamar a esta función."

#: ../Doc/c-api/init_config.rst:78
msgid "Insert *item* into *list* at *index*."
msgstr "Inserta *item* en *list* en *index*."

#: ../Doc/c-api/init_config.rst:80
msgid ""
"If *index* is greater than or equal to *list* length, append *item* to "
"*list*."
msgstr ""
"Si *index* es mayor o igual que el largo de *list*, agrega *item* a *list*."

#: ../Doc/c-api/init_config.rst:83
msgid "*index* must be greater than or equal to 0."
msgstr "*index* debe ser mayor o igual que 0."

#: ../Doc/c-api/init_config.rst:87 ../Doc/c-api/init_config.rst:107
#: ../Doc/c-api/init_config.rst:210 ../Doc/c-api/init_config.rst:417
msgid "Structure fields:"
msgstr "Campos de estructura:"

#: ../Doc/c-api/init_config.rst:91
msgid "List length."
msgstr "Longitud de la lista."

#: ../Doc/c-api/init_config.rst:95
msgid "List items."
msgstr "Elementos de la lista."

#: ../Doc/c-api/init_config.rst:98
msgid "PyStatus"
msgstr "PyStatus"

#: ../Doc/c-api/init_config.rst:102
msgid ""
"Structure to store an initialization function status: success, error or exit."
msgstr ""
"Estructura para almacenar el estado de una función de inicialización: éxito, "
"error o salida."

#: ../Doc/c-api/init_config.rst:105
msgid "For an error, it can store the C function name which created the error."
msgstr ""
"Para un error, puede almacenar el nombre de la función C que creó el error."

#: ../Doc/c-api/init_config.rst:111
msgid "Exit code. Argument passed to ``exit()``."
msgstr "Código de salida El argumento pasó a ``exit()``."

#: ../Doc/c-api/init_config.rst:115
msgid "Error message."
msgstr "Mensaje de error."

#: ../Doc/c-api/init_config.rst:119
msgid "Name of the function which created an error, can be ``NULL``."
msgstr "El nombre de la función que creó un error puede ser ``NULL``."

#: ../Doc/c-api/init_config.rst:121
msgid "Functions to create a status:"
msgstr "Funciones para crear un estado:"

#: ../Doc/c-api/init_config.rst:125
msgid "Success."
msgstr "Éxito."

#: ../Doc/c-api/init_config.rst:129
msgid "Initialization error with a message."
msgstr "Error de inicialización con un mensaje."

#: ../Doc/c-api/init_config.rst:133
msgid "Memory allocation failure (out of memory)."
msgstr "Error de asignación de memoria (sin memoria)."

#: ../Doc/c-api/init_config.rst:137
msgid "Exit Python with the specified exit code."
msgstr "Sale de Python con el código de salida especificado."

#: ../Doc/c-api/init_config.rst:139
msgid "Functions to handle a status:"
msgstr "Funciones para manejar un estado:"

#: ../Doc/c-api/init_config.rst:143
msgid ""
"Is the status an error or an exit? If true, the exception must be handled; "
"by calling :c:func:`Py_ExitStatusException` for example."
msgstr ""
"¿Es el estado un error o una salida? Si es verdadero, la excepción debe ser "
"manejada; por ejemplo llamando a :c:func:`Py_ExitStatusException`."

#: ../Doc/c-api/init_config.rst:148
msgid "Is the result an error?"
msgstr "¿Es el resultado un error?"

#: ../Doc/c-api/init_config.rst:152
msgid "Is the result an exit?"
msgstr "¿El resultado es una salida?"

#: ../Doc/c-api/init_config.rst:156
msgid ""
"Call ``exit(exitcode)`` if *status* is an exit. Print the error message and "
"exit with a non-zero exit code if *status* is an error.  Must only be called "
"if ``PyStatus_Exception(status)`` is non-zero."
msgstr ""
"Llama a ``exit(exitcode)`` si *status* es una salida. Imprime el mensaje de "
"error y sale con un código de salida distinto de cero si *status* es un "
"error. Solo se debe llamar si ``PyStatus_Exception(status)`` no es cero."

#: ../Doc/c-api/init_config.rst:161
msgid ""
"Internally, Python uses macros which set ``PyStatus.func``, whereas "
"functions to create a status set ``func`` to ``NULL``."
msgstr ""
"Internamente, Python usa macros que establecen ``PyStatus.func``, mientras "
"que las funciones para crear un estado establecen ``func`` en ``NULL``."

#: ../Doc/c-api/init_config.rst:164
msgid "Example::"
msgstr "Ejemplo::"

#: ../Doc/c-api/init_config.rst:188
msgid "PyPreConfig"
msgstr "PyPreConfig"

#: ../Doc/c-api/init_config.rst:192
msgid "Structure used to preinitialize Python:"
msgstr "Estructura utilizada para preinicializar Python:"

#: ../Doc/c-api/init_config.rst:194
msgid "Set the Python memory allocator"
msgstr "Establece el asignador de memoria de Python"

#: ../Doc/c-api/init_config.rst:195
msgid "Configure the LC_CTYPE locale"
msgstr "Configure el entorno local LC_CTYPE"

#: ../Doc/c-api/init_config.rst:196
msgid "Set the UTF-8 mode"
msgstr "Establece el modo UTF-8"

#: ../Doc/c-api/init_config.rst:198
msgid "Function to initialize a preconfiguration:"
msgstr "Función para inicializar una preconfiguración:"

#: ../Doc/c-api/init_config.rst:202
msgid ""
"Initialize the preconfiguration with :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Inicializa la preconfiguración con :ref:`Configuración de Python <init-"
"python-config>`."

#: ../Doc/c-api/init_config.rst:207
msgid ""
"Initialize the preconfiguration with :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Inicializa la preconfiguración con :ref:`Configuración aislada <init-"
"isolated-conf>`."

#: ../Doc/c-api/init_config.rst:214
msgid "Name of the memory allocator:"
msgstr "Nombre del asignador de memoria:"

#: ../Doc/c-api/init_config.rst:216
msgid ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): don't change memory allocators (use "
"defaults)"
msgstr ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): no cambie los asignadores de memoria "
"(use los valores predeterminados)"

#: ../Doc/c-api/init_config.rst:218
msgid "``PYMEM_ALLOCATOR_DEFAULT`` (``1``): default memory allocators"
msgstr ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): asignadores de memoria predeterminados"

#: ../Doc/c-api/init_config.rst:219
msgid ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): default memory allocators with debug hooks"
msgstr ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): asignadores de memoria predeterminados "
"con ganchos de depuración"

#: ../Doc/c-api/init_config.rst:221
msgid "``PYMEM_ALLOCATOR_MALLOC`` (``3``): force usage of ``malloc()``"
msgstr "``PYMEM_ALLOCATOR_MALLOC`` (``3``): fuerza el uso de ``malloc()``"

#: ../Doc/c-api/init_config.rst:222
msgid ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): force usage of ``malloc()`` with "
"debug hooks"
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): fuerza el uso de ``malloc()`` con "
"ganchos de depuración"

#: ../Doc/c-api/init_config.rst:224
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`"
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`"

#: ../Doc/c-api/init_config.rst:226
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` with debug hooks"
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` con ganchos de depuración"

#: ../Doc/c-api/init_config.rst:229
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` and ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` are not "
"supported if Python is configured using ``--without-pymalloc``"
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` y ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` no son "
"compatibles si Python está configurado con ``--with-pymalloc``"

#: ../Doc/c-api/init_config.rst:232
msgid "See :ref:`Memory Management <memory>`."
msgstr "Ver :ref:`Administración de memorias <memory>`."

#: ../Doc/c-api/init_config.rst:236
msgid ""
"Set the LC_CTYPE locale to the user preferred locale? If equals to 0, set :c:"
"member:`coerce_c_locale` and :c:member:`coerce_c_locale_warn` to 0."
msgstr ""
"¿Establece la configuración regional LC_CTYPE en la configuración regional "
"preferida por el usuario? Si es igual a 0, establece :c:member:"
"`coerce_c_locale` y :c:member:`coerce_c_locale_warn` en 0."

#: ../Doc/c-api/init_config.rst:241
msgid ""
"If equals to 2, coerce the C locale; if equals to 1, read the LC_CTYPE "
"locale to decide if it should be coerced."
msgstr ""
"Si es igual a 2, coaccione la configuración regional C; si es igual a 1, lea "
"la configuración regional LC_CTYPE para decidir si debe ser forzado."

#: ../Doc/c-api/init_config.rst:246
msgid "If non-zero, emit a warning if the C locale is coerced."
msgstr ""
"Si no es cero, emita una advertencia si la configuración regional C está "
"coaccionada."

#: ../Doc/c-api/init_config.rst:250
msgid "See :c:member:`PyConfig.dev_mode`."
msgstr "Ver :c:member:`PyConfig.dev_mode`."

#: ../Doc/c-api/init_config.rst:254
msgid "See :c:member:`PyConfig.isolated`."
msgstr "Ver :c:member:`PyConfig.isolated`."

#: ../Doc/c-api/init_config.rst:258
msgid ""
"If non-zero, disable UTF-8 Mode, set the Python filesystem encoding to "
"``mbcs``, set the filesystem error handler to ``replace``."
msgstr ""
"Si no es cero, desactive el modo UTF-8, configure la codificación del "
"sistema de archivos Python en ``mbcs``, configure el controlador de errores "
"del sistema de archivos en ``replace``."

#: ../Doc/c-api/init_config.rst:261 ../Doc/c-api/init_config.rst:555
msgid ""
"Only available on Windows. ``#ifdef MS_WINDOWS`` macro can be used for "
"Windows specific code."
msgstr ""
"Solo disponible en Windows. La macro ``#ifdef MS_WINDOWS`` se puede usar "
"para el código específico de Windows."

#: ../Doc/c-api/init_config.rst:266
msgid ""
"If non-zero, :c:func:`Py_PreInitializeFromArgs` and :c:func:"
"`Py_PreInitializeFromBytesArgs` parse their ``argv`` argument the same way "
"the regular Python parses command line arguments: see :ref:`Command Line "
"Arguments <using-on-cmdline>`."
msgstr ""
"Si no es cero, :c:func:`Py_PreInitializeFromArgs` y :c:func:"
"`Py_PreInitializeFromBytesArgs` analizan su argumento ``argv`` de la misma "
"manera que Python analiza los argumentos de la línea de comandos: ver :ref:"
"`Argumentos de línea de comandos <using-on-cmdline>`."

#: ../Doc/c-api/init_config.rst:273
msgid "See :c:member:`PyConfig.use_environment`."
msgstr "Ver :c:member:`PyConfig.use_environment`."

#: ../Doc/c-api/init_config.rst:277
msgid "If non-zero, enable the UTF-8 mode."
msgstr "Si no es cero, habilita el modo UTF-8."

#: ../Doc/c-api/init_config.rst:280
msgid "Preinitialization with PyPreConfig"
msgstr "Preinicialización con PyPreConfig"

#: ../Doc/c-api/init_config.rst:282
msgid "Functions to preinitialize Python:"
msgstr "Funciones para preinicializar Python:"

#: ../Doc/c-api/init_config.rst:286
msgid "Preinitialize Python from *preconfig* preconfiguration."
msgstr "Preinicializa Python desde la preconfiguración *preconfig*."

#: ../Doc/c-api/init_config.rst:290
msgid ""
"Preinitialize Python from *preconfig* preconfiguration and command line "
"arguments (bytes strings)."
msgstr ""
"Preinicializa Python desde la preconfiguración *preconfig* y argumentos de "
"línea de comando (cadenas de caracteres de bytes)."

#: ../Doc/c-api/init_config.rst:295
msgid ""
"Preinitialize Python from *preconfig* preconfiguration and command line "
"arguments (wide strings)."
msgstr ""
"Preinicializa Python desde la preconfiguración *preconfig* y argumentos de "
"línea de comando (cadenas de caracteres anchas)."

#: ../Doc/c-api/init_config.rst:298 ../Doc/c-api/init_config.rst:730
msgid ""
"The caller is responsible to handle exceptions (error or exit) using :c:func:"
"`PyStatus_Exception` and :c:func:`Py_ExitStatusException`."
msgstr ""
"La persona que llama es responsable de manejar las excepciones (error o "
"salida) usando :c:func:`PyStatus_Exception` y :c:func:"
"`Py_ExitStatusException`."

#: ../Doc/c-api/init_config.rst:301
msgid ""
"For :ref:`Python Configuration <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), if Python is initialized with command line "
"arguments, the command line arguments must also be passed to preinitialize "
"Python, since they have an effect on the pre-configuration like encodings. "
"For example, the :option:`-X utf8 <-X>` command line option enables the "
"UTF-8 Mode."
msgstr ""
"Para :ref:`Configuración de Python <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), si Python se inicializa con argumentos de "
"línea de comando, los argumentos de línea de comando también deben pasarse "
"para preinicializar Python, ya que tienen un efecto en la preconfiguración "
"como codificaciones. Por ejemplo, la opción de línea de comando :option:`-X "
"utf8 <-X>` habilita el modo UTF-8."

#: ../Doc/c-api/init_config.rst:308
msgid ""
"``PyMem_SetAllocator()`` can be called after :c:func:`Py_PreInitialize` and "
"before :c:func:`Py_InitializeFromConfig` to install a custom memory "
"allocator. It can be called before :c:func:`Py_PreInitialize` if :c:member:"
"`PyPreConfig.allocator` is set to ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr ""
"``PyMem_SetAllocator()`` se puede llamar después de :c:func:"
"`Py_PreInitialize` y antes :c:func:`Py_InitializeFromConfig` para instalar "
"un asignador de memoria personalizado. Se puede llamar antes :c:func:"
"`Py_PreInitialize` si :c:member:`PyPreConfig.allocator` está configurado en "
"``PYMEM_ALLOCATOR_NOT_SET``."

#: ../Doc/c-api/init_config.rst:313
msgid ""
"Python memory allocation functions like :c:func:`PyMem_RawMalloc` must not "
"be used before Python preinitialization, whereas calling directly "
"``malloc()`` and ``free()`` is always safe. :c:func:`Py_DecodeLocale` must "
"not be called before the preinitialization."
msgstr ""
"Las funciones de asignación de memoria de Python como :c:func:"
"`PyMem_RawMalloc` no deben usarse antes de la preinicialización de Python, "
"mientras que llamar directamente a ``malloc()`` y ``free()`` siempre es "
"seguro. :c:func:`Py_DecodeLocale` no debe llamarse antes de la "
"preinicialización."

#: ../Doc/c-api/init_config.rst:318
msgid "Example using the preinitialization to enable the UTF-8 Mode::"
msgstr "Ejemplo usando la preinicialización para habilitar el modo UTF-8::"

#: ../Doc/c-api/init_config.rst:339
msgid "PyConfig"
msgstr "PyConfig"

#: ../Doc/c-api/init_config.rst:343
msgid "Structure containing most parameters to configure Python."
msgstr ""
"Estructura que contiene la mayoría de los parámetros para configurar Python."

#: ../Doc/c-api/init_config.rst:345
msgid "Structure methods:"
msgstr "Métodos de estructura:"

#: ../Doc/c-api/init_config.rst:349
msgid ""
"Initialize configuration with :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Inicializa la configuración con :ref:`Configuración de Python <init-python-"
"config>`."

#: ../Doc/c-api/init_config.rst:354
msgid ""
"Initialize configuration with :ref:`Isolated Configuration <init-isolated-"
"conf>`."
msgstr ""
"Inicializa la configuración con :ref:`Configuración aislada <init-isolated-"
"conf>`."

#: ../Doc/c-api/init_config.rst:359
msgid "Copy the wide character string *str* into ``*config_str``."
msgstr "Copia la cadena de caracteres anchos *str* en ``*config_str``."

#: ../Doc/c-api/init_config.rst:361 ../Doc/c-api/init_config.rst:367
#: ../Doc/c-api/init_config.rst:373 ../Doc/c-api/init_config.rst:379
#: ../Doc/c-api/init_config.rst:385 ../Doc/c-api/init_config.rst:393
msgid "Preinitialize Python if needed."
msgstr "Preinicializa Python si es necesario."

#: ../Doc/c-api/init_config.rst:365
msgid ""
"Decode *str* using ``Py_DecodeLocale()`` and set the result into "
"``*config_str``."
msgstr ""
"Decodifica *str* usando ``Py_DecodeLocale()`` y configure el resultado en "
"``*config_str``."

#: ../Doc/c-api/init_config.rst:371
msgid "Set command line arguments from wide character strings."
msgstr ""
"Establezca argumentos de línea de comando a partir de cadenas de caracteres "
"anchas."

#: ../Doc/c-api/init_config.rst:377
msgid ""
"Set command line arguments: decode bytes using :c:func:`Py_DecodeLocale`."
msgstr ""
"Establezca argumentos de línea de comando: decodifique bytes usando :c:func:"
"`Py_DecodeLocale`."

#: ../Doc/c-api/init_config.rst:383
msgid "Set the list of wide strings *list* to *length* and *items*."
msgstr ""
"Establece la lista de cadenas de caracteres anchas *list* a *length* y "
"*items*."

#: ../Doc/c-api/init_config.rst:389
msgid "Read all Python configuration."
msgstr "Lee toda la configuración de Python."

#: ../Doc/c-api/init_config.rst:391
msgid "Fields which are already initialized are left unchanged."
msgstr "Los campos que ya están inicializados no se modifican."

#: ../Doc/c-api/init_config.rst:397
msgid "Release configuration memory."
msgstr "Libera memoria de configuración."

#: ../Doc/c-api/init_config.rst:399
msgid ""
"Most ``PyConfig`` methods preinitialize Python if needed. In that case, the "
"Python preinitialization configuration in based on the :c:type:`PyConfig`. "
"If configuration fields which are in common with :c:type:`PyPreConfig` are "
"tuned, they must be set before calling a :c:type:`PyConfig` method:"
msgstr ""
"La mayoría de los métodos ``PyConfig`` preinicializan Python si es "
"necesario. En ese caso, la configuración de preinicialización de Python se "
"basa en :c:type:`PyConfig`. Si los campos de configuración que son comunes "
"con :c:type:`PyPreConfig` están ajustados, deben configurarse antes de "
"llamar al método :c:type:`PyConfig`:"

#: ../Doc/c-api/init_config.rst:404
msgid ":c:member:`~PyConfig.dev_mode`"
msgstr ":c:member:`~PyConfig.dev_mode`"

#: ../Doc/c-api/init_config.rst:405
msgid ":c:member:`~PyConfig.isolated`"
msgstr ":c:member:`~PyConfig.isolated`"

#: ../Doc/c-api/init_config.rst:406
msgid ":c:member:`~PyConfig.parse_argv`"
msgstr ":c:member:`~PyConfig.parse_argv`"

#: ../Doc/c-api/init_config.rst:407
msgid ":c:member:`~PyConfig.use_environment`"
msgstr ":c:member:`~PyConfig.use_environment`"

#: ../Doc/c-api/init_config.rst:409
msgid ""
"Moreover, if :c:func:`PyConfig_SetArgv` or :c:func:`PyConfig_SetBytesArgv` "
"is used, this method must be called first, before other methods, since the "
"preinitialization configuration depends on command line arguments (if :c:"
"member:`parse_argv` is non-zero)."
msgstr ""
"Además, si se utiliza :c:func:`PyConfig_SetArgv` o :c:func:"
"`PyConfig_SetBytesArgv`, este método debe llamarse primero, antes que otros "
"métodos, ya que la configuración de preinicialización depende de los "
"argumentos de la línea de comandos (si :c:member:`parse_argv` no es cero)."

#: ../Doc/c-api/init_config.rst:414
msgid ""
"The caller of these methods is responsible to handle exceptions (error or "
"exit) using ``PyStatus_Exception()`` and ``Py_ExitStatusException()``."
msgstr ""
"Quien llama de estos métodos es responsable de manejar las excepciones "
"(error o salida) usando ``PyStatus_Exception()`` y "
"``Py_ExitStatusException()``."

#: ../Doc/c-api/init_config.rst:421
msgid ""
"Command line arguments, :data:`sys.argv`. See :c:member:`~PyConfig."
"parse_argv` to parse :c:member:`~PyConfig.argv` the same way the regular "
"Python parses Python command line arguments. If :c:member:`~PyConfig.argv` "
"is empty, an empty string is added to ensure that :data:`sys.argv` always "
"exists and is never empty."
msgstr ""
"Argumentos de línea de comando, :data:`sys.argv`. Consulta :c:member:"
"`~PyConfig.parse_argv` para analizar :c:member:`~PyConfig.argv` de la misma "
"manera que Python normal analiza los argumentos de la línea de comandos de "
"Python. Si :c:member:`~PyConfig.argv` está vacío, se agrega una cadena de "
"caracteres vacía para garantizar que :data:`sys.argv` siempre exista y nunca "
"esté vacío."

#: ../Doc/c-api/init_config.rst:429
msgid ":data:`sys.base_exec_prefix`."
msgstr ":data:`sys.base_exec_prefix`."

#: ../Doc/c-api/init_config.rst:433
msgid ""
":data:`sys._base_executable`: ``__PYVENV_LAUNCHER__`` environment variable "
"value, or copy of :c:member:`PyConfig.executable`."
msgstr ""
":data:`sys._base_executable`: ``__PYVENV_LAUNCHER__`` valor de la variable "
"de entorno, o copia de :c:member:`PyConfig.executable`."

#: ../Doc/c-api/init_config.rst:438
msgid ":data:`sys.base_prefix`."
msgstr ":data:`sys.base_prefix`."

#: ../Doc/c-api/init_config.rst:442
msgid ""
":data:`sys.platlibdir`: platform library directory name, set at configure "
"time by ``--with-platlibdir``, overrideable by the ``PYTHONPLATLIBDIR`` "
"environment variable."
msgstr ""

#: ../Doc/c-api/init_config.rst:450
msgid ""
"If equals to 0, enable unbuffered mode, making the stdout and stderr streams "
"unbuffered."
msgstr ""
"Si es igual a 0, habilite el modo sin búfer, haciendo que las secuencias "
"stdout y stderr no tengan búfer."

#: ../Doc/c-api/init_config.rst:453
msgid "stdin is always opened in buffered mode."
msgstr "stdin siempre se abre en modo de búfer."

#: ../Doc/c-api/init_config.rst:457
msgid ""
"If equals to 1, issue a warning when comparing :class:`bytes` or :class:"
"`bytearray` with :class:`str`, or comparing :class:`bytes` with :class:"
"`int`. If equal or greater to 2, raise a :exc:`BytesWarning` exception."
msgstr ""
"Si es igual a 1, emita una advertencia cuando compare :class:`bytes` o :"
"class:`bytearray` con :class:`str`, o compare :class:`bytes` con :class:"
"`int`. Si es igual o mayor a 2, lanza una excepción :exc:`BytesWarning`."

#: ../Doc/c-api/init_config.rst:464
msgid ""
"Control the validation behavior of hash-based ``.pyc`` files (see :pep:"
"`552`): :option:`--check-hash-based-pycs` command line option value."
msgstr ""
"Controla el comportamiento de validación de los archivos ``.pyc`` basados en "
"hash (consulte :pep:`552`): con el valor de la opción de línea de comando :"
"option:`--check-hash-based-pycs`."

#: ../Doc/c-api/init_config.rst:467
msgid "Valid values: ``always``, ``never`` and ``default``."
msgstr "Valores válidos: ``always``, ``never`` y ``default``."

#: ../Doc/c-api/init_config.rst:469
msgid "The default value is: ``default``."
msgstr "El valor predeterminado es: ``default``."

#: ../Doc/c-api/init_config.rst:473
msgid ""
"If non-zero, configure C standard streams (``stdio``, ``stdout``, "
"``stdout``). For example, set their mode to ``O_BINARY`` on Windows."
msgstr ""
"Si no es cero, configure las secuencias estándar C (``stdio``, ``stdout``, "
"``stdout``). Por ejemplo, configure su modo en ``O_BINARY`` en Windows."

#: ../Doc/c-api/init_config.rst:478
msgid "If non-zero, enable the :ref:`Python Development Mode <devmode>`."
msgstr ""

#: ../Doc/c-api/init_config.rst:482
msgid "If non-zero, dump all objects which are still alive at exit."
msgstr ""
"Si no es cero, volcar todos los objetos que aún están vivos en la salida."

#: ../Doc/c-api/init_config.rst:484
msgid "``Py_TRACE_REFS`` macro must be defined in build."
msgstr ""

#: ../Doc/c-api/init_config.rst:488
msgid ":data:`sys.exec_prefix`."
msgstr ":data:`sys.exec_prefix`."

#: ../Doc/c-api/init_config.rst:492
msgid ":data:`sys.executable`."
msgstr ":data:`sys.executable`."

#: ../Doc/c-api/init_config.rst:496
msgid "If non-zero, call :func:`faulthandler.enable` at startup."
msgstr "Si no es cero, llama a :func:`faulthandler.enable` al inicio."

#: ../Doc/c-api/init_config.rst:500
msgid "Filesystem encoding, :func:`sys.getfilesystemencoding`."
msgstr ""
"Codificación del sistema de archivos, :func:`sys.getfilesystemencoding`."

#: ../Doc/c-api/init_config.rst:504
msgid "Filesystem encoding errors, :func:`sys.getfilesystemencodeerrors`."
msgstr ""
"Errores de codificación del sistema de archivos, :func:`sys."
"getfilesystemencodeerrors`."

#: ../Doc/c-api/init_config.rst:509
msgid "Randomized hash function seed."
msgstr "Funciones de semillas aleatorias hash."

#: ../Doc/c-api/init_config.rst:511
msgid ""
"If :c:member:`~PyConfig.use_hash_seed` is zero, a seed is chosen randomly at "
"Pythonstartup, and :c:member:`~PyConfig.hash_seed` is ignored."
msgstr ""
"Si :c:member:`~PyConfig.use_hash_seed` es cero, se elige una semilla "
"aleatoriamente en Pythonstartup, y :c:member:`~PyConfig.hash_seed` se ignora."

#: ../Doc/c-api/init_config.rst:516
msgid "Python home directory."
msgstr "Directorio de inicio de Python."

#: ../Doc/c-api/init_config.rst:518
msgid ""
"Initialized from :envvar:`PYTHONHOME` environment variable value by default."
msgstr ""
"Inicializado desde valor de variable de entorno :envvar:`PYTHONHOME` por "
"defecto."

#: ../Doc/c-api/init_config.rst:523
msgid "If non-zero, profile import time."
msgstr "Si no es cero, el tiempo de importación del perfil."

#: ../Doc/c-api/init_config.rst:527
msgid "Enter interactive mode after executing a script or a command."
msgstr ""
"Ingresa al modo interactivo después de ejecutar un script o un comando."

#: ../Doc/c-api/init_config.rst:531
msgid "Install signal handlers?"
msgstr "¿Instala manejadores de señal?"

#: ../Doc/c-api/init_config.rst:535
msgid "Interactive mode."
msgstr "Modo interactivo."

#: ../Doc/c-api/init_config.rst:539
msgid "If greater than 0, enable isolated mode:"
msgstr "Si es mayor que 0, habilite el modo aislado:"

#: ../Doc/c-api/init_config.rst:541
msgid ""
":data:`sys.path` contains neither the script's directory (computed from "
"``argv[0]`` or the current directory) nor the user's site-packages directory."
msgstr ""
":data:`sys.path` no contiene ni el directorio del script (calculado a partir "
"de ``argv[0]`` o el directorio actual) ni el directorio de paquetes del "
"sitio del usuario."

#: ../Doc/c-api/init_config.rst:544
msgid ""
"Python REPL doesn't import :mod:`readline` nor enable default readline "
"configuration on interactive prompts."
msgstr ""
"Python REPL no importa :mod:`readline` ni habilita la configuración "
"predeterminada de readline en mensajes interactivos."

#: ../Doc/c-api/init_config.rst:546
msgid ""
"Set :c:member:`~PyConfig.use_environment` and :c:member:`~PyConfig."
"user_site_directory` to 0."
msgstr ""
"Establece :c:member:`~PyConfig.use_environment` y :c:member:`~PyConfig."
"user_site_directory` en 0."

#: ../Doc/c-api/init_config.rst:551
msgid ""
"If non-zero, use :class:`io.FileIO` instead of :class:`io.WindowsConsoleIO` "
"for :data:`sys.stdin`, :data:`sys.stdout` and :data:`sys.stderr`."
msgstr ""
"Si no es cero, usa :class:`io.FileIO` en lugar de :class:`io."
"WindowsConsoleIO` para :data:`sys.stdin`, :data:`sys.stdout` y :data:`sys."
"stderr`."

#: ../Doc/c-api/init_config.rst:560
msgid ""
"If non-zero, dump statistics on :ref:`Python pymalloc memory allocator "
"<pymalloc>` at exit."
msgstr ""
"Si no es cero, volcar las estadísticas en :ref:`Asignador de memoria Python "
"pymalloc <pymalloc>` en la salida."

#: ../Doc/c-api/init_config.rst:563
msgid "The option is ignored if Python is built using ``--without-pymalloc``."
msgstr ""
"La opción se ignora si Python se construye usando ``--without-pymalloc``."

#: ../Doc/c-api/init_config.rst:567
msgid ""
"Module search paths as a string separated by ``DELIM`` (:data:`os.path."
"pathsep`)."
msgstr ""
"Módulo de rutas de búsqueda como una cadena separada por ``DELIM`` (:data:"
"`os.path.pathsep`)."

#: ../Doc/c-api/init_config.rst:570
msgid ""
"Initialized from :envvar:`PYTHONPATH` environment variable value by default."
msgstr ""
"Inicializado desde valor de variable de entorno :envvar:`PYTHONPATH` por "
"defecto."

#: ../Doc/c-api/init_config.rst:576
msgid ""
":data:`sys.path`. If :c:member:`~PyConfig.module_search_paths_set` is equal "
"to 0, the :c:member:`~PyConfig.module_search_paths` is overridden by the "
"function calculating the :ref:`Path Configuration <init-path-config>`."
msgstr ""
":data:`sys.path`. Si :c:member:`~PyConfig.module_search_paths_set` es igual "
"a 0, el :c:member:`~PyConfig.module_search_paths` es anulado por la función "
"que calcula :ref:`Configuración de ruta <init-path-config>` ."

#: ../Doc/c-api/init_config.rst:583
msgid "Compilation optimization level:"
msgstr "Nivel de optimización de compilación:"

#: ../Doc/c-api/init_config.rst:585
msgid "0: Peephole optimizer (and ``__debug__`` is set to ``True``)"
msgstr ""
"0: Optimizador de mirilla (y ``__debug__`` está configurado como ``True``)"

#: ../Doc/c-api/init_config.rst:586
msgid "1: Remove assertions, set ``__debug__`` to ``False``"
msgstr "1: Elimina las aserciones, establece ``__debug__`` en ``False``"

#: ../Doc/c-api/init_config.rst:587
msgid "2: Strip docstrings"
msgstr "2: *Strip* docstrings"

#: ../Doc/c-api/init_config.rst:591
msgid ""
"If non-zero, parse :c:member:`~PyConfig.argv` the same way the regular "
"Python command line arguments, and strip Python arguments from :c:member:"
"`~PyConfig.argv`: see :ref:`Command Line Arguments <using-on-cmdline>`."
msgstr ""
"Si no es cero, analiza :c:member:`~PyConfig.argv` de la misma manera que los "
"argumentos regulares de la línea de comandos de Python, y elimine los "
"argumentos de Python de :c:member:`~PyConfig.argv`: vea :ref:`Argumentos de "
"línea de comando <using-on-cmdline>`."

#: ../Doc/c-api/init_config.rst:598
msgid ""
"If non-zero, turn on parser debugging output (for expert only, depending on "
"compilation options)."
msgstr ""
"Si no es cero, activa la salida de depuración del analizador (solo para "
"expertos, dependiendo de las opciones de compilación)."

#: ../Doc/c-api/init_config.rst:603
msgid ""
"If equal to 0, suppress warnings when calculating the :ref:`Path "
"Configuration <init-path-config>` (Unix only, Windows does not log any "
"warning). Otherwise, warnings are written into ``stderr``."
msgstr ""
"Si es igual a 0, suprime las advertencias al calcular :ref:`Configuración de "
"ruta <init-path-config>` (solo Unix, Windows no registra ninguna "
"advertencia). De lo contrario, las advertencias se escriben en ``stderr``."

#: ../Doc/c-api/init_config.rst:609
msgid ":data:`sys.prefix`."
msgstr ":data:`sys.prefix`."

#: ../Doc/c-api/init_config.rst:613
msgid ""
"Program name. Used to initialize :c:member:`~PyConfig.executable`, and in "
"early error messages."
msgstr ""
"Nombre del programa Se usa para inicializar :c:member:`~PyConfig."
"executable`, y en los primeros mensajes de error."

#: ../Doc/c-api/init_config.rst:618
msgid ":data:`sys.pycache_prefix`: ``.pyc`` cache prefix."
msgstr ":data:`sys.pycache_prefix`: prefijo de caché ``.pyc``."

#: ../Doc/c-api/init_config.rst:620
msgid "If ``NULL``, :data:`sys.pycache_prefix` is set to ``None``."
msgstr "Si ``NULL``, :data:`sys.pycache_prefix` es establecido a ``None``."

#: ../Doc/c-api/init_config.rst:624
msgid ""
"Quiet mode. For example, don't display the copyright and version messages in "
"interactive mode."
msgstr ""
"Modo silencioso. Por ejemplo, no muestra los mensajes de copyright y versión "
"en modo interactivo."

#: ../Doc/c-api/init_config.rst:629
msgid "``python3 -c COMMAND`` argument. Used by :c:func:`Py_RunMain`."
msgstr "Argumento ``python3 -c COMMAND``. Utilizado por :c:func:`Py_RunMain`."

#: ../Doc/c-api/init_config.rst:633
msgid "``python3 FILENAME`` argument. Used by :c:func:`Py_RunMain`."
msgstr "Argumento ``python3 FILENAME``. Utilizado por :c:func:`Py_RunMain`."

#: ../Doc/c-api/init_config.rst:637
msgid "``python3 -m MODULE`` argument. Used by :c:func:`Py_RunMain`."
msgstr "Argumento ``python3 -m MODULE``. Utilizado por :c:func:`Py_RunMain`."

#: ../Doc/c-api/init_config.rst:641
msgid "Show total reference count at exit?"
msgstr "¿Mostrar el recuento de referencia total en la salida?"

#: ../Doc/c-api/init_config.rst:643
msgid "Set to 1 by :option:`-X showrefcount <-X>` command line option."
msgstr ""
"Establecido en 1 por la opción de línea de comandos :option:`-X showrefcount "
"<-X>`."

#: ../Doc/c-api/init_config.rst:645
msgid "Need a debug build of Python (``Py_REF_DEBUG`` macro must be defined)."
msgstr ""
"Necesita una compilación de depuración de Python (se debe definir la macro "
"``Py_REF_DEBUG``)."

#: ../Doc/c-api/init_config.rst:649
msgid "Import the :mod:`site` module at startup?"
msgstr "¿Importar el módulo :mod:`site` al inicio?"

#: ../Doc/c-api/init_config.rst:653
msgid "Skip the first line of the source?"
msgstr "¿Saltar la primera línea de la fuente?"

#: ../Doc/c-api/init_config.rst:658
msgid ""
"Encoding and encoding errors of :data:`sys.stdin`, :data:`sys.stdout` and :"
"data:`sys.stderr`."
msgstr ""
"Codificación y codificación de errores de :data:`sys.stdin`, :data:`sys."
"stdout` y :data:`sys.stderr`."

#: ../Doc/c-api/init_config.rst:663
msgid "If non-zero, call :func:`tracemalloc.start` at startup."
msgstr "Si no es cero, llama a :func:`tracemalloc.start` al inicio."

#: ../Doc/c-api/init_config.rst:667
msgid "If greater than 0, use :ref:`environment variables <using-on-envvars>`."
msgstr "Si es mayor que 0, use :ref:`variables de entorno <using-on-envvars>`."

#: ../Doc/c-api/init_config.rst:671
msgid "If non-zero, add user site directory to :data:`sys.path`."
msgstr ""
"Si no es cero, agrega el directorio del sitio del usuario a :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:675
msgid "If non-zero, enable verbose mode."
msgstr "Si no es cero, habilita el modo detallado."

#: ../Doc/c-api/init_config.rst:679
msgid ""
":data:`sys.warnoptions`: options of the :mod:`warnings` module to build "
"warnings filters: lowest to highest priority."
msgstr ""
":data:`sys.warnoptions`: opciones del módulo :mod:`warnings` para crear "
"filtros de advertencia: de menor a mayor prioridad."

#: ../Doc/c-api/init_config.rst:682
msgid ""
"The :mod:`warnings` module adds :data:`sys.warnoptions` in the reverse "
"order: the last :c:member:`PyConfig.warnoptions` item becomes the first item "
"of :data:`warnings.filters` which is checked first (highest priority)."
msgstr ""
"El módulo :mod:`warnings` agrega :data:`sys.warnoptions` en el orden "
"inverso: el último elemento :c:member:`PyConfig.warnoptions` se convierte en "
"el primer elemento de :data:`warnings.filters` que es verificado primero "
"(máxima prioridad)."

#: ../Doc/c-api/init_config.rst:689
msgid "If non-zero, write ``.pyc`` files."
msgstr "Si no es cero, escribe los archivos ``.pyc``."

#: ../Doc/c-api/init_config.rst:691
msgid ""
":data:`sys.dont_write_bytecode` is initialized to the inverted value of :c:"
"member:`~PyConfig.write_bytecode`."
msgstr ""
":data:`sys.dont_write_bytecode` se inicializa al valor invertido de :c:"
"member:`~PyConfig.write_bytecode`."

#: ../Doc/c-api/init_config.rst:696
msgid ":data:`sys._xoptions`."
msgstr ":data:`sys._xoptions`."

#: ../Doc/c-api/init_config.rst:700
msgid "Enable PEG parser? Default: 1."
msgstr ""

#: ../Doc/c-api/init_config.rst:702
msgid "Set to 0 by :option:`-X oldparser <-X>` and :envvar:`PYTHONOLDPARSER`."
msgstr ""

#: ../Doc/c-api/init_config.rst:704
msgid "See also :pep:`617`."
msgstr ""

#: ../Doc/c-api/init_config.rst:708
msgid ""
"If ``parse_argv`` is non-zero, ``argv`` arguments are parsed the same way "
"the regular Python parses command line arguments, and Python arguments are "
"stripped from ``argv``: see :ref:`Command Line Arguments <using-on-cmdline>`."
msgstr ""
"Si ``parse_argv`` no es cero, los argumentos ``argv`` se analizan de la "
"misma manera que Python analiza los argumentos de línea de comando, y los "
"argumentos de Python se eliminan de ``argv``: ver :ref:`Argumentos de línea "
"de comando <using-on-cmdline>`."

#: ../Doc/c-api/init_config.rst:713
msgid ""
"The ``xoptions`` options are parsed to set other options: see :option:`-X` "
"option."
msgstr ""
"Las opciones ``xoptions`` se analizan para establecer otras opciones: ver la "
"opción :option:`-X`."

#: ../Doc/c-api/init_config.rst:718
msgid "The ``show_alloc_count`` field has been removed."
msgstr ""

#: ../Doc/c-api/init_config.rst:722
msgid "Initialization with PyConfig"
msgstr "Inicialización con PyConfig"

#: ../Doc/c-api/init_config.rst:724
msgid "Function to initialize Python:"
msgstr "Función para inicializar Python:"

#: ../Doc/c-api/init_config.rst:728
msgid "Initialize Python from *config* configuration."
msgstr "Inicializa Python desde la configuración *config*."

#: ../Doc/c-api/init_config.rst:733
msgid ""
"If ``PyImport_FrozenModules``, ``PyImport_AppendInittab()`` or "
"``PyImport_ExtendInittab()`` are used, they must be set or called after "
"Python preinitialization and before the Python initialization."
msgstr ""
"Si se usan ``PyImport_FrozenModules``, ``PyImport_AppendInittab()`` o "
"``PyImport_ExtendInittab()``, deben configurarse o llamarse después de la "
"preinicialización de Python y antes de la inicialización de Python."

#: ../Doc/c-api/init_config.rst:737
msgid "Example setting the program name::"
msgstr "Ejemplo de configuración del nombre del programa::"

#: ../Doc/c-api/init_config.rst:765
msgid ""
"More complete example modifying the default configuration, read the "
"configuration, and then override some parameters::"
msgstr ""
"Ejemplo más completo que modifica la configuración predeterminada, lee la "
"configuración y luego anula algunos parámetros ::"

#: ../Doc/c-api/init_config.rst:816
msgid "Isolated Configuration"
msgstr "Configuración aislada"

#: ../Doc/c-api/init_config.rst:818
msgid ""
":c:func:`PyPreConfig_InitIsolatedConfig` and :c:func:"
"`PyConfig_InitIsolatedConfig` functions create a configuration to isolate "
"Python from the system. For example, to embed Python into an application."
msgstr ""
":c:func:`PyPreConfig_InitIsolatedConfig` y las funciones :c:func:"
"`PyConfig_InitIsolatedConfig` crean una configuración para aislar Python del "
"sistema. Por ejemplo, para incrustar Python en una aplicación."

#: ../Doc/c-api/init_config.rst:823
msgid ""
"This configuration ignores global configuration variables, environments "
"variables, command line arguments (:c:member:`PyConfig.argv` is not parsed) "
"and user site directory. The C standard streams (ex: ``stdout``) and the "
"LC_CTYPE locale are left unchanged. Signal handlers are not installed."
msgstr ""
"Esta configuración ignora las variables de configuración global, las "
"variables de entorno, los argumentos de la línea de comandos (:c:member:"
"`PyConfig.argv` no se analiza) y el directorio del sitio del usuario. Las "
"transmisiones estándar C (por ejemplo, ``stdout``) y el entorno local "
"LC_CTYPE no se modifican. Los manejadores de señal no están instalados."

#: ../Doc/c-api/init_config.rst:828
msgid ""
"Configuration files are still used with this configuration. Set the :ref:"
"`Path Configuration <init-path-config>` (\"output fields\") to ignore these "
"configuration files and avoid the function computing the default path "
"configuration."
msgstr ""
"Los archivos de configuración todavía se usan con esta configuración. "
"Configure :ref:`Configuración de ruta <init-path-config>` (\"campos de salida"
"\") para ignorar estos archivos de configuración y evitar la función que "
"calcula la configuración de ruta predeterminada."

#: ../Doc/c-api/init_config.rst:837
msgid "Python Configuration"
msgstr "Configuración de Python"

#: ../Doc/c-api/init_config.rst:839
msgid ""
":c:func:`PyPreConfig_InitPythonConfig` and :c:func:"
"`PyConfig_InitPythonConfig` functions create a configuration to build a "
"customized Python which behaves as the regular Python."
msgstr ""
":c:func:`PyPreConfig_InitPythonConfig` y las funciones :c:func:"
"`PyConfig_InitPythonConfig` crean una configuración para construir un Python "
"personalizado que se comporta como el Python normal."

#: ../Doc/c-api/init_config.rst:843
msgid ""
"Environments variables and command line arguments are used to configure "
"Python, whereas global configuration variables are ignored."
msgstr ""
"Las variables de entorno y los argumentos de la línea de comandos se "
"utilizan para configurar Python, mientras que las variables de configuración "
"global se ignoran."

#: ../Doc/c-api/init_config.rst:846
msgid ""
"This function enables C locale coercion (:pep:`538`) and UTF-8 Mode (:pep:"
"`540`) depending on the LC_CTYPE locale, :envvar:`PYTHONUTF8` and :envvar:"
"`PYTHONCOERCECLOCALE` environment variables."
msgstr ""
"Esta función permite la coerción de configuración regional C (:pep:`538`) y "
"el modo UTF-8 (:pep:`540`) dependiendo de la configuración regional "
"LC_CTYPE, :envvar:`PYTHONUTF8` y variables de entorno :envvar:"
"`PYTHONCOERCECLOCALE`."

#: ../Doc/c-api/init_config.rst:850
msgid "Example of customized Python always running in isolated mode::"
msgstr ""
"Ejemplo de Python personalizado que siempre se ejecuta en modo aislado::"

#: ../Doc/c-api/init_config.rst:889
msgid "Path Configuration"
msgstr "Configuración de ruta"

#: ../Doc/c-api/init_config.rst:891
msgid ":c:type:`PyConfig` contains multiple fields for the path configuration:"
msgstr ""
":c:type:`PyConfig` contiene múltiples campos para la configuración de ruta:"

#: ../Doc/c-api/init_config.rst:893
msgid "Path configuration inputs:"
msgstr "Entradas de configuración de ruta:"

#: ../Doc/c-api/init_config.rst:895
msgid ":c:member:`PyConfig.home`"
msgstr ":c:member:`PyConfig.home`"

#: ../Doc/c-api/init_config.rst:896
#, fuzzy
msgid ":c:member:`PyConfig.platlibdir`"
msgstr ":c:member:`~PyConfig.isolated`"

#: ../Doc/c-api/init_config.rst:897
msgid ":c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:member:`PyConfig.pathconfig_warnings`"

#: ../Doc/c-api/init_config.rst:898
msgid ":c:member:`PyConfig.program_name`"
msgstr ":c:member:`PyConfig.program_name`"

#: ../Doc/c-api/init_config.rst:899
msgid ":c:member:`PyConfig.pythonpath_env`"
msgstr ":c:member:`PyConfig.pythonpath_env`"

#: ../Doc/c-api/init_config.rst:900
msgid "current working directory: to get absolute paths"
msgstr "directorio de trabajo actual: para obtener rutas absolutas"

#: ../Doc/c-api/init_config.rst:901
msgid ""
"``PATH`` environment variable to get the program full path (from :c:member:"
"`PyConfig.program_name`)"
msgstr ""
"Variable de entorno ``PATH`` para obtener la ruta completa del programa (de :"
"c:member:`PyConfig.program_name`)"

#: ../Doc/c-api/init_config.rst:903
msgid "``__PYVENV_LAUNCHER__`` environment variable"
msgstr "Variable de entorno ``__PYVENV_LAUNCHER__``"

#: ../Doc/c-api/init_config.rst:904
msgid ""
"(Windows only) Application paths in the registry under \"Software\\Python"
"\\PythonCore\\X.Y\\PythonPath\" of HKEY_CURRENT_USER and HKEY_LOCAL_MACHINE "
"(where X.Y is the Python version)."
msgstr ""
"(Solo Windows) Rutas de aplicación en el registro en \"Software\\Python"
"\\PythonCore\\X.Y\\PythonPath\" de HKEY_CURRENT_USER y HKEY_LOCAL_MACHINE "
"(donde X.Y es la versión de Python)."

#: ../Doc/c-api/init_config.rst:908
msgid "Path configuration output fields:"
msgstr "Campos de salida de configuración de ruta:"

#: ../Doc/c-api/init_config.rst:910
msgid ":c:member:`PyConfig.base_exec_prefix`"
msgstr ":c:member:`PyConfig.base_exec_prefix`"

#: ../Doc/c-api/init_config.rst:911
msgid ":c:member:`PyConfig.base_executable`"
msgstr ":c:member:`PyConfig.base_executable`"

#: ../Doc/c-api/init_config.rst:912
msgid ":c:member:`PyConfig.base_prefix`"
msgstr ":c:member:`PyConfig.base_prefix`"

#: ../Doc/c-api/init_config.rst:913
msgid ":c:member:`PyConfig.exec_prefix`"
msgstr ":c:member:`PyConfig.exec_prefix`"

#: ../Doc/c-api/init_config.rst:914
msgid ":c:member:`PyConfig.executable`"
msgstr ":c:member:`PyConfig.executable`"

#: ../Doc/c-api/init_config.rst:915
msgid ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"
msgstr ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"

#: ../Doc/c-api/init_config.rst:917
msgid ":c:member:`PyConfig.prefix`"
msgstr ":c:member:`PyConfig.prefix`"

#: ../Doc/c-api/init_config.rst:919
msgid ""
"If at least one \"output field\" is not set, Python calculates the path "
"configuration to fill unset fields. If :c:member:`~PyConfig."
"module_search_paths_set` is equal to 0, :c:member:`~PyConfig."
"module_search_paths` is overridden and :c:member:`~PyConfig."
"module_search_paths_set` is set to 1."
msgstr ""
"Si no se establece al menos un \"campo de salida\", Python calcula la "
"configuración de la ruta para completar los campos no definidos. Si :c:"
"member:`~PyConfig.module_search_paths_set` es igual a 0, :c:member:"
"`~PyConfig.module_search_paths` se reemplaza y :c:member:`~PyConfig."
"module_search_paths_set` se establece en 1."

#: ../Doc/c-api/init_config.rst:925
msgid ""
"It is possible to completely ignore the function calculating the default "
"path configuration by setting explicitly all path configuration output "
"fields listed above. A string is considered as set even if it is non-empty. "
"``module_search_paths`` is considered as set if ``module_search_paths_set`` "
"is set to 1. In this case, path configuration input fields are ignored as "
"well."
msgstr ""
"Es posible ignorar por completo la función que calcula la configuración de "
"ruta predeterminada al establecer explícitamente todos los campos de salida "
"de configuración de ruta enumerados anteriormente. Una cadena de caracteres "
"se considera como un conjunto, incluso si no está vacía. "
"``module_search_paths`` se considera como establecido si "
"``module_search_paths_set`` se establece en 1. En este caso, los campos de "
"entrada de configuración de ruta también se ignoran."

#: ../Doc/c-api/init_config.rst:932
msgid ""
"Set :c:member:`~PyConfig.pathconfig_warnings` to 0 to suppress warnings when "
"calculating the path configuration (Unix only, Windows does not log any "
"warning)."
msgstr ""
"Establezca :c:member:`~PyConfig.pathconfig_warnings` en 0 para suprimir las "
"advertencias al calcular la configuración de la ruta (solo Unix, Windows no "
"registra ninguna advertencia)."

#: ../Doc/c-api/init_config.rst:935
msgid ""
"If :c:member:`~PyConfig.base_prefix` or :c:member:`~PyConfig."
"base_exec_prefix` fields are not set, they inherit their value from :c:"
"member:`~PyConfig.prefix` and :c:member:`~PyConfig.exec_prefix` respectively."
msgstr ""
"Si :c:member:`~PyConfig.base_prefix` o los campos :c:member:`~PyConfig."
"base_exec_prefix` no están establecidos, heredan su valor de :c:member:"
"`~PyConfig.prefix` y :c:member:`~PyConfig.exec_prefix` respectivamente."

#: ../Doc/c-api/init_config.rst:939
msgid ":c:func:`Py_RunMain` and :c:func:`Py_Main` modify :data:`sys.path`:"
msgstr ":c:func:`Py_RunMain` y :c:func:`Py_Main` modifican :data:`sys.path`:"

#: ../Doc/c-api/init_config.rst:941
msgid ""
"If :c:member:`~PyConfig.run_filename` is set and is a directory which "
"contains a ``__main__.py`` script, prepend :c:member:`~PyConfig."
"run_filename` to :data:`sys.path`."
msgstr ""
"Si :c:member:`~PyConfig.run_filename` está configurado y es un directorio "
"que contiene un script ``__main__.py``, anteponga :c:member:`~PyConfig."
"run_filename` a :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:944
msgid "If :c:member:`~PyConfig.isolated` is zero:"
msgstr "Si :c:member:`~PyConfig.isolated` es cero:"

#: ../Doc/c-api/init_config.rst:946
msgid ""
"If :c:member:`~PyConfig.run_module` is set, prepend the current directory "
"to :data:`sys.path`. Do nothing if the current directory cannot be read."
msgstr ""
"Si :c:member:`~PyConfig.run_module` está configurado, anteponga el "
"directorio actual a :data:`sys.path`. No haga nada si el directorio actual "
"no se puede leer."

#: ../Doc/c-api/init_config.rst:948
msgid ""
"If :c:member:`~PyConfig.run_filename` is set, prepend the directory of the "
"filename to :data:`sys.path`."
msgstr ""
"Si :c:member:`~PyConfig.run_filename` está configurado, anteponga el "
"directorio del nombre del archivo a :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:950
msgid "Otherwise, prepend an empty string to :data:`sys.path`."
msgstr ""
"De lo contrario, anteponga una cadena de caracteres vacía a :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:952
msgid ""
"If :c:member:`~PyConfig.site_import` is non-zero, :data:`sys.path` can be "
"modified by the :mod:`site` module. If :c:member:`~PyConfig."
"user_site_directory` is non-zero and the user's site-package directory "
"exists, the :mod:`site` module appends the user's site-package directory to :"
"data:`sys.path`."
msgstr ""
"Si :c:member:`~PyConfig.site_import` no es cero, :data:`sys.path` puede ser "
"modificado por el módulo :mod:`site`. Si :c:member:`~PyConfig."
"user_site_directory` no es cero y el directorio del paquete del sitio del "
"usuario existe, el módulo :mod:`site` agrega el directorio del paquete del "
"sitio del usuario a :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:958
msgid "The following configuration files are used by the path configuration:"
msgstr ""
"La configuración de ruta utiliza los siguientes archivos de configuración:"

#: ../Doc/c-api/init_config.rst:960
msgid "``pyvenv.cfg``"
msgstr "``pyvenv.cfg``"

#: ../Doc/c-api/init_config.rst:961
msgid "``python._pth`` (Windows only)"
msgstr "``python._pth`` (sólo Windows)"

#: ../Doc/c-api/init_config.rst:962
msgid "``pybuilddir.txt`` (Unix only)"
msgstr "``pybuilddir.txt`` (sólo Unix)"

#: ../Doc/c-api/init_config.rst:964
msgid ""
"The ``__PYVENV_LAUNCHER__`` environment variable is used to set :c:member:"
"`PyConfig.base_executable`"
msgstr ""
"La variable de entorno ``__PYVENV_LAUNCHER__`` se usa para establecer :c:"
"member:`PyConfig.base_executable`"

#: ../Doc/c-api/init_config.rst:969
msgid "Py_RunMain()"
msgstr "Py_RunMain()"

#: ../Doc/c-api/init_config.rst:973
msgid ""
"Execute the command (:c:member:`PyConfig.run_command`), the script (:c:"
"member:`PyConfig.run_filename`) or the module (:c:member:`PyConfig."
"run_module`) specified on the command line or in the configuration."
msgstr ""
"Ejecuta el comando (:c:member:`PyConfig.run_command`), el script (:c:member:"
"`PyConfig.run_filename`) o el módulo (:c:member:`PyConfig.run_module`) "
"especificado en la línea de comando o en la configuración."

#: ../Doc/c-api/init_config.rst:978
msgid "By default and when if :option:`-i` option is used, run the REPL."
msgstr "Por defecto y cuando se usa la opción :option:`-i`, ejecuta el REPL."

#: ../Doc/c-api/init_config.rst:980
msgid ""
"Finally, finalizes Python and returns an exit status that can be passed to "
"the ``exit()`` function."
msgstr ""
"Finalmente, finaliza Python y retorna un estado de salida que se puede pasar "
"a la función ``exit()``."

#: ../Doc/c-api/init_config.rst:983
msgid ""
"See :ref:`Python Configuration <init-python-config>` for an example of "
"customized Python always running in isolated mode using :c:func:`Py_RunMain`."
msgstr ""
"Consulte :ref:`Configuración de Python <init-python-config>` para ver un "
"ejemplo de Python personalizado que siempre se ejecuta en modo aislado "
"usando :c:func:`Py_RunMain`."

#: ../Doc/c-api/init_config.rst:989
msgid "Py_GetArgcArgv()"
msgstr ""

#: ../Doc/c-api/init_config.rst:993
msgid "Get the original command line arguments, before Python modified them."
msgstr ""

#: ../Doc/c-api/init_config.rst:997
msgid "Multi-Phase Initialization Private Provisional API"
msgstr "API Provisional Privada de Inicialización Multifásica"

#: ../Doc/c-api/init_config.rst:999
msgid ""
"This section is a private provisional API introducing multi-phase "
"initialization, the core feature of the :pep:`432`:"
msgstr ""
"Esta sección es una API provisional privada que presenta la inicialización "
"de múltiples fases, la característica principal de :pep:`432`:"

#: ../Doc/c-api/init_config.rst:1002
msgid "\"Core\" initialization phase, \"bare minimum Python\":"
msgstr "Fase de inicialización \"Core\", \"Python mínimo\":"

#: ../Doc/c-api/init_config.rst:1004
msgid "Builtin types;"
msgstr "Tipos incorporados;"

#: ../Doc/c-api/init_config.rst:1005
msgid "Builtin exceptions;"
msgstr "Excepciones incorporadas;"

#: ../Doc/c-api/init_config.rst:1006
msgid "Builtin and frozen modules;"
msgstr "Módulos incorporados y congelados;"

#: ../Doc/c-api/init_config.rst:1007
msgid ""
"The :mod:`sys` module is only partially initialized (ex: :data:`sys.path` "
"doesn't exist yet)."
msgstr ""
"El módulo :mod:`sys` solo se inicializa parcialmente (por ejemplo :data:`sys."
"path` aún no existe)."

#: ../Doc/c-api/init_config.rst:1010
msgid "\"Main\" initialization phase, Python is fully initialized:"
msgstr ""
"Fase de inicialización \"principal\", Python está completamente inicializado:"

#: ../Doc/c-api/init_config.rst:1012
msgid "Install and configure :mod:`importlib`;"
msgstr "Instala y configura :mod:`importlib`;"

#: ../Doc/c-api/init_config.rst:1013
msgid "Apply the :ref:`Path Configuration <init-path-config>`;"
msgstr "Aplique la :ref:`Configuración de ruta <init-path-config>`;"

#: ../Doc/c-api/init_config.rst:1014
msgid "Install signal handlers;"
msgstr "Instala manejadores de señal;"

#: ../Doc/c-api/init_config.rst:1015
msgid ""
"Finish :mod:`sys` module initialization (ex: create :data:`sys.stdout` and :"
"data:`sys.path`);"
msgstr ""
"Finaliza la inicialización del módulo :mod:`sys` (por ejemplo: crea :data:"
"`sys.stdout` y :data:`sys.path`);"

#: ../Doc/c-api/init_config.rst:1017
msgid ""
"Enable optional features like :mod:`faulthandler` and :mod:`tracemalloc`;"
msgstr ""
"Habilita características opcionales como :mod:`faulthandler` y :mod:"
"`tracemalloc`;"

#: ../Doc/c-api/init_config.rst:1018
msgid "Import the :mod:`site` module;"
msgstr "Importe el módulo :mod:`site`;"

#: ../Doc/c-api/init_config.rst:1019
msgid "etc."
msgstr "etc."

#: ../Doc/c-api/init_config.rst:1021
msgid "Private provisional API:"
msgstr "API provisional privada:"

#: ../Doc/c-api/init_config.rst:1023
msgid ""
":c:member:`PyConfig._init_main`: if set to 0, :c:func:"
"`Py_InitializeFromConfig` stops at the \"Core\" initialization phase."
msgstr ""
":c:member:`PyConfig._init_main`: si se establece en 0, :c:func:"
"`Py_InitializeFromConfig` se detiene en la fase de inicialización \"Core\"."

#: ../Doc/c-api/init_config.rst:1025
msgid ""
":c:member:`PyConfig._isolated_interpreter`: if non-zero, disallow threads, "
"subprocesses and fork."
msgstr ""

#: ../Doc/c-api/init_config.rst:1030
msgid ""
"Move to the \"Main\" initialization phase, finish the Python initialization."
msgstr ""
"Vaya a la fase de inicialización \"Principal\", finalice la inicialización "
"de Python."

#: ../Doc/c-api/init_config.rst:1032
msgid ""
"No module is imported during the \"Core\" phase and the ``importlib`` module "
"is not configured: the :ref:`Path Configuration <init-path-config>` is only "
"applied during the \"Main\" phase. It may allow to customize Python in "
"Python to override or tune the :ref:`Path Configuration <init-path-config>`, "
"maybe install a custom :data:`sys.meta_path` importer or an import hook, etc."
msgstr ""
"No se importa ningún módulo durante la fase \"Core\" y el módulo "
"``importlib`` no está configurado: la :ref:`Configuración de ruta <init-path-"
"config>` solo se aplica durante la fase \"Principal\". Puede permitir "
"personalizar Python en Python para anular o ajustar :ref:`Configuración de "
"ruta <init-path-config>`, tal vez instale un importador personalizado :data:"
"`sys.meta_path` o un enlace de importación, etc."

#: ../Doc/c-api/init_config.rst:1038
msgid ""
"It may become possible to calculatin the :ref:`Path Configuration <init-path-"
"config>` in Python, after the Core phase and before the Main phase, which is "
"one of the :pep:`432` motivation."
msgstr ""
"Puede ser posible calcular :ref:`Configuración de ruta <init-path-config>` "
"en Python, después de la fase Core y antes de la fase Main, que es una de "
"las motivaciones :pep:`432`."

#: ../Doc/c-api/init_config.rst:1042
msgid ""
"The \"Core\" phase is not properly defined: what should be and what should "
"not be available at this phase is not specified yet. The API is marked as "
"private and provisional: the API can be modified or even be removed anytime "
"until a proper public API is designed."
msgstr ""
"La fase \"Núcleo\" no está definida correctamente: lo que debería estar y lo "
"que no debería estar disponible en esta fase aún no se ha especificado. La "
"API está marcada como privada y provisional: la API se puede modificar o "
"incluso eliminar en cualquier momento hasta que se diseñe una API pública "
"adecuada."

#: ../Doc/c-api/init_config.rst:1047
msgid ""
"Example running Python code between \"Core\" and \"Main\" initialization "
"phases::"
msgstr ""
"Ejemplo de ejecución de código Python entre las fases de inicialización "
"\"Core\" y \"Main\"::"

#~ msgid "Development mode: see :option:`-X dev <-X>`."
#~ msgstr "Modo de desarrollo: ver :option:`-X dev <-X>`."

#~ msgid ""
#~ "Require a debug build of Python (``Py_REF_DEBUG`` macro must be defined)."
#~ msgstr ""
#~ "Requerir una compilación de depuración de Python (la macro "
#~ "``Py_REF_DEBUG`` debe estar definida)."

#~ msgid "Show allocation counts at exit?"
#~ msgstr "¿Mostrar recuentos de asignación en la salida?"

#~ msgid "Set to 1 by :option:`-X showalloccount <-X>` command line option."
#~ msgstr ""
#~ "Establecido en 1 por la opción de línea de comandos :option:`-X "
#~ "showalloccount <-X>`."

#~ msgid "Need a special Python build with ``COUNT_ALLOCS`` macro defined."
#~ msgstr ""
#~ "Necesita una compilación especial de Python con la macro ``COUNT_ALLOCS`` "
#~ "definida."

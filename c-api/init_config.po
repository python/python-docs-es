# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-30 18:24+0200\n"
"PO-Revision-Date: 2020-07-02 13:02+0200\n"
"Last-Translator: Xavi Rambla\n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Language-Team: \n"
"X-Generator: Poedit 2.3.1\n"

#: ../Doc/c-api/init_config.rst:7
msgid "Python Initialization Configuration"
msgstr "Configuración de inicialización de Python"

#: ../Doc/c-api/init_config.rst:11
msgid "Structures:"
msgstr "Estructuras:"

#: ../Doc/c-api/init_config.rst:13
msgid ":c:type:`PyConfig`"
msgstr ":c:type:`PyConfig`"

#: ../Doc/c-api/init_config.rst:14
msgid ":c:type:`PyPreConfig`"
msgstr ":c:type:`PyPreConfig`"

#: ../Doc/c-api/init_config.rst:15
msgid ":c:type:`PyStatus`"
msgstr ":c:type:`PyStatus`"

#: ../Doc/c-api/init_config.rst:16
msgid ":c:type:`PyWideStringList`"
msgstr ":c:type:`PyWideStringList`"

#: ../Doc/c-api/init_config.rst:18
msgid "Functions:"
msgstr "Funciones:"

#: ../Doc/c-api/init_config.rst:20
msgid ":c:func:`PyConfig_Clear`"
msgstr ":c:func:`PyConfig_Clear`"

#: ../Doc/c-api/init_config.rst:21
msgid ":c:func:`PyConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyConfig_InitIsolatedConfig`"

#: ../Doc/c-api/init_config.rst:22
msgid ":c:func:`PyConfig_InitPythonConfig`"
msgstr ":c:func:`PyConfig_InitPythonConfig`"

#: ../Doc/c-api/init_config.rst:23
msgid ":c:func:`PyConfig_Read`"
msgstr ":c:func:`PyConfig_Read`"

#: ../Doc/c-api/init_config.rst:24
msgid ":c:func:`PyConfig_SetArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: ../Doc/c-api/init_config.rst:25
msgid ":c:func:`PyConfig_SetBytesArgv`"
msgstr ":c:func:`PyConfig_SetBytesArgv`"

#: ../Doc/c-api/init_config.rst:26
msgid ":c:func:`PyConfig_SetBytesString`"
msgstr ":c:func:`PyConfig_SetBytesString`"

#: ../Doc/c-api/init_config.rst:27
msgid ":c:func:`PyConfig_SetString`"
msgstr ":c:func:`PyConfig_SetString`"

#: ../Doc/c-api/init_config.rst:28
msgid ":c:func:`PyConfig_SetWideStringList`"
msgstr ":c:func:`PyConfig_SetWideStringList`"

#: ../Doc/c-api/init_config.rst:29
msgid ":c:func:`PyPreConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyPreConfig_InitIsolatedConfig`"

#: ../Doc/c-api/init_config.rst:30
msgid ":c:func:`PyPreConfig_InitPythonConfig`"
msgstr ":c:func:`PyPreConfig_InitPythonConfig`"

#: ../Doc/c-api/init_config.rst:31
msgid ":c:func:`PyStatus_Error`"
msgstr ":c:func:`PyStatus_Error`"

#: ../Doc/c-api/init_config.rst:32
msgid ":c:func:`PyStatus_Exception`"
msgstr ":c:func:`PyStatus_Exception`"

#: ../Doc/c-api/init_config.rst:33
msgid ":c:func:`PyStatus_Exit`"
msgstr ":c:func:`PyStatus_Exit`"

#: ../Doc/c-api/init_config.rst:34
msgid ":c:func:`PyStatus_IsError`"
msgstr ":c:func:`PyStatus_IsError`"

#: ../Doc/c-api/init_config.rst:35
msgid ":c:func:`PyStatus_IsExit`"
msgstr ":c:func:`PyStatus_IsExit`"

#: ../Doc/c-api/init_config.rst:36
msgid ":c:func:`PyStatus_NoMemory`"
msgstr ":c:func:`PyStatus_NoMemory`"

#: ../Doc/c-api/init_config.rst:37
msgid ":c:func:`PyStatus_Ok`"
msgstr ":c:func:`PyStatus_Ok`"

#: ../Doc/c-api/init_config.rst:38
msgid ":c:func:`PyWideStringList_Append`"
msgstr ":c:func:`PyWideStringList_Append`"

#: ../Doc/c-api/init_config.rst:39
msgid ":c:func:`PyWideStringList_Insert`"
msgstr ":c:func:`PyWideStringList_Insert`"

#: ../Doc/c-api/init_config.rst:40
msgid ":c:func:`Py_ExitStatusException`"
msgstr ":c:func:`Py_ExitStatusException`"

#: ../Doc/c-api/init_config.rst:41
msgid ":c:func:`Py_InitializeFromConfig`"
msgstr ":c:func:`Py_InitializeFromConfig`"

#: ../Doc/c-api/init_config.rst:42
msgid ":c:func:`Py_PreInitialize`"
msgstr ":c:func:`Py_PreInitialize`"

#: ../Doc/c-api/init_config.rst:43
msgid ":c:func:`Py_PreInitializeFromArgs`"
msgstr ":c:func:`Py_PreInitializeFromArgs`"

#: ../Doc/c-api/init_config.rst:44
msgid ":c:func:`Py_PreInitializeFromBytesArgs`"
msgstr ":c:func:`Py_PreInitializeFromBytesArgs`"

#: ../Doc/c-api/init_config.rst:45
msgid ":c:func:`Py_RunMain`"
msgstr ":c:func:`Py_RunMain`"

#: ../Doc/c-api/init_config.rst:47
msgid ""
"The preconfiguration (``PyPreConfig`` type) is stored in ``_PyRuntime."
"preconfig`` and the configuration (``PyConfig`` type) is stored in "
"``PyInterpreterState.config``."
msgstr ""
"La preconfiguración (tipo ``PyPreConfig`` ) es guardada en ``_PyRuntime."
"preconfig`` y la configuración (tipo ``PyConfig``) es guardada en "
"``PyInterpreterState.config``."

#: ../Doc/c-api/init_config.rst:51
msgid ""
"See also :ref:`Initialization, Finalization, and Threads <initialization>`."
msgstr ""
"Ver también :ref:`Initialization, Finalization, and Threads "
"<initialization>`."

#: ../Doc/c-api/init_config.rst:54
msgid ":pep:`587` \"Python Initialization Configuration\"."
msgstr ":pep:`587` \"Configuración de inicialización de Python\"."

#: ../Doc/c-api/init_config.rst:58
msgid "PyWideStringList"
msgstr "PyWideStringList"

#: ../Doc/c-api/init_config.rst:62
msgid "List of ``wchar_t*`` strings."
msgstr "Lista de ``wchar_t*`` strings."

#: ../Doc/c-api/init_config.rst:64
msgid ""
"If *length* is non-zero, *items* must be non-``NULL`` and all strings must "
"be non-``NULL``."
msgstr ""
"Si *length* es diferente a 0, *items* deben ser diferentes a``NULL`` y todos "
"los strings deben ser diferentes a ``NULL``."

#: ../Doc/c-api/init_config.rst:67
msgid "Methods:"
msgstr "Métodos:"

#: ../Doc/c-api/init_config.rst:71
msgid "Append *item* to *list*."
msgstr "Añadir un *item* a la *list*."

#: ../Doc/c-api/init_config.rst:73 ../Doc/c-api/init_config.rst:84
msgid "Python must be preinitialized to call this function."
msgstr "Python debe ser preinicializado para llamar esta función."

#: ../Doc/c-api/init_config.rst:77
msgid "Insert *item* into *list* at *index*."
msgstr "Insertar *item* dentro de *list* en el *index*."

#: ../Doc/c-api/init_config.rst:79
msgid ""
"If *index* is greater than or equal to *list* length, append *item* to "
"*list*."
msgstr ""
"Si *index* es mayor o igual que el tamaño de *list*, añadir *item* en la "
"*list*."

#: ../Doc/c-api/init_config.rst:82
msgid "*index* must be greater than or equal to 0."
msgstr "*index* debe ser igual o más qrande que 0."

#: ../Doc/c-api/init_config.rst:86 ../Doc/c-api/init_config.rst:106
#: ../Doc/c-api/init_config.rst:209 ../Doc/c-api/init_config.rst:416
msgid "Structure fields:"
msgstr "Campos de la estructura:"

#: ../Doc/c-api/init_config.rst:90
msgid "List length."
msgstr "Tamaño de la lista."

#: ../Doc/c-api/init_config.rst:94
msgid "List items."
msgstr "Elementos de la lista."

#: ../Doc/c-api/init_config.rst:97
msgid "PyStatus"
msgstr "PyStatus"

#: ../Doc/c-api/init_config.rst:101
msgid ""
"Structure to store an initialization function status: success, error or exit."
msgstr ""
"Estructura para guardar el estado de la función de inicialización: éxito, "
"error o salir."

#: ../Doc/c-api/init_config.rst:104
msgid "For an error, it can store the C function name which created the error."
msgstr ""
"Para un error, se almacena el nombre de la función C que ha generado el "
"error."

#: ../Doc/c-api/init_config.rst:110
msgid "Exit code. Argument passed to ``exit()``."
msgstr "Código de salida. Argumento pasado a ``exit()``."

#: ../Doc/c-api/init_config.rst:114
msgid "Error message."
msgstr "Mensaje de error."

#: ../Doc/c-api/init_config.rst:118
msgid "Name of the function which created an error, can be ``NULL``."
msgstr "Nombre de la función que ha generado un error, puede ser ``NULL``."

#: ../Doc/c-api/init_config.rst:120
msgid "Functions to create a status:"
msgstr "Funciones que crean un estado:"

#: ../Doc/c-api/init_config.rst:124
msgid "Success."
msgstr "Éxito."

#: ../Doc/c-api/init_config.rst:128
msgid "Initialization error with a message."
msgstr "Error de inicialización con un mensaje."

#: ../Doc/c-api/init_config.rst:132
msgid "Memory allocation failure (out of memory)."
msgstr "Fallo en la asignación de memoria (sin memoria)."

#: ../Doc/c-api/init_config.rst:136
msgid "Exit Python with the specified exit code."
msgstr "Salida de Python con el código de salida especificado."

#: ../Doc/c-api/init_config.rst:138
msgid "Functions to handle a status:"
msgstr "Funciones que manejan un estado:"

#: ../Doc/c-api/init_config.rst:142
msgid ""
"Is the status an error or an exit? If true, the exception must be handled; "
"by calling :c:func:`Py_ExitStatusException` for example."
msgstr ""
"Es el estado un error o una salida? Si cierto, la excepción debe ser "
"tratada; por ejemplo, llamando :c:func:`Py_ExitStatusException`."

#: ../Doc/c-api/init_config.rst:147
msgid "Is the result an error?"
msgstr "¿Es el resultado un error?"

#: ../Doc/c-api/init_config.rst:151
msgid "Is the result an exit?"
msgstr "¿Es el resultado una salida?"

#: ../Doc/c-api/init_config.rst:155
msgid ""
"Call ``exit(exitcode)`` if *status* is an exit. Print the error message and "
"exit with a non-zero exit code if *status* is an error.  Must only be called "
"if ``PyStatus_Exception(status)`` is non-zero."
msgstr ""
"Llama a ``exit(exitcode)`` si *status* es una salida. Pinta el mensaje de "
"error y sale con un código de salida diferente a 0 si *status* es un error.  "
"Debe únicamente ser llamado si ``PyStatus_Exception(estado)`` es diferente a "
"0."

#: ../Doc/c-api/init_config.rst:160
msgid ""
"Internally, Python uses macros which set ``PyStatus.func``, whereas "
"functions to create a status set ``func`` to ``NULL``."
msgstr ""
"Internamente, Python usa macros que establece ``PyStatus.func``, donde las "
"funciones para crear un estado establecen `` func`` a `` NULL``."

#: ../Doc/c-api/init_config.rst:163
msgid "Example::"
msgstr "Ejemplo::"

#: ../Doc/c-api/init_config.rst:187
msgid "PyPreConfig"
msgstr "PyPreConfig"

#: ../Doc/c-api/init_config.rst:191
msgid "Structure used to preinitialize Python:"
msgstr "Estructura usada para preinicializar Python:"

#: ../Doc/c-api/init_config.rst:193
msgid "Set the Python memory allocator"
msgstr "Establece el asignador de memoria de Python"

#: ../Doc/c-api/init_config.rst:194
msgid "Configure the LC_CTYPE locale"
msgstr "Configura el  local LC_CTYPE"

#: ../Doc/c-api/init_config.rst:195
msgid "Set the UTF-8 mode"
msgstr "Establece el modo UTF-8"

#: ../Doc/c-api/init_config.rst:197
msgid "Function to initialize a preconfiguration:"
msgstr "Función para inicializar una preconfiguración:"

#: ../Doc/c-api/init_config.rst:201
msgid ""
"Initialize the preconfiguration with :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Inicializa la preconfiguración con :ref:`Python Configuration <init-python-"
"config>`."

#: ../Doc/c-api/init_config.rst:206
msgid ""
"Initialize the preconfiguration with :ref:`Isolated Configuration <init-"
"isolated-conf>`."
msgstr ""
"Inicializa la preconfiguración con :ref:`Isolated Configuration <init-"
"isolated-conf>`."

#: ../Doc/c-api/init_config.rst:213
msgid "Name of the memory allocator:"
msgstr "Nombre del asignador de memoria:"

#: ../Doc/c-api/init_config.rst:215
msgid ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): don't change memory allocators (use "
"defaults)"
msgstr ""
"``PYMEM_ALLOCATOR_NOT_SET`` (``0``): no modifica los asignadores de memoria "
"(usa por Defecto)"

#: ../Doc/c-api/init_config.rst:217
msgid "``PYMEM_ALLOCATOR_DEFAULT`` (``1``): default memory allocators"
msgstr ""
"``PYMEM_ALLOCATOR_DEFAULT`` (``1``): asignadores de memoria por defecto"

#: ../Doc/c-api/init_config.rst:218
msgid ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): default memory allocators with debug hooks"
msgstr ""
"``PYMEM_ALLOCATOR_DEBUG`` (``2``): asignadores de memoria por defecto con "
"enlaces de debug"

#: ../Doc/c-api/init_config.rst:220
msgid "``PYMEM_ALLOCATOR_MALLOC`` (``3``): force usage of ``malloc()``"
msgstr "``PYMEM_ALLOCATOR_MALLOC`` (``3``):obliga el uso de ``malloc()``"

#: ../Doc/c-api/init_config.rst:221
msgid ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): force usage of ``malloc()`` with "
"debug hooks"
msgstr ""
"``PYMEM_ALLOCATOR_MALLOC_DEBUG`` (``4``): obliga el uso de ``malloc()`` con "
"enlaces de debug"

#: ../Doc/c-api/init_config.rst:223
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`"
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` (``5``): :ref:`Python pymalloc memory allocator "
"<pymalloc>`"

#: ../Doc/c-api/init_config.rst:225
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` with debug hooks"
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` (``6``): :ref:`Python pymalloc memory "
"allocator <pymalloc>` with debug hooks"

#: ../Doc/c-api/init_config.rst:228
msgid ""
"``PYMEM_ALLOCATOR_PYMALLOC`` and ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` are not "
"supported if Python is configured using ``--without-pymalloc``"
msgstr ""
"``PYMEM_ALLOCATOR_PYMALLOC`` y ``PYMEM_ALLOCATOR_PYMALLOC_DEBUG`` no son "
"soportados si Python es configurado con ``--without-pymalloc``"

#: ../Doc/c-api/init_config.rst:231
msgid "See :ref:`Memory Management <memory>`."
msgstr "Ver :ref:`Memory Management <memory>`."

#: ../Doc/c-api/init_config.rst:235
msgid ""
"Set the LC_CTYPE locale to the user preferred locale? If equals to 0, set :c:"
"member:`coerce_c_locale` and :c:member:`coerce_c_locale_warn` to 0."
msgstr ""
"Establecer la configuración regional LC_CTYPE cómo la configuración regional "
"preferida por el usuario? Si es igual a 0, establece :c:member:"
"`coerce_c_locale` y :c:member:`coerce_c_locale_warn` a 0."

#: ../Doc/c-api/init_config.rst:240
msgid ""
"If equals to 2, coerce the C locale; if equals to 1, read the LC_CTYPE "
"locale to decide if it should be coerced."
msgstr ""
"Si igual a 2, convertir la configuración regional C; si igual a 1, leer la "
"configuración regional LC_CTYPE para decidir si se debe convertir."

#: ../Doc/c-api/init_config.rst:245
msgid "If non-zero, emit a warning if the C locale is coerced."
msgstr ""
"Si es diferente a 0, emitir una advertencia si la configuración local C es "
"convertida."

#: ../Doc/c-api/init_config.rst:249
msgid "See :c:member:`PyConfig.dev_mode`."
msgstr "Ver :c:member:`PyConfig.dev_mode`."

#: ../Doc/c-api/init_config.rst:253
msgid "See :c:member:`PyConfig.isolated`."
msgstr "Ver :c:member:`PyConfig.isolated`."

#: ../Doc/c-api/init_config.rst:257
msgid ""
"If non-zero, disable UTF-8 Mode, set the Python filesystem encoding to "
"``mbcs``, set the filesystem error handler to ``replace``."
msgstr ""
"Si es diferente a 0, desactivar el modo UTF-8, asigna la codificación del "
"sistema de ficheros de Python a ``mbcs``, establece el manejador de errores "
"del sistema de ficheros a ``replace``."

#: ../Doc/c-api/init_config.rst:260 ../Doc/c-api/init_config.rst:546
msgid ""
"Only available on Windows. ``#ifdef MS_WINDOWS`` macro can be used for "
"Windows specific code."
msgstr ""
"Únicamente disponible en Windows. La macro ``#ifdef MS_WINDOWS`` puede ser "
"usada cómo un código específico de Windows."

#: ../Doc/c-api/init_config.rst:265
msgid ""
"If non-zero, :c:func:`Py_PreInitializeFromArgs` and :c:func:"
"`Py_PreInitializeFromBytesArgs` parse their ``argv`` argument the same way "
"the regular Python parses command line arguments: see :ref:`Command Line "
"Arguments <using-on-cmdline>`."
msgstr ""
"Si es diferente a 0, :c:func:`Py_PreInitializeFromArgs` y :c:func:"
"`Py_PreInitializeFromBytesArgs` analizan su argumento ``argv`` de la misma "
"manera que Python analiza los argumentos de la línea de comandos: ver :ref:"
"`Command Line Arguments <using-on-cmdline>`."

#: ../Doc/c-api/init_config.rst:272
msgid "See :c:member:`PyConfig.use_environment`."
msgstr "Ver :c:member:`PyConfig.use_environment`."

#: ../Doc/c-api/init_config.rst:276
msgid "If non-zero, enable the UTF-8 mode."
msgstr "Si es diferente a 0, activa el modo UTF-8."

#: ../Doc/c-api/init_config.rst:279
msgid "Preinitialization with PyPreConfig"
msgstr "Preinicialización con PyPreConfig"

#: ../Doc/c-api/init_config.rst:281
msgid "Functions to preinitialize Python:"
msgstr "Funciones de preinicialización de Python:"

#: ../Doc/c-api/init_config.rst:285
msgid "Preinitialize Python from *preconfig* preconfiguration."
msgstr "Preinicialización de Python desde la preconfiguración *preconfig*."

#: ../Doc/c-api/init_config.rst:289
msgid ""
"Preinitialize Python from *preconfig* preconfiguration and command line "
"arguments (bytes strings)."
msgstr ""
"Preinicialización de Python desde la preconfiguración *preconfig*y los "
"argumentos de la línea de comandos (bytes strings)."

#: ../Doc/c-api/init_config.rst:294
msgid ""
"Preinitialize Python from *preconfig* preconfiguration and command line "
"arguments (wide strings)."
msgstr ""
"Preinicialización de Python desde la preconfiguración *preconfig*y los "
"argumentos de la línea de comandos (wide strings)."

#: ../Doc/c-api/init_config.rst:297 ../Doc/c-api/init_config.rst:715
msgid ""
"The caller is responsible to handle exceptions (error or exit) using :c:func:"
"`PyStatus_Exception` and :c:func:`Py_ExitStatusException`."
msgstr ""
"El lanzador es responsable de manejar las excepciones (error o salida) "
"usando :c:func:`PyStatus_Exception` y :c:func:`Py_ExitStatusException`."

#: ../Doc/c-api/init_config.rst:300
msgid ""
"For :ref:`Python Configuration <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), if Python is initialized with command line "
"arguments, the command line arguments must also be passed to preinitialize "
"Python, since they have an effect on the pre-configuration like encodings. "
"For example, the :option:`-X utf8 <-X>` command line option enables the "
"UTF-8 Mode."
msgstr ""
"Para :ref:`Python Configuration <init-python-config>` (:c:func:"
"`PyPreConfig_InitPythonConfig`), si Python es inicializado con los "
"argumentos de la línea de comandos, los argumentos de la línea de comandos "
"deben tambier ser pasados a la preinicialización de Python, para que tengan "
"un efecto en la pre-configuración como los encondings. Por ejemplo, la "
"opción de línea de comandos :option:`-X utf8 <-X>` activa el modo UTF-8."

#: ../Doc/c-api/init_config.rst:307
msgid ""
"``PyMem_SetAllocator()`` can be called after :c:func:`Py_PreInitialize` and "
"before :c:func:`Py_InitializeFromConfig` to install a custom memory "
"allocator. It can be called before :c:func:`Py_PreInitialize` if :c:member:"
"`PyPreConfig.allocator` is set to ``PYMEM_ALLOCATOR_NOT_SET``."
msgstr ""
"``PyMem_SetAllocator()`` puede ser llamado después de :c:func:"
"`Py_PreInitialize` y antes de :c:func:`Py_InitializeFromConfig` para "
"instalar un asignador de memoria customizado. Éste debe ser llamado antes "
"que :c:func:`Py_PreInitialize` si :c:member:`PyPreConfig.allocator` está "
"asignado a ``PYMEM_ALLOCATOR_NOT_SET``."

#: ../Doc/c-api/init_config.rst:312
msgid ""
"Python memory allocation functions like :c:func:`PyMem_RawMalloc` must not "
"be used before Python preinitialization, whereas calling directly "
"``malloc()`` and ``free()`` is always safe. :c:func:`Py_DecodeLocale` must "
"not be called before the preinitialization."
msgstr ""
"Las funciones de asignación de memoria de Python cómo :c:func:"
"`PyMem_RawMalloc` no deben ser usadas antes de la preinicialización de "
"Python, mientras que realizar llamadas directamente a ``malloc()`` y "
"``free()`` es siempre seguro. :c:func:`Py_DecodeLocale` no debe ser llamado "
"antes de la preinicialización."

#: ../Doc/c-api/init_config.rst:317
msgid "Example using the preinitialization to enable the UTF-8 Mode::"
msgstr "Ejemplo usando la preinicialización para activar el Modo UTF-8::"

#: ../Doc/c-api/init_config.rst:338
msgid "PyConfig"
msgstr "PyConfig"

#: ../Doc/c-api/init_config.rst:342
msgid "Structure containing most parameters to configure Python."
msgstr ""
"Estructura que contiene la mayoría de parámetros para configurar Python."

#: ../Doc/c-api/init_config.rst:344
msgid "Structure methods:"
msgstr "Métodos de estructura:"

#: ../Doc/c-api/init_config.rst:348
msgid ""
"Initialize configuration with :ref:`Python Configuration <init-python-"
"config>`."
msgstr ""
"Inicializa la configuración con :ref:`Python Configuration <init-python-"
"config>`."

#: ../Doc/c-api/init_config.rst:353
msgid ""
"Initialize configuration with :ref:`Isolated Configuration <init-isolated-"
"conf>`."
msgstr ""
"Inicializa la configuración con :ref:`Isolated Configuration <init-isolated-"
"conf>`."

#: ../Doc/c-api/init_config.rst:358
msgid "Copy the wide character string *str* into ``*config_str``."
msgstr "Copia la cadena de caracteres anchos *str* en ``*config_str``."

#: ../Doc/c-api/init_config.rst:360 ../Doc/c-api/init_config.rst:366
#: ../Doc/c-api/init_config.rst:372 ../Doc/c-api/init_config.rst:378
#: ../Doc/c-api/init_config.rst:384 ../Doc/c-api/init_config.rst:392
msgid "Preinitialize Python if needed."
msgstr "Preinicializa Python si es necesario."

#: ../Doc/c-api/init_config.rst:364
msgid ""
"Decode *str* using ``Py_DecodeLocale()`` and set the result into "
"``*config_str``."
msgstr ""
"Decodifica *str* usando ``Py_DecodeLocale()`` y coloca el resultado dentro "
"de ``*config_str``."

#: ../Doc/c-api/init_config.rst:370
msgid "Set command line arguments from wide character strings."
msgstr ""
"Establece los argumentos de la línea de comandos desde las cadenas de "
"caracteres anchos."

#: ../Doc/c-api/init_config.rst:376
msgid ""
"Set command line arguments: decode bytes using :c:func:`Py_DecodeLocale`."
msgstr ""
"Establece los argumentos de la línea de comandos: decodifica bytes usando :c:"
"func:`Py_DecodeLocale`."

#: ../Doc/c-api/init_config.rst:382
msgid "Set the list of wide strings *list* to *length* and *items*."
msgstr "Establece la lista de cadenas anchas *list* a *length* y *items*."

#: ../Doc/c-api/init_config.rst:388
msgid "Read all Python configuration."
msgstr "Lee toda la configuración de Python."

#: ../Doc/c-api/init_config.rst:390
msgid "Fields which are already initialized are left unchanged."
msgstr "Los campos que ya han sido inicializados no se modifican."

#: ../Doc/c-api/init_config.rst:396
msgid "Release configuration memory."
msgstr "Libera la memoria de configuración."

#: ../Doc/c-api/init_config.rst:398
msgid ""
"Most ``PyConfig`` methods preinitialize Python if needed. In that case, the "
"Python preinitialization configuration in based on the :c:type:`PyConfig`. "
"If configuration fields which are in common with :c:type:`PyPreConfig` are "
"tuned, they must be set before calling a :c:type:`PyConfig` method:"
msgstr ""
"La mayoría de los métodos `` PyConfig`` preinicializan Python si es "
"necesario. En ese caso, la configuración de preinicialización de Python se "
"basa en: c: type: `PyConfig`. Si los campos de configuración que son comunes "
"con: c: type: `PyPreConfig` han sido retocados, deben configurarse antes de "
"llamar al método: c: type:` PyConfig`:"

#: ../Doc/c-api/init_config.rst:403
msgid ":c:member:`~PyConfig.dev_mode`"
msgstr ":c:member:`~PyConfig.dev_mode`"

#: ../Doc/c-api/init_config.rst:404
msgid ":c:member:`~PyConfig.isolated`"
msgstr ":c:member:`~PyConfig.isolated`"

#: ../Doc/c-api/init_config.rst:405
msgid ":c:member:`~PyConfig.parse_argv`"
msgstr ":c:member:`~PyConfig.parse_argv`"

#: ../Doc/c-api/init_config.rst:406
msgid ":c:member:`~PyConfig.use_environment`"
msgstr ":c:member:`~PyConfig.use_environment`"

#: ../Doc/c-api/init_config.rst:408
msgid ""
"Moreover, if :c:func:`PyConfig_SetArgv` or :c:func:`PyConfig_SetBytesArgv` "
"is used, this method must be called first, before other methods, since the "
"preinitialization configuration depends on command line arguments (if :c:"
"member:`parse_argv` is non-zero)."
msgstr ""
"Además, si se usa :c:func:`PyConfig_SetArgv` o :c:func:"
"`PyConfig_SetBytesArgv`, este método debe llamarse primero, antes que otros "
"métodos, ya que la configuración de preinicialización depende de los "
"argumentos de la línea de comandos (si :c:member:`parse_argv` es diferente a "
"0)."

#: ../Doc/c-api/init_config.rst:413
msgid ""
"The caller of these methods is responsible to handle exceptions (error or "
"exit) using ``PyStatus_Exception()`` and ``Py_ExitStatusException()``."
msgstr ""
"El lanzador es responsable de manejar las excepciones (error o salida) "
"usando ``PyStatus_Exception()`` y ``Py_ExitStatusException()``."

#: ../Doc/c-api/init_config.rst:420
msgid ""
"Command line arguments, :data:`sys.argv`. See :c:member:`~PyConfig."
"parse_argv` to parse :c:member:`~PyConfig.argv` the same way the regular "
"Python parses Python command line arguments. If :c:member:`~PyConfig.argv` "
"is empty, an empty string is added to ensure that :data:`sys.argv` always "
"exists and is never empty."
msgstr ""
"Argumentos de la línea de comando, :data:`sys.argv`. Ver :c:member:"
"`~PyConfig.parse_argv` para analizar :c:member:`~PyConfig.argv` de la misma "
"manera cómo normalmente Python trata los argumentos de la línea de comandos. "
"Si :c:member:`~PyConfig.argv` está vacío, se añade un string vacío para "
"asegurar que :data:`sys.argv` siempre exista y nunca esté vacío."

#: ../Doc/c-api/init_config.rst:428
msgid ":data:`sys.base_exec_prefix`."
msgstr ":data:`sys.base_exec_prefix`."

#: ../Doc/c-api/init_config.rst:432
msgid ""
":data:`sys._base_executable`: ``__PYVENV_LAUNCHER__`` environment variable "
"value, or copy of :c:member:`PyConfig.executable`."
msgstr ""
":data:`sys._base_executable`: ``__PYVENV_LAUNCHER__`` valor de la variable "
"de entorno, o copia de :c:member:`PyConfig.executable`."

#: ../Doc/c-api/init_config.rst:437
msgid ":data:`sys.base_prefix`."
msgstr ":data:`sys.base_prefix`."

#: ../Doc/c-api/init_config.rst:441
msgid ""
"If equals to 0, enable unbuffered mode, making the stdout and stderr streams "
"unbuffered."
msgstr ""
"Si es igual a 0, activa el modo sin-buffer, haciendo que las secuencias "
"*stdout* y *stderr* no tengan búfer."

#: ../Doc/c-api/init_config.rst:444
msgid "stdin is always opened in buffered mode."
msgstr "stdin siempre se abre en modo búfer."

#: ../Doc/c-api/init_config.rst:448
msgid ""
"If equals to 1, issue a warning when comparing :class:`bytes` or :class:"
"`bytearray` with :class:`str`, or comparing :class:`bytes` with :class:"
"`int`. If equal or greater to 2, raise a :exc:`BytesWarning` exception."
msgstr ""
"Si es igual a 1, emita una advertencia cuando compare :class:`bytes` o :"
"class:`bytearray` con :class:`str`, o compare :class:`bytes` con :class:"
"`int`. Si es igual o mayor a 2, lanza una excepción :exc:`BytesWarning`."

#: ../Doc/c-api/init_config.rst:455
msgid ""
"Control the validation behavior of hash-based ``.pyc`` files (see :pep:"
"`552`): :option:`--check-hash-based-pycs` command line option value."
msgstr ""
"Controla el comportamiento de validación de los ficheros `` .pyc`` basados "
"en hash (ver :pep:`552`): valor de la opción de la línea de comandos :option:"
"`--check-hash-based-pycs`."

#: ../Doc/c-api/init_config.rst:458
msgid "Valid values: ``always``, ``never`` and ``default``."
msgstr "Valores válidos: ``always``, ``never`` y ``default``."

#: ../Doc/c-api/init_config.rst:460
msgid "The default value is: ``default``."
msgstr "El valor por defecto es: ``default``."

#: ../Doc/c-api/init_config.rst:464
msgid ""
"If non-zero, configure C standard streams (``stdio``, ``stdout``, "
"``stdout``). For example, set their mode to ``O_BINARY`` on Windows."
msgstr ""
"Si diferente a 0, configura las secuencias estándar C (``stdio``, "
"``stdout``, ``stdout`` ). Por ejemplo, establece su modo en ``O_BINARY`` "
"para Windows."

#: ../Doc/c-api/init_config.rst:469
msgid "Development mode: see :option:`-X dev <-X>`."
msgstr "Modo de desarrollo: ver :option:`-X dev <-X>`."

#: ../Doc/c-api/init_config.rst:473
msgid "If non-zero, dump all objects which are still alive at exit."
msgstr ""
"Si es diferente a 0, volcar todos los objetos que todavía viven en la salida."

#: ../Doc/c-api/init_config.rst:475
msgid ""
"Require a debug build of Python (``Py_REF_DEBUG`` macro must be defined)."
msgstr ""
"Requiere una compilación de depuración de Python (la macro ``Py_REF_DEBUG``  "
"debe estar definida)."

#: ../Doc/c-api/init_config.rst:479
msgid ":data:`sys.exec_prefix`."
msgstr ":data:`sys.exec_prefix`."

#: ../Doc/c-api/init_config.rst:483
msgid ":data:`sys.executable`."
msgstr ":data:`sys.executable`."

#: ../Doc/c-api/init_config.rst:487
msgid "If non-zero, call :func:`faulthandler.enable` at startup."
msgstr "Si es diferente a 0, llama :func:`faulthandler.enable` at arrancar."

#: ../Doc/c-api/init_config.rst:491
msgid "Filesystem encoding, :func:`sys.getfilesystemencoding`."
msgstr ""
"Codificación del sistema de ficheros, :func:`sys.getfilesystemencoding`."

#: ../Doc/c-api/init_config.rst:495
msgid "Filesystem encoding errors, :func:`sys.getfilesystemencodeerrors`."
msgstr ""
"Errores de codificación del sistema de ficheros, :func:`sys."
"getfilesystemencodeerrors`."

#: ../Doc/c-api/init_config.rst:500
msgid "Randomized hash function seed."
msgstr "Una semilla de función hash aleatoria."

#: ../Doc/c-api/init_config.rst:502
msgid ""
"If :c:member:`~PyConfig.use_hash_seed` is zero, a seed is chosen randomly at "
"Pythonstartup, and :c:member:`~PyConfig.hash_seed` is ignored."
msgstr ""
"Si :c:member:`~PyConfig.use_hash_seed` es cero, una semilla es escogida "
"aleatoriamente en Pythonstartup, y se ignora :c:member:`~PyConfig.hash_seed`."

#: ../Doc/c-api/init_config.rst:507
msgid "Python home directory."
msgstr "Directorio de inicio de Python."

#: ../Doc/c-api/init_config.rst:509
msgid ""
"Initialized from :envvar:`PYTHONHOME` environment variable value by default."
msgstr ""
"Inicializa desde el valor de la variable de entorno :envvar:`PYTHONHOME` por "
"defecto."

#: ../Doc/c-api/init_config.rst:514
msgid "If non-zero, profile import time."
msgstr "Si es diferente a 0, el tiempo de importación del perfil."

#: ../Doc/c-api/init_config.rst:518
msgid "Enter interactive mode after executing a script or a command."
msgstr "Entra a modo interactivo después de ejecutar un script o un comando."

#: ../Doc/c-api/init_config.rst:522
msgid "Install signal handlers?"
msgstr "¿Instalar manejadores de señal?"

#: ../Doc/c-api/init_config.rst:526
msgid "Interactive mode."
msgstr "Modo interactivo."

#: ../Doc/c-api/init_config.rst:530
msgid "If greater than 0, enable isolated mode:"
msgstr "Si mayor que 0, activo el modo aislado:"

#: ../Doc/c-api/init_config.rst:532
msgid ""
":data:`sys.path` contains neither the script's directory (computed from "
"``argv[0]`` or the current directory) nor the user's site-packages directory."
msgstr ""
":data:`sys.path`  no contiene ni el directorio del script (procesado a "
"partir de ``argv[0]`` o el directorio actual) ni el directorio de paquetes "
"del sitio del usuario."

#: ../Doc/c-api/init_config.rst:535
msgid ""
"Python REPL doesn't import :mod:`readline` nor enable default readline "
"configuration on interactive prompts."
msgstr ""
"REPL de Python no importa :mod:`readline` ni habilita la configuración por "
"defecto de readline en mensajes interactivos."

#: ../Doc/c-api/init_config.rst:537
msgid ""
"Set :c:member:`~PyConfig.use_environment` and :c:member:`~PyConfig."
"user_site_directory` to 0."
msgstr ""
"Establece :c:member:`~PyConfig.use_environment` y :c:member:`~PyConfig."
"user_site_directory` a 0."

#: ../Doc/c-api/init_config.rst:542
msgid ""
"If non-zero, use :class:`io.FileIO` instead of :class:`io.WindowsConsoleIO` "
"for :data:`sys.stdin`, :data:`sys.stdout` and :data:`sys.stderr`."
msgstr ""
"Si distinto a cero, usa :class:`io.FileIO` en lugar de :class:`io."
"WindowsConsoleIO` para :data:`sys.stdin`, :data:`sys.stdout` y :data:`sys."
"stderr`."

#: ../Doc/c-api/init_config.rst:551
msgid ""
"If non-zero, dump statistics on :ref:`Python pymalloc memory allocator "
"<pymalloc>` at exit."
msgstr ""
"Si es distinto a cero, vuelca las estadísticas en :ref:`Python pymalloc "
"memory allocator <pymalloc>` al finalizar."

#: ../Doc/c-api/init_config.rst:554
msgid "The option is ignored if Python is built using ``--without-pymalloc``."
msgstr ""
"La opción es ignorada si Python tiene asignada la opción ``--without-"
"pymalloc``."

#: ../Doc/c-api/init_config.rst:558
msgid ""
"Module search paths as a string separated by ``DELIM`` (:data:`os.path."
"pathsep`)."
msgstr ""
"Rutas de búsqueda del módulo como una cadena de caracteres separados por "
"``DELIM`` (:data:`os.path.pathsep`)."

#: ../Doc/c-api/init_config.rst:561
msgid ""
"Initialized from :envvar:`PYTHONPATH` environment variable value by default."
msgstr ""
"Inicializa por defecto usando el valor de la variable de entorno :envvar:"
"`PYTHONPATH`."

#: ../Doc/c-api/init_config.rst:567
msgid ""
":data:`sys.path`. If :c:member:`~PyConfig.module_search_paths_set` is equal "
"to 0, the :c:member:`~PyConfig.module_search_paths` is overridden by the "
"function calculating the :ref:`Path Configuration <init-path-config>`."
msgstr ""
":data:`sys.path`. Si :c:member:`~PyConfig.module_search_paths_set`  es igual "
"a 0, el :c:member:`~PyConfig.module_search_paths` es sobrescrito por la "
"función calculando el  :ref:`Path Configuration <init-path-config>`."

#: ../Doc/c-api/init_config.rst:574
msgid "Compilation optimization level:"
msgstr "Nivel de optimización de compilación:"

#: ../Doc/c-api/init_config.rst:576
msgid "0: Peephole optimizer (and ``__debug__`` is set to ``True``)"
msgstr "0: El optimizador de mirilla (y ``__debug__`` tiene el valor ``True``)"

#: ../Doc/c-api/init_config.rst:577
msgid "1: Remove assertions, set ``__debug__`` to ``False``"
msgstr "Elimina aserciones, establece ``__debug__`` a ``False``"

#: ../Doc/c-api/init_config.rst:578
msgid "2: Strip docstrings"
msgstr "2: Trocear docstrings"

#: ../Doc/c-api/init_config.rst:582
msgid ""
"If non-zero, parse :c:member:`~PyConfig.argv` the same way the regular "
"Python command line arguments, and strip Python arguments from :c:member:"
"`~PyConfig.argv`: see :ref:`Command Line Arguments <using-on-cmdline>`."
msgstr ""
"Si es diferente a cero, analiza :c:member:`~PyConfig.argv` de la misma "
"manera que los argumentos regulares de la línea de comandos de Python, y "
"trocea los argumentos de Python desde :c:member:`~PyConfig.argv`: ver :ref:"
"`Command Line Arguments <using-on-cmdline>`."

#: ../Doc/c-api/init_config.rst:589
msgid ""
"If non-zero, turn on parser debugging output (for expert only, depending on "
"compilation options)."
msgstr ""
"Si diferente a cero, activa la salida de depuración del analizador (solo "
"para expertos, dependiendo de las opciones de compilación)."

#: ../Doc/c-api/init_config.rst:594
msgid ""
"If equal to 0, suppress warnings when calculating the :ref:`Path "
"Configuration <init-path-config>` (Unix only, Windows does not log any "
"warning). Otherwise, warnings are written into ``stderr``."
msgstr ""
"Si es igual a 0, suprime las advertencias cuando se calcula el  :ref:`Path "
"Configuration <init-path-config>` (solo Unix, Windows no registra ningún "
"aviso). De lo contrario, las advertencias se escriben en ``stderr``."

#: ../Doc/c-api/init_config.rst:600
msgid ":data:`sys.prefix`."
msgstr ":data:`sys.prefix`."

#: ../Doc/c-api/init_config.rst:604
msgid ""
"Program name. Used to initialize :c:member:`~PyConfig.executable`, and in "
"early error messages."
msgstr ""
"Nombre del programa. Usado para inicializar :c:member:`~PyConfig."
"executable`, y en los primeros mensajes de error."

#: ../Doc/c-api/init_config.rst:609
msgid ":data:`sys.pycache_prefix`: ``.pyc`` cache prefix."
msgstr ":data:`sys.pycache_prefix`: prefijo de cache ``.pyc``."

#: ../Doc/c-api/init_config.rst:611
msgid "If ``NULL``, :data:`sys.pycache_prefix` is set to ``None``."
msgstr "Si ``NULL``, :data:`sys.pycache_prefix` se establece a ``None``."

#: ../Doc/c-api/init_config.rst:615
msgid ""
"Quiet mode. For example, don't display the copyright and version messages in "
"interactive mode."
msgstr ""
"Modo silencioso. Por ejemplo, no pinta los mensajes de copyright y versión "
"en modo interactivo."

#: ../Doc/c-api/init_config.rst:620
msgid "``python3 -c COMMAND`` argument. Used by :c:func:`Py_RunMain`."
msgstr "argumento ``python3 -c COMMAND``. Usado por :c:func:`Py_RunMain`."

#: ../Doc/c-api/init_config.rst:624
msgid "``python3 FILENAME`` argument. Used by :c:func:`Py_RunMain`."
msgstr "argumento ``python3 FILENAME``. Usado por :c:func:`Py_RunMain`."

#: ../Doc/c-api/init_config.rst:628
msgid "``python3 -m MODULE`` argument. Used by :c:func:`Py_RunMain`."
msgstr "argumento ``python3 -m MODULE``. Usado por :c:func:`Py_RunMain`."

#: ../Doc/c-api/init_config.rst:632
msgid "Show allocation counts at exit?"
msgstr "¿Mostrar la contabilización de asignaciones a la salida?"

#: ../Doc/c-api/init_config.rst:634
msgid "Set to 1 by :option:`-X showalloccount <-X>` command line option."
msgstr ""
"Asigna un 1 con la opción de la línea de comandos :option:`-X showalloccount "
"<-X>`."

#: ../Doc/c-api/init_config.rst:636
msgid "Need a special Python build with ``COUNT_ALLOCS`` macro defined."
msgstr ""
"Necesita una compilación especial de Python con la macro ``COUNT_ALLOCS`` "
"definida."

#: ../Doc/c-api/init_config.rst:640
msgid "Show total reference count at exit?"
msgstr "¿Mostrar la contabilización de referencias totales a la salida?"

#: ../Doc/c-api/init_config.rst:642
msgid "Set to 1 by :option:`-X showrefcount <-X>` command line option."
msgstr ""
"Establecido en 1 por la opción de la línea de comandos :option:`-X "
"showrefcount <-X>`."

#: ../Doc/c-api/init_config.rst:644
msgid "Need a debug build of Python (``Py_REF_DEBUG`` macro must be defined)."
msgstr ""
"Requiere una compilación de depuración de Python (la macro ``Py_REF_DEBUG``  "
"debe estar definida)."

#: ../Doc/c-api/init_config.rst:648
msgid "Import the :mod:`site` module at startup?"
msgstr "¿Importar el módulo :mod:`site` al arrancar?"

#: ../Doc/c-api/init_config.rst:652
msgid "Skip the first line of the source?"
msgstr "¿Saltar la primera línea del código?"

#: ../Doc/c-api/init_config.rst:657
msgid ""
"Encoding and encoding errors of :data:`sys.stdin`, :data:`sys.stdout` and :"
"data:`sys.stderr`."
msgstr ""
"Codificación y errores de codificación de :data:`sys.stdin`, :data:`sys."
"stdout` y :data:`sys.stderr`."

#: ../Doc/c-api/init_config.rst:662
msgid "If non-zero, call :func:`tracemalloc.start` at startup."
msgstr "Si es diferente a 0, llama :func:`tracemalloc.start` at arrancar."

#: ../Doc/c-api/init_config.rst:666
msgid "If greater than 0, use :ref:`environment variables <using-on-envvars>`."
msgstr ""
"Si más grande que 0, usa :ref:`environment variables <using-on-envvars>`."

#: ../Doc/c-api/init_config.rst:670
msgid "If non-zero, add user site directory to :data:`sys.path`."
msgstr ""
"Si diferente a cero, añade el directorio del sitio del usuario a :data:`sys."
"path`."

#: ../Doc/c-api/init_config.rst:674
msgid "If non-zero, enable verbose mode."
msgstr "Si es diferente a 0, activa el modo detallado."

#: ../Doc/c-api/init_config.rst:678
msgid ""
":data:`sys.warnoptions`: options of the :mod:`warnings` module to build "
"warnings filters: lowest to highest priority."
msgstr ""
":data:`sys.warnoptions`: opciones del módulo :mod:`warnings` para construir "
"filtros de advertencia: de menor a mayor prioridad."

#: ../Doc/c-api/init_config.rst:681
msgid ""
"The :mod:`warnings` module adds :data:`sys.warnoptions` in the reverse "
"order: the last :c:member:`PyConfig.warnoptions` item becomes the first item "
"of :data:`warnings.filters` which is checked first (highest priority)."
msgstr ""
"El módulo :mod:`warnings` añade :data:`sys.warnoptions` en orden inverso: el "
"último elemento :c:member:`PyConfig.warnoptions` se convierte en el primer "
"elemento de :data:`warnings.filters`  que se verifica primero (máxima "
"prioridad)."

#: ../Doc/c-api/init_config.rst:688
msgid "If non-zero, write ``.pyc`` files."
msgstr "Si distinto a cero, escribe los ficheros ``.pyc``."

#: ../Doc/c-api/init_config.rst:690
msgid ""
":data:`sys.dont_write_bytecode` is initialized to the inverted value of :c:"
"member:`~PyConfig.write_bytecode`."
msgstr ""
":data:`sys.dont_write_bytecode` es inicializado con el valor inverso de :c:"
"member:`~PyConfig.write_bytecode`."

#: ../Doc/c-api/init_config.rst:695
msgid ":data:`sys._xoptions`."
msgstr ":data:`sys._xoptions`."

#: ../Doc/c-api/init_config.rst:697
msgid ""
"If ``parse_argv`` is non-zero, ``argv`` arguments are parsed the same way "
"the regular Python parses command line arguments, and Python arguments are "
"stripped from ``argv``: see :ref:`Command Line Arguments <using-on-cmdline>`."
msgstr ""
"Si ``parse_argv`` es diferente a cero, los argumentos ``argv`` son tratados "
"de la misma manera que Python trata los argumentos de la línea de comandos, "
"y los argumentos de Python son troceados de ``argv``: ver :ref:`Command Line "
"Arguments <using-on-cmdline>`."

#: ../Doc/c-api/init_config.rst:702
msgid ""
"The ``xoptions`` options are parsed to set other options: see :option:`-X` "
"option."
msgstr ""
"Las opciones ``xoptions`` son tratadas para establecer otras opciones: ver "
"la opción  :option:`-X`."

#: ../Doc/c-api/init_config.rst:707
msgid "Initialization with PyConfig"
msgstr "Inicialización con PyConfig"

#: ../Doc/c-api/init_config.rst:709
msgid "Function to initialize Python:"
msgstr "Función para inicializar Python:"

#: ../Doc/c-api/init_config.rst:713
msgid "Initialize Python from *config* configuration."
msgstr "Inicializa Python desde la configuración *config*."

#: ../Doc/c-api/init_config.rst:718
msgid ""
"If ``PyImport_FrozenModules``, ``PyImport_AppendInittab()`` or "
"``PyImport_ExtendInittab()`` are used, they must be set or called after "
"Python preinitialization and before the Python initialization."
msgstr ""
"Si usa ``PyImport_FrozenModules``, ``PyImport_AppendInittab()`` o "
"``PyImport_ExtendInittab()``, éstos deben establecerse o llamados después de "
"la preinicialización de Python y antes de la inicialización de Python."

#: ../Doc/c-api/init_config.rst:722
msgid "Example setting the program name::"
msgstr "Ejemplo de configuración del nombre del programa ::"

#: ../Doc/c-api/init_config.rst:750
msgid ""
"More complete example modifying the default configuration, read the "
"configuration, and then override some parameters::"
msgstr ""
"Ejemplo más completo modificando la configuración predeterminada, lee la "
"configuración y luego sobreescribe algunos parámetros ::"

#: ../Doc/c-api/init_config.rst:801
msgid "Isolated Configuration"
msgstr "Configuración Aislada"

#: ../Doc/c-api/init_config.rst:803
msgid ""
":c:func:`PyPreConfig_InitIsolatedConfig` and :c:func:"
"`PyConfig_InitIsolatedConfig` functions create a configuration to isolate "
"Python from the system. For example, to embed Python into an application."
msgstr ""
"Las funciones :c:func:`PyPreConfig_InitIsolatedConfig` y :c:func:"
"`PyConfig_InitIsolatedConfig` crean una configuración para aislar Python del "
"sistema. Por ejemplo, para incrustar Python en una aplicación."

#: ../Doc/c-api/init_config.rst:808
msgid ""
"This configuration ignores global configuration variables, environments "
"variables, command line arguments (:c:member:`PyConfig.argv` is not parsed) "
"and user site directory. The C standard streams (ex: ``stdout``) and the "
"LC_CTYPE locale are left unchanged. Signal handlers are not installed."
msgstr ""
"Esta configuración ignora las variables globales de configuración, variables "
"de entorno, argumentos de la línea de comandos (:c:member:`PyConfig.argv` no "
"es tratada ) y el directorio del sitio del usuario. El  \n"
" The C standard streams (ex: ``stdout``) and the LC_CTYPE locale are left "
"unchanged. Signal handlers are not installed."

#: ../Doc/c-api/init_config.rst:813
msgid ""
"Configuration files are still used with this configuration. Set the :ref:"
"`Path Configuration <init-path-config>` (\"output fields\") to ignore these "
"configuration files and avoid the function computing the default path "
"configuration."
msgstr ""
"Los archivos de configuración todavía usan esta configuración. Configure :"
"ref:`Path Configuration <init-path-config>` (\"campos de salida\") para "
"ignorar estos archivos de configuración y evitar la función que asigna la "
"configuración de ruta por defecto."

#: ../Doc/c-api/init_config.rst:822
msgid "Python Configuration"
msgstr "Configuración de Python"

#: ../Doc/c-api/init_config.rst:824
msgid ""
":c:func:`PyPreConfig_InitPythonConfig` and :c:func:"
"`PyConfig_InitPythonConfig` functions create a configuration to build a "
"customized Python which behaves as the regular Python."
msgstr ""
"Las funciones :c:func:`PyPreConfig_InitPythonConfig` y :c:func:"
"`PyConfig_InitPythonConfig` crean una configuración para construir un Python "
"personalizado que se comporta como el Python normal."

#: ../Doc/c-api/init_config.rst:828
msgid ""
"Environments variables and command line arguments are used to configure "
"Python, whereas global configuration variables are ignored."
msgstr ""
"Las variables de entorno y los argumentos de la línea de comandos configuran "
"Python, mientras que las variables de configuración global son ignoradas."

#: ../Doc/c-api/init_config.rst:831
msgid ""
"This function enables C locale coercion (:pep:`538`) and UTF-8 Mode (:pep:"
"`540`) depending on the LC_CTYPE locale, :envvar:`PYTHONUTF8` and :envvar:"
"`PYTHONCOERCECLOCALE` environment variables."
msgstr ""
"Esta función permite la coerción de configuración regional C (:pep:`538`) y "
"el modo UTF-8 (:pep:`540`) dependiendo de las variables de configuración "
"LC_CTYPE regional, :envvar:`PYTHONUTF8` y :envvar:`PYTHONCOERCECLOCALE`."

#: ../Doc/c-api/init_config.rst:835
msgid "Example of customized Python always running in isolated mode::"
msgstr ""
"Ejemplo de un Python personalizado que siempre se ejecuta en modo aislado ::"

#: ../Doc/c-api/init_config.rst:874
msgid "Path Configuration"
msgstr "Ruta de Configuración"

#: ../Doc/c-api/init_config.rst:876
msgid ":c:type:`PyConfig` contains multiple fields for the path configuration:"
msgstr ""
":c:type:`PyConfig` contiene varios campos para la configuración de la ruta:"

#: ../Doc/c-api/init_config.rst:878
msgid "Path configuration inputs:"
msgstr "Entradas de configuración de ruta:"

#: ../Doc/c-api/init_config.rst:880
msgid ":c:member:`PyConfig.home`"
msgstr ":c:member:`PyConfig.home`"

#: ../Doc/c-api/init_config.rst:881
msgid ":c:member:`PyConfig.pathconfig_warnings`"
msgstr ":c:member:`PyConfig.pathconfig_warnings`"

#: ../Doc/c-api/init_config.rst:882
msgid ":c:member:`PyConfig.program_name`"
msgstr ":c:member:`PyConfig.program_name`"

#: ../Doc/c-api/init_config.rst:883
msgid ":c:member:`PyConfig.pythonpath_env`"
msgstr ":c:member:`PyConfig.pythonpath_env`"

#: ../Doc/c-api/init_config.rst:884
msgid "current working directory: to get absolute paths"
msgstr "directorio de trabajo actual: conseguir la ruta absoluta"

#: ../Doc/c-api/init_config.rst:885
msgid ""
"``PATH`` environment variable to get the program full path (from :c:member:"
"`PyConfig.program_name`)"
msgstr ""
"variable de entorno ``PATH`` para obtener la ruta completa del programa (de :"
"c:member:`PyConfig.program_name`)"

#: ../Doc/c-api/init_config.rst:887
msgid "``__PYVENV_LAUNCHER__`` environment variable"
msgstr "Variable de entorno ``__PYVENV_LAUNCHER__``"

#: ../Doc/c-api/init_config.rst:888
msgid ""
"(Windows only) Application paths in the registry under \"Software\\Python"
"\\PythonCore\\X.Y\\PythonPath\" of HKEY_CURRENT_USER and HKEY_LOCAL_MACHINE "
"(where X.Y is the Python version)."
msgstr ""
"(Solo Windows) Rutas de aplicación en el registro en \"Software\\Python"
"\\PythonCore\\X.Y\\PythonPath\" de HKEY_CURRENT_USER y HKEY_LOCAL_MACHINE "
"(donde X.Y es la versión de Python)."

#: ../Doc/c-api/init_config.rst:892
msgid "Path configuration output fields:"
msgstr "Campos de salida de la configuración de ruta:"

#: ../Doc/c-api/init_config.rst:894
msgid ":c:member:`PyConfig.base_exec_prefix`"
msgstr ":c:member:`PyConfig.base_exec_prefix`"

#: ../Doc/c-api/init_config.rst:895
msgid ":c:member:`PyConfig.base_executable`"
msgstr ":c:member:`PyConfig.base_executable`"

#: ../Doc/c-api/init_config.rst:896
msgid ":c:member:`PyConfig.base_prefix`"
msgstr ":c:member:`PyConfig.base_prefix`"

#: ../Doc/c-api/init_config.rst:897
msgid ":c:member:`PyConfig.exec_prefix`"
msgstr ":c:member:`PyConfig.exec_prefix`"

#: ../Doc/c-api/init_config.rst:898
msgid ":c:member:`PyConfig.executable`"
msgstr ":c:member:`PyConfig.executable`"

#: ../Doc/c-api/init_config.rst:899
msgid ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"
msgstr ""
":c:member:`PyConfig.module_search_paths_set`, :c:member:`PyConfig."
"module_search_paths`"

#: ../Doc/c-api/init_config.rst:901
msgid ":c:member:`PyConfig.prefix`"
msgstr ":c:member:`PyConfig.prefix`"

#: ../Doc/c-api/init_config.rst:903
msgid ""
"If at least one \"output field\" is not set, Python calculates the path "
"configuration to fill unset fields. If :c:member:`~PyConfig."
"module_search_paths_set` is equal to 0, :c:member:`~PyConfig."
"module_search_paths` is overridden and :c:member:`~PyConfig."
"module_search_paths_set` is set to 1."
msgstr ""
"Si no se indica al menos un \"campo de salida\", Python calcula la "
"configuración de la ruta para completar los campos no informados. Si :c:"
"member:`~PyConfig.module_search_paths_set` es igual a 0, se sobreescribe :c:"
"member:`~PyConfig.module_search_paths` y :c:member:`~PyConfig."
"module_search_paths_set` se establece a 1."

#: ../Doc/c-api/init_config.rst:909
msgid ""
"It is possible to completely ignore the function calculating the default "
"path configuration by setting explicitly all path configuration output "
"fields listed above. A string is considered as set even if it is non-empty. "
"``module_search_paths`` is considered as set if ``module_search_paths_set`` "
"is set to 1. In this case, path configuration input fields are ignored as "
"well."
msgstr ""
"Es posible ignorar por completo la función que calcula la configuración de "
"la ruta por defecto al establecer explícitamente todos los campos de salida "
"de configuración de ruta enumerados anteriormente. Una cadena de caracteres "
"se considera como un conjunto, incluso si no está vacía. `` "
"module_search_paths`` se considera como establecido si `` "
"module_search_paths_set`` vale 1. En este caso, los campos de entrada de "
"configuración de ruta también se ignoran."

#: ../Doc/c-api/init_config.rst:916
msgid ""
"Set :c:member:`~PyConfig.pathconfig_warnings` to 0 to suppress warnings when "
"calculating the path configuration (Unix only, Windows does not log any "
"warning)."
msgstr ""
"Asigna : c: member: `~ PyConfig.pathconfig_warnings` a 0 para desactivar las "
"advertencias al calcular la configuración de la ruta (solo Unix, Windows no "
"registra ningún aviso)."

#: ../Doc/c-api/init_config.rst:919
msgid ""
"If :c:member:`~PyConfig.base_prefix` or :c:member:`~PyConfig."
"base_exec_prefix` fields are not set, they inherit their value from :c:"
"member:`~PyConfig.prefix` and :c:member:`~PyConfig.exec_prefix` respectively."
msgstr ""
"Si :c:member:`~PyConfig.base_prefix` o :c:member:`~PyConfig."
"base_exec_prefix` no están establecidos, heredan su valor de :c:member:"
"`~PyConfig.prefix` y :c:member:`~PyConfig.exec_prefix` respectivamente."

#: ../Doc/c-api/init_config.rst:923
msgid ":c:func:`Py_RunMain` and :c:func:`Py_Main` modify :data:`sys.path`:"
msgstr ":c:func:`Py_RunMain` y :c:func:`Py_Main` modifican :data:`sys.path`:"

#: ../Doc/c-api/init_config.rst:925
msgid ""
"If :c:member:`~PyConfig.run_filename` is set and is a directory which "
"contains a ``__main__.py`` script, prepend :c:member:`~PyConfig."
"run_filename` to :data:`sys.path`."
msgstr ""
"Si :c:member:`~PyConfig.run_filename` es inicializado y es un directorio que "
"contiene un script ``__main__.py``, antepone :c:member:`~PyConfig."
"run_filename` a :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:928
msgid "If :c:member:`~PyConfig.isolated` is zero:"
msgstr "Si :c:member:`~PyConfig.isolated` es cero:"

#: ../Doc/c-api/init_config.rst:930
msgid ""
"If :c:member:`~PyConfig.run_module` is set, prepend the current directory "
"to :data:`sys.path`. Do nothing if the current directory cannot be read."
msgstr ""
"Si :c:member:`~PyConfig.run_module` está inicializada, antepone el "
"directorio actual a :data:`sys.path`. No hace nada si el directorio actual "
"no puede ser leído."

#: ../Doc/c-api/init_config.rst:932
msgid ""
"If :c:member:`~PyConfig.run_filename` is set, prepend the directory of the "
"filename to :data:`sys.path`."
msgstr ""
"Si :c:member:`~PyConfig.run_filename` está inicializada, antepone el "
"directorio del nombre del fichero a :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:934
msgid "Otherwise, prepend an empty string to :data:`sys.path`."
msgstr "De lo contrario, antepone una cadena vacía a :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:936
msgid ""
"If :c:member:`~PyConfig.site_import` is non-zero, :data:`sys.path` can be "
"modified by the :mod:`site` module. If :c:member:`~PyConfig."
"user_site_directory` is non-zero and the user's site-package directory "
"exists, the :mod:`site` module appends the user's site-package directory to :"
"data:`sys.path`."
msgstr ""
"Si :c:member:`~PyConfig.site_import` es diferente a cero, :data:`sys.path` "
"puede ser modificado por el módulo :mod:`site`. Si :c:member:`~PyConfig."
"user_site_directory` es diferente a cero y el directorio de paquetes del "
"sitio del usuario existe, el módulo :mod:`site` añade el directorio de "
"paquetes del sitio del usuario al :data:`sys.path`."

#: ../Doc/c-api/init_config.rst:942
msgid "The following configuration files are used by the path configuration:"
msgstr ""
"La configuración de ruta utiliza los siguientes archivos de configuración:"

#: ../Doc/c-api/init_config.rst:944
msgid "``pyvenv.cfg``"
msgstr "``pyvenv.cfg``"

#: ../Doc/c-api/init_config.rst:945
msgid "``python._pth`` (Windows only)"
msgstr "``python._pth`` (solo Windows)"

#: ../Doc/c-api/init_config.rst:946
msgid "``pybuilddir.txt`` (Unix only)"
msgstr "``pybuilddir.txt`` (solo Unix)"

#: ../Doc/c-api/init_config.rst:948
msgid ""
"The ``__PYVENV_LAUNCHER__`` environment variable is used to set :c:member:"
"`PyConfig.base_executable`"
msgstr ""
"La variable de entorno ``__PYVENV_LAUNCHER__`` es usada para establecer :c:"
"member:`PyConfig.base_executable`"

#: ../Doc/c-api/init_config.rst:953
msgid "Py_RunMain()"
msgstr "Py_RunMain()"

#: ../Doc/c-api/init_config.rst:957
msgid ""
"Execute the command (:c:member:`PyConfig.run_command`), the script (:c:"
"member:`PyConfig.run_filename`) or the module (:c:member:`PyConfig."
"run_module`) specified on the command line or in the configuration."
msgstr ""
"Ejecuta el comando (:c:member:`PyConfig.run_command`), el script (:c:member:"
"`PyConfig.run_filename`) o el módulo (:c:member:`PyConfig.run_module`) "
"especificado en la línea de comando o en la configuración."

#: ../Doc/c-api/init_config.rst:962
msgid "By default and when if :option:`-i` option is used, run the REPL."
msgstr "Por defecto y cuando la opción :option:`-i` se usa, ejecuta REPL."

#: ../Doc/c-api/init_config.rst:964
msgid ""
"Finally, finalizes Python and returns an exit status that can be passed to "
"the ``exit()`` function."
msgstr ""
"Por último, finaliza Python y devuelve un estado de salida que puede pasarse "
"a la función ``exit()``."

#: ../Doc/c-api/init_config.rst:967
msgid ""
"See :ref:`Python Configuration <init-python-config>` for an example of "
"customized Python always running in isolated mode using :c:func:`Py_RunMain`."
msgstr ""
"Ver :ref:`Python Configuration <init-python-config>` para un ejemplo de "
"personalización de Python que siempre funciona en modo aislado usando :c:"
"func:`Py_RunMain`."

#: ../Doc/c-api/init_config.rst:973
msgid "Multi-Phase Initialization Private Provisional API"
msgstr "API Provisional Privada de Inicialización Multifase"

#: ../Doc/c-api/init_config.rst:975
msgid ""
"This section is a private provisional API introducing multi-phase "
"initialization, the core feature of the :pep:`432`:"
msgstr ""
"Esta sección es una API provisional privada introduciendo  la inicialización "
"multifase, la principal característica del :pep:`432`:"

#: ../Doc/c-api/init_config.rst:978
msgid "\"Core\" initialization phase, \"bare minimum Python\":"
msgstr "Fase inicialización \"Core\", \"bare minimum Python\":"

#: ../Doc/c-api/init_config.rst:980
msgid "Builtin types;"
msgstr "Tipos incorporados;"

#: ../Doc/c-api/init_config.rst:981
msgid "Builtin exceptions;"
msgstr "Excepciones incorporadas;"

#: ../Doc/c-api/init_config.rst:982
msgid "Builtin and frozen modules;"
msgstr "Módulos incorporados y congelados;"

#: ../Doc/c-api/init_config.rst:983
msgid ""
"The :mod:`sys` module is only partially initialized (ex: :data:`sys.path` "
"doesn't exist yet)."
msgstr ""
"El módulo :mod:`sys` solo se inicializa parcialmente (por ejemplo: :data:"
"`sys.path` no existe todavía)."

#: ../Doc/c-api/init_config.rst:986
msgid "\"Main\" initialization phase, Python is fully initialized:"
msgstr ""
"Fase de inicialización \"Main\", Python está completamente inicializado:"

#: ../Doc/c-api/init_config.rst:988
msgid "Install and configure :mod:`importlib`;"
msgstr "Instala y configura :mod:`importlib`;"

#: ../Doc/c-api/init_config.rst:989
msgid "Apply the :ref:`Path Configuration <init-path-config>`;"
msgstr "Aplica la :ref:`Path Configuration <init-path-config>`;"

#: ../Doc/c-api/init_config.rst:990
msgid "Install signal handlers;"
msgstr "Instala manejadores de señal;"

#: ../Doc/c-api/init_config.rst:991
msgid ""
"Finish :mod:`sys` module initialization (ex: create :data:`sys.stdout` and :"
"data:`sys.path`);"
msgstr ""
"Finaliza la inicialización del módulo :mod:`sys`  (ex: crea :data:`sys."
"stdout` y :data:`sys.path`);"

#: ../Doc/c-api/init_config.rst:993
msgid ""
"Enable optional features like :mod:`faulthandler` and :mod:`tracemalloc`;"
msgstr ""
"Activa las características opcionales cómo :mod:`faulthandler` y :mod:"
"`tracemalloc`;"

#: ../Doc/c-api/init_config.rst:994
msgid "Import the :mod:`site` module;"
msgstr "Importar el módulo :mod:`site`;"

#: ../Doc/c-api/init_config.rst:995
msgid "etc."
msgstr "etc."

#: ../Doc/c-api/init_config.rst:997
msgid "Private provisional API:"
msgstr "API provisional privada:"

#: ../Doc/c-api/init_config.rst:999
msgid ""
":c:member:`PyConfig._init_main`: if set to 0, :c:func:"
"`Py_InitializeFromConfig` stops at the \"Core\" initialization phase."
msgstr ""
":c:member:`PyConfig._init_main`: si se estrablece a 0, :c:func:"
"`Py_InitializeFromConfig` se detienen en la fase de inicialización \"Core\"."

#: ../Doc/c-api/init_config.rst:1004
msgid ""
"Move to the \"Main\" initialization phase, finish the Python initialization."
msgstr ""
"Mueve a la fase de inicialización \"Main\", finaliza la inicialización de "
"Python."

#: ../Doc/c-api/init_config.rst:1006
msgid ""
"No module is imported during the \"Core\" phase and the ``importlib`` module "
"is not configured: the :ref:`Path Configuration <init-path-config>` is only "
"applied during the \"Main\" phase. It may allow to customize Python in "
"Python to override or tune the :ref:`Path Configuration <init-path-config>`, "
"maybe install a custom :data:`sys.meta_path` importer or an import hook, etc."
msgstr ""
"Ningún módulo es importado durante la fase \"Core\" y el módulo `` "
"importlib`` no está configurado: el :ref:`Path Configuration <init-path-"
"config>`  solo se aplica durante la fase \"Main\". Se permite personalizar "
"Python en Python sobrescribiendo o ajustando el :ref:`Path Configuration "
"<init-path-config>`, quizás instale un importador personalizado :data:`sys."
"meta_path` o un enlace de importación, etc."

#: ../Doc/c-api/init_config.rst:1012
msgid ""
"It may become possible to calculatin the :ref:`Path Configuration <init-path-"
"config>` in Python, after the Core phase and before the Main phase, which is "
"one of the :pep:`432` motivation."
msgstr ""
"Es posible calcular la  :ref:`Path Configuration <init-path-config>` en "
"Python, después de la fase Core y antes de la fase Main, que es una de las "
"motivaciones :pep:`432`."

#: ../Doc/c-api/init_config.rst:1016
msgid ""
"The \"Core\" phase is not properly defined: what should be and what should "
"not be available at this phase is not specified yet. The API is marked as "
"private and provisional: the API can be modified or even be removed anytime "
"until a proper public API is designed."
msgstr ""
"La fase \"Core\" no está definida correctamente: lo que debería estar y lo "
"que no debería estar disponible en esta fase aún no se ha especificado. La "
"API está marcada como privada y provisional: la API puede ser modificada o "
"incluso eliminar en cualquier momento hasta que se diseñe una API pública "
"adecuada."

#: ../Doc/c-api/init_config.rst:1021
msgid ""
"Example running Python code between \"Core\" and \"Main\" initialization "
"phases::"
msgstr ""
"Ejemplo de la ejecuión del código Python entre las fases de inicialización "
"\"Core\" y \"Main\"::"

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-05-10 22:38+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/c-api/slice.rst:6
msgid "Slice Objects"
msgstr "Objeto rebanada (*slice*)"

#: ../Doc/c-api/slice.rst:11
msgid ""
"The type object for slice objects.  This is the same as :class:`slice` in "
"the Python layer."
msgstr ""
"El objeto tipo para objetos rebanadas. Esto es lo mismo que :class:`slice` "
"en la capa de Python."

#: ../Doc/c-api/slice.rst:17
msgid "Return true if *ob* is a slice object; *ob* must not be ``NULL``."
msgstr ""
"Retorna verdadero si *ob* es un objeto rebanada; *ob* no debe ser ``NULL``."

#: ../Doc/c-api/slice.rst:22
msgid ""
"Return a new slice object with the given values.  The *start*, *stop*, and "
"*step* parameters are used as the values of the slice object attributes of "
"the same names.  Any of the values may be ``NULL``, in which case the "
"``None`` will be used for the corresponding attribute.  Return ``NULL`` if "
"the new object could not be allocated."
msgstr ""
"Retorna un nuevo objeto rebanada con los valores dados. Los parámetros "
"*start*, *stop* y *step* se utilizan como los valores de los atributos del "
"objeto rebanada de los mismos nombres. Cualquiera de los valores puede ser "
"``NULL``, en cuyo caso se usará ``None`` para el atributo correspondiente. "
"Retorna ``NULL`` si no se puedo asignar el nuevo objeto."

#: ../Doc/c-api/slice.rst:31
msgid ""
"Retrieve the start, stop and step indices from the slice object *slice*, "
"assuming a sequence of length *length*. Treats indices greater than *length* "
"as errors."
msgstr ""
"Recupera los índices *start*, *stop* y *step* del objeto rebanada *slice*, "
"suponiendo una secuencia de longitud *length*. Trata los índices mayores que "
"*length* como errores."

#: ../Doc/c-api/slice.rst:35
msgid ""
"Returns ``0`` on success and ``-1`` on error with no exception set (unless "
"one of the indices was not :const:`None` and failed to be converted to an "
"integer, in which case ``-1`` is returned with an exception set)."
msgstr ""
"Retorna ``0`` en caso de éxito y ``-1`` en caso de error sin excepción "
"establecida (a menos que uno de los índices no sea :const:`None` y no se "
"haya convertido a un entero, en cuyo caso``- 1`` se retorna con una "
"excepción establecida)."

#: ../Doc/c-api/slice.rst:39
msgid "You probably do not want to use this function."
msgstr "Probablemente no quiera usar esta función."

#: ../Doc/c-api/slice.rst:41 ../Doc/c-api/slice.rst:72
msgid ""
"The parameter type for the *slice* parameter was ``PySliceObject*`` before."
msgstr ""
"El tipo de parámetro para el parámetro *slice* era ``PySliceObject*`` antes."

#: ../Doc/c-api/slice.rst:48
msgid ""
"Usable replacement for :c:func:`PySlice_GetIndices`.  Retrieve the start, "
"stop, and step indices from the slice object *slice* assuming a sequence of "
"length *length*, and store the length of the slice in *slicelength*.  Out of "
"bounds indices are clipped in a manner consistent with the handling of "
"normal slices."
msgstr ""
"Reemplazo utilizable para :c:func:`PySlice_GetIndices`. Recupera los índices "
"de *start*, *stop*, y *step* del objeto rebanada *slice* asumiendo una "
"secuencia de longitud *length*, y almacena la longitud de la rebanada en "
"*slicelength*. Los índices fuera de los límites se recortan de manera "
"coherente con el manejo de sectores normales."

#: ../Doc/c-api/slice.rst:54
msgid "Returns ``0`` on success and ``-1`` on error with exception set."
msgstr ""
"Retorna ``0`` en caso de éxito y ``-1`` en caso de error con excepción "
"establecida."

#: ../Doc/c-api/slice.rst:57
msgid ""
"This function is considered not safe for resizable sequences. Its invocation "
"should be replaced by a combination of :c:func:`PySlice_Unpack` and :c:func:"
"`PySlice_AdjustIndices` where ::"
msgstr ""
"Esta función se considera no segura para secuencias redimensionables. Su "
"invocación debe ser reemplazada por una combinación de :c:func:"
"`PySlice_Unpack` y :c:func:`PySlice_AdjustIndices` donde::"

#: ../Doc/c-api/slice.rst:65
msgid "is replaced by ::"
msgstr "es reemplazado por::"

#: ../Doc/c-api/slice.rst:76
msgid ""
"If ``Py_LIMITED_API`` is not set or set to the value between ``0x03050400`` "
"and ``0x03060000`` (not including) or ``0x03060100`` or higher :c:func:`!"
"PySlice_GetIndicesEx` is implemented as a macro using :c:func:`!"
"PySlice_Unpack` and :c:func:`!PySlice_AdjustIndices`. Arguments *start*, "
"*stop* and *step* are evaluated more than once."
msgstr ""
"Si ``Py_LIMITED_API`` no se establece o establece el valor entre "
"``0x03050400`` y ``0x03060000`` (sin incluir) o ``0x03060100`` o un "
"superior :c:func:`!PySlice_GetIndicesEx` se implementa como un macro usando :"
"c:func:`! PySlice_Unpack` y :c:func:`!PySlice_AdjustIndices`. Los argumentos "
"*start*, *stop* y *step* se evalúan más de una vez."

#: ../Doc/c-api/slice.rst:83
msgid ""
"If ``Py_LIMITED_API`` is set to the value less than ``0x03050400`` or "
"between ``0x03060000`` and ``0x03060100`` (not including) :c:func:`!"
"PySlice_GetIndicesEx` is a deprecated function."
msgstr ""
"Si ``Py_LIMITED_API`` se establece en un valor menor que ``0x03050400`` o "
"entre ``0x03060000`` y ``0x03060100`` (sin incluir) :c:func:`!"
"PySlice_GetIndicesEx` es una función obsoleta."

#: ../Doc/c-api/slice.rst:91
msgid ""
"Extract the start, stop and step data members from a slice object as C "
"integers.  Silently reduce values larger than ``PY_SSIZE_T_MAX`` to "
"``PY_SSIZE_T_MAX``, silently boost the start and stop values less than "
"``PY_SSIZE_T_MIN`` to ``PY_SSIZE_T_MIN``, and silently boost the step values "
"less than ``-PY_SSIZE_T_MAX`` to ``-PY_SSIZE_T_MAX``."
msgstr ""
"Extrae los miembros de datos *start*, *stop*, y *step* de un objeto rebanada "
"como enteros en C. Reduce silenciosamente los valores mayores que "
"``PY_SSIZE_T_MAX`` a ``PY_SSIZE_T_MAX``, aumenta silenciosamente los valores "
"*start* y *stop* inferiores a ``PY_SSIZE_T_MIN`` a ``PY_SSIZE_T_MIN``, y "
"silenciosamente aumenta los valores de *step* a menos de ``-PY_SSE `` a ``-"
"PY_SSIZE_T_MAX``."

#: ../Doc/c-api/slice.rst:97
msgid "Return ``-1`` on error, ``0`` on success."
msgstr "Retorna ``-1`` en caso de error, ``0`` en caso de éxito."

#: ../Doc/c-api/slice.rst:104
msgid ""
"Adjust start/end slice indices assuming a sequence of the specified length. "
"Out of bounds indices are clipped in a manner consistent with the handling "
"of normal slices."
msgstr ""
"Ajusta los índices de corte de inicio/fin asumiendo una secuencia de la "
"longitud especificada. Los índices fuera de los límites se recortan de "
"manera coherente con el manejo de sectores normales."

#: ../Doc/c-api/slice.rst:108
msgid ""
"Return the length of the slice.  Always successful.  Doesn't call Python "
"code."
msgstr ""
"Retorna la longitud de la rebanada. Siempre exitoso. No llama al código de "
"Python."

#: ../Doc/c-api/slice.rst:115
msgid "Ellipsis Object"
msgstr "Objeto Elipsis"

#: ../Doc/c-api/slice.rst:120
msgid ""
"The Python ``Ellipsis`` object.  This object has no methods.  It needs to be "
"treated just like any other object with respect to reference counts.  Like :"
"c:data:`Py_None` it is a singleton object."
msgstr ""
"El objeto ``Elipsis`` de Python. Este objeto no tiene métodos. Debe tratarse "
"como cualquier otro objeto con respecto a los recuentos de referencia. Como :"
"c:data:`Py_None` es un objeto singleton."

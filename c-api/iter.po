# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2021-08-16 13:04+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../Doc/c-api/iter.rst:6
msgid "Iterator Protocol"
msgstr "Protocolo iterador"

#: ../Doc/c-api/iter.rst:8
msgid "There are two functions specifically for working with iterators."
msgstr "Hay dos funciones específicas para trabajar con iteradores."

#: ../Doc/c-api/iter.rst:12
#, fuzzy
msgid ""
"Return non-zero if the object *o* can be safely passed to :c:func:"
"`PyIter_Next`, and ``0`` otherwise.  This function always succeeds."
msgstr ""
"Retorna un valor distinto de cero si el objeto *o* admite el protocolo de "
"iterador y ``0`` en caso contrario. Esta función siempre tiene éxito."

#: ../Doc/c-api/iter.rst:17
#, fuzzy
msgid ""
"Return non-zero if the object *o* provides the :class:`AsyncIterator` "
"protocol, and ``0`` otherwise.  This function always succeeds."
msgstr ""
"Retorna un valor distinto de cero si el objeto 'obj' proporciona protocolos :"
"class:`AsyncIterator` y ``0`` en caso contrario. Esta función siempre tiene "
"éxito."

#: ../Doc/c-api/iter.rst:24
#, fuzzy
msgid ""
"Return the next value from the iterator *o*.  The object must be an iterator "
"according to :c:func:`PyIter_Check` (it is up to the caller to check this). "
"If there are no remaining values, returns ``NULL`` with no exception set. If "
"an error occurs while retrieving the item, returns ``NULL`` and passes along "
"the exception."
msgstr ""
"Retorna el siguiente valor de la iteración *o*. El objeto debe ser un "
"iterador (depende de quién llama comprobar esto). Si no quedan valores "
"restantes, retorna ``NULL`` sin establecer ninguna excepción. Si se produce "
"un error al recuperar el elemento, retorna ``NULL`` y pasa la excepción."

#: ../Doc/c-api/iter.rst:30
msgid ""
"To write a loop which iterates over an iterator, the C code should look "
"something like this::"
msgstr ""
"Para escribir un bucle que itera sobre un iterador, el código en C debería "
"verse así::"

#: ../Doc/c-api/iter.rst:59
msgid ""
"The enum value used to represent different results of :c:func:`PyIter_Send`."
msgstr ""
"El valor de enumeración utilizado para representar diferentes resultados de :"
"c:func:`PyIter_Send`."

#: ../Doc/c-api/iter.rst:66
msgid "Sends the *arg* value into the iterator *iter*. Returns:"
msgstr "Envía el valor *arg* al iterador *iter*. Retorna:"

#: ../Doc/c-api/iter.rst:68
msgid ""
"``PYGEN_RETURN`` if iterator returns. Return value is returned via *presult*."
msgstr ""
"``PYGEN_RETURN`` si el iterador regresa. El valor de retorno se retorna a "
"través de *presult*."

#: ../Doc/c-api/iter.rst:69
msgid ""
"``PYGEN_NEXT`` if iterator yields. Yielded value is returned via *presult*."
msgstr ""
"``PYGEN_NEXT`` si el iterador cede. El valor cedido se retorna a través de "
"*presult*."

#: ../Doc/c-api/iter.rst:70
msgid ""
"``PYGEN_ERROR`` if iterator has raised and exception. *presult* is set to "
"``NULL``."
msgstr ""
"``PYGEN_ERROR`` si el iterador ha lanzado una excepción. *presult* se "
"establece en ``NULL``."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-05-18 15:35+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/c-api/number.rst:6
msgid "Number Protocol"
msgstr "Protocolo de números"

#: ../Doc/c-api/number.rst:11
msgid ""
"Returns ``1`` if the object *o* provides numeric protocols, and false "
"otherwise. This function always succeeds."
msgstr ""
"Retorna ``1`` si el objeto *o* proporciona protocolos numéricos, y falso en "
"caso contrario. Esta función siempre tiene éxito."

#: ../Doc/c-api/number.rst:14
msgid "Returns ``1`` if *o* is an index integer."
msgstr "Retorna ``1`` si *o* es un índice entero."

#: ../Doc/c-api/number.rst:20
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  This is "
"the equivalent of the Python expression ``o1 + o2``."
msgstr ""
"Retorna el resultado de agregar *o1* y *o2*, o ``NULL`` en caso de falla. "
"Este es el equivalente de la expresión de Python ``o1 + o2``."

#: ../Doc/c-api/number.rst:26
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 - o2``."
msgstr ""
"Retorna el resultado de restar *o2* de *o1*, o ``NULL`` en caso de falla. "
"Este es el equivalente de la expresión de Python ``o1 - o2``."

#: ../Doc/c-api/number.rst:32
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 * o2``."
msgstr ""
"Retorna el resultado de multiplicar *o1* y *o2*, o ``NULL`` en caso de "
"error. Este es el equivalente de la expresión de Python ``o1 * o2``."

#: ../Doc/c-api/number.rst:38
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 @ o2``."
msgstr ""
"Retorna el resultado de la multiplicación de matrices en *o1* y *o2*, o "
"``NULL`` en caso de falla. Este es el equivalente de la expresión de Python "
"``o1 @ o2``."

#: ../Doc/c-api/number.rst:46
msgid ""
"Return the floor of *o1* divided by *o2*, or ``NULL`` on failure.  This is "
"equivalent to the \"classic\" division of integers."
msgstr ""
"Retorna el piso (*floor*) de *o1* dividido por *o2*, o ``NULL`` en caso de "
"falla. Esto es equivalente a la división \"clásica\" de enteros."

#: ../Doc/c-api/number.rst:52
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided "
"by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating "
"point value when passed two integers."
msgstr ""
"Retorna una aproximación razonable para el valor matemático de *o1* dividido "
"por *o2* o ``NULL`` en caso de falla. El valor de retorno es \"aproximado\" "
"porque los números binarios de punto flotante son aproximados; No es posible "
"representar todos los números reales en la base dos. Esta función puede "
"retornar un valor de punto flotante cuando se pasan dos enteros."

#: ../Doc/c-api/number.rst:61
#, python-format
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``o1 % o2``."
msgstr ""
"Retorna el resto de dividir *o1* entre *o2* o ``NULL`` en caso de error. "
"Este es el equivalente de la expresión de Python ``o1% o2``."

#: ../Doc/c-api/number.rst:69
msgid ""
"See the built-in function :func:`divmod`. Returns ``NULL`` on failure.  This "
"is the equivalent of the Python expression ``divmod(o1, o2)``."
msgstr ""
"Vea la función incorporada :func:`divmod`. Retorna ``NULL`` en caso de "
"falla. Este es el equivalente de la expresión de Python ``divmod (o1, o2)``."

#: ../Doc/c-api/number.rst:77
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  This is "
"the equivalent of the Python expression ``pow(o1, o2, o3)``, where *o3* is "
"optional. If *o3* is to be ignored, pass :c:data:`Py_None` in its place "
"(passing ``NULL`` for *o3* would cause an illegal memory access)."
msgstr ""
"Consulte la función incorporada :func:`pow`. Retorna ``NULL`` en caso de "
"falla. Este es el equivalente de la expresión de Python ``pow(o1, o2, o3)``, "
"donde *o3* es opcional. Si se ignora *o3*, pase :c:data:`Py_None` en su "
"lugar (pasar ``NULL`` por *o3* provocaría un acceso ilegal a la memoria)."

#: ../Doc/c-api/number.rst:85
msgid ""
"Returns the negation of *o* on success, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``-o``."
msgstr ""
"Retorna la negación de *o* en caso de éxito o ``NULL`` en caso de error. "
"Este es el equivalente de la expresión de Python ``-o``."

#: ../Doc/c-api/number.rst:91
msgid ""
"Returns *o* on success, or ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``+o``."
msgstr ""
"Retorna *o* en caso de éxito o ``NULL`` en caso de error. Este es el "
"equivalente de la expresión de Python ``+o``."

#: ../Doc/c-api/number.rst:99
msgid ""
"Returns the absolute value of *o*, or ``NULL`` on failure.  This is the "
"equivalent of the Python expression ``abs(o)``."
msgstr ""
"Retorna el valor absoluto de *o* o ``NULL`` en caso de error. Este es el "
"equivalente de la expresión de Python ``abs(o)``."

#: ../Doc/c-api/number.rst:105
msgid ""
"Returns the bitwise negation of *o* on success, or ``NULL`` on failure.  "
"This is the equivalent of the Python expression ``~o``."
msgstr ""
"Retorna la negación bit a bit de *o* en caso de éxito o ``NULL`` en caso de "
"error. Este es el equivalente de la expresión de Python ``~o``."

#: ../Doc/c-api/number.rst:111
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 << o2``."
msgstr ""
"Retorna el resultado del desplazamiento a la izquierda *o1* por *o2* en caso "
"de éxito o ``NULL`` en caso de error. Este es el equivalente de la expresión "
"de Python ``o1 << o2``."

#: ../Doc/c-api/number.rst:117
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``o1 >> o2``."
msgstr ""
"Retorna el resultado del desplazamiento a la derecha *o1* por *o2* en caso "
"de éxito o ``NULL`` en caso de error. Este es el equivalente de la expresión "
"de Python ``o1 >> o2``."

#: ../Doc/c-api/number.rst:123
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 & o2``."
msgstr ""
"Retorna el \"bit a bit y\" (*bitwise and*) de *o1* y *o2* en caso de éxito y "
"``NULL`` en caso de error. Este es el equivalente de la expresión de Python "
"``o1 & o2``."

#: ../Doc/c-api/number.rst:129
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL`` "
"on failure.  This is the equivalent of the Python expression ``o1 ^ o2``."
msgstr ""
"Retorna el \"bit a bit o exclusivo\" (*bitwise exclusive or*) de *o1* por "
"*o2* en caso de éxito, o ``NULL`` en caso de error. Este es el equivalente "
"de la expresión de Python ``o1 ^ o2``."

#: ../Doc/c-api/number.rst:135
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 | o2``."
msgstr ""
"Retorna el \"bit a bit o\" (*bitwise or*) de *o1* y *o2* en caso de éxito, o "
"``NULL`` en caso de error. Este es el equivalente de la expresión de Python "
"``o1 | o2``."

#: ../Doc/c-api/number.rst:141
msgid ""
"Returns the result of adding *o1* and *o2*, or ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 += o2``."
msgstr ""
"Retorna el resultado de agregar *o1* y *o2*, o ``NULL`` en caso de falla. La "
"operación se realiza en su lugar (*in-place*) cuando *o1* lo admite. Este es "
"el equivalente de la declaración de Python ``o1 += o2``."

#: ../Doc/c-api/number.rst:148
msgid ""
"Returns the result of subtracting *o2* from *o1*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 -= o2``."
msgstr ""
"Retorna el resultado de restar *o2* de *o1*, o ``NULL`` en caso de falla. La "
"operación se realiza en su lugar (*in-place*) cuando *o1* lo admite. Este es "
"el equivalente de la declaración de Python ``o1 -= o2``."

#: ../Doc/c-api/number.rst:155
msgid ""
"Returns the result of multiplying *o1* and *o2*, or ``NULL`` on failure.  "
"The operation is done *in-place* when *o1* supports it.  This is the "
"equivalent of the Python statement ``o1 *= o2``."
msgstr ""
"Retorna el resultado de multiplicar *o1* y *o2*, o ``NULL`` en caso de "
"error. La operación se realiza en su lugar (*in-place*) cuando *o1* lo "
"admite. Este es el equivalente de la declaración de Python ``o1 *= o2``."

#: ../Doc/c-api/number.rst:162
msgid ""
"Returns the result of matrix multiplication on *o1* and *o2*, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 @= o2``."
msgstr ""
"Retorna el resultado de la multiplicación de matrices en *o1* y *o2*, o "
"``NULL`` en caso de falla. La operación se realiza en su lugar (*in-place*) "
"cuando *o1* lo admite. Este es el equivalente de la declaración de Python "
"``o1 @= o2``."

#: ../Doc/c-api/number.rst:171
msgid ""
"Returns the mathematical floor of dividing *o1* by *o2*, or ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 //= o2``."
msgstr ""
"Retorna el piso matemático de dividir *o1* por *o2*, o ``NULL`` en caso de "
"falla. La operación se realiza en su lugar (*in-place*) cuando *o1* lo "
"admite. Este es el equivalente de la declaración de Python ``o1 //= o2``."

#: ../Doc/c-api/number.rst:178
msgid ""
"Return a reasonable approximation for the mathematical value of *o1* divided "
"by *o2*, or ``NULL`` on failure.  The return value is \"approximate\" "
"because binary floating point numbers are approximate; it is not possible to "
"represent all real numbers in base two.  This function can return a floating "
"point value when passed two integers.  The operation is done *in-place* when "
"*o1* supports it."
msgstr ""
"Retorna una aproximación razonable para el valor matemático de *o1* dividido "
"por *o2* o ``NULL`` en caso de falla. El valor de retorno es \"aproximado\" "
"porque los números binarios de coma flotante son aproximados; No es posible "
"representar todos los números reales en la base dos. Esta función puede "
"retornar un valor de punto flotante cuando se pasan dos enteros. La "
"operación se realiza en su lugar (*in-place*) cuando *o1* lo admite."

#: ../Doc/c-api/number.rst:187
msgid ""
"Returns the remainder of dividing *o1* by *o2*, or ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 %= o2``."
msgstr ""
"Retorna el resto de dividir *o1* entre *o2* o ``NULL`` en caso de error. La "
"operación se realiza en su lugar (*in-place*) cuando *o1* lo admite. Este es "
"el equivalente de la declaración de Python ``o1%= o2``."

#: ../Doc/c-api/number.rst:196
msgid ""
"See the built-in function :func:`pow`. Returns ``NULL`` on failure.  The "
"operation is done *in-place* when *o1* supports it.  This is the equivalent "
"of the Python statement ``o1 **= o2`` when o3 is :c:data:`Py_None`, or an in-"
"place variant of ``pow(o1, o2, o3)`` otherwise. If *o3* is to be ignored, "
"pass :c:data:`Py_None` in its place (passing ``NULL`` for *o3* would cause "
"an illegal memory access)."
msgstr ""
"Consulte la función incorporada :func:`pow`. Retorna ``NULL`` en caso de "
"falla. La operación se realiza en su lugar (*in-place*) cuando *o1* lo "
"admite. Este es el equivalente de la declaración de Python ``o1 **= o2`` "
"cuando *o3* es :c:data:`Py_None`, o una variante en su lugar (*in-place*) de "
"``pow (o1, o2, o3)`` de lo contrario. Si se ignora *o3*, pase :c:data:"
"`Py_None` en su lugar (pasar ``NULL`` para *o3* provocaría un acceso ilegal "
"a la memoria)."

#: ../Doc/c-api/number.rst:205
msgid ""
"Returns the result of left shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 <<= o2``."
msgstr ""
"Retorna el resultado del desplazamiento a la izquierda *o1* por *o2* en caso "
"de éxito o ``NULL`` en caso de error. La operación se realiza en su sitio "
"(*in-place*) cuando *o1* lo admite. Este es el equivalente de la declaración "
"de Python ``o1 <<= o2``."

#: ../Doc/c-api/number.rst:212
msgid ""
"Returns the result of right shifting *o1* by *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 >>= o2``."
msgstr ""
"Retorna el resultado del desplazamiento a la derecha *o1* por *o2* en caso "
"de éxito o ``NULL`` en caso de error. La operación se realiza en su lugar "
"(*in-place*) cuando *o1* lo admite. Este es el equivalente de la declaración "
"de Python ``o1 >>= o2``."

#: ../Doc/c-api/number.rst:219
msgid ""
"Returns the \"bitwise and\" of *o1* and *o2* on success and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 &= o2``."
msgstr ""
"Retorna el \"bit a bit y\" (*bitwise and*) de *o1* y *o2* en caso de éxito y "
"``NULL`` en caso de error. La operación se realiza en su lugar (*in-place*) "
"cuando *o1* lo admite. Este es el equivalente de la declaración de Python "
"``o1 &= o2``."

#: ../Doc/c-api/number.rst:226
msgid ""
"Returns the \"bitwise exclusive or\" of *o1* by *o2* on success, or ``NULL`` "
"on failure.  The operation is done *in-place* when *o1* supports it.  This "
"is the equivalent of the Python statement ``o1 ^= o2``."
msgstr ""
"Retorna el \"bit a bit o exclusivo\" (*bitwise exclusive or*) de *o1* por "
"*o2* en caso de éxito, o ``NULL`` en caso de error. La operación se realiza "
"en su lugar (*in-place*) cuando *o1* lo admite. Este es el equivalente de la "
"declaración de Python ``o1 ^= o2``."

#: ../Doc/c-api/number.rst:233
msgid ""
"Returns the \"bitwise or\" of *o1* and *o2* on success, or ``NULL`` on "
"failure.  The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python statement ``o1 |= o2``."
msgstr ""
"Retorna el \"bit a bit o\" (*bitwise or*) de *o1* y *o2* en caso de éxito, o "
"``NULL`` en caso de error. La operación se realiza en su lugar *in-place* "
"cuando *o1* lo admite. Este es el equivalente de la declaración de Python "
"``o1 |= o2``."

#: ../Doc/c-api/number.rst:242
msgid ""
"Returns the *o* converted to an integer object on success, or ``NULL`` on "
"failure.  This is the equivalent of the Python expression ``int(o)``."
msgstr ""
"Retorna el *o* convertido a un objeto entero en caso de éxito, o ``NULL`` en "
"caso de error. Este es el equivalente de la expresión de Python ``int(o)``."

#: ../Doc/c-api/number.rst:250
msgid ""
"Returns the *o* converted to a float object on success, or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``float(o)``."
msgstr ""
"Retorna el *o* convertido a un objeto flotante en caso de éxito o ``NULL`` "
"en caso de error. Este es el equivalente de la expresión de Python "
"``float(o)``."

#: ../Doc/c-api/number.rst:256
msgid ""
"Returns the *o* converted to a Python int on success or ``NULL`` with a :exc:"
"`TypeError` exception raised on failure."
msgstr ""
"Retorna el *o* convertido aun entero de Python (*int*) en caso de éxito o "
"``NULL`` con una excepción :exc:`TypeError` generada en caso de error."

#: ../Doc/c-api/number.rst:262
msgid ""
"Returns the integer *n* converted to base *base* as a string.  The *base* "
"argument must be one of 2, 8, 10, or 16.  For base 2, 8, or 16, the returned "
"string is prefixed with a base marker of ``'0b'``, ``'0o'``, or ``'0x'``, "
"respectively.  If *n* is not a Python int, it is converted with :c:func:"
"`PyNumber_Index` first."
msgstr ""
"Retorna el entero *n* convertido a base *base* como una cadena de "
"caracteres. El argumento *base* debe ser uno de 2, 8, 10 o 16. Para la base "
"2, 8 o 16, la cadena retornada está prefijada con un marcador base de "
"``'0b'``', ``'0o'`` o ``'0x'``, respectivamente. Si *n* no es un entero "
"(*int*) Python, primero se convierte con :c:func:`PyNumber_Index`."

#: ../Doc/c-api/number.rst:271
msgid ""
"Returns *o* converted to a Py_ssize_t value if *o* can be interpreted as an "
"integer.  If the call fails, an exception is raised and ``-1`` is returned."
msgstr ""
"Retorna *o* convertido a un valor ``Py_ssize_t`` si *o* puede interpretarse "
"como un entero. Si la llamada falla, se genera una excepción y se retorna "
"``-1``."

#: ../Doc/c-api/number.rst:274
msgid ""
"If *o* can be converted to a Python int but the attempt to convert to a "
"Py_ssize_t value would raise an :exc:`OverflowError`, then the *exc* "
"argument is the type of exception that will be raised (usually :exc:"
"`IndexError` or :exc:`OverflowError`).  If *exc* is ``NULL``, then the "
"exception is cleared and the value is clipped to ``PY_SSIZE_T_MIN`` for a "
"negative integer or ``PY_SSIZE_T_MAX`` for a positive integer."
msgstr ""
"Si *o* se puede convertir a un entero Python (*int*) pero el intento de "
"convertir a un valor ``Py_ssize_t`` generaría un :exc:`OverflowError`, "
"entonces el argumento *exc* es el tipo de excepción que se generará "
"(generalmente :exc:`IndexError` o :exc:`OverflowError`). Si *exc* es "
"``NULL``, la excepción se borra y el valor se recorta a ``PY_SSIZE_T_MIN`` "
"para un entero negativo o ``PY_SSIZE_T_MAX`` para un entero positivo."

#: ../Doc/c-api/number.rst:284
msgid ""
"Returns ``1`` if *o* is an index integer (has the nb_index slot of  the "
"tp_as_number structure filled in), and ``0`` otherwise. This function always "
"succeeds."
msgstr ""
"Retorna ``1`` si *o* es un entero índice (tiene el espacio ``nb_index`` de "
"la estructura ``tp_as_number`` rellenado) y ``0`` en caso contrario. Esta "
"función siempre tiene éxito."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-19 11:16+0100\n"
"PO-Revision-Date: 2020-06-07 22:35+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/c-api/object.rst:6
msgid "Object Protocol"
msgstr "Protocolo de objeto"

#: ../Doc/c-api/object.rst:11
msgid ""
"The ``NotImplemented`` singleton, used to signal that an operation is not "
"implemented for the given type combination."
msgstr ""
"El singleton ``NotImplemented``, se usa para indicar que una operación no "
"está implementada para la combinación de tipos dada."

#: ../Doc/c-api/object.rst:17
msgid ""
"Properly handle returning :c:data:`Py_NotImplemented` from within a C "
"function (that is, increment the reference count of NotImplemented and "
"return it)."
msgstr ""
"Maneja adecuadamente el retorno :c:data:`Py_NotImplemented` desde una "
"función C (es decir, incremente el recuento de referencias de "
"*NotImplemented* y lo retorna)."

#: ../Doc/c-api/object.rst:24
msgid ""
"Print an object *o*, on file *fp*.  Returns ``-1`` on error.  The flags "
"argument is used to enable certain printing options.  The only option "
"currently supported is :const:`Py_PRINT_RAW`; if given, the :func:`str` of "
"the object is written instead of the :func:`repr`."
msgstr ""
"Imprime un objeto *o*, en el archivo *fp*. Retorna ``-1`` en caso de error. "
"El argumento de las banderas se usa para habilitar ciertas opciones de "
"impresión. La única opción actualmente admitida es :const:`Py_PRINT_RAW`; si "
"se proporciona, se escribe :func:`str` del objeto en lugar de :func:`repr`."

#: ../Doc/c-api/object.rst:32 ../Doc/c-api/object.rst:43
msgid ""
"Returns ``1`` if *o* has the attribute *attr_name*, and ``0`` otherwise.  "
"This is equivalent to the Python expression ``hasattr(o, attr_name)``.  This "
"function always succeeds."
msgstr ""
"Retorna ``1`` si *o* tiene el atributo *attr_name*, y ``0`` en caso "
"contrario. Esto es equivalente a la expresión de Python ``hasattr(o, "
"attr_name)``. Esta función siempre finaliza exitosamente."

#: ../Doc/c-api/object.rst:36
msgid ""
"Note that exceptions which occur while calling :meth:`__getattr__` and :meth:"
"`__getattribute__` methods will get suppressed. To get error reporting use :"
"c:func:`PyObject_GetAttr()` instead."
msgstr ""
"Tenga en cuenta que las excepciones que se producen al llamar a los métodos "
"a :meth:`__getattr__` y :meth:`__getattribute__` se suprimirán. Para obtener "
"informe de errores, utilice :c:func:`PyObject_GetAttr()` alternativamente."

#: ../Doc/c-api/object.rst:47
msgid ""
"Note that exceptions which occur while calling :meth:`__getattr__` and :meth:"
"`__getattribute__` methods and creating a temporary string object will get "
"suppressed. To get error reporting use :c:func:`PyObject_GetAttrString()` "
"instead."
msgstr ""
"Tenga en cuenta que las excepciones que se producen al llamar a :meth:"
"`__getattr__` y :meth:`__getattribute__` y al crear un objeto de cadena "
"temporal se suprimirán. Para obtener informes de errores, utilice :c:func:"
"`PyObject_GetAttrString()` en su lugar."

#: ../Doc/c-api/object.rst:55
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or ``NULL`` on failure.  This is the equivalent "
"of the Python expression ``o.attr_name``."
msgstr ""
"Recupera un atributo llamado *attr_name* del objeto *o*. Retorna el valor "
"del atributo en caso de éxito o ``NULL`` en caso de error. Este es el "
"equivalente de la expresión de Python ``o.attr_name``."

#: ../Doc/c-api/object.rst:62
msgid ""
"Retrieve an attribute named *attr_name* from object *o*. Returns the "
"attribute value on success, or ``NULL`` on failure. This is the equivalent "
"of the Python expression ``o.attr_name``."
msgstr ""
"Recupera un atributo llamado *attr_name* del objeto *o*. Retorna el valor "
"del atributo en caso de éxito o ``NULL`` en caso de error. Este es el "
"equivalente de la expresión de Python ``o.attr_name``."

#: ../Doc/c-api/object.rst:69
msgid ""
"Generic attribute getter function that is meant to be put into a type "
"object's ``tp_getattro`` slot.  It looks for a descriptor in the dictionary "
"of classes in the object's MRO as well as an attribute in the object's :attr:"
"`~object.__dict__` (if present).  As outlined in :ref:`descriptors`, data "
"descriptors take preference over instance attributes, while non-data "
"descriptors don't.  Otherwise, an :exc:`AttributeError` is raised."
msgstr ""
"Función *getter* de atributo genérico que debe colocarse en la ranura "
"``tp_getattro`` de un objeto tipo. Busca un descriptor en el diccionario de "
"clases en el MRO del objeto, así como un atributo en el objeto :attr:"
"`~object.__ dict__` (si está presente). Como se describe en :ref:"
"`descriptors`, los descriptores de datos tienen preferencia sobre los "
"atributos de instancia, mientras que los descriptores que no son de datos no "
"lo hacen. De lo contrario, se genera un :exc:`AttributeError`."

#: ../Doc/c-api/object.rst:79 ../Doc/c-api/object.rst:90
msgid ""
"Set the value of the attribute named *attr_name*, for object *o*, to the "
"value *v*. Raise an exception and return ``-1`` on failure; return ``0`` on "
"success.  This is the equivalent of the Python statement ``o.attr_name = v``."
msgstr ""
"Establece el valor del atributo llamado *attr_name*, para el objeto *o*, en "
"el valor *v*. Genera una excepción y retorna ``-1`` en caso de falla; "
"retorna ``0`` en caso de éxito. Este es el equivalente de la declaración de "
"Python ``o.attr_name = v``."

#: ../Doc/c-api/object.rst:84
msgid ""
"If *v* is ``NULL``, the attribute is deleted, however this feature is "
"deprecated in favour of using :c:func:`PyObject_DelAttr`."
msgstr ""
"Si *v* es ``NULL``, el atributo se elimina, sin embargo, esta característica "
"está obsoleta a favor de usar :c:func:`PyObject_DelAttr`."

#: ../Doc/c-api/object.rst:95
msgid ""
"If *v* is ``NULL``, the attribute is deleted, however this feature is "
"deprecated in favour of using :c:func:`PyObject_DelAttrString`."
msgstr ""
"Si *v* es ``NULL``, el atributo se elimina, sin embargo, esta característica "
"está obsoleta a favor de usar :c:func:`PyObject_DelAttrString`."

#: ../Doc/c-api/object.rst:101
msgid ""
"Generic attribute setter and deleter function that is meant to be put into a "
"type object's :c:member:`~PyTypeObject.tp_setattro` slot.  It looks for a "
"data descriptor in the dictionary of classes in the object's MRO, and if "
"found it takes preference over setting or deleting the attribute in the "
"instance dictionary. Otherwise, the attribute is set or deleted in the "
"object's :attr:`~object.__dict__` (if present). On success, ``0`` is "
"returned, otherwise an :exc:`AttributeError` is raised and ``-1`` is "
"returned."
msgstr ""
"Establecimiento de atributo genérico y función de eliminación que está "
"destinada a colocarse en la ranura de un objeto tipo :c:member:"
"`~PyTypeObject.tp_setattro`. Busca un descriptor de datos en el diccionario "
"de clases en el MRO del objeto y, si se encuentra, tiene preferencia sobre "
"la configuración o eliminación del atributo en el diccionario de instancias. "
"De lo contrario, el atributo se establece o elimina en el objeto :attr:"
"`~object.__dict__` (si está presente). En caso de éxito, se retorna ``0``; "
"de lo contrario, se genera un :exc:`AttributeError` y se retorna ``-1``."

#: ../Doc/c-api/object.rst:113 ../Doc/c-api/object.rst:119
msgid ""
"Delete attribute named *attr_name*, for object *o*. Returns ``-1`` on "
"failure. This is the equivalent of the Python statement ``del o.attr_name``."
msgstr ""
"Elimina el atributo llamado *attr_name*, para el objeto *o*. Retorna ``-1`` "
"en caso de falla. Este es el equivalente de la declaración de Python ``del o."
"attr_name``."

#: ../Doc/c-api/object.rst:125
msgid ""
"A generic implementation for the getter of a ``__dict__`` descriptor. It "
"creates the dictionary if necessary."
msgstr ""
"Una implementación genérica para obtener un descriptor ``__dict__``. Crea el "
"diccionario si es necesario."

#: ../Doc/c-api/object.rst:133
msgid ""
"A generic implementation for the setter of a ``__dict__`` descriptor. This "
"implementation does not allow the dictionary to be deleted."
msgstr ""
"Una implementación genérica para el creador de un descriptor ``__dict__``. "
"Esta implementación no permite que se elimine el diccionario."

#: ../Doc/c-api/object.rst:141
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``, ``<=``, "
"``==``, ``!=``, ``>``, or ``>=`` respectively. This is the equivalent of the "
"Python expression ``o1 op o2``, where ``op`` is the operator corresponding "
"to *opid*. Returns the value of the comparison on success, or ``NULL`` on "
"failure."
msgstr ""
"Compara los valores de *o1* y *o2* utilizando la operación especificada por "
"*opid*, que debe ser uno de los siguientes :const:`Py_LT`, :const:`Py_LE`, :"
"const:`Py_EQ`, :const:`Py_NE`, :const:`Py_GT`, o :const:`Py_GE`, "
"correspondiente a ``<``, ``<=``, ``==``, ``!=``, ``>`` o ``>=`` "
"respectivamente. Este es el equivalente de la expresión de Python ``o1 op "
"o2``, donde ``op`` es el operador correspondiente a *opid*. Retorna el valor "
"de la comparación en caso de éxito o ``NULL`` en caso de error."

#: ../Doc/c-api/object.rst:151
msgid ""
"Compare the values of *o1* and *o2* using the operation specified by *opid*, "
"which must be one of :const:`Py_LT`, :const:`Py_LE`, :const:`Py_EQ`, :const:"
"`Py_NE`, :const:`Py_GT`, or :const:`Py_GE`, corresponding to ``<``, ``<=``, "
"``==``, ``!=``, ``>``, or ``>=`` respectively. Returns ``-1`` on error, "
"``0`` if the result is false, ``1`` otherwise. This is the equivalent of the "
"Python expression ``o1 op o2``, where ``op`` is the operator corresponding "
"to *opid*."
msgstr ""
"Compara los valores de *o1* y *o2* utilizando la operación especificada por "
"*opid*, que debe ser uno de los siguientes :const:`Py_LT`, :const:`Py_LE`, :"
"const:`Py_EQ`, :const:`Py_NE`, :const:`Py_GT`, o :const:`Py_GE`, "
"correspondiente a ``<``, ``<=``, ``==``, ``!=``, ``>`` o ``>=`` "
"respectivamente. Retorna ``-1`` en caso de error, ``0`` si el resultado es "
"falso, ``1`` en caso contrario. Este es el equivalente de la expresión de "
"Python ``o1 op o2``, donde ``op`` es el operador correspondiente a *opid*."

#: ../Doc/c-api/object.rst:160
msgid ""
"If *o1* and *o2* are the same object, :c:func:`PyObject_RichCompareBool` "
"will always return ``1`` for :const:`Py_EQ` and ``0`` for :const:`Py_NE`."
msgstr ""
"Si *o1* y *o2* son el mismo objeto, :c:func:`PyObject_RichCompareBool` "
"siempre retornará ``1`` para :const:`Py_EQ` y ``0`` para :const:`Py_NE`."

#: ../Doc/c-api/object.rst:167
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``repr(o)``.  Called by the :func:`repr` built-in "
"function."
msgstr ""
"Calcula una representación de cadena de caracteres del objeto *o*. Retorna "
"la representación de cadena de caracteres en caso de éxito, ``NULL`` en caso "
"de error. Este es el equivalente de la expresión de Python ``repr(o)``. "
"Llamado por la función incorporada :func:`repr`."

#: ../Doc/c-api/object.rst:171 ../Doc/c-api/object.rst:195
msgid ""
"This function now includes a debug assertion to help ensure that it does not "
"silently discard an active exception."
msgstr ""
"Esta función ahora incluye una afirmación de depuración para ayudar a "
"garantizar que no descarte silenciosamente una excepción activa."

#: ../Doc/c-api/object.rst:179
msgid ""
"As :c:func:`PyObject_Repr`, compute a string representation of object *o*, "
"but escape the non-ASCII characters in the string returned by :c:func:"
"`PyObject_Repr` with ``\\x``, ``\\u`` or ``\\U`` escapes.  This generates a "
"string similar to that returned by :c:func:`PyObject_Repr` in Python 2. "
"Called by the :func:`ascii` built-in function."
msgstr ""
"Como :c:func:`PyObject_Repr`, calcula una representación de cadena de "
"caracteres del objeto *o*, pero escapa los caracteres no ASCII en la cadena "
"de caracteres retornada por :c:func:`PyObject_Repr` con ``\\x``, ``\\u`` o ``"
"\\U`` escapa. Esto genera una cadena de caracteres similar a la que retorna :"
"c:func:`PyObject_Repr` en Python 2. Llamado por la función incorporada :func:"
"`ascii`."

#: ../Doc/c-api/object.rst:190
msgid ""
"Compute a string representation of object *o*.  Returns the string "
"representation on success, ``NULL`` on failure.  This is the equivalent of "
"the Python expression ``str(o)``.  Called by the :func:`str` built-in "
"function and, therefore, by the :func:`print` function."
msgstr ""
"Calcula una representación de cadena de caracteres del objeto *o*. Retorna "
"la representación de cadena de caracteres en caso de éxito, ``NULL`` en caso "
"de error. Llamado por la función incorporada :func:`str` y, por lo tanto, "
"por la función :func:`print`."

#: ../Doc/c-api/object.rst:204
msgid ""
"Compute a bytes representation of object *o*.  ``NULL`` is returned on "
"failure and a bytes object on success.  This is equivalent to the Python "
"expression ``bytes(o)``, when *o* is not an integer.  Unlike ``bytes(o)``, a "
"TypeError is raised when *o* is an integer instead of a zero-initialized "
"bytes object."
msgstr ""
"Calcula una representación de bytes del objeto *o*. ``NULL`` se retorna en "
"caso de error y un objeto de bytes en caso de éxito. Esto es equivalente a "
"la expresión de Python ``bytes(o)``, cuando *o* no es un número entero. A "
"diferencia de ``bytes(o)``, se lanza un TypeError cuando *o* es un entero en "
"lugar de un objeto de bytes con inicialización cero."

#: ../Doc/c-api/object.rst:213
msgid ""
"Return ``1`` if the class *derived* is identical to or derived from the "
"class *cls*, otherwise return ``0``.  In case of an error, return ``-1``."
msgstr ""
"Retorna ``1`` si la clase *derived* es idéntica o derivada de la clase "
"*cls*; de lo contrario, retorna ``0``. En caso de error, retorna ``-1``."

#: ../Doc/c-api/object.rst:216 ../Doc/c-api/object.rst:235
msgid ""
"If *cls* is a tuple, the check will be done against every entry in *cls*. "
"The result will be ``1`` when at least one of the checks returns ``1``, "
"otherwise it will be ``0``."
msgstr ""
"Si *cls* es una tupla, la verificación se realizará con cada entrada en "
"*cls*. El resultado será ``1`` cuando al menos una de las verificaciones "
"retorne ``1``, de lo contrario será ``0``."

#: ../Doc/c-api/object.rst:220
msgid ""
"If *cls* has a :meth:`~class.__subclasscheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*derived* is a subclass of *cls* if it is a direct or indirect subclass, i."
"e. contained in ``cls.__mro__``."
msgstr ""
"Si *cls* tiene un método :meth:`~class.__subclasscheck__`, se llamará para "
"determinar el estado de la subclase como se describe en :pep:`3119`. De lo "
"contrario, *derived* es una subclase de *cls* si es una subclase directa o "
"indirecta, es decir, contenida en ``cls.__ mro__``."

#: ../Doc/c-api/object.rst:225
msgid ""
"Normally only class objects, i.e. instances of :class:`type` or a derived "
"class, are considered classes.  However, objects can override this by having "
"a :attr:`__bases__` attribute (which must be a tuple of base classes)."
msgstr ""
"Normalmente, solo los objetos clase, es decir, las instancias de :class:"
"`type` o una clase derivada, se consideran clases. Sin embargo, los objetos "
"pueden anular esto al tener un atributo :attr:`__bases__` (que debe ser una "
"tupla de clases base)."

#: ../Doc/c-api/object.rst:232
msgid ""
"Return ``1`` if *inst* is an instance of the class *cls* or a subclass of "
"*cls*, or ``0`` if not.  On error, returns ``-1`` and sets an exception."
msgstr ""
"Retorna ``1`` si *inst* es una instancia de la clase *cls* o una subclase de "
"*cls*, o ``0`` si no. En caso de error, retorna ``-1`` y establece una "
"excepción."

#: ../Doc/c-api/object.rst:239
msgid ""
"If *cls* has a :meth:`~class.__instancecheck__` method, it will be called to "
"determine the subclass status as described in :pep:`3119`.  Otherwise, "
"*inst* is an instance of *cls* if its class is a subclass of *cls*."
msgstr ""
"Si *cls* tiene un método :meth:`~class.__instancecheck__`, se llamará para "
"determinar el estado de la subclase como se describe en :pep:`3119`. De lo "
"contrario, *inst* es una instancia de *cls* si su clase es una subclase de "
"*cls*."

#: ../Doc/c-api/object.rst:243
msgid ""
"An instance *inst* can override what is considered its class by having a :"
"attr:`__class__` attribute."
msgstr ""
"Una instancia *inst* puede anular lo que se considera su clase al tener un "
"atributo :attr:`__class__`."

#: ../Doc/c-api/object.rst:246
msgid ""
"An object *cls* can override if it is considered a class, and what its base "
"classes are, by having a :attr:`__bases__` attribute (which must be a tuple "
"of base classes)."
msgstr ""
"Un objeto *cls* puede anular si se considera una clase y cuáles son sus "
"clases base, al tener un atributo :attr:`__bases__` (que debe ser una tupla "
"de clases base)."

#: ../Doc/c-api/object.rst:255
msgid ""
"Compute and return the hash value of an object *o*.  On failure, return "
"``-1``. This is the equivalent of the Python expression ``hash(o)``."
msgstr ""
"Calcula y retorna el valor hash de un objeto *o*. En caso de fallo, retorna "
"``-1``. Este es el equivalente de la expresión de Python ``hash(o)``."

#: ../Doc/c-api/object.rst:258
msgid ""
"The return type is now Py_hash_t.  This is a signed integer the same size as "
"Py_ssize_t."
msgstr ""
"El tipo de retorno ahora es *Py_hash_t*. Este es un entero con signo del "
"mismo tamaño que *Py_ssize_t*."

#: ../Doc/c-api/object.rst:265
msgid ""
"Set a :exc:`TypeError` indicating that ``type(o)`` is not hashable and "
"return ``-1``. This function receives special treatment when stored in a "
"``tp_hash`` slot, allowing a type to explicitly indicate to the interpreter "
"that it is not hashable."
msgstr ""
"Establece un :exc:`TypeError` indicando que ``type(o)`` no es *hashable* y "
"retorna ``-1``. Esta función recibe un tratamiento especial cuando se "
"almacena en una ranura ``tp_hash``, lo que permite que un tipo indique "
"explícitamente al intérprete que no es *hashable*."

#: ../Doc/c-api/object.rst:273
msgid ""
"Returns ``1`` if the object *o* is considered to be true, and ``0`` "
"otherwise. This is equivalent to the Python expression ``not not o``.  On "
"failure, return ``-1``."
msgstr ""
"Retorna ``1`` si el objeto *o* se considera verdadero y ``0`` en caso "
"contrario. Esto es equivalente a la expresión de Python ``not not o``. En "
"caso de error, retorna ``-1``."

#: ../Doc/c-api/object.rst:280
msgid ""
"Returns ``0`` if the object *o* is considered to be true, and ``1`` "
"otherwise. This is equivalent to the Python expression ``not o``.  On "
"failure, return ``-1``."
msgstr ""
"Retorna ``0`` si el objeto *o* se considera verdadero, y ``1`` de lo "
"contrario. Esto es equivalente a la expresión de Python ``not o``. En caso "
"de error, retorna ``-1``."

#: ../Doc/c-api/object.rst:289
#, fuzzy
msgid ""
"When *o* is non-``NULL``, returns a type object corresponding to the object "
"type of object *o*. On failure, raises :exc:`SystemError` and returns "
"``NULL``.  This is equivalent to the Python expression ``type(o)``. This "
"function increments the reference count of the return value. There's really "
"no reason to use this function instead of the common expression ``o-"
">ob_type``, which returns a pointer of type :c:type:`PyTypeObject*`, except "
"when the incremented reference count is needed."
msgstr ""
"Cuando *o* no es ``NULL``, retorna un objeto de tipo correspondiente al tipo "
"de objeto del objeto *o*. En caso de error, genera :exc:`SystemError` y "
"retorna ``NULL``. Esto es equivalente a la expresión de Python ``type(o)``. "
"Esta función incrementa el conteo de referencia del valor de retorno. "
"Realmente no hay ninguna razón para usar esta función en lugar de la "
"expresión común ``o- ob_type``, que retorna un puntero de tipo :c:type:"
"`PyTypeObject\\*`, excepto cuando se necesita el recuento de referencia "
"incrementado."

#: ../Doc/c-api/object.rst:300
msgid ""
"Return true if the object *o* is of type *type* or a subtype of *type*.  "
"Both parameters must be non-``NULL``."
msgstr ""
"Retorna verdadero si el objeto *o* es de tipo *type* o un subtipo de *type*. "
"Ambos parámetros no deben ser ``NULL``."

#: ../Doc/c-api/object.rst:309
msgid ""
"Return the length of object *o*.  If the object *o* provides either the "
"sequence and mapping protocols, the sequence length is returned.  On error, "
"``-1`` is returned.  This is the equivalent to the Python expression "
"``len(o)``."
msgstr ""
"Retorna la longitud del objeto *o*. Si el objeto *o* proporciona los "
"protocolos de secuencia y mapeo, se retorna la longitud de la secuencia. En "
"caso de error, se retorna ``-1``. Este es el equivalente a la expresión de "
"Python ``len(o)``."

#: ../Doc/c-api/object.rst:316
msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`~object.__length_hint__`, and "
"finally return the default value. On error return ``-1``. This is the "
"equivalent to the Python expression ``operator.length_hint(o, default)``."
msgstr ""
"Retorna una longitud estimada para el objeto *o*. Primero intenta retornar "
"su longitud real, luego una estimación usando :meth:`~object."
"__length_hint__`, y finalmente retorna el valor predeterminado. En caso de "
"error, retorna ``-1``. Este es el equivalente a la expresión de Python "
"``operator.length_hint (o, default)``."

#: ../Doc/c-api/object.rst:326
msgid ""
"Return element of *o* corresponding to the object *key* or ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o[key]``."
msgstr ""
"Retorna el elemento de *o* correspondiente a la clave *key* del objeto o "
"``NULL`` en caso de error. Este es el equivalente de la expresión de Python "
"``o[key]``."

#: ../Doc/c-api/object.rst:332
msgid ""
"Map the object *key* to the value *v*.  Raise an exception and return ``-1`` "
"on failure; return ``0`` on success.  This is the equivalent of the Python "
"statement ``o[key] = v``.  This function *does not* steal a reference to *v*."
msgstr ""
"Asigna el objeto *key* al valor *v*. Genera una excepción y retorna ``-1`` "
"en caso de error; retorna ``0`` en caso de éxito. Este es el equivalente de "
"la declaración de Python ``o[key] = v``. Esta función *no* roba una "
"referencia a *v*."

#: ../Doc/c-api/object.rst:340
msgid ""
"Remove the mapping for the object *key* from the object *o*.  Return ``-1`` "
"on failure.  This is equivalent to the Python statement ``del o[key]``."
msgstr ""
"Elimina la asignación para el objeto *key* del objeto *o*. Retorna ``-1`` en "
"caso de falla. Esto es equivalente a la declaración de Python ``del o[key]``."

#: ../Doc/c-api/object.rst:346
msgid ""
"This is equivalent to the Python expression ``dir(o)``, returning a "
"(possibly empty) list of strings appropriate for the object argument, or "
"``NULL`` if there was an error.  If the argument is ``NULL``, this is like "
"the Python ``dir()``, returning the names of the current locals; in this "
"case, if no execution frame is active then ``NULL`` is returned but :c:func:"
"`PyErr_Occurred` will return false."
msgstr ""
"Esto es equivalente a la expresión de Python ``dir(o)``, que retorna una "
"lista (posiblemente vacía) de cadenas de caracteres apropiadas para el "
"argumento del objeto, o ``NULL`` si hubo un error. Si el argumento es "
"``NULL``, es como el Python ``dir()``, que retorna los nombres de los "
"locales actuales; en este caso, si no hay un marco de ejecución activo, se "
"retorna ``NULL`` pero :c:func:`PyErr_Occurred` retornará falso."

#: ../Doc/c-api/object.rst:355
msgid ""
"This is equivalent to the Python expression ``iter(o)``. It returns a new "
"iterator for the object argument, or the object  itself if the object is "
"already an iterator.  Raises :exc:`TypeError` and returns ``NULL`` if the "
"object cannot be iterated."
msgstr ""
"Esto es equivalente a la expresión de Python ``iter(o)``. Retorna un nuevo "
"iterador para el argumento del objeto, o el propio objeto si el objeto ya es "
"un iterador. Lanza :exc:`TypeError` y retorna ``NULL`` si el objeto no puede "
"iterarse."

#~ msgid ""
#~ "Determine if the object *o* is callable.  Return ``1`` if the object is "
#~ "callable and ``0`` otherwise.  This function always succeeds."
#~ msgstr ""
#~ "Determina si el objeto *o* es invocable. Retorna ``1`` si el objeto es "
#~ "invocable y ``0`` de lo contrario. Esta función siempre tiene éxito."

#~ msgid ""
#~ "Call a callable Python object *callable*, with arguments given by the "
#~ "tuple *args*, and named arguments given by the dictionary *kwargs*."
#~ msgstr ""
#~ "Llama un objeto Python invocable *invocable*, con argumentos dados por la "
#~ "tupla *args*, y argumentos con nombre dados por el diccionario *kwargs*."

#~ msgid ""
#~ "*args* must not be ``NULL``, use an empty tuple if no arguments are "
#~ "needed. If no named arguments are needed, *kwargs* can be ``NULL``."
#~ msgstr ""
#~ "*args* no debe ser ``NULL``, use una tupla vacía si no se necesitan "
#~ "argumentos. Si no se necesitan argumentos con nombre, *kwargs* puede ser "
#~ "``NULL``."

#~ msgid ""
#~ "Return the result of the call on success, or raise an exception and "
#~ "return ``NULL`` on failure."
#~ msgstr ""
#~ "Retorna el resultado de la llamada en caso de éxito o genera una "
#~ "excepción y retorna ``NULL`` en caso de error."

#~ msgid ""
#~ "This is the equivalent of the Python expression: ``callable(*args, "
#~ "**kwargs)``."
#~ msgstr ""
#~ "Este es el equivalente de la expresión de Python: ``callable(*args, "
#~ "**kwargs)``."

#~ msgid ""
#~ "Call a callable Python object *callable*, with arguments given by the "
#~ "tuple *args*.  If no arguments are needed, then *args* can be ``NULL``."
#~ msgstr ""
#~ "Llama un objeto Python invocable *invocable*, con argumentos dados por la "
#~ "tupla *args*. Si no se necesitan argumentos, entonces *args* puede ser "
#~ "``NULL``."

#~ msgid ""
#~ "This is the equivalent of the Python expression: ``callable(*args)``."
#~ msgstr ""
#~ "Este es el equivalente de la expresión de Python: ``callable(*args)``."

#~ msgid ""
#~ "Call a callable Python object *callable*, with a variable number of C "
#~ "arguments. The C arguments are described using a :c:func:`Py_BuildValue` "
#~ "style format string.  The format can be ``NULL``, indicating that no "
#~ "arguments are provided."
#~ msgstr ""
#~ "Llama un objeto Python invocable *invocable*, con un número variable de "
#~ "argumentos C. Los argumentos de C se describen utilizando una cadena de "
#~ "caracteres de formato de estilo :c:func:`Py_BuildValue`. El formato puede "
#~ "ser ``NULL``, lo que indica que no se proporcionan argumentos."

#~ msgid ""
#~ "Note that if you only pass :c:type:`PyObject \\*` args, :c:func:"
#~ "`PyObject_CallFunctionObjArgs` is a faster alternative."
#~ msgstr ""
#~ "Tenga en cuenta que si solo pasa argumentos :c:type:`PyObject\\*`, :c:"
#~ "func:`PyObject_CallFunctionObjArgs` es una alternativa más rápida."

#~ msgid "The type of *format* was changed from ``char *``."
#~ msgstr "El tipo de *format* se cambió de ``char *``."

#~ msgid ""
#~ "Call the method named *name* of object *obj* with a variable number of C "
#~ "arguments.  The C arguments are described by a :c:func:`Py_BuildValue` "
#~ "format string that should  produce a tuple."
#~ msgstr ""
#~ "Llama al método llamado *nombre* del objeto *obj* con un número variable "
#~ "de argumentos C. Los argumentos de C se describen mediante una cadena de "
#~ "caracteres de formato :c:func:`Py_BuildValue` que debería producir una "
#~ "tupla."

#~ msgid ""
#~ "The format can be ``NULL``, indicating that no arguments are provided."
#~ msgstr ""
#~ "El formato puede ser ``NULL``, lo que indica que no se proporcionan "
#~ "argumentos."

#~ msgid ""
#~ "This is the equivalent of the Python expression: ``obj.name(arg1, "
#~ "arg2, ...)``."
#~ msgstr ""
#~ "Este es el equivalente de la expresión de Python: ``obj.name(arg1, "
#~ "arg2, ...)``."

#~ msgid ""
#~ "Note that if you only pass :c:type:`PyObject \\*` args, :c:func:"
#~ "`PyObject_CallMethodObjArgs` is a faster alternative."
#~ msgstr ""
#~ "Tenga en cuenta que si solo pasa argumentos :c:type:`PyObject\\*`, :c:"
#~ "func:`PyObject_CallMethodObjArgs` es una alternativa más rápida."

#~ msgid "The types of *name* and *format* were changed from ``char *``."
#~ msgstr "Los tipos de *name* y *format* se cambiaron de ``char *``."

#~ msgid ""
#~ "Call a callable Python object *callable*, with a variable number of :c:"
#~ "type:`PyObject\\*` arguments.  The arguments are provided as a variable "
#~ "number of parameters followed by ``NULL``."
#~ msgstr ""
#~ "Llama un objeto Python invocable *invocable*, con un número variable de "
#~ "argumentos :c:type:`PyObject\\*`. Los argumentos se proporcionan como un "
#~ "número variable de parámetros seguido de ``NULL``."

#~ msgid ""
#~ "This is the equivalent of the Python expression: ``callable(arg1, "
#~ "arg2, ...)``."
#~ msgstr ""
#~ "Este es el equivalente de la expresión de Python: ``callable(arg1, "
#~ "arg2, ...)``."

#~ msgid ""
#~ "Calls a method of the Python object *obj*, where the name of the method "
#~ "is given as a Python string object in *name*.  It is called with a "
#~ "variable number of :c:type:`PyObject\\*` arguments.  The arguments are "
#~ "provided as a variable number of parameters followed by ``NULL``."
#~ msgstr ""
#~ "Llama un método del objeto Python *obj*, donde el nombre del método se da "
#~ "como un objeto de cadena de caracteres Python en *nombre*. Se llama con "
#~ "un número variable de argumentos :c:type:`PyObject\\*`. Los argumentos se "
#~ "proporcionan como un número variable de parámetros seguido de ``NULL``."

#~ msgid ""
#~ "Call a callable Python object *callable*, using :c:data:`vectorcall "
#~ "<PyTypeObject.tp_vectorcall_offset>` if possible."
#~ msgstr ""
#~ "Llama un objeto Python invocable *invocable*, utilizando :c:data:"
#~ "`vectorcall <PyTypeObject.tp_vectorcall_offset>` si es posible."

#~ msgid "*args* is a C array with the positional arguments."
#~ msgstr "*args* es una arreglo en C con los argumentos posicionales."

#~ msgid ""
#~ "*nargsf* is the number of positional arguments plus optionally the flag :"
#~ "const:`PY_VECTORCALL_ARGUMENTS_OFFSET` (see below). To get actual number "
#~ "of arguments, use :c:func:`PyVectorcall_NARGS(nargsf) "
#~ "<PyVectorcall_NARGS>`."
#~ msgstr ""
#~ "*nargsf* es el número de argumentos posicionales más, opcionalmente, el "
#~ "indicador :const:`PY_VECTORCALL_ARGUMENTS_OFFSET` (ver más abajo). Para "
#~ "obtener el número real de argumentos, use :c:func:"
#~ "`PyVectorcall_NARGS(nargsf) <PyVectorcall_NARGS>`."

#~ msgid ""
#~ "*kwnames* can be either ``NULL`` (no keyword arguments) or a tuple of "
#~ "keyword names. In the latter case, the values of the keyword arguments "
#~ "are stored in *args* after the positional arguments. The number of "
#~ "keyword arguments does not influence *nargsf*."
#~ msgstr ""
#~ "*kwnames* puede ser ``NULL`` (sin argumentos de palabras clave) o una "
#~ "tupla de nombres de palabras clave. En el último caso, los valores de los "
#~ "argumentos de palabras clave se almacenan en *args* después de los "
#~ "argumentos posicionales. El número de argumentos de palabras clave no "
#~ "influye en *nargsf*."

#~ msgid ""
#~ "*kwnames* must contain only objects of type ``str`` (not a subclass), and "
#~ "all keys must be unique."
#~ msgstr ""
#~ "*kwnames* debe contener solo objetos de tipo ``str`` (no una subclase), y "
#~ "todas las claves deben ser únicas."

#~ msgid ""
#~ "This uses the vectorcall protocol if the callable supports it; otherwise, "
#~ "the arguments are converted to use :c:member:`~PyTypeObject.tp_call`."
#~ msgstr ""
#~ "Esto usa el protocolo *vectorcall* si el invocable lo admite; de lo "
#~ "contrario, los argumentos se convierten para usar :c:member:"
#~ "`~PyTypeObject.tp_call`."

#~ msgid ""
#~ "This function is provisional and expected to become public in Python 3.9, "
#~ "with a different name and, possibly, changed semantics. If you use the "
#~ "function, plan for updating your code for Python 3.9."
#~ msgstr ""
#~ "Esta función es provisional y se espera que se haga pública en Python "
#~ "3.9, con un nombre diferente y, posiblemente, una semántica cambiada. Si "
#~ "usa la función, planifique actualizar su código para Python 3.9."

#~ msgid ""
#~ "If set in a vectorcall *nargsf* argument, the callee is allowed to "
#~ "temporarily change ``args[-1]``. In other words, *args* points to "
#~ "argument 1 (not 0) in the allocated vector. The callee must restore the "
#~ "value of ``args[-1]`` before returning."
#~ msgstr ""
#~ "Si se establece en un argumento *vectorcall* *nargsf*, la persona que "
#~ "llama puede cambiar temporalmente ``args[-1]``. En otras palabras, *args* "
#~ "apunta al argumento 1 (no 0) en el vector asignado. La persona que llama "
#~ "debe restaurar el valor de ``args[-1]`` antes de retornar."

#~ msgid ""
#~ "Whenever they can do so cheaply (without additional allocation), callers "
#~ "are encouraged to use :const:`PY_VECTORCALL_ARGUMENTS_OFFSET`. Doing so "
#~ "will allow callables such as bound methods to make their onward calls "
#~ "(which include a prepended *self* argument) cheaply."
#~ msgstr ""
#~ "Siempre que puedan hacerlo a bajo costo (sin asignación adicional), se "
#~ "recomienda a las personas que llaman que utilicen :const:"
#~ "`PY_VECTORCALL_ARGUMENTS_OFFSET`. Hacerlo permitirá que los invocables, "
#~ "como los métodos enlazados, realicen sus llamadas posteriores (que "
#~ "incluyen un argumento *self* antepuesto) a bajo precio."

#~ msgid ""
#~ "Given a vectorcall *nargsf* argument, return the actual number of "
#~ "arguments. Currently equivalent to ``nargsf & "
#~ "~PY_VECTORCALL_ARGUMENTS_OFFSET``."
#~ msgstr ""
#~ "Dado un argumento *vectorcall* *nargsf*, retorna el número real de "
#~ "argumentos. Actualmente equivalente a ``nargsf & "
#~ "~PY_VECTORCALL_ARGUMENTS_OFFSET``."

#~ msgid ""
#~ "Same as :c:func:`_PyObject_Vectorcall` except that the keyword arguments "
#~ "are passed as a dictionary in *kwdict*. This may be ``NULL`` if there are "
#~ "no keyword arguments."
#~ msgstr ""
#~ "Igual que :c:func:`_PyObject_Vectorcall` excepto que los argumentos de "
#~ "palabras clave se pasan como un diccionario en *kwdict*. Esto puede ser "
#~ "``NULL`` si no hay argumentos de palabras clave."

#~ msgid ""
#~ "For callables supporting :c:data:`vectorcall <PyTypeObject."
#~ "tp_vectorcall_offset>`, the arguments are internally converted to the "
#~ "vectorcall convention. Therefore, this function adds some overhead "
#~ "compared to :c:func:`_PyObject_Vectorcall`. It should only be used if the "
#~ "caller already has a dictionary ready to use."
#~ msgstr ""
#~ "Para llamadas que admiten :c:data:`vectorcall <PyTypeObject."
#~ "tp_vectorcall_offset>`, los argumentos se convierten internamente a la "
#~ "convención *vectorcall*. Por lo tanto, esta función agrega algunos gastos "
#~ "generales en comparación con :c:func:`_PyObject_Vectorcall`. Solo debe "
#~ "usarse si la persona que llama ya tiene un diccionario listo para usar."

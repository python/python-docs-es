# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-05-10 23:47+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/c-api/list.rst:6
msgid "List Objects"
msgstr "Objetos lista"

#: ../Doc/c-api/list.rst:13
msgid "This subtype of :c:type:`PyObject` represents a Python list object."
msgstr ""
"Este subtipo de :c:type:`PyObject` representa un objeto lista de Python."

#: ../Doc/c-api/list.rst:18
msgid ""
"This instance of :c:type:`PyTypeObject` represents the Python list type. "
"This is the same object as :class:`list` in the Python layer."
msgstr ""
"Esta instancia de :c:type:`PyTypeObject` representa el tipo de lista de "
"Python. Este es el mismo objeto que :class:`list` en la capa de Python."

#: ../Doc/c-api/list.rst:24
msgid ""
"Return true if *p* is a list object or an instance of a subtype of the list "
"type."
msgstr ""
"Retorna verdadero si *p* es un objeto de lista o una instancia de un subtipo "
"del tipo lista."

#: ../Doc/c-api/list.rst:30
msgid ""
"Return true if *p* is a list object, but not an instance of a subtype of the "
"list type."
msgstr ""
"Retorna verdadero si *p* es un objeto lista, pero no una instancia de un "
"subtipo del tipo lista."

#: ../Doc/c-api/list.rst:36
msgid "Return a new list of length *len* on success, or ``NULL`` on failure."
msgstr ""
"Retorna una nueva lista de longitud *len* en caso de éxito o ``NULL`` en "
"caso de error."

#: ../Doc/c-api/list.rst:40
msgid ""
"If *len* is greater than zero, the returned list object's items are set to "
"``NULL``.  Thus you cannot use abstract API functions such as :c:func:"
"`PySequence_SetItem`  or expose the object to Python code before setting all "
"items to a real object with :c:func:`PyList_SetItem`."
msgstr ""
"Si *len* es mayor que cero, los elementos del objeto de la lista retornada "
"se establecen en ``NULL``. Por lo tanto, no puede utilizar funciones API "
"abstractas como :c:func:`PySequence_SetItem` o exponer el objeto al código "
"Python antes de configurar todos los elementos en un objeto real con :c:func:"
"`PyList_SetItem`."

#: ../Doc/c-api/list.rst:50
msgid ""
"Return the length of the list object in *list*; this is equivalent to "
"``len(list)`` on a list object."
msgstr ""
"Retorna la longitud del objeto lista en *list*; esto es equivalente a "
"``len(list)`` en un objeto lista."

#: ../Doc/c-api/list.rst:56
msgid "Macro form of :c:func:`PyList_Size` without error checking."
msgstr "Forma macro de :c:func:`PyList_Size` sin comprobación de errores."

#: ../Doc/c-api/list.rst:61
msgid ""
"Return the object at position *index* in the list pointed to by *list*.  The "
"position must be non-negative; indexing from the end of the list is not "
"supported.  If *index* is out of bounds (<0 or >=len(list)), return ``NULL`` "
"and set an :exc:`IndexError` exception."
msgstr ""
"Retorna el objeto en la posición *index* en la lista a la que apunta *list*. "
"La posición no debe ser negativa; La indexación desde el final de la lista "
"no es compatible. Si *index* está fuera de los límites (*<0 o >= "
"len(list)*), retorna ``NULL`` y establece una excepción :exc:`IndexError`."

#: ../Doc/c-api/list.rst:69
msgid "Macro form of :c:func:`PyList_GetItem` without error checking."
msgstr "Forma macro de :c:func:`PyList_GetItem` sin comprobación de errores."

#: ../Doc/c-api/list.rst:74
msgid ""
"Set the item at index *index* in list to *item*.  Return ``0`` on success. "
"If *index* is out of bounds, return ``-1`` and set an :exc:`IndexError` "
"exception."
msgstr ""
"Establece el elemento en el índice *index* en la lista a *item*. Retorna "
"``0`` en caso de éxito. Si *index* está fuera de límites, retorna ``-1`` y "
"establece una excepción :exc:`IndexError`."

#: ../Doc/c-api/list.rst:80
msgid ""
"This function \"steals\" a reference to *item* and discards a reference to "
"an item already in the list at the affected position."
msgstr ""
"Esta función \"roba\" una referencia a *item* y descarta una referencia a un "
"elemento que ya está en la lista en la posición afectada."

#: ../Doc/c-api/list.rst:86
msgid ""
"Macro form of :c:func:`PyList_SetItem` without error checking. This is "
"normally only used to fill in new lists where there is no previous content."
msgstr ""
"Forma macro de :c:func:`PyList_SetItem` sin comprobación de errores. Esto "
"normalmente solo se usa para completar nuevas listas donde no hay contenido "
"anterior."

#: ../Doc/c-api/list.rst:91
msgid ""
"This macro \"steals\" a reference to *item*, and, unlike :c:func:"
"`PyList_SetItem`, does *not* discard a reference to any item that is being "
"replaced; any reference in *list* at position *i* will be leaked."
msgstr ""
"Este macro \"roba\" una referencia a *item* y, a diferencia de :c:func:"
"`PyList_SetItem`, *no descarta* una referencia a ningún elemento que se está "
"reemplazando; cualquier referencia en *list* en la posición *i* se filtrará."

#: ../Doc/c-api/list.rst:99
msgid ""
"Insert the item *item* into list *list* in front of index *index*.  Return "
"``0`` if successful; return ``-1`` and set an exception if unsuccessful. "
"Analogous to ``list.insert(index, item)``."
msgstr ""
"Inserta el elemento *item* en la lista *list* delante del índice *index*. "
"Retorna ``0`` si tiene éxito; retorna ``-1`` y establece una excepción si no "
"tiene éxito. Análogo a ``list.insert(index, item)``."

#: ../Doc/c-api/list.rst:106
msgid ""
"Append the object *item* at the end of list *list*. Return ``0`` if "
"successful; return ``-1`` and set an exception if unsuccessful.  Analogous "
"to ``list.append(item)``."
msgstr ""
"Agrega el objeto *item* al final de la lista *list*. Retorna ``0`` si tiene "
"éxito; retorna ``-1`` y establece una excepción si no tiene éxito. Análogo a "
"``list.append(item)``."

#: ../Doc/c-api/list.rst:113
msgid ""
"Return a list of the objects in *list* containing the objects *between* "
"*low* and *high*.  Return ``NULL`` and set an exception if unsuccessful.  "
"Analogous to ``list[low:high]``.  Indexing from the end of the list is not "
"supported."
msgstr ""
"Retorna una lista de los objetos en *list* que contiene los objetos "
"*between*, *low* y *high*. Retorna ``NULL`` y establece una excepción si no "
"tiene éxito. Análogo a ``list[low:high]``. La indexación desde el final de "
"la lista no es compatible."

#: ../Doc/c-api/list.rst:120
msgid ""
"Set the slice of *list* between *low* and *high* to the contents of "
"*itemlist*.  Analogous to ``list[low:high] = itemlist``. The *itemlist* may "
"be ``NULL``, indicating the assignment of an empty list (slice deletion). "
"Return ``0`` on success, ``-1`` on failure.  Indexing from the end of the "
"list is not supported."
msgstr ""
"Establece el segmento de *list* entre *low* y *high* para el contenido de "
"*itemlist*. Análogo a ``list[low:high] = itemlist``. La lista *itemlist* "
"puede ser ``NULL``, lo que indica la asignación de una lista vacía "
"(eliminación de segmentos). Retorna ``0`` en caso de éxito, ``-1`` en caso "
"de error. La indexación desde el final de la lista no es compatible."

#: ../Doc/c-api/list.rst:129
msgid ""
"Sort the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is equivalent to ``list.sort()``."
msgstr ""
"Ordena los elementos de *list* en su lugar. Retorna ``0`` en caso de éxito, "
"``-1`` en caso de error. Esto es equivalente a ``list.sort()``."

#: ../Doc/c-api/list.rst:135
msgid ""
"Reverse the items of *list* in place.  Return ``0`` on success, ``-1`` on "
"failure.  This is the equivalent of ``list.reverse()``."
msgstr ""
"Invierte los elementos de la lista *list* en su lugar. Retorna ``0`` en caso "
"de éxito, ``-1`` en caso de error. Este es el equivalente de ``list."
"reverse()``."

#: ../Doc/c-api/list.rst:143
msgid ""
"Return a new tuple object containing the contents of *list*; equivalent to "
"``tuple(list)``."
msgstr ""
"Retorna un nuevo objeto tupla que contiene el contenido de *list*; "
"equivalente a ``tuple(list)``."

#: ../Doc/c-api/list.rst:149
msgid "Clear the free list. Return the total number of freed items."
msgstr "Limpia la lista libre. Retorna el número total de elementos liberados."

# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-05-17 14:28+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/c-api/sequence.rst:6
msgid "Sequence Protocol"
msgstr "Protocolo de secuencia"

#: ../Doc/c-api/sequence.rst:11
msgid ""
"Return ``1`` if the object provides sequence protocol, and ``0`` otherwise. "
"Note that it returns ``1`` for Python classes with a :meth:`__getitem__` "
"method unless they are :class:`dict` subclasses since in general case it is "
"impossible to determine what the type of keys it supports.  This function "
"always succeeds."
msgstr ""
"Retorna ``1`` si el objeto proporciona el protocolo de secuencia y ``0`` en "
"caso contrario. Tenga en cuenta que retorna ``1`` para las clases de Python "
"con un método :meth:`__getitem__` a menos que sean: subclases :class:`dict` "
"ya que en general es imposible determinar qué tipo de claves admite. Esta "
"función siempre tiene éxito."

#: ../Doc/c-api/sequence.rst:23
msgid ""
"Returns the number of objects in sequence *o* on success, and ``-1`` on "
"failure.  This is equivalent to the Python expression ``len(o)``."
msgstr ""
"Retorna el número de objetos en secuencia *o* en caso de éxito y ``-1`` en "
"caso de error. Esto es equivalente a la expresión de Python ``len(o)``."

#: ../Doc/c-api/sequence.rst:29
msgid ""
"Return the concatenation of *o1* and *o2* on success, and ``NULL`` on "
"failure. This is the equivalent of the Python expression ``o1 + o2``."
msgstr ""
"Retorna la concatenación de *o1* y *o2* en caso de éxito, y ``NULL`` en caso "
"de error. Este es el equivalente de la expresión de Python ``o1+o2``."

#: ../Doc/c-api/sequence.rst:35
msgid ""
"Return the result of repeating sequence object *o* *count* times, or "
"``NULL`` on failure.  This is the equivalent of the Python expression ``o * "
"count``."
msgstr ""
"Retorna el resultado de repetir el objeto de secuencia *o* *count* veces, o "
"``NULL`` en caso de falla. Este es el equivalente de la expresión de Python "
"``o*count``."

#: ../Doc/c-api/sequence.rst:41
msgid ""
"Return the concatenation of *o1* and *o2* on success, and ``NULL`` on "
"failure. The operation is done *in-place* when *o1* supports it.  This is "
"the equivalent of the Python expression ``o1 += o2``."
msgstr ""
"Retorna la concatenación de *o1* y *o2* en caso de éxito, y ``NULL`` en caso "
"de error. La operación se realiza en su lugar *in-place* cuando *o1* lo "
"admite. Este es el equivalente de la expresión de Python ``o1+=o2``."

#: ../Doc/c-api/sequence.rst:48
msgid ""
"Return the result of repeating sequence object *o* *count* times, or "
"``NULL`` on failure.  The operation is done *in-place* when *o* supports "
"it.  This is the equivalent of the Python expression ``o *= count``."
msgstr ""
"Retorna el resultado de repetir el objeto de secuencia *o* *count* veces, o "
"``NULL`` en caso de falla. La operación se realiza en su lugar (*in-place*) "
"cuando *o* lo admite. Este es el equivalente de la expresión de Python "
"``o*=count``."

#: ../Doc/c-api/sequence.rst:55
msgid ""
"Return the *i*\\ th element of *o*, or ``NULL`` on failure. This is the "
"equivalent of the Python expression ``o[i]``."
msgstr ""
"Retorna el elemento *i*-ésimo de *o* o ``NULL`` en caso de error. Este es el "
"equivalente de la expresión de Python ``o[i]``."

#: ../Doc/c-api/sequence.rst:61
msgid ""
"Return the slice of sequence object *o* between *i1* and *i2*, or ``NULL`` "
"on failure. This is the equivalent of the Python expression ``o[i1:i2]``."
msgstr ""
"Retorna la rebanada del objeto secuencia *o* entre *i1* y *i2*, o ``NULL`` "
"en caso de error. Este es el equivalente de la expresión de Python ``o[i1:"
"i2]``."

#: ../Doc/c-api/sequence.rst:67
msgid ""
"Assign object *v* to the *i*\\ th element of *o*.  Raise an exception and "
"return ``-1`` on failure; return ``0`` on success.  This is the equivalent "
"of the Python statement ``o[i] = v``.  This function *does not* steal a "
"reference to *v*."
msgstr ""
"Asigna el objeto *v* al elemento *i*-ésimo de *o*. Lanza una excepción y "
"retorna ``-1`` en caso de falla; retorna ``0`` en caso de éxito. Este es el "
"equivalente de la declaración de Python ``o[i]=v``. Esta función *no* roba "
"una referencia a *v*."

#: ../Doc/c-api/sequence.rst:72
msgid ""
"If *v* is ``NULL``, the element is deleted, however this feature is "
"deprecated in favour of using :c:func:`PySequence_DelItem`."
msgstr ""
"Si *v* es ``NULL``, el elemento se elimina, sin embargo, esta característica "
"está en desuso a favor del uso de :c:func:`PySequence_DelItem`."

#: ../Doc/c-api/sequence.rst:78
msgid ""
"Delete the *i*\\ th element of object *o*.  Returns ``-1`` on failure.  This "
"is the equivalent of the Python statement ``del o[i]``."
msgstr ""
"Elimina el elemento *i*-ésimo del objeto *o*. Retorna ``-1`` en caso de "
"falla. Este es el equivalente de la declaración de Python ``del o[i]``."

#: ../Doc/c-api/sequence.rst:84
msgid ""
"Assign the sequence object *v* to the slice in sequence object *o* from *i1* "
"to *i2*.  This is the equivalent of the Python statement ``o[i1:i2] = v``."
msgstr ""
"Asigna el objeto secuencia *v* al segmento en el objeto secuencia *o* de "
"*i1* a *i2*. Este es el equivalente de la declaración de Python ``o[i1:"
"i2]=v``."

#: ../Doc/c-api/sequence.rst:90
msgid ""
"Delete the slice in sequence object *o* from *i1* to *i2*.  Returns ``-1`` "
"on failure.  This is the equivalent of the Python statement ``del o[i1:i2]``."
msgstr ""
"Elimina el segmento en el objeto secuencia *o* de *i1* a *i2*. Retorna "
"``-1`` en caso de falla. Este es el equivalente de la declaración de Python "
"``del o[i1:i2]``."

#: ../Doc/c-api/sequence.rst:96
msgid ""
"Return the number of occurrences of *value* in *o*, that is, return the "
"number of keys for which ``o[key] == value``.  On failure, return ``-1``.  "
"This is equivalent to the Python expression ``o.count(value)``."
msgstr ""
"Retorna el número de apariciones de *value* en *o*, es decir, retorna el "
"número de claves para las que ``o[clave]==value``. En caso de fallo, retorna "
"``-1``. Esto es equivalente a la expresión de Python ``o.count(value)``."

#: ../Doc/c-api/sequence.rst:103
msgid ""
"Determine if *o* contains *value*.  If an item in *o* is equal to *value*, "
"return ``1``, otherwise return ``0``. On error, return ``-1``.  This is "
"equivalent to the Python expression ``value in o``."
msgstr ""
"Determine si *o* contiene *valor*. Si un elemento en *o* es igual a *value*, "
"retorna ``1``; de lo contrario, retorna ``0``. En caso de error, retorna "
"``-1``. Esto es equivalente a la expresión de Python ``value in o``."

#: ../Doc/c-api/sequence.rst:110
msgid ""
"Return the first index *i* for which ``o[i] == value``.  On error, return "
"``-1``.    This is equivalent to the Python expression ``o.index(value)``."
msgstr ""
"Retorna el primer índice *i* para el que ``o[i]==value``. En caso de error, "
"retorna ``-1``. Esto es equivalente a la expresión de Python ``o."
"index(value)``."

#: ../Doc/c-api/sequence.rst:116
msgid ""
"Return a list object with the same contents as the sequence or iterable *o*, "
"or ``NULL`` on failure.  The returned list is guaranteed to be new.  This is "
"equivalent to the Python expression ``list(o)``."
msgstr ""
"Retorna un objeto lista con el mismo contenido que la secuencia o iterable "
"*o*, o ``NULL`` en caso de error. La lista retornada está garantizada como "
"nueva. Esto es equivalente a la expresión de Python ``list(o)``."

#: ../Doc/c-api/sequence.rst:125
msgid ""
"Return a tuple object with the same contents as the sequence or iterable "
"*o*, or ``NULL`` on failure.  If *o* is a tuple, a new reference will be "
"returned, otherwise a tuple will be constructed with the appropriate "
"contents.  This is equivalent to the Python expression ``tuple(o)``."
msgstr ""
"Retorna un objeto tupla con el mismo contenido que la secuencia o iterable "
"*o*, o ``NULL`` en caso de error. Si *o* es una tupla, se retornará una "
"nueva referencia; de lo contrario, se construirá una tupla con el contenido "
"apropiado. Esto es equivalente a la expresión de Python ``tupla(o)``."

#: ../Doc/c-api/sequence.rst:133
msgid ""
"Return the sequence or iterable *o* as an object usable by the other "
"``PySequence_Fast*`` family of functions. If the object is not a sequence or "
"iterable, raises :exc:`TypeError` with *m* as the message text. Returns "
"``NULL`` on failure."
msgstr ""
"Retorna la secuencia o iterable *o* como un objeto utilizable por la otra "
"familia de funciones ``PySequence_Fast*``. Si el objeto no es una secuencia "
"o no es iterable, lanza :exc:`TypeError` con *m* como texto del mensaje. "
"Retorna ``NULL`` en caso de falla."

#: ../Doc/c-api/sequence.rst:138
msgid ""
"The ``PySequence_Fast*`` functions are thus named because they assume *o* is "
"a :c:type:`PyTupleObject` or a :c:type:`PyListObject` and access the data "
"fields of *o* directly."
msgstr ""
"Las funciones ``PySequence_Fast*`` se denominan así porque suponen que *o* "
"es un :c:type:`PyTupleObject` o un :c:type:`PyListObject` y acceden a los "
"campos de datos de *o* directamente."

#: ../Doc/c-api/sequence.rst:142
msgid ""
"As a CPython implementation detail, if *o* is already a sequence or list, it "
"will be returned."
msgstr ""
"Como detalle de implementación de CPython, si *o* ya es una secuencia o "
"lista, se retornará."

#: ../Doc/c-api/sequence.rst:148
msgid ""
"Returns the length of *o*, assuming that *o* was returned by :c:func:"
"`PySequence_Fast` and that *o* is not ``NULL``.  The size can also be gotten "
"by calling :c:func:`PySequence_Size` on *o*, but :c:func:"
"`PySequence_Fast_GET_SIZE` is faster because it can assume *o* is a list or "
"tuple."
msgstr ""
"Retorna la longitud de *o*, suponiendo que *o* fue retornado por :c:func:"
"`PySequence_Fast` y que *o* no es ``NULL``. El tamaño también se puede "
"obtener llamando a :c:func:`PySequence_Size` en *o*, pero :c:func:"
"`PySequence_Fast_GET_SIZE` es más rápido porque puede suponer que *o* es una "
"lista o tupla."

#: ../Doc/c-api/sequence.rst:157
msgid ""
"Return the *i*\\ th element of *o*, assuming that *o* was returned by :c:"
"func:`PySequence_Fast`, *o* is not ``NULL``, and that *i* is within bounds."
msgstr ""
"Retorna el elemento *i*-ésimo de *o*, suponiendo que *o* haya sido retornado "
"por :c:func:`PySequence_Fast`, *o* no es ``NULL`` y que *i* está dentro de "
"los límites."

#: ../Doc/c-api/sequence.rst:163
msgid ""
"Return the underlying array of PyObject pointers.  Assumes that *o* was "
"returned by :c:func:`PySequence_Fast` and *o* is not ``NULL``."
msgstr ""
"Retorna el arreglo subyacente de punteros `PyObject`. Asume que *o* fue "
"retornado por :c:func:`PySequence_Fast` y *o* no es ``NULL``."

#: ../Doc/c-api/sequence.rst:166
msgid ""
"Note, if a list gets resized, the reallocation may relocate the items array. "
"So, only use the underlying array pointer in contexts where the sequence "
"cannot change."
msgstr ""
"Tenga en cuenta que si una lista cambia de tamaño, la reasignación puede "
"reubicar el arreglo de elementos. Por lo tanto, solo use el puntero de "
"arreglo subyacente en contextos donde la secuencia no puede cambiar."

#: ../Doc/c-api/sequence.rst:173
msgid ""
"Return the *i*\\ th element of *o* or ``NULL`` on failure. Faster form of :c:"
"func:`PySequence_GetItem` but without checking that :c:func:"
"`PySequence_Check` on *o* is true and without adjustment for negative "
"indices."
msgstr ""
"Retorna el elemento *i*-ésimo de *o* o ``NULL`` en caso de error. Es la "
"forma más rápida de :c:func:`PySequence_GetItem` pero sin verificar que :c:"
"func:`PySequence_Check` en *o* es verdadero y sin ajuste para índices "
"negativos."

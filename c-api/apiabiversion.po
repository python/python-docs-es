# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org / https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-05-06 11:59-0400\n"
"PO-Revision-Date: 2020-05-08 01:45+0200\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: \n"
"Language: es\n"
"X-Generator: Poedit 2.3\n"

#: ../Doc/c-api/apiabiversion.rst:7
msgid "API and ABI Versioning"
msgstr "Versiones de API y ABI"

#: ../Doc/c-api/apiabiversion.rst:9
msgid ""
"``PY_VERSION_HEX`` is the Python version number encoded in a single integer."
msgstr ""
"``PY_VERSION_HEX`` es el número de versión de Python codificado en un solo "
"entero."

#: ../Doc/c-api/apiabiversion.rst:11
msgid ""
"For example if the ``PY_VERSION_HEX`` is set to ``0x030401a2``, the "
"underlying version information can be found by treating it as a 32 bit "
"number in the following manner:"
msgstr ""
"Por ejemplo, si ``PY_VERSION_HEX`` se establece en ``0x030401a2``, la "
"información de la versión subyacente se puede encontrar tratándola como un "
"número de 32 bits de la siguiente manera:"

#: ../Doc/c-api/apiabiversion.rst:16
msgid "Bytes"
msgstr "Bytes"

#: ../Doc/c-api/apiabiversion.rst:16
msgid "Bits (big endian order)"
msgstr "Bits (orden *big-endian*)"

#: ../Doc/c-api/apiabiversion.rst:16
msgid "Meaning"
msgstr "Significado"

#: ../Doc/c-api/apiabiversion.rst:18
msgid "``1``"
msgstr "``1``"

#: ../Doc/c-api/apiabiversion.rst:18
msgid "``1-8``"
msgstr "``1-8``"

#: ../Doc/c-api/apiabiversion.rst:18
msgid "``PY_MAJOR_VERSION`` (the ``3`` in ``3.4.1a2``)"
msgstr "``PY_MAJOR_VERSION`` (el ``3`` en ``3.4.1a2``)"

#: ../Doc/c-api/apiabiversion.rst:21
msgid "``2``"
msgstr "``2``"

#: ../Doc/c-api/apiabiversion.rst:21
msgid "``9-16``"
msgstr "``9-16``"

#: ../Doc/c-api/apiabiversion.rst:21
msgid "``PY_MINOR_VERSION`` (the ``4`` in ``3.4.1a2``)"
msgstr "``PY_MINOR_VERSION`` (el ``4`` en ``3.4.1a2``)"

#: ../Doc/c-api/apiabiversion.rst:24
msgid "``3``"
msgstr "``3``"

#: ../Doc/c-api/apiabiversion.rst:24
msgid "``17-24``"
msgstr "``17-24``"

#: ../Doc/c-api/apiabiversion.rst:24
msgid "``PY_MICRO_VERSION`` (the ``1`` in ``3.4.1a2``)"
msgstr "``PY_MICRO_VERSION`` (el ``1`` en ``3.4.1a2``)"

#: ../Doc/c-api/apiabiversion.rst:27
msgid "``4``"
msgstr "``4``"

#: ../Doc/c-api/apiabiversion.rst:27
msgid "``25-28``"
msgstr "``25-28``"

#: ../Doc/c-api/apiabiversion.rst:27
msgid ""
"``PY_RELEASE_LEVEL`` (``0xA`` for alpha, ``0xB`` for beta, ``0xC`` for "
"release candidate and ``0xF`` for final), in this case it is alpha."
msgstr ""
"``PY_RELEASE_LEVEL`` (``0xA`` para alfa, ``0xB`` para beta, ``0xC`` para el "
"candidato de lanzamiento y ``0xF`` para final), en este caso es alfa."

#: ../Doc/c-api/apiabiversion.rst:32
msgid "``29-32``"
msgstr "``29-32``"

#: ../Doc/c-api/apiabiversion.rst:32
msgid ""
"``PY_RELEASE_SERIAL`` (the ``2`` in ``3.4.1a2``, zero for final releases)"
msgstr ""
"``PY_RELEASE_SERIAL`` (el ``2`` en ``3.4.1a2``, cero para lanzamientos "
"finales)"

#: ../Doc/c-api/apiabiversion.rst:36
msgid "Thus ``3.4.1a2`` is hexversion ``0x030401a2``."
msgstr "Así ``3.4.1a2`` es la hexadecimal ``0x030401a2``."

#: ../Doc/c-api/apiabiversion.rst:38
msgid "All the given macros are defined in :source:`Include/patchlevel.h`."
msgstr "Todas las macros dadas se definen en :source:`Include/patchlevel.h`."

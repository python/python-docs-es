# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2022, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.11\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../Doc/whatsnew/3.11.rst:3
msgid "What's New In Python 3.11"
msgstr "Qué hay de nuevo en Python 3.11"

#: ../Doc/whatsnew/3.11.rst
msgid "Release"
msgstr "Versión"

#: ../Doc/whatsnew/3.11.rst:5
msgid "|release|"
msgstr "|release|"

#: ../Doc/whatsnew/3.11.rst
msgid "Date"
msgstr "Fecha"

#: ../Doc/whatsnew/3.11.rst:6
msgid "|today|"
msgstr "|today|"

#: ../Doc/whatsnew/3.11.rst
msgid "Editor"
msgstr "Editor"

#: ../Doc/whatsnew/3.11.rst:7
msgid "Pablo Galindo Salgado"
msgstr "Pablo Galindo Salgado"

#: ../Doc/whatsnew/3.11.rst:49
msgid ""
"This article explains the new features in Python 3.11, compared to 3.10."
msgstr ""
"Este artículo explica las nuevas características de Python 3.11, en "
"comparación con 3.10."

#: ../Doc/whatsnew/3.11.rst:51
msgid "For full details, see the :ref:`changelog <changelog>`."
msgstr ""
"Para obtener detalles completos, consulte :ref:`changelog <changelog>`."

#: ../Doc/whatsnew/3.11.rst:57
msgid "Summary -- Release highlights"
msgstr "Resumen -- Aspectos destacados de la versión"

#: ../Doc/whatsnew/3.11.rst:62
#, python-format
msgid ""
"Python 3.11 is between 10-60% faster than Python 3.10. On average, we "
"measured a 1.25x speedup on the standard benchmark suite. See :ref:"
"`whatsnew311-faster-cpython` for details."
msgstr ""
"Python 3.11 es entre un 10 y un 60 % más rápido que Python 3.10. En "
"promedio, medimos un aumento de velocidad de 1.25x en el conjunto de pruebas "
"de referencia estándar. Ver :ref:`whatsnew311-faster-cpython` para más "
"detalles."

#: ../Doc/whatsnew/3.11.rst:68
msgid "New syntax features:"
msgstr "Nuevas funciones de sintaxis:"

#: ../Doc/whatsnew/3.11.rst:70
msgid ":ref:`whatsnew311-pep654`"
msgstr ":ref:`whatsnew311-pep654`"

#: ../Doc/whatsnew/3.11.rst:72
msgid "New built-in features:"
msgstr "Nuevas funciones integradas:"

#: ../Doc/whatsnew/3.11.rst:74
msgid ":ref:`whatsnew311-pep678`"
msgstr ":ref:`whatsnew311-pep678`"

#: ../Doc/whatsnew/3.11.rst:76
msgid "New standard library modules:"
msgstr "Nuevos módulos de biblioteca estándar:"

#: ../Doc/whatsnew/3.11.rst:78
msgid ""
":pep:`680`: :mod:`tomllib` — Support for parsing `TOML <https://toml.io/>`_ "
"in the Standard Library"
msgstr ""
":pep:`680`: :mod:`tomllib`: soporte para analizar `TOML <https://toml.io/>`_ "
"en la biblioteca estándar"

#: ../Doc/whatsnew/3.11.rst:81
msgid "Interpreter improvements:"
msgstr "Mejoras en el intérprete:"

#: ../Doc/whatsnew/3.11.rst:83
msgid ":ref:`whatsnew311-pep657`"
msgstr ":ref:`whatsnew311-pep657`"

#: ../Doc/whatsnew/3.11.rst:84
msgid ""
"New :option:`-P` command line option and :envvar:`PYTHONSAFEPATH` "
"environment variable to :ref:`disable automatically prepending potentially "
"unsafe paths <whatsnew311-pythonsafepath>` to :data:`sys.path`"
msgstr ""
"Nueva opción de línea de comando :option:`-P` y variable de entorno :envvar:"
"`PYTHONSAFEPATH` a :ref:`disable automatically prepending potentially unsafe "
"paths <whatsnew311-pythonsafepath>` a :data:`sys.path`"

#: ../Doc/whatsnew/3.11.rst:88
msgid "New typing features:"
msgstr "Nuevas funciones de escritura:"

#: ../Doc/whatsnew/3.11.rst:90
msgid ":ref:`whatsnew311-pep646`"
msgstr ":ref:`whatsnew311-pep646`"

#: ../Doc/whatsnew/3.11.rst:91
msgid ":ref:`whatsnew311-pep655`"
msgstr ":ref:`whatsnew311-pep655`"

#: ../Doc/whatsnew/3.11.rst:92
msgid ":ref:`whatsnew311-pep673`"
msgstr ":ref:`whatsnew311-pep673`"

#: ../Doc/whatsnew/3.11.rst:93
msgid ":ref:`whatsnew311-pep675`"
msgstr ":ref:`whatsnew311-pep675`"

#: ../Doc/whatsnew/3.11.rst:94
msgid ":ref:`whatsnew311-pep681`"
msgstr ":ref:`whatsnew311-pep681`"

#: ../Doc/whatsnew/3.11.rst:96
msgid "Important deprecations, removals and restrictions:"
msgstr "Importantes depreciaciones, eliminaciones y restricciones:"

#: ../Doc/whatsnew/3.11.rst:98
msgid ""
":pep:`594`: :ref:`Many legacy standard library modules have been deprecated "
"<whatsnew311-pep594>` and will be removed in Python 3.13"
msgstr ""
":pep:`594`: :ref:`Many legacy standard library modules have been deprecated "
"<whatsnew311-pep594>` y se eliminará en Python 3.13"

#: ../Doc/whatsnew/3.11.rst:101
msgid ""
":pep:`624`: :ref:`Py_UNICODE encoder APIs have been removed <whatsnew311-"
"pep624>`"
msgstr ""
":pep:`624`: :ref:`Py_UNICODE encoder APIs have been removed <whatsnew311-"
"pep624>`"

#: ../Doc/whatsnew/3.11.rst:103
msgid ""
":pep:`670`: :ref:`Macros converted to static inline functions <whatsnew311-"
"pep670>`"
msgstr ""
":pep:`670`: :ref:`Macros converted to static inline functions <whatsnew311-"
"pep670>`"

#: ../Doc/whatsnew/3.11.rst:110 ../Doc/whatsnew/3.11.rst:2083
msgid "New Features"
msgstr "Nuevas características"

#: ../Doc/whatsnew/3.11.rst:115
msgid "PEP 657: Fine-grained error locations in tracebacks"
msgstr "PEP 657: Ubicaciones de errores detallados en rastreos"

#: ../Doc/whatsnew/3.11.rst:117
msgid ""
"When printing tracebacks, the interpreter will now point to the exact "
"expression that caused the error, instead of just the line. For example:"
msgstr ""
"Al imprimir rastreos, el intérprete ahora señalará la expresión exacta que "
"causó el error, en lugar de solo la línea. Por ejemplo:"

#: ../Doc/whatsnew/3.11.rst:131
msgid ""
"Previous versions of the interpreter would point to just the line, making it "
"ambiguous which object was ``None``. These enhanced errors can also be "
"helpful when dealing with deeply nested :class:`dict` objects and multiple "
"function calls:"
msgstr ""
"Las versiones anteriores del intérprete apuntaban solo a la línea, por lo "
"que resultaba ambiguo qué objeto era ``None``. Estos errores mejorados "
"también pueden ser útiles cuando se trata de objetos :class:`dict` "
"profundamente anidados y múltiples llamadas a funciones:"

#: ../Doc/whatsnew/3.11.rst:151
msgid "As well as complex arithmetic expressions:"
msgstr "Además de expresiones aritméticas complejas:"

#: ../Doc/whatsnew/3.11.rst:161
msgid ""
"Additionally, the information used by the enhanced traceback feature is made "
"available via a general API, that can be used to correlate :term:`bytecode` :"
"ref:`instructions <bytecodes>` with source code location. This information "
"can be retrieved using:"
msgstr ""
"Además, la información utilizada por la función de rastreo mejorada está "
"disponible a través de una API general, que se puede usar para "
"correlacionar :term:`bytecode` :ref:`instructions <bytecodes>` con la "
"ubicación del código fuente. Esta información se puede recuperar usando:"

#: ../Doc/whatsnew/3.11.rst:166
msgid "The :meth:`codeobject.co_positions` method in Python."
msgstr "El método :meth:`codeobject.co_positions` en Python."

#: ../Doc/whatsnew/3.11.rst:167
msgid "The :c:func:`PyCode_Addr2Location` function in the C API."
msgstr "La función :c:func:`PyCode_Addr2Location` en la API de C."

#: ../Doc/whatsnew/3.11.rst:169
msgid ""
"See :pep:`657` for more details. (Contributed by Pablo Galindo, Batuhan "
"Taskaya and Ammar Askar in :issue:`43950`.)"
msgstr ""
"Ver :pep:`657` para más detalles. (Aportado por Pablo Galindo, Batuhan "
"Taskaya y Ammar Askar en :issue:`43950`.)"

#: ../Doc/whatsnew/3.11.rst:173
msgid ""
"This feature requires storing column positions in :ref:`codeobjects`, which "
"may result in a small increase in interpreter memory usage and disk usage "
"for compiled Python files. To avoid storing the extra information and "
"deactivate printing the extra traceback information, use the :option:`-X "
"no_debug_ranges <-X>` command line option or the :envvar:"
"`PYTHONNODEBUGRANGES` environment variable."
msgstr ""
"Esta característica requiere almacenar las posiciones de las columnas en :"
"ref:`codeobjects`, lo que puede resultar en un pequeño aumento en el uso de "
"la memoria del intérprete y el uso del disco para los archivos de Python "
"compilados. Para evitar almacenar la información adicional y desactivar la "
"impresión de la información de seguimiento adicional, utilice la opción de "
"línea de comando :option:`-X no_debug_ranges <-X>` o la variable de entorno :"
"envvar:`PYTHONNODEBUGRANGES`."

#: ../Doc/whatsnew/3.11.rst:185
msgid "PEP 654: Exception Groups and ``except*``"
msgstr "PEP 654: Grupos de excepción y ``except*``"

#: ../Doc/whatsnew/3.11.rst:187
msgid ""
":pep:`654` introduces language features that enable a program to raise and "
"handle multiple unrelated exceptions simultaneously. The builtin types :exc:"
"`ExceptionGroup` and :exc:`BaseExceptionGroup` make it possible to group "
"exceptions and raise them together, and the new :keyword:`except* "
"<except_star>` syntax generalizes :keyword:`except` to match subgroups of "
"exception groups."
msgstr ""
":pep:`654` presenta funciones de lenguaje que permiten que un programa "
"genere y maneje múltiples excepciones no relacionadas simultáneamente. Los "
"tipos integrados :exc:`ExceptionGroup` y :exc:`BaseExceptionGroup` permiten "
"agrupar excepciones y generarlas juntas, y la nueva sintaxis :keyword:"
"`except* <except_star>` generaliza :keyword:`except` para hacer coincidir "
"subgrupos de grupos de excepciones."

#: ../Doc/whatsnew/3.11.rst:194
msgid "See :pep:`654` for more details."
msgstr "Ver :pep:`654` para más detalles."

#: ../Doc/whatsnew/3.11.rst:196
msgid ""
"(Contributed by Irit Katriel in :issue:`45292`. PEP written by Irit Katriel, "
"Yury Selivanov and Guido van Rossum.)"
msgstr ""
"(Aportado por Irit Katriel en :issue:`45292`. PEP escrito por Irit Katriel, "
"Yury Selivanov y Guido van Rossum.)"

#: ../Doc/whatsnew/3.11.rst:203
msgid "PEP 678: Exceptions can be enriched with notes"
msgstr "PEP 678: Las excepciones se pueden enriquecer con notas"

#: ../Doc/whatsnew/3.11.rst:205
msgid ""
"The :meth:`~BaseException.add_note` method is added to :exc:`BaseException`. "
"It can be used to enrich exceptions with context information that is not "
"available at the time when the exception is raised. The added notes appear "
"in the default traceback."
msgstr ""
"El método :meth:`~BaseException.add_note` se agrega a :exc:`BaseException`. "
"Se puede utilizar para enriquecer las excepciones con información de "
"contexto que no está disponible en el momento en que se genera la excepción. "
"Las notas añadidas aparecen en el rastreo predeterminado."

#: ../Doc/whatsnew/3.11.rst:210
msgid "See :pep:`678` for more details."
msgstr "Ver :pep:`678` para más detalles."

#: ../Doc/whatsnew/3.11.rst:212
msgid ""
"(Contributed by Irit Katriel in :issue:`45607`. PEP written by Zac Hatfield-"
"Dodds.)"
msgstr ""
"(Aportado por Irit Katriel en :issue:`45607`. PEP escrito por Zac Hatfield-"
"Dodds)."

#: ../Doc/whatsnew/3.11.rst:219
msgid "Windows ``py.exe`` launcher improvements"
msgstr "Mejoras en el iniciador de Windows ``py.exe``"

#: ../Doc/whatsnew/3.11.rst:221
msgid ""
"The copy of the :ref:`launcher` included with Python 3.11 has been "
"significantly updated. It now supports company/tag syntax as defined in :pep:"
"`514` using the ``-V:<company>/<tag>`` argument instead of the limited ``-"
"<major>.<minor>``. This allows launching distributions other than "
"``PythonCore``, the one hosted on `python.org <https://python.org>`_."
msgstr ""
"La copia de :ref:`launcher` incluida con Python 3.11 se ha actualizado "
"significativamente. Ahora es compatible con la sintaxis de empresa/etiqueta "
"tal como se define en :pep:`514` utilizando el argumento ``-V:<company>/"
"<tag>`` en lugar del ``-<major>.<minor>`` limitado. Esto permite lanzar "
"distribuciones distintas a ``PythonCore``, la que está alojada en `python."
"org <https://python.org>`_."

#: ../Doc/whatsnew/3.11.rst:227
msgid ""
"When using ``-V:`` selectors, either company or tag can be omitted, but all "
"installs will be searched. For example, ``-V:OtherPython/`` will select the "
"\"best\" tag registered for ``OtherPython``, while ``-V:3.11`` or ``-"
"V:/3.11`` will select the \"best\" distribution with tag ``3.11``."
msgstr ""
"Al usar los selectores ``-V:``, se puede omitir la empresa o la etiqueta, "
"pero se buscarán todas las instalaciones. Por ejemplo, ``-V:OtherPython/`` "
"seleccionará la \"mejor\" etiqueta registrada para ``OtherPython``, mientras "
"que ``-V:3.11`` o ``-V:/3.11`` seleccionarán la \"mejor\" distribución con "
"la etiqueta ``3.11``."

#: ../Doc/whatsnew/3.11.rst:232
msgid ""
"When using the legacy ``-<major>``, ``-<major>.<minor>``, ``-<major>-"
"<bitness>`` or ``-<major>.<minor>-<bitness>`` arguments, all existing "
"behaviour should be preserved from past versions, and only releases from "
"``PythonCore`` will be selected. However, the ``-64`` suffix now implies "
"\"not 32-bit\" (not necessarily x86-64), as there are multiple supported 64-"
"bit platforms. 32-bit runtimes are detected by checking the runtime's tag "
"for a ``-32`` suffix. All releases of Python since 3.5 have included this in "
"their 32-bit builds."
msgstr ""
"Al usar los argumentos heredados ``-<major>``, ``-<major>.<minor>``, ``-"
"<major>-<bitness>`` o ``-<major>.<minor>-<bitness>``, se debe conservar todo "
"el comportamiento existente de las versiones anteriores y solo se "
"seleccionarán las versiones de ``PythonCore``. Sin embargo, el sufijo "
"``-64`` ahora implica \"no de 32 bits\" (no necesariamente x86-64), ya que "
"existen múltiples plataformas de 64 bits compatibles. Los tiempos de "
"ejecución de 32 bits se detectan comprobando la etiqueta del tiempo de "
"ejecución en busca de un sufijo ``-32``. Todas las versiones de Python desde "
"la 3.5 han incluido esto en sus compilaciones de 32 bits."

#: ../Doc/whatsnew/3.11.rst:246
msgid "New Features Related to Type Hints"
msgstr "Nuevas funciones relacionadas con las sugerencias de tipo"

#: ../Doc/whatsnew/3.11.rst:248
msgid ""
"This section covers major changes affecting :pep:`484` type hints and the :"
"mod:`typing` module."
msgstr ""
"Esta sección cubre los cambios principales que afectan las sugerencias de "
"tipo :pep:`484` y el módulo :mod:`typing`."

#: ../Doc/whatsnew/3.11.rst:255
msgid "PEP 646: Variadic generics"
msgstr "PEP 646: Genéricos Variádicos"

#: ../Doc/whatsnew/3.11.rst:257
msgid ""
":pep:`484` previously introduced :data:`~typing.TypeVar`, enabling creation "
"of generics parameterised with a single type. :pep:`646` adds :data:`~typing."
"TypeVarTuple`, enabling parameterisation with an *arbitrary* number of "
"types. In other words, a :data:`~typing.TypeVarTuple` is a *variadic* type "
"variable, enabling *variadic* generics."
msgstr ""
":pep:`484` introdujo anteriormente :data:`~typing.TypeVar`, lo que permite "
"la creación de genéricos parametrizados con un solo tipo. :pep:`646` añade :"
"data:`~typing.TypeVarTuple`, permitiendo la parametrización con un número de "
"tipos *arbitrary*. En otras palabras, un :data:`~typing.TypeVarTuple` es una "
"variable de tipo *variadic* que permite los genéricos *variadic*."

#: ../Doc/whatsnew/3.11.rst:264
msgid ""
"This enables a wide variety of use cases. In particular, it allows the type "
"of array-like structures in numerical computing libraries such as NumPy and "
"TensorFlow to be parameterised with the array *shape*. Static type checkers "
"will now be able to catch shape-related bugs in code that uses these "
"libraries."
msgstr ""
"Esto permite una amplia variedad de casos de uso. En particular, permite "
"parametrizar con el arreglo *shape* el tipo de estructuras similares a "
"arreglos en bibliotecas de computación numérica como NumPy y TensorFlow. Los "
"verificadores de tipo estático ahora podrán detectar errores relacionados "
"con la forma en el código que usa estas bibliotecas."

#: ../Doc/whatsnew/3.11.rst:270
msgid "See :pep:`646` for more details."
msgstr "Ver :pep:`646` para más detalles."

#: ../Doc/whatsnew/3.11.rst:272
msgid ""
"(Contributed by Matthew Rahtz in :issue:`43224`, with contributions by "
"Serhiy Storchaka and Jelle Zijlstra. PEP written by Mark Mendoza, Matthew "
"Rahtz, Pradeep Kumar Srinivasan, and Vincent Siles.)"
msgstr ""
"(Contribuido por Matthew Rahtz en :issue:`43224`, con contribuciones de "
"Serhiy Storchaka y Jelle Zijlstra. PEP escrito por Mark Mendoza, Matthew "
"Rahtz, Pradeep Kumar Srinivasan y Vincent Siles)."

#: ../Doc/whatsnew/3.11.rst:280
msgid ""
"PEP 655: Marking individual ``TypedDict`` items as required or not-required"
msgstr ""
"PEP 655: Marcado de elementos ``TypedDict`` individuales como requeridos o "
"no requeridos"

#: ../Doc/whatsnew/3.11.rst:282
msgid ""
":data:`~typing.Required` and :data:`~typing.NotRequired` provide a "
"straightforward way to mark whether individual items in a :class:`~typing."
"TypedDict` must be present. Previously, this was only possible using "
"inheritance."
msgstr ""
":data:`~typing.Required` y :data:`~typing.NotRequired` proporcionan una "
"forma sencilla de marcar si deben estar presentes elementos individuales en "
"un :class:`~typing.TypedDict`. Anteriormente, esto solo era posible mediante "
"la herencia."

#: ../Doc/whatsnew/3.11.rst:287
msgid ""
"All fields are still required by default, unless the *total* parameter is "
"set to ``False``, in which case all fields are still not-required by "
"default. For example, the following specifies a :class:`!TypedDict` with one "
"required and one not-required key::"
msgstr ""
"Todos los campos siguen siendo obligatorios de forma predeterminada, a menos "
"que el parámetro *total* se establezca en ``False``, en cuyo caso todos los "
"campos siguen sin ser obligatorios de forma predeterminada. Por ejemplo, lo "
"siguiente especifica un :class:`!TypedDict` con una clave requerida y una no "
"requerida:"

#: ../Doc/whatsnew/3.11.rst:301
msgid "The following definition is equivalent::"
msgstr "La siguiente definición es equivalente:"

#: ../Doc/whatsnew/3.11.rst:307
msgid "See :pep:`655` for more details."
msgstr "Ver :pep:`655` para más detalles."

#: ../Doc/whatsnew/3.11.rst:309
msgid ""
"(Contributed by David Foster and Jelle Zijlstra in :issue:`47087`. PEP "
"written by David Foster.)"
msgstr ""
"(Aportado por David Foster y Jelle Zijlstra en :issue:`47087`. PEP escrito "
"por David Foster)."

#: ../Doc/whatsnew/3.11.rst:316
msgid "PEP 673: ``Self`` type"
msgstr "PEP 673: tipo ``Self``"

#: ../Doc/whatsnew/3.11.rst:318
msgid ""
"The new :data:`~typing.Self` annotation provides a simple and intuitive way "
"to annotate methods that return an instance of their class. This behaves the "
"same as the :class:`~typing.TypeVar`-based approach :pep:`specified in PEP "
"484 <484#annotating-instance-and-class-methods>`, but is more concise and "
"easier to follow."
msgstr ""
"La nueva anotación :data:`~typing.Self` proporciona una forma sencilla e "
"intuitiva de anotar métodos que devuelven una instancia de su clase. Se "
"comporta igual que el enfoque :pep:`specified in PEP 484 <484#annotating-"
"instance-and-class-methods>` basado en :class:`~typing.TypeVar`, pero es más "
"conciso y más fácil de seguir."

#: ../Doc/whatsnew/3.11.rst:324
msgid ""
"Common use cases include alternative constructors provided as :func:"
"`classmethod <classmethod>`\\s, and :meth:`~object.__enter__` methods that "
"return ``self``::"
msgstr ""
"Los casos de uso comunes incluyen constructores alternativos proporcionados "
"como :func:`classmethod <classmethod>`\\s y métodos :meth:`~object."
"__enter__` que devuelven ``self``::"

#: ../Doc/whatsnew/3.11.rst:342
msgid ""
":data:`~typing.Self` can also be used to annotate method parameters or "
"attributes of the same type as their enclosing class."
msgstr ""
":data:`~typing.Self` también se puede usar para anotar parámetros de método "
"o atributos del mismo tipo que su clase envolvente."

#: ../Doc/whatsnew/3.11.rst:345
msgid "See :pep:`673` for more details."
msgstr "Ver :pep:`673` para más detalles."

#: ../Doc/whatsnew/3.11.rst:347
msgid ""
"(Contributed by James Hilton-Balfe in :issue:`46534`. PEP written by Pradeep "
"Kumar Srinivasan and James Hilton-Balfe.)"
msgstr ""
"(Aportado por James Hilton-Balfe en :issue:`46534`. PEP escrito por Pradeep "
"Kumar Srinivasan y James Hilton-Balfe)."

#: ../Doc/whatsnew/3.11.rst:354
msgid "PEP 675: Arbitrary literal string type"
msgstr "PEP 675: tipo de cadena literal arbitraria"

#: ../Doc/whatsnew/3.11.rst:356
msgid ""
"The new :data:`~typing.LiteralString` annotation may be used to indicate "
"that a function parameter can be of any literal string type. This allows a "
"function to accept arbitrary literal string types, as well as strings "
"created from other literal strings. Type checkers can then enforce that "
"sensitive functions, such as those that execute SQL statements or shell "
"commands, are called only with static arguments, providing protection "
"against injection attacks."
msgstr ""
"La nueva anotación :data:`~typing.LiteralString` se puede usar para indicar "
"que un parámetro de función puede ser de cualquier tipo de cadena literal. "
"Esto permite que una función acepte tipos de cadenas literales arbitrarias, "
"así como cadenas creadas a partir de otras cadenas literales. Los "
"verificadores de tipos pueden hacer cumplir que las funciones "
"confidenciales, como las que ejecutan declaraciones SQL o comandos de shell, "
"se llamen solo con argumentos estáticos, lo que brinda protección contra "
"ataques de inyección."

#: ../Doc/whatsnew/3.11.rst:364
msgid "For example, a SQL query function could be annotated as follows::"
msgstr ""
"Por ejemplo, una función de consulta SQL podría anotarse de la siguiente "
"manera:"

#: ../Doc/whatsnew/3.11.rst:382
msgid "See :pep:`675` for more details."
msgstr "Ver :pep:`675` para más detalles."

#: ../Doc/whatsnew/3.11.rst:384
msgid ""
"(Contributed by Jelle Zijlstra in :issue:`47088`. PEP written by Pradeep "
"Kumar Srinivasan and Graham Bleaney.)"
msgstr ""
"(Aportado por Jelle Zijlstra en :issue:`47088`. PEP escrito por Pradeep "
"Kumar Srinivasan y Graham Bleaney)."

#: ../Doc/whatsnew/3.11.rst:391
msgid "PEP 681: Data class transforms"
msgstr "PEP 681: Transformaciones de clases de datos"

#: ../Doc/whatsnew/3.11.rst:393
msgid ""
":data:`~typing.dataclass_transform` may be used to decorate a class, "
"metaclass, or a function that is itself a decorator. The presence of "
"``@dataclass_transform()`` tells a static type checker that the decorated "
"object performs runtime \"magic\" that transforms a class, giving it :func:"
"`dataclass <dataclasses.dataclass>`-like behaviors."
msgstr ""
":data:`~typing.dataclass_transform` se puede usar para decorar una clase, "
"una metaclase o una función que en sí misma es un decorador. La presencia de "
"``@dataclass_transform()`` le dice a un verificador de tipo estático que el "
"objeto decorado realiza una \"magia\" en tiempo de ejecución que transforma "
"una clase, dándole comportamientos similares a :func:`dataclass <dataclasses."
"dataclass>`."

#: ../Doc/whatsnew/3.11.rst:399
msgid "For example::"
msgstr "Por ejemplo::"

#: ../Doc/whatsnew/3.11.rst:417
msgid "See :pep:`681` for more details."
msgstr "Ver :pep:`681` para más detalles."

#: ../Doc/whatsnew/3.11.rst:419
msgid ""
"(Contributed by Jelle Zijlstra in :gh:`91860`. PEP written by Erik De Bonte "
"and Eric Traut.)"
msgstr ""
"(Aportado por Jelle Zijlstra en :gh:`91860`. PEP escrito por Erik De Bonte y "
"Eric Traut.)"

#: ../Doc/whatsnew/3.11.rst:426
msgid "PEP 563 may not be the future"
msgstr "PEP 563 puede no ser el futuro"

#: ../Doc/whatsnew/3.11.rst:428
msgid ""
":pep:`563` Postponed Evaluation of Annotations (the ``from __future__ import "
"annotations`` :ref:`future statement <future>`) that was originally planned "
"for release in Python 3.10 has been put on hold indefinitely. See `this "
"message from the Steering Council <https://mail.python.org/archives/list/"
"python-dev@python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__ for more "
"information."
msgstr ""
":pep:`563` Evaluación pospuesta de anotaciones (``from __future__ import "
"annotations`` :ref:`future statement <future>`) que originalmente se planeó "
"para su lanzamiento en Python 3.10 se suspendió indefinidamente. Consulte "
"`this message from the Steering Council <https://mail.python.org/archives/"
"list/python-dev@python.org/message/VIZEBX5EYMSYIJNDBF6DMUMZOCWHARSO/>`__ "
"para obtener más información."

#: ../Doc/whatsnew/3.11.rst:439
msgid "Other Language Changes"
msgstr "Otros cambios de idioma"

#: ../Doc/whatsnew/3.11.rst:441
msgid ""
"Starred unpacking expressions can now be used in :keyword:`for` statements. "
"(See :issue:`46725` for more details.)"
msgstr ""
"Las expresiones de desempaquetado destacadas ahora se pueden usar en "
"declaraciones :keyword:`for`. (Consulte :issue:`46725` para obtener más "
"detalles)."

#: ../Doc/whatsnew/3.11.rst:444
msgid ""
"Asynchronous :ref:`comprehensions <comprehensions>` are now allowed inside "
"comprehensions in :ref:`asynchronous functions <async def>`. Outer "
"comprehensions implicitly become asynchronous in this case. (Contributed by "
"Serhiy Storchaka in :issue:`33346`.)"
msgstr ""
"Ahora se permiten :ref:`comprehensions <comprehensions>` asincrónicos dentro "
"de las comprensiones en :ref:`asynchronous functions <async def>`. Las "
"comprensiones externas implícitamente se vuelven asincrónicas en este caso. "
"(Aportado por Serhiy Storchaka en :issue:`33346`.)"

#: ../Doc/whatsnew/3.11.rst:449
msgid ""
"A :exc:`TypeError` is now raised instead of an :exc:`AttributeError` in :"
"keyword:`with` statements and :meth:`contextlib.ExitStack.enter_context` for "
"objects that do not support the :term:`context manager` protocol, and in :"
"keyword:`async with` statements and :meth:`contextlib.AsyncExitStack."
"enter_async_context` for objects not supporting the :term:`asynchronous "
"context manager` protocol. (Contributed by Serhiy Storchaka in :issue:"
"`12022` and :issue:`44471`.)"
msgstr ""
"Ahora se genera un :exc:`TypeError` en lugar de un :exc:`AttributeError` en "
"declaraciones :keyword:`with` y :meth:`contextlib.ExitStack.enter_context` "
"para objetos que no admiten el protocolo :term:`context manager`, y en "
"declaraciones :keyword:`async with` y :meth:`contextlib.AsyncExitStack."
"enter_async_context` para objetos que no admiten el protocolo :term:"
"`asynchronous context manager`. (Aportado por Serhiy Storchaka en :issue:"
"`12022` y :issue:`44471`)."

#: ../Doc/whatsnew/3.11.rst:457
msgid ""
"Added :meth:`object.__getstate__`, which provides the default implementation "
"of the :meth:`!__getstate__` method. :mod:`copy`\\ing and :mod:`pickle`\\ing "
"instances of subclasses of builtin types :class:`bytearray`, :class:`set`, :"
"class:`frozenset`, :class:`collections.OrderedDict`, :class:`collections."
"deque`, :class:`weakref.WeakSet`, and :class:`datetime.tzinfo` now copies "
"and pickles instance attributes implemented as :term:`slots <__slots__>`. "
"(Contributed by Serhiy Storchaka in :issue:`26579`.)"
msgstr ""
"Se agregó :meth:`object.__getstate__`, que proporciona la implementación "
"predeterminada del método :meth:`!__getstate__`. Las instancias :mod:"
"`copy`\\ing y :mod:`pickle`\\ing de subclases de tipos integrados :class:"
"`bytearray`, :class:`set`, :class:`frozenset`, :class:`collections."
"OrderedDict`, :class:`collections.deque`, :class:`weakref.WeakSet` y :class:"
"`datetime.tzinfo` ahora copian y conservan atributos de instancia "
"implementados como :term:`slots <__slots__>`. (Aportado por Serhiy Storchaka "
"en :issue:`26579`.)"

#: ../Doc/whatsnew/3.11.rst:468
msgid ""
"Added a :option:`-P` command line option and a :envvar:`PYTHONSAFEPATH` "
"environment variable, which disable the automatic prepending to :data:`sys."
"path` of the script's directory when running a script, or the current "
"directory when using :option:`-c` and :option:`-m`. This ensures only stdlib "
"and installed modules are picked up by :keyword:`import`, and avoids "
"unintentionally or maliciously shadowing modules with those in a local (and "
"typically user-writable) directory. (Contributed by Victor Stinner in :gh:"
"`57684`.)"
msgstr ""
"Se agregó una opción de línea de comando :option:`-P` y una variable de "
"entorno :envvar:`PYTHONSAFEPATH`, que deshabilitan la anteposición "
"automática a :data:`sys.path` del directorio del script cuando se ejecuta un "
"script, o el directorio actual cuando se usa :option:`-c` y :option:`-m`. "
"Esto garantiza que :keyword:`import` solo recopile la biblioteca estándar y "
"los módulos instalados, y evita el remedo involuntario o malicioso de los "
"módulos con los de un directorio local (y normalmente el usuario puede "
"escribir). (Aportado por Victor Stinner en :gh:`57684`.)"

#: ../Doc/whatsnew/3.11.rst:479
msgid ""
"A ``\"z\"`` option was added to the :ref:`formatspec` that coerces negative "
"to positive zero after rounding to the format precision. See :pep:`682` for "
"more details. (Contributed by John Belmonte in :gh:`90153`.)"
msgstr ""
"Se agregó una opción ``\"z\"`` a :ref:`formatspec` que cambia negativo a "
"cero positivo después de redondear a la precisión del formato. Ver :pep:"
"`682` para más detalles. (Aportado por John Belmonte en :gh:`90153`.)"

#: ../Doc/whatsnew/3.11.rst:484
msgid ""
"Bytes are no longer accepted on :data:`sys.path`.  Support broke sometime "
"between Python 3.2 and 3.6, with no one noticing until after Python 3.10.0 "
"was released. In addition, bringing back support would be problematic due to "
"interactions between :option:`-b` and :data:`sys.path_importer_cache` when "
"there is a mixture of :class:`str` and :class:`bytes` keys. (Contributed by "
"Thomas Grainger in :gh:`91181`.)"
msgstr ""
"Ya no se aceptan bytes en :data:`sys.path`. El soporte se interrumpió en "
"algún momento entre Python 3.2 y 3.6, y nadie se dio cuenta hasta después "
"del lanzamiento de Python 3.10.0. Además, recuperar la compatibilidad sería "
"problemático debido a las interacciones entre :option:`-b` y :data:`sys."
"path_importer_cache` cuando hay una combinación de claves :class:`str` y :"
"class:`bytes`. (Aportado por Thomas Grainger en :gh:`91181`.)"

#: ../Doc/whatsnew/3.11.rst:495
msgid "Other CPython Implementation Changes"
msgstr "Otros cambios en la implementación de CPython"

#: ../Doc/whatsnew/3.11.rst:497
msgid ""
"The special methods :meth:`~object.__complex__` for :class:`complex` and :"
"meth:`~object.__bytes__` for :class:`bytes` are implemented to support the :"
"class:`typing.SupportsComplex` and :class:`typing.SupportsBytes` protocols. "
"(Contributed by Mark Dickinson and Dong-hee Na in :issue:`24234`.)"
msgstr ""
"Los métodos especiales :meth:`~object.__complex__` para :class:`complex` y :"
"meth:`~object.__bytes__` para :class:`bytes` se implementan para admitir los "
"protocolos :class:`typing.SupportsComplex` y :class:`typing.SupportsBytes`. "
"(Aportado por Mark Dickinson y Dong-hee Na en :issue:`24234`)."

#: ../Doc/whatsnew/3.11.rst:502
msgid ""
"``siphash13`` is added as a new internal hashing algorithm. It has similar "
"security properties as ``siphash24``, but it is slightly faster for long "
"inputs. :class:`str`, :class:`bytes`, and some other types now use it as the "
"default algorithm for :func:`hash`. :pep:`552` :ref:`hash-based .pyc files "
"<pyc-invalidation>` now use ``siphash13`` too. (Contributed by Inada Naoki "
"in :issue:`29410`.)"
msgstr ""
"``siphash13`` se agrega como un nuevo algoritmo hash interno. Tiene "
"propiedades de seguridad similares a ``siphash24``, pero es un poco más "
"rápido para entradas largas. :class:`str`, :class:`bytes` y algunos otros "
"tipos ahora lo usan como algoritmo predeterminado para :func:`hash`. :pep:"
"`552` :ref:`hash-based .pyc files <pyc-invalidation>` ahora también usa "
"``siphash13``. (Aportado por Inada Naoki en :issue:`29410`.)"

#: ../Doc/whatsnew/3.11.rst:511
msgid ""
"When an active exception is re-raised by a :keyword:`raise` statement with "
"no parameters, the traceback attached to this exception is now always ``sys."
"exc_info()[1].__traceback__``. This means that changes made to the traceback "
"in the current :keyword:`except` clause are reflected in the re-raised "
"exception. (Contributed by Irit Katriel in :issue:`45711`.)"
msgstr ""
"Cuando una declaración :keyword:`raise` sin parámetros vuelve a generar una "
"excepción activa, el rastreo adjunto a esta excepción ahora siempre es ``sys."
"exc_info()[1].__traceback__``. Esto significa que los cambios realizados en "
"el rastreo en la cláusula :keyword:`except` actual se reflejan en la "
"excepción que se ha vuelto a generar. (Aportado por Irit Katriel en :issue:"
"`45711`.)"

#: ../Doc/whatsnew/3.11.rst:517
msgid ""
"The interpreter state's representation of handled exceptions (aka "
"``exc_info`` or ``_PyErr_StackItem``) now only has the ``exc_value`` field; "
"``exc_type`` and ``exc_traceback`` have been removed, as they can be derived "
"from ``exc_value``. (Contributed by Irit Katriel in :issue:`45711`.)"
msgstr ""
"La representación del estado del intérprete de las excepciones manejadas "
"(también conocido como ``exc_info`` o ``_PyErr_StackItem``) ahora solo tiene "
"el campo ``exc_value``; Se han eliminado ``exc_type`` y ``exc_traceback``, "
"ya que se pueden derivar de ``exc_value``. (Aportado por Irit Katriel en :"
"issue:`45711`.)"

#: ../Doc/whatsnew/3.11.rst:523
msgid ""
"A new :ref:`command line option <install-quiet-option>`, ``AppendPath``, has "
"been added for the Windows installer. It behaves similarly to "
"``PrependPath``, but appends the install and scripts directories instead of "
"prepending them. (Contributed by Bastian Neuburger in :issue:`44934`.)"
msgstr ""
"Se ha agregado un nuevo :ref:`command line option <install-quiet-option>`, "
"``AppendPath``, para el instalador de Windows. Se comporta de manera similar "
"a ``PrependPath``, pero agrega los directorios de instalación y scripts en "
"lugar de anteponerlos. (Aportado por Bastian Neuburger en :issue:`44934`.)"

#: ../Doc/whatsnew/3.11.rst:529
msgid ""
"The :c:member:`PyConfig.module_search_paths_set` field must now be set to "
"``1`` for initialization to use :c:member:`PyConfig.module_search_paths` to "
"initialize :data:`sys.path`. Otherwise, initialization will recalculate the "
"path and replace any values added to ``module_search_paths``."
msgstr ""
"El campo :c:member:`PyConfig.module_search_paths_set` ahora debe "
"establecerse en ``1`` para que la inicialización use :c:member:`PyConfig."
"module_search_paths` para inicializar :data:`sys.path`. De lo contrario, la "
"inicialización volverá a calcular la ruta y reemplazará los valores "
"agregados a ``module_search_paths``."

#: ../Doc/whatsnew/3.11.rst:534
msgid ""
"The output of the :option:`--help` option now fits in 50 lines/80 columns. "
"Information about :ref:`Python environment variables <using-on-envvars>` "
"and :option:`-X` options is now available using the respective :option:`--"
"help-env` and :option:`--help-xoptions` flags, and with the new :option:`--"
"help-all`. (Contributed by Éric Araujo in :issue:`46142`.)"
msgstr ""
"La salida de la opción :option:`--help` ahora cabe en 50 líneas/80 columnas. "
"La información sobre las opciones :ref:`Python environment variables <using-"
"on-envvars>` y :option:`-X` ahora está disponible utilizando los indicadores "
"respectivos :option:`--help-env` y :option:`--help-xoptions`, y con el "
"nuevo :option:`--help-all`. (Contribución de Éric Araujo en :issue:`46142`.)"

#: ../Doc/whatsnew/3.11.rst:541
msgid ""
"Converting between :class:`int` and :class:`str` in bases other than 2 "
"(binary), 4, 8 (octal), 16 (hexadecimal), or 32 such as base 10 (decimal) "
"now raises a :exc:`ValueError` if the number of digits in string form is "
"above a limit to avoid potential denial of service attacks due to the "
"algorithmic complexity. This is a mitigation for `CVE-2020-10735 <https://"
"cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-10735>`_. This limit can be "
"configured or disabled by environment variable, command line flag, or :mod:"
"`sys` APIs. See the :ref:`integer string conversion length limitation "
"<int_max_str_digits>` documentation.  The default limit is 4300 digits in "
"string form."
msgstr ""
"La conversión entre :class:`int` y :class:`str` en bases que no sean 2 "
"(binario), 4, 8 (octal), 16 (hexadecimal) o 32 como base 10 (decimal) ahora "
"genera un :exc:`ValueError` si el número de dígitos en forma de cadena es "
"superior a un límite para evitar posibles ataques de denegación de servicio "
"debido a la complejidad algorítmica. Esta es una mitigación para "
"`CVE-2020-10735 <https://cve.mitre.org/cgi-bin/cvename.cgi?"
"name=CVE-2020-10735>`_. Este límite se puede configurar o deshabilitar "
"mediante la variable de entorno, el indicador de línea de comando o las API :"
"mod:`sys`. Consulte la documentación de :ref:`integer string conversion "
"length limitation <int_max_str_digits>`. El límite predeterminado es de 4300 "
"dígitos en forma de cadena."

#: ../Doc/whatsnew/3.11.rst:556
msgid "New Modules"
msgstr "Nuevos Módulos"

#: ../Doc/whatsnew/3.11.rst:558
msgid ""
":mod:`tomllib`: For parsing `TOML <https://toml.io/>`_. See :pep:`680` for "
"more details. (Contributed by Taneli Hukkinen in :issue:`40059`.)"
msgstr ""
":mod:`tomllib`: para analizar `TOML <https://toml.io/>`_. Ver :pep:`680` "
"para más detalles. (Aportado por Taneli Hukkinen en :issue:`40059`.)"

#: ../Doc/whatsnew/3.11.rst:562
msgid ""
":mod:`wsgiref.types`: :pep:`WSGI <3333>`-specific types for static type "
"checking. (Contributed by Sebastian Rittau in :issue:`42012`.)"
msgstr ""
":mod:`wsgiref.types`: tipos específicos de :pep:`WSGI <3333>` para la "
"comprobación de tipos estáticos. (Aportado por Sebastian Rittau en :issue:"
"`42012`.)"

#: ../Doc/whatsnew/3.11.rst:570
msgid "Improved Modules"
msgstr "Módulos mejorados"

#: ../Doc/whatsnew/3.11.rst:575
msgid "asyncio"
msgstr "asíncio"

#: ../Doc/whatsnew/3.11.rst:577
msgid ""
"Added the :class:`~asyncio.TaskGroup` class, an :ref:`asynchronous context "
"manager <async-context-managers>` holding a group of tasks that will wait "
"for all of them upon exit. For new code this is recommended over using :func:"
"`~asyncio.create_task` and :func:`~asyncio.gather` directly. (Contributed by "
"Yury Selivanov and others in :gh:`90908`.)"
msgstr ""
"Se agregó la clase :class:`~asyncio.TaskGroup`, un :ref:`asynchronous "
"context manager <async-context-managers>` que contiene un grupo de tareas "
"que las esperará a todas al salir. Para código nuevo, se recomienda usar :"
"func:`~asyncio.create_task` y :func:`~asyncio.gather` directamente. "
"(Aportado por Yury Selivanov y otros en :gh:`90908`.)"

#: ../Doc/whatsnew/3.11.rst:584
msgid ""
"Added :func:`~asyncio.timeout`, an asynchronous context manager for setting "
"a timeout on asynchronous operations. For new code this is recommended over "
"using :func:`~asyncio.wait_for` directly. (Contributed by Andrew Svetlov in :"
"gh:`90927`.)"
msgstr ""
"Se agregó :func:`~asyncio.timeout`, un administrador de contexto asíncrono "
"para establecer un tiempo de espera en operaciones asíncronas. Para código "
"nuevo, se recomienda usar :func:`~asyncio.wait_for` directamente. (Aportado "
"por Andrew Svetlov en :gh:`90927`.)"

#: ../Doc/whatsnew/3.11.rst:589
msgid ""
"Added the :class:`~asyncio.Runner` class, which exposes the machinery used "
"by :func:`~asyncio.run`. (Contributed by Andrew Svetlov in :gh:`91218`.)"
msgstr ""
"Se agregó la clase :class:`~asyncio.Runner`, que expone la maquinaria "
"utilizada por :func:`~asyncio.run`. (Aportado por Andrew Svetlov en :gh:"
"`91218`.)"

#: ../Doc/whatsnew/3.11.rst:593
msgid ""
"Added the :class:`~asyncio.Barrier` class to the synchronization primitives "
"in the asyncio library, and the related :exc:`~asyncio.BrokenBarrierError` "
"exception. (Contributed by Yves Duprat and Andrew Svetlov in :gh:`87518`.)"
msgstr ""
"Se agregó la clase :class:`~asyncio.Barrier` a las primitivas de "
"sincronización en la biblioteca asyncio y la excepción :exc:`~asyncio."
"BrokenBarrierError` relacionada. (Aportado por Yves Duprat y Andrew Svetlov "
"en :gh:`87518`.)"

#: ../Doc/whatsnew/3.11.rst:598
msgid ""
"Added keyword argument *all_errors* to :meth:`asyncio.loop."
"create_connection` so that multiple connection errors can be raised as an :"
"exc:`ExceptionGroup`."
msgstr ""
"Se agregó el argumento de palabra clave *all_errors* a :meth:`asyncio.loop."
"create_connection` para que se puedan generar varios errores de conexión "
"como :exc:`ExceptionGroup`."

#: ../Doc/whatsnew/3.11.rst:601
msgid ""
"Added the :meth:`asyncio.StreamWriter.start_tls` method for upgrading "
"existing stream-based connections to TLS. (Contributed by Ian Good in :issue:"
"`34975`.)"
msgstr ""
"Se agregó el método :meth:`asyncio.StreamWriter.start_tls` para actualizar "
"las conexiones basadas en secuencias existentes a TLS. (Aportado por Ian "
"Good en :issue:`34975`.)"

#: ../Doc/whatsnew/3.11.rst:605
msgid ""
"Added raw datagram socket functions to the event loop: :meth:`~asyncio.loop."
"sock_sendto`, :meth:`~asyncio.loop.sock_recvfrom` and :meth:`~asyncio.loop."
"sock_recvfrom_into`. These have implementations in :class:`~asyncio."
"SelectorEventLoop` and :class:`~asyncio.ProactorEventLoop`. (Contributed by "
"Alex Grönholm in :issue:`46805`.)"
msgstr ""
"Se agregaron funciones de socket de datagrama sin formato al bucle de "
"eventos: :meth:`~asyncio.loop.sock_sendto`, :meth:`~asyncio.loop."
"sock_recvfrom` y :meth:`~asyncio.loop.sock_recvfrom_into`. Estos tienen "
"implementaciones en :class:`~asyncio.SelectorEventLoop` y :class:`~asyncio."
"ProactorEventLoop`. (Aportado por Alex Grönholm en :issue:`46805`.)"

#: ../Doc/whatsnew/3.11.rst:613
msgid ""
"Added :meth:`~asyncio.Task.cancelling` and :meth:`~asyncio.Task.uncancel` "
"methods to :class:`~asyncio.Task`. These are primarily intended for internal "
"use, notably by :class:`~asyncio.TaskGroup`."
msgstr ""
"Se agregaron los métodos :meth:`~asyncio.Task.cancelling` y :meth:`~asyncio."
"Task.uncancel` a :class:`~asyncio.Task`. Estos están destinados "
"principalmente para uso interno, en particular por :class:`~asyncio."
"TaskGroup`."

#: ../Doc/whatsnew/3.11.rst:619
msgid "contextlib"
msgstr "contextlib"

#: ../Doc/whatsnew/3.11.rst:621
msgid ""
"Added non parallel-safe :func:`~contextlib.chdir` context manager to change "
"the current working directory and then restore it on exit. Simple wrapper "
"around :func:`~os.chdir`. (Contributed by Filipe Laíns in :issue:`25625`)"
msgstr ""
"Se agregó un administrador de contexto :func:`~contextlib.chdir` no seguro "
"en paralelo para cambiar el directorio de trabajo actual y luego restaurarlo "
"al salir. Envoltorio simple alrededor de :func:`~os.chdir`. (Aportación de "
"Filipe Laíns en :issue:`25625`)"

#: ../Doc/whatsnew/3.11.rst:626
msgid "dataclasses"
msgstr "clases de datos"

#: ../Doc/whatsnew/3.11.rst:628
msgid ""
"Change field default mutability check, allowing only defaults which are :"
"term:`hashable` instead of any object which is not an instance of :class:"
"`dict`, :class:`list` or :class:`set`. (Contributed by Eric V. Smith in :"
"issue:`44674`.)"
msgstr ""
"Cambie la verificación de mutabilidad predeterminada del campo, permitiendo "
"solo los valores predeterminados que son :term:`hashable` en lugar de "
"cualquier objeto que no sea una instancia de :class:`dict`, :class:`list` o :"
"class:`set`. (Aportado por Eric V. Smith en :issue:`44674`.)"

#: ../Doc/whatsnew/3.11.rst:634
msgid "datetime"
msgstr "fecha y hora"

#: ../Doc/whatsnew/3.11.rst:636
msgid ""
"Add :attr:`datetime.UTC`, a convenience alias for :attr:`datetime.timezone."
"utc`. (Contributed by Kabir Kwatra in :gh:`91973`.)"
msgstr ""
"Agregue :attr:`datetime.UTC`, un alias conveniente para :attr:`datetime."
"timezone.utc`. (Aportado por Kabir Kwatra en :gh:`91973`.)"

#: ../Doc/whatsnew/3.11.rst:638
msgid ""
":meth:`datetime.date.fromisoformat`, :meth:`datetime.time.fromisoformat` "
"and :meth:`datetime.datetime.fromisoformat` can now be used to parse most "
"ISO 8601 formats (barring only those that support fractional hours and "
"minutes). (Contributed by Paul Ganssle in :gh:`80010`.)"
msgstr ""
":meth:`datetime.date.fromisoformat`, :meth:`datetime.time.fromisoformat` y :"
"meth:`datetime.datetime.fromisoformat` ahora se pueden usar para analizar la "
"mayoría de los formatos ISO 8601 (excepto aquellos que admiten fracciones de "
"horas y minutos). (Aportado por Paul Ganssle en :gh:`80010`.)"

#: ../Doc/whatsnew/3.11.rst:647
msgid "enum"
msgstr "enumeración"

#: ../Doc/whatsnew/3.11.rst:649
msgid ""
"Renamed :class:`!EnumMeta` to :class:`~enum.EnumType` (:class:`!EnumMeta` "
"kept as an alias)."
msgstr ""
"Cambió el nombre de :class:`!EnumMeta` a :class:`~enum.EnumType` (:class:`!"
"EnumMeta` se mantuvo como un alias)."

#: ../Doc/whatsnew/3.11.rst:652
msgid ""
"Added :class:`~enum.StrEnum`, with members that can be used as (and must be) "
"strings."
msgstr ""
"Se agregó :class:`~enum.StrEnum`, con miembros que se pueden usar como (y "
"deben ser) cadenas."

#: ../Doc/whatsnew/3.11.rst:655
msgid ""
"Added :class:`~enum.ReprEnum`, which only modifies the :meth:`~object."
"__repr__` of members while returning their literal values (rather than "
"names) for :meth:`~object.__str__` and :meth:`~object.__format__` (used by :"
"func:`str`, :func:`format` and :term:`f-string`\\s)."
msgstr ""
"Se agregó :class:`~enum.ReprEnum`, que solo modifica el :meth:`~object."
"__repr__` de los miembros mientras devuelve sus valores literales (en lugar "
"de nombres) para :meth:`~object.__str__` y :meth:`~object.__format__` "
"(utilizados por :func:`str`, :func:`format` y :term:`f-string`\\s)."

#: ../Doc/whatsnew/3.11.rst:661
msgid ""
"Changed :class:`~enum.IntEnum`, :class:`~enum.IntFlag` and :class:`~enum."
"StrEnum` to now inherit from :class:`ReprEnum`, so their :func:`str` output "
"now matches :func:`format` (both ``str(AnIntEnum.ONE)`` and "
"``format(AnIntEnum.ONE)`` return ``'1'``, whereas before ``str(AnIntEnum."
"ONE)`` returned ``'AnIntEnum.ONE'``."
msgstr ""
"Se cambiaron :class:`~enum.IntEnum`, :class:`~enum.IntFlag` y :class:`~enum."
"StrEnum` para heredar ahora de :class:`ReprEnum`, por lo que su salida :func:"
"`str` ahora coincide con :func:`format` (tanto ``str(AnIntEnum.ONE)`` como "
"``format(AnIntEnum.ONE)`` devuelven ``'1'``, mientras que antes "
"``str(AnIntEnum.ONE)`` devolvía ``'AnIntEnum.ONE'``."

#: ../Doc/whatsnew/3.11.rst:667
msgid ""
"Changed :meth:`Enum.__format__() <enum.Enum.__format__>` (the default for :"
"func:`format`, :meth:`str.format` and :term:`f-string`\\s) of enums with "
"mixed-in types (e.g. :class:`int`, :class:`str`) to also include the class "
"name in the output, not just the member's key. This matches the existing "
"behavior of :meth:`enum.Enum.__str__`, returning e.g. ``'AnEnum.MEMBER'`` "
"for an enum ``AnEnum(str, Enum)`` instead of just ``'MEMBER'``."
msgstr ""
"Se modificó :meth:`Enum.__format__() <enum.Enum.__format__>` (el valor "
"predeterminado para :func:`format`, :meth:`str.format` y :term:`f-"
"string`\\s) de enumeraciones con tipos combinados (por ejemplo, :class:"
"`int`, :class:`str`) para incluir también el nombre de la clase en la "
"salida, no solo la clave del miembro. Esto coincide con el comportamiento "
"existente de :meth:`enum.Enum.__str__`, devolviendo, p. ``'AnEnum.MEMBER'`` "
"para una enumeración ``AnEnum(str, Enum)`` en lugar de solo ``'MEMBER'``."

#: ../Doc/whatsnew/3.11.rst:675
msgid ""
"Added a new *boundary* class parameter to :class:`~enum.Flag` enums and the :"
"class:`~enum.FlagBoundary` enum with its options, to control how to handle "
"out-of-range flag values."
msgstr ""
"Se agregó un nuevo parámetro de clase *boundary* a las enumeraciones :class:"
"`~enum.Flag` y la enumeración :class:`~enum.FlagBoundary` con sus opciones, "
"para controlar cómo manejar los valores de marca fuera de rango."

#: ../Doc/whatsnew/3.11.rst:679
msgid ""
"Added the :func:`~enum.verify` enum decorator and the :class:`~enum."
"EnumCheck` enum with its options, to check enum classes against several "
"specific constraints."
msgstr ""
"Se agregó el decorador de enumeración :func:`~enum.verify` y la enumeración :"
"class:`~enum.EnumCheck` con sus opciones, para verificar las clases de "
"enumeración contra varias restricciones específicas."

#: ../Doc/whatsnew/3.11.rst:683
msgid ""
"Added the :func:`~enum.member` and :func:`~enum.nonmember` decorators, to "
"ensure the decorated object is/is not converted to an enum member."
msgstr ""
"Se agregaron los decoradores :func:`~enum.member` y :func:`~enum.nonmember` "
"para garantizar que el objeto decorado no se convierta en un miembro de "
"enumeración."

#: ../Doc/whatsnew/3.11.rst:686
msgid ""
"Added the :func:`~enum.property` decorator, which works like :func:"
"`property` except for enums. Use this instead of :func:`types."
"DynamicClassAttribute`."
msgstr ""
"Se agregó el decorador :func:`~enum.property`, que funciona como :func:"
"`property` excepto para las enumeraciones. Use esto en lugar de :func:`types."
"DynamicClassAttribute`."

#: ../Doc/whatsnew/3.11.rst:690
msgid ""
"Added the :func:`~enum.global_enum` enum decorator, which adjusts :meth:"
"`~object.__repr__` and :meth:`~object.__str__` to show values as members of "
"their module rather than the enum class. For example, ``'re.ASCII'`` for "
"the :data:`~re.ASCII` member of :class:`re.RegexFlag` rather than "
"``'RegexFlag.ASCII'``."
msgstr ""
"Se agregó el decorador de enumeración :func:`~enum.global_enum`, que ajusta :"
"meth:`~object.__repr__` y :meth:`~object.__str__` para mostrar valores como "
"miembros de su módulo en lugar de la clase de enumeración. Por ejemplo, "
"``'re.ASCII'`` para el miembro :data:`~re.ASCII` de :class:`re.RegexFlag` en "
"lugar de ``'RegexFlag.ASCII'``."

#: ../Doc/whatsnew/3.11.rst:696
msgid ""
"Enhanced :class:`~enum.Flag` to support :func:`len`, iteration and :keyword:"
"`in`/:keyword:`not in` on its members. For example, the following now works: "
"``len(AFlag(3)) == 2 and list(AFlag(3)) == (AFlag.ONE, AFlag.TWO)``"
msgstr ""
":class:`~enum.Flag` mejorado para admitir :func:`len`, iteración y :keyword:"
"`in`/:keyword:`not in` en sus miembros. Por ejemplo, ahora funciona lo "
"siguiente: ``len(AFlag(3)) == 2 and list(AFlag(3)) == (AFlag.ONE, AFlag."
"TWO)``"

#: ../Doc/whatsnew/3.11.rst:701
msgid ""
"Changed :class:`~enum.Enum` and :class:`~enum.Flag` so that members are now "
"defined before :meth:`~object.__init_subclass__` is called; :func:`dir` now "
"includes methods, etc., from mixed-in data types."
msgstr ""
"Se cambiaron :class:`~enum.Enum` y :class:`~enum.Flag` para que los miembros "
"ahora se definan antes de llamar a :meth:`~object.__init_subclass__`; :func:"
"`dir` ahora incluye métodos, etc., de tipos de datos combinados."

#: ../Doc/whatsnew/3.11.rst:706
msgid ""
"Changed :class:`~enum.Flag` to only consider primary values (power of two) "
"canonical while composite values (``3``, ``6``, ``10``, etc.) are considered "
"aliases; inverted flags are coerced to their positive equivalent."
msgstr ""
"Se modificó :class:`~enum.Flag` para considerar solo los valores primarios "
"(potencia de dos) canónicos, mientras que los valores compuestos (``3``, "
"``6``, ``10``, etc.) se consideran alias; las banderas invertidas son "
"forzadas a su equivalente positivo."

#: ../Doc/whatsnew/3.11.rst:713
msgid "fractions"
msgstr "fracciones"

#: ../Doc/whatsnew/3.11.rst:715
msgid ""
"Support :PEP:`515`-style initialization of :class:`~fractions.Fraction` from "
"string.  (Contributed by Sergey B Kirpichev in :issue:`44258`.)"
msgstr ""
"Compatibilidad con la inicialización al estilo :PEP:`515` de :class:"
"`~fractions.Fraction` desde una cadena. (Aportado por Sergey B Kirpichev en :"
"issue:`44258`.)"

#: ../Doc/whatsnew/3.11.rst:718
msgid ""
":class:`~fractions.Fraction` now implements an ``__int__`` method, so that "
"an ``isinstance(some_fraction, typing.SupportsInt)`` check passes. "
"(Contributed by Mark Dickinson in :issue:`44547`.)"
msgstr ""
":class:`~fractions.Fraction` ahora implementa un método ``__int__``, de modo "
"que pasa una verificación ``isinstance(some_fraction, typing.SupportsInt)``. "
"(Contribuido por Mark Dickinson en :issue:`44547`.)"

#: ../Doc/whatsnew/3.11.rst:723
msgid "functools"
msgstr "herramientas funcionales"

#: ../Doc/whatsnew/3.11.rst:725
msgid ""
":func:`functools.singledispatch` now supports :data:`types.UnionType` and :"
"data:`typing.Union` as annotations to the dispatch argument.::"
msgstr ""
":func:`functools.singledispatch` ahora admite :data:`types.UnionType` y :"
"data:`typing.Union` como anotaciones en el argumento de envío.::"

#: ../Doc/whatsnew/3.11.rst:750
msgid "(Contributed by Yurii Karabas in :issue:`46014`.)"
msgstr "(Aportado por Yurii Karabas en :issue:`46014`.)"

#: ../Doc/whatsnew/3.11.rst:753
msgid "hashlib"
msgstr "hashlib"

#: ../Doc/whatsnew/3.11.rst:755
msgid ""
":func:`hashlib.blake2b` and :func:`hashlib.blake2s` now prefer `libb2`_ over "
"Python's vendored copy. (Contributed by Christian Heimes in :issue:`47095`.)"
msgstr ""
":func:`hashlib.blake2b` y :func:`hashlib.blake2s` ahora prefieren `libb2`_ a "
"la copia proporcionada por Python. (Aportado por Christian Heimes en :issue:"
"`47095`.)"

#: ../Doc/whatsnew/3.11.rst:759
msgid ""
"The internal ``_sha3`` module with SHA3 and SHAKE algorithms now uses "
"*tiny_sha3* instead of the *Keccak Code Package* to reduce code and binary "
"size. The :mod:`hashlib` module prefers optimized SHA3 and SHAKE "
"implementations from OpenSSL. The change affects only installations without "
"OpenSSL support. (Contributed by Christian Heimes in :issue:`47098`.)"
msgstr ""
"El módulo interno ``_sha3`` con algoritmos SHA3 y SHAKE ahora usa "
"*tiny_sha3* en lugar de *Keccak Code Package* para reducir el código y el "
"tamaño binario. El módulo :mod:`hashlib` prefiere implementaciones SHA3 y "
"SHAKE optimizadas de OpenSSL. El cambio afecta solo a las instalaciones sin "
"compatibilidad con OpenSSL. (Aportado por Christian Heimes en :issue:"
"`47098`.)"

#: ../Doc/whatsnew/3.11.rst:766
msgid ""
"Add :func:`hashlib.file_digest`, a helper function for efficient hashing of "
"files or file-like objects. (Contributed by Christian Heimes in :gh:`89313`.)"
msgstr ""
"Agregue :func:`hashlib.file_digest`, una función de ayuda para el hash "
"eficiente de archivos u objetos similares a archivos. (Aportado por "
"Christian Heimes en :gh:`89313`.)"

#: ../Doc/whatsnew/3.11.rst:771
msgid "IDLE and idlelib"
msgstr "IDLE y libre de inactividad"

#: ../Doc/whatsnew/3.11.rst:773
msgid ""
"Apply syntax highlighting to ``.pyi`` files. (Contributed by Alex Waygood "
"and Terry Jan Reedy in :issue:`45447`.)"
msgstr ""
"Aplicar resaltado de sintaxis a archivos ``.pyi``. (Aportado por Alex "
"Waygood y Terry Jan Reedy en :issue:`45447`)."

#: ../Doc/whatsnew/3.11.rst:776
msgid ""
"Include prompts when saving Shell with inputs and outputs. (Contributed by "
"Terry Jan Reedy in :gh:`95191`.)"
msgstr ""
"Incluya avisos al guardar Shell con entradas y salidas. (Aportado por Terry "
"Jan Reedy en :gh:`95191`.)"

#: ../Doc/whatsnew/3.11.rst:783
msgid "inspect"
msgstr "inspeccionar"

#: ../Doc/whatsnew/3.11.rst:785
msgid ""
"Add :func:`~inspect.getmembers_static` to return all members without "
"triggering dynamic lookup via the descriptor protocol. (Contributed by "
"Weipeng Hong in :issue:`30533`.)"
msgstr ""
"Agregue :func:`~inspect.getmembers_static` para devolver todos los miembros "
"sin activar la búsqueda dinámica a través del protocolo descriptor. "
"(Contribuido por Weipeng Hong en :issue:`30533`.)"

#: ../Doc/whatsnew/3.11.rst:789
msgid ""
"Add :func:`~inspect.ismethodwrapper` for checking if the type of an object "
"is a :class:`~types.MethodWrapperType`. (Contributed by Hakan Çelik in :"
"issue:`29418`.)"
msgstr ""
"Agregue :func:`~inspect.ismethodwrapper` para verificar si el tipo de un "
"objeto es :class:`~types.MethodWrapperType`. (Aportado por Hakan Çelik en :"
"issue:`29418`.)"

#: ../Doc/whatsnew/3.11.rst:793
msgid ""
"Change the frame-related functions in the :mod:`inspect` module to return "
"new :class:`~inspect.FrameInfo` and :class:`~inspect.Traceback` class "
"instances (backwards compatible with the previous :term:`named tuple`-like "
"interfaces) that includes the extended :pep:`657` position information (end "
"line number, column and end column). The affected functions are:"
msgstr ""
"Cambie las funciones relacionadas con el marco en el módulo :mod:`inspect` "
"para devolver nuevas instancias de clase :class:`~inspect.FrameInfo` y :"
"class:`~inspect.Traceback` (compatibles con las interfaces similares a :term:"
"`named tuple` anteriores) que incluyen la información de posición :pep:`657` "
"extendida (número de línea final, columna y columna final). Las funciones "
"afectadas son:"

#: ../Doc/whatsnew/3.11.rst:799
msgid ":func:`inspect.getframeinfo`"
msgstr ":func:`inspect.getframeinfo`"

#: ../Doc/whatsnew/3.11.rst:800
msgid ":func:`inspect.getouterframes`"
msgstr ":func:`inspect.getouterframes`"

#: ../Doc/whatsnew/3.11.rst:801
msgid ":func:`inspect.getinnerframes`,"
msgstr ":func:`inspect.getinnerframes`,"

#: ../Doc/whatsnew/3.11.rst:802
msgid ":func:`inspect.stack`"
msgstr ":func:`inspect.stack`"

#: ../Doc/whatsnew/3.11.rst:803
msgid ":func:`inspect.trace`"
msgstr ":func:`inspect.trace`"

#: ../Doc/whatsnew/3.11.rst:805
msgid "(Contributed by Pablo Galindo in :gh:`88116`.)"
msgstr "(Aportado por Pablo Galindo en :gh:`88116`.)"

#: ../Doc/whatsnew/3.11.rst:808
msgid "locale"
msgstr "lugar"

#: ../Doc/whatsnew/3.11.rst:810
msgid ""
"Add :func:`locale.getencoding` to get the current locale encoding. It is "
"similar to ``locale.getpreferredencoding(False)`` but ignores the :ref:"
"`Python UTF-8 Mode <utf8-mode>`."
msgstr ""
"Agregue :func:`locale.getencoding` para obtener la codificación de "
"configuración regional actual. Es similar a ``locale."
"getpreferredencoding(False)`` pero ignora :ref:`Python UTF-8 Mode <utf8-"
"mode>`."

#: ../Doc/whatsnew/3.11.rst:818
msgid "logging"
msgstr "Inicio sesión"

#: ../Doc/whatsnew/3.11.rst:820
msgid ""
"Added :func:`~logging.getLevelNamesMapping` to return a mapping from logging "
"level names (e.g. ``'CRITICAL'``) to the values of their corresponding :ref:"
"`levels` (e.g. ``50``, by default). (Contributed by Andrei Kulakovin in :gh:"
"`88024`.)"
msgstr ""
"Se agregó :func:`~logging.getLevelNamesMapping` para devolver una asignación "
"de nombres de nivel de registro (por ejemplo, ``'CRITICAL'``) a los valores "
"de su :ref:`levels` correspondiente (por ejemplo, ``50``, de forma "
"predeterminada). (Aportado por Andrei Kulakovin en :gh:`88024`.)"

#: ../Doc/whatsnew/3.11.rst:825
msgid ""
"Added a :meth:`~logging.handlers.SysLogHandler.createSocket` method to :"
"class:`~logging.handlers.SysLogHandler`, to match :meth:`SocketHandler."
"createSocket() <logging.handlers.SocketHandler.createSocket>`. It is called "
"automatically during handler initialization and when emitting an event, if "
"there is no active socket. (Contributed by Kirill Pinchuk in :gh:`88457`.)"
msgstr ""
"Se agregó un método :meth:`~logging.handlers.SysLogHandler.createSocket` a :"
"class:`~logging.handlers.SysLogHandler` para que coincida con :meth:"
"`SocketHandler.createSocket() <logging.handlers.SocketHandler."
"createSocket>`. Se llama automáticamente durante la inicialización del "
"controlador y cuando se emite un evento, si no hay un socket activo. "
"(Aportado por Kirill Pinchuk en :gh:`88457`.)"

#: ../Doc/whatsnew/3.11.rst:835
msgid "math"
msgstr "Matemáticas"

#: ../Doc/whatsnew/3.11.rst:837
msgid ""
"Add :func:`math.exp2`: return 2 raised to the power of x. (Contributed by "
"Gideon Mitchell in :issue:`45917`.)"
msgstr ""
"Suma :func:`math.exp2`: devuelve 2 elevado a la potencia de x. (Aportado por "
"Gideon Mitchell en :issue:`45917`.)"

#: ../Doc/whatsnew/3.11.rst:840
msgid ""
"Add :func:`math.cbrt`: return the cube root of x. (Contributed by Ajith "
"Ramachandran in :issue:`44357`.)"
msgstr ""
"Agregue :func:`math.cbrt`: devuelva la raíz cúbica de x. (Aportado por Ajith "
"Ramachandran en :issue:`44357`.)"

#: ../Doc/whatsnew/3.11.rst:843
msgid ""
"The behaviour of two :func:`math.pow` corner cases was changed, for "
"consistency with the IEEE 754 specification. The operations ``math.pow(0.0, -"
"math.inf)`` and ``math.pow(-0.0, -math.inf)`` now return ``inf``. Previously "
"they raised :exc:`ValueError`. (Contributed by Mark Dickinson in :issue:"
"`44339`.)"
msgstr ""
"Se cambió el comportamiento de dos casos de esquina :func:`math.pow`, para "
"mantener la coherencia con la especificación IEEE 754. Las operaciones "
"``math.pow(0.0, -math.inf)`` y ``math.pow(-0.0, -math.inf)`` ahora devuelven "
"``inf``. Anteriormente plantearon :exc:`ValueError`. (Contribuido por Mark "
"Dickinson en :issue:`44339`.)"

#: ../Doc/whatsnew/3.11.rst:849
msgid ""
"The :data:`math.nan` value is now always available. (Contributed by Victor "
"Stinner in :issue:`46917`.)"
msgstr ""
"El valor :data:`math.nan` ahora está siempre disponible. (Aportado por "
"Victor Stinner en :issue:`46917`.)"

#: ../Doc/whatsnew/3.11.rst:854
msgid "operator"
msgstr "operador"

#: ../Doc/whatsnew/3.11.rst:856
msgid ""
"A new function ``operator.call`` has been added, such that ``operator."
"call(obj, *args, **kwargs) == obj(*args, **kwargs)``. (Contributed by Antony "
"Lee in :issue:`44019`.)"
msgstr ""
"Se ha añadido una nueva función ``operator.call``, de forma que ``operator."
"call(obj, *args, **kwargs) == obj(*args, **kwargs)``. (Aportado por Antony "
"Lee en :issue:`44019`.)"

#: ../Doc/whatsnew/3.11.rst:862
msgid "os"
msgstr "sistema operativo"

#: ../Doc/whatsnew/3.11.rst:864
msgid ""
"On Windows, :func:`os.urandom` now uses ``BCryptGenRandom()``, instead of "
"``CryptGenRandom()`` which is deprecated. (Contributed by Dong-hee Na in :"
"issue:`44611`.)"
msgstr ""
"En Windows, :func:`os.urandom` ahora usa ``BCryptGenRandom()``, en lugar de "
"``CryptGenRandom()``, que está en desuso. (Aportado por Dong-hee Na en :"
"issue:`44611`.)"

#: ../Doc/whatsnew/3.11.rst:870
msgid "pathlib"
msgstr "rutalib"

#: ../Doc/whatsnew/3.11.rst:872
msgid ""
":meth:`~pathlib.Path.glob` and :meth:`~pathlib.Path.rglob` return only "
"directories if *pattern* ends with a pathname components separator: :data:"
"`~os.sep` or :data:`~os.altsep`. (Contributed by Eisuke Kawasima in :issue:"
"`22276` and :issue:`33392`.)"
msgstr ""
":meth:`~pathlib.Path.glob` y :meth:`~pathlib.Path.rglob` solo devuelven "
"directorios si *pattern* termina con un separador de componentes de nombre "
"de ruta: :data:`~os.sep` o :data:`~os.altsep`. (Aportado por Eisuke Kawasima "
"en :issue:`22276` y :issue:`33392`)."

#: ../Doc/whatsnew/3.11.rst:878
msgid "re"
msgstr "re"

#: ../Doc/whatsnew/3.11.rst:880
msgid ""
"Atomic grouping (``(?>...)``) and possessive quantifiers (``*+``, ``++``, ``?"
"+``, ``{m,n}+``) are now supported in regular expressions. (Contributed by "
"Jeffrey C. Jacobs and Serhiy Storchaka in :issue:`433030`.)"
msgstr ""
"La agrupación atómica (``(?>...)``) y los cuantificadores posesivos (``*+``, "
"``++``, ``?+``, ``{m,n}+``) ahora son compatibles con las expresiones "
"regulares. (Aportado por Jeffrey C. Jacobs y Serhiy Storchaka en :issue:"
"`433030`)."

#: ../Doc/whatsnew/3.11.rst:885
msgid "shutil"
msgstr "cerrar"

#: ../Doc/whatsnew/3.11.rst:887
msgid ""
"Add optional parameter *dir_fd* in :func:`shutil.rmtree`. (Contributed by "
"Serhiy Storchaka in :issue:`46245`.)"
msgstr ""
"Agregue el parámetro opcional *dir_fd* en :func:`shutil.rmtree`. (Aportado "
"por Serhiy Storchaka en :issue:`46245`.)"

#: ../Doc/whatsnew/3.11.rst:892
msgid "socket"
msgstr "enchufe"

#: ../Doc/whatsnew/3.11.rst:894
msgid ""
"Add CAN Socket support for NetBSD. (Contributed by Thomas Klausner in :issue:"
"`30512`.)"
msgstr ""
"Agregue compatibilidad con CAN Socket para NetBSD. (Aportado por Thomas "
"Klausner en :issue:`30512`.)"

#: ../Doc/whatsnew/3.11.rst:897
msgid ""
":meth:`~socket.create_connection` has an option to raise, in case of failure "
"to connect, an :exc:`ExceptionGroup` containing all errors instead of only "
"raising the last error. (Contributed by Irit Katriel in :issue:`29980`.)"
msgstr ""
":meth:`~socket.create_connection` tiene una opción para generar, en caso de "
"falla de conexión, un :exc:`ExceptionGroup` que contiene todos los errores "
"en lugar de generar solo el último error. (Aportado por Irit Katriel en :"
"issue:`29980`.)"

#: ../Doc/whatsnew/3.11.rst:903
msgid "sqlite3"
msgstr "sqlite3"

#: ../Doc/whatsnew/3.11.rst:905
msgid ""
"You can now disable the authorizer by passing :const:`None` to :meth:"
"`~sqlite3.Connection.set_authorizer`. (Contributed by Erlend E. Aasland in :"
"issue:`44491`.)"
msgstr ""
"Ahora puede deshabilitar el autorizador pasando :const:`None` a :meth:"
"`~sqlite3.Connection.set_authorizer`. (Aportado por Erlend E. Aasland en :"
"issue:`44491`.)"

#: ../Doc/whatsnew/3.11.rst:909
msgid ""
"Collation name :meth:`~sqlite3.Connection.create_collation` can now contain "
"any Unicode character.  Collation names with invalid characters now raise :"
"exc:`UnicodeEncodeError` instead of :exc:`sqlite3.ProgrammingError`. "
"(Contributed by Erlend E. Aasland in :issue:`44688`.)"
msgstr ""
"El nombre de intercalación :meth:`~sqlite3.Connection.create_collation` "
"ahora puede contener cualquier carácter Unicode. Los nombres de "
"intercalación con caracteres no válidos ahora generan :exc:"
"`UnicodeEncodeError` en lugar de :exc:`sqlite3.ProgrammingError`. (Aportado "
"por Erlend E. Aasland en :issue:`44688`.)"

#: ../Doc/whatsnew/3.11.rst:914
msgid ""
":mod:`sqlite3` exceptions now include the SQLite extended error code as :"
"attr:`~sqlite3.Error.sqlite_errorcode` and the SQLite error name as :attr:"
"`~sqlite3.Error.sqlite_errorname`. (Contributed by Aviv Palivoda, Daniel "
"Shahaf, and Erlend E. Aasland in :issue:`16379` and :issue:`24139`.)"
msgstr ""
"Las excepciones :mod:`sqlite3` ahora incluyen el código de error extendido "
"de SQLite como :attr:`~sqlite3.Error.sqlite_errorcode` y el nombre de error "
"de SQLite como :attr:`~sqlite3.Error.sqlite_errorname`. (Aportado por Aviv "
"Palivoda, Daniel Shahaf y Erlend E. Aasland en :issue:`16379` y :issue:"
"`24139`)."

#: ../Doc/whatsnew/3.11.rst:920
msgid ""
"Add :meth:`~sqlite3.Connection.setlimit` and :meth:`~sqlite3.Connection."
"getlimit` to :class:`sqlite3.Connection` for setting and getting SQLite "
"limits by connection basis. (Contributed by Erlend E. Aasland in :issue:"
"`45243`.)"
msgstr ""
"Agregue :meth:`~sqlite3.Connection.setlimit` y :meth:`~sqlite3.Connection."
"getlimit` a :class:`sqlite3.Connection` para configurar y obtener límites de "
"SQLite por conexión. (Aportado por Erlend E. Aasland en :issue:`45243`.)"

#: ../Doc/whatsnew/3.11.rst:925
msgid ""
":mod:`sqlite3` now sets :attr:`sqlite3.threadsafety` based on the default "
"threading mode the underlying SQLite library has been compiled with. "
"(Contributed by Erlend E. Aasland in :issue:`45613`.)"
msgstr ""
":mod:`sqlite3` ahora establece :attr:`sqlite3.threadsafety` en función del "
"modo de subprocesamiento predeterminado con el que se ha compilado la "
"biblioteca SQLite subyacente. (Aportado por Erlend E. Aasland en :issue:"
"`45613`.)"

#: ../Doc/whatsnew/3.11.rst:929
msgid ""
":mod:`sqlite3` C callbacks now use unraisable exceptions if callback "
"tracebacks are enabled. Users can now register an :func:`unraisable hook "
"handler <sys.unraisablehook>` to improve their debug experience. "
"(Contributed by Erlend E. Aasland in :issue:`45828`.)"
msgstr ""
"Las devoluciones de llamada de :mod:`sqlite3` C ahora usan excepciones que "
"no se pueden generar si las devoluciones de llamada están habilitadas. Los "
"usuarios ahora pueden registrar un :func:`unraisable hook handler <sys."
"unraisablehook>` para mejorar su experiencia de depuración. (Aportado por "
"Erlend E. Aasland en :issue:`45828`.)"

#: ../Doc/whatsnew/3.11.rst:935
msgid ""
"Fetch across rollback no longer raises :exc:`~sqlite3.InterfaceError`. "
"Instead we leave it to the SQLite library to handle these cases. "
"(Contributed by Erlend E. Aasland in :issue:`44092`.)"
msgstr ""
"Recuperar a través de reversión ya no genera :exc:`~sqlite3.InterfaceError`. "
"En cambio, dejamos que la biblioteca SQLite maneje estos casos. (Aportado "
"por Erlend E. Aasland en :issue:`44092`.)"

#: ../Doc/whatsnew/3.11.rst:939
msgid ""
"Add :meth:`~sqlite3.Connection.serialize` and :meth:`~sqlite3.Connection."
"deserialize` to :class:`sqlite3.Connection` for serializing and "
"deserializing databases. (Contributed by Erlend E. Aasland in :issue:"
"`41930`.)"
msgstr ""
"Agregue :meth:`~sqlite3.Connection.serialize` y :meth:`~sqlite3.Connection."
"deserialize` a :class:`sqlite3.Connection` para serializar y deserializar "
"bases de datos. (Aportado por Erlend E. Aasland en :issue:`41930`.)"

#: ../Doc/whatsnew/3.11.rst:944
msgid ""
"Add :meth:`~sqlite3.Connection.create_window_function` to :class:`sqlite3."
"Connection` for creating aggregate window functions. (Contributed by Erlend "
"E. Aasland in :issue:`34916`.)"
msgstr ""
"Agregue :meth:`~sqlite3.Connection.create_window_function` a :class:`sqlite3."
"Connection` para crear funciones de ventana agregadas. (Aportado por Erlend "
"E. Aasland en :issue:`34916`.)"

#: ../Doc/whatsnew/3.11.rst:948
msgid ""
"Add :meth:`~sqlite3.Connection.blobopen` to :class:`sqlite3.Connection`. :"
"class:`sqlite3.Blob` allows incremental I/O operations on blobs. "
"(Contributed by Aviv Palivoda and Erlend E. Aasland in :issue:`24905`.)"
msgstr ""
"Agregue :meth:`~sqlite3.Connection.blobopen` a :class:`sqlite3.Connection`. :"
"class:`sqlite3.Blob` permite operaciones de E/S incrementales en blobs. "
"(Contribuido por Aviv Palivoda y Erlend E. Aasland en :issue:`24905`)."

#: ../Doc/whatsnew/3.11.rst:956
msgid "string"
msgstr "cuerda"

#: ../Doc/whatsnew/3.11.rst:958
msgid ""
"Add :meth:`~string.Template.get_identifiers` and :meth:`~string.Template."
"is_valid` to :class:`string.Template`, which respectively return all valid "
"placeholders, and whether any invalid placeholders are present. (Contributed "
"by Ben Kehoe in :gh:`90465`.)"
msgstr ""
"Agregue :meth:`~string.Template.get_identifiers` y :meth:`~string.Template."
"is_valid` a :class:`string.Template`, que devuelven respectivamente todos "
"los marcadores de posición válidos y si hay algún marcador de posición no "
"válido presente. (Aportado por Ben Kehoe en :gh:`90465`.)"

#: ../Doc/whatsnew/3.11.rst:966
msgid "sys"
msgstr "sistema"

#: ../Doc/whatsnew/3.11.rst:968
msgid ""
":func:`sys.exc_info` now derives the ``type`` and ``traceback`` fields from "
"the ``value`` (the exception instance), so when an exception is modified "
"while it is being handled, the changes are reflected in the results of "
"subsequent calls to :func:`exc_info`. (Contributed by Irit Katriel in :issue:"
"`45711`.)"
msgstr ""
":func:`sys.exc_info` ahora deriva los campos ``type`` y ``traceback`` de "
"``value`` (la instancia de excepción), por lo que cuando se modifica una "
"excepción mientras se gestiona, los cambios se reflejan en los resultados de "
"las llamadas posteriores a :func:`exc_info`. (Aportado por Irit Katriel en :"
"issue:`45711`.)"

#: ../Doc/whatsnew/3.11.rst:974
msgid ""
"Add :func:`sys.exception` which returns the active exception instance "
"(equivalent to ``sys.exc_info()[1]``). (Contributed by Irit Katriel in :"
"issue:`46328`.)"
msgstr ""
"Agregue :func:`sys.exception` que devuelve la instancia de excepción activa "
"(equivalente a ``sys.exc_info()[1]``). (Aportado por Irit Katriel en :issue:"
"`46328`.)"

#: ../Doc/whatsnew/3.11.rst:978
msgid ""
"Add the :data:`sys.flags.safe_path <sys.flags>` flag. (Contributed by Victor "
"Stinner in :gh:`57684`.)"
msgstr ""
"Agregue el indicador :data:`sys.flags.safe_path <sys.flags>`. (Aportado por "
"Victor Stinner en :gh:`57684`.)"

#: ../Doc/whatsnew/3.11.rst:983
msgid "sysconfig"
msgstr "configuración del sistema"

#: ../Doc/whatsnew/3.11.rst:985
msgid ""
"Three new :ref:`installation schemes <installation_paths>` (*posix_venv*, "
"*nt_venv* and *venv*) were added and are used when Python creates new "
"virtual environments or when it is running from a virtual environment. The "
"first two schemes (*posix_venv* and *nt_venv*) are OS-specific for non-"
"Windows and Windows, the *venv* is essentially an alias to one of them "
"according to the OS Python runs on. This is useful for downstream "
"distributors who modify :func:`sysconfig.get_preferred_scheme`. Third party "
"code that creates new virtual environments should use the new *venv* "
"installation scheme to determine the paths, as does :mod:`venv`. "
"(Contributed by Miro Hrončok in :issue:`45413`.)"
msgstr ""
"Se agregaron tres nuevos :ref:`installation schemes <installation_paths>` "
"(*posix_venv*, *nt_venv* y *venv*) y se usan cuando Python crea nuevos "
"entornos virtuales o cuando se ejecuta desde un entorno virtual. Los "
"primeros dos esquemas (*posix_venv* y *nt_venv*) son específicos del sistema "
"operativo para Windows y no Windows, el *venv* es esencialmente un alias "
"para uno de ellos según el sistema operativo en el que se ejecuta Python. "
"Esto es útil para los distribuidores posteriores que modifican :func:"
"`sysconfig.get_preferred_scheme`. El código de terceros que crea nuevos "
"entornos virtuales debe usar el nuevo esquema de instalación *venv* para "
"determinar las rutas, al igual que :mod:`venv`. (Aportado por Miro Hrončok "
"en :issue:`45413`.)"

#: ../Doc/whatsnew/3.11.rst:1002
msgid "tempfile"
msgstr "archivo temporal"

#: ../Doc/whatsnew/3.11.rst:1004
msgid ""
":class:`~tempfile.SpooledTemporaryFile` objects now fully implement the "
"methods of :class:`io.BufferedIOBase` or :class:`io.TextIOBase` (depending "
"on file mode). This lets them work correctly with APIs that expect file-like "
"objects, such as compression modules. (Contributed by Carey Metcalfe in :gh:"
"`70363`.)"
msgstr ""
"Los objetos :class:`~tempfile.SpooledTemporaryFile` ahora implementan "
"completamente los métodos de :class:`io.BufferedIOBase` o :class:`io."
"TextIOBase` (según el modo de archivo). Esto les permite trabajar "
"correctamente con API que esperan objetos similares a archivos, como módulos "
"de compresión. (Aportado por Carey Metcalfe en :gh:`70363`.)"

#: ../Doc/whatsnew/3.11.rst:1013
msgid "threading"
msgstr "enhebrar"

#: ../Doc/whatsnew/3.11.rst:1015
msgid ""
"On Unix, if the ``sem_clockwait()`` function is available in the C library "
"(glibc 2.30 and newer), the :meth:`threading.Lock.acquire` method now uses "
"the monotonic clock (:data:`time.CLOCK_MONOTONIC`) for the timeout, rather "
"than using the system clock (:data:`time.CLOCK_REALTIME`), to not be "
"affected by system clock changes. (Contributed by Victor Stinner in :issue:"
"`41710`.)"
msgstr ""
"En Unix, si la función ``sem_clockwait()`` está disponible en la biblioteca "
"C (glibc 2.30 y posterior), el método :meth:`threading.Lock.acquire` ahora "
"usa el reloj monotónico (:data:`time.CLOCK_MONOTONIC`) para el tiempo de "
"espera, en lugar de usar el reloj del sistema (:data:`time.CLOCK_REALTIME`), "
"para no verse afectado por cambios en el reloj del sistema. (Aportado por "
"Victor Stinner en :issue:`41710`.)"

#: ../Doc/whatsnew/3.11.rst:1024
msgid "time"
msgstr "tiempo"

#: ../Doc/whatsnew/3.11.rst:1026
msgid ""
"On Unix, :func:`time.sleep` now uses the ``clock_nanosleep()`` or "
"``nanosleep()`` function, if available, which has a resolution of 1 "
"nanosecond (10\\ :sup:`-9` seconds), rather than using ``select()`` which "
"has a resolution of 1 microsecond (10\\ :sup:`-6` seconds). (Contributed by "
"Benjamin Szőke and Victor Stinner in :issue:`21302`.)"
msgstr ""
"En Unix, :func:`time.sleep` ahora usa la función ``clock_nanosleep()`` o "
"``nanosleep()``, si está disponible, que tiene una resolución de 1 "
"nanosegundo (10\\ :sup:`-9` segundos), en lugar de usar ``select()`` que "
"tiene una resolución de 1 microsegundo (10\\ :sup:`-6` segundos). (Aportado "
"por Benjamin Szőke y Victor Stinner en :issue:`21302`.)"

#: ../Doc/whatsnew/3.11.rst:1032
msgid ""
"On Windows 8.1 and newer, :func:`time.sleep` now uses a waitable timer based "
"on `high-resolution timers <https://docs.microsoft.com/en-us/windows-"
"hardware/drivers/kernel/high-resolution-timers>`_ which has a resolution of "
"100 nanoseconds (10\\ :sup:`-7` seconds). Previously, it had a resolution of "
"1 millisecond (10\\ :sup:`-3` seconds). (Contributed by Benjamin Szőke, Dong-"
"hee Na, Eryk Sun and Victor Stinner in :issue:`21302` and :issue:`45429`.)"
msgstr ""
"En Windows 8.1 y posteriores, :func:`time.sleep` ahora usa un temporizador "
"de espera basado en `high-resolution timers <https://docs.microsoft.com/en-"
"us/windows-hardware/drivers/kernel/high-resolution-timers>`_ que tiene una "
"resolución de 100 nanosegundos (10\\ :sup:`-7` segundos). Anteriormente "
"tenía una resolución de 1 milisegundo (10\\ :sup:`-3` segundos). (Aportado "
"por Benjamin Szőke, Dong-hee Na, Eryk Sun y Victor Stinner en :issue:`21302` "
"y :issue:`45429`)."

#: ../Doc/whatsnew/3.11.rst:1041
msgid "traceback"
msgstr "rastrear"

#: ../Doc/whatsnew/3.11.rst:1043
msgid ""
"Add :func:`traceback.StackSummary.format_frame_summary` to allow users to "
"override which frames appear in the traceback, and how they are formatted. "
"(Contributed by Ammar Askar in :issue:`44569`.)"
msgstr ""
"Agregue :func:`traceback.StackSummary.format_frame_summary` para permitir "
"que los usuarios anulen qué marcos aparecen en el rastreo y cómo están "
"formateados. (Aportado por Ammar Askar en :issue:`44569`.)"

#: ../Doc/whatsnew/3.11.rst:1048
msgid ""
"Add :func:`traceback.TracebackException.print`, which prints the formatted :"
"exc:`~traceback.TracebackException` instance to a file. (Contributed by Irit "
"Katriel in :issue:`33809`.)"
msgstr ""
"Agregue :func:`traceback.TracebackException.print`, que imprime la "
"instancia :exc:`~traceback.TracebackException` formateada en un archivo. "
"(Aportado por Irit Katriel en :issue:`33809`.)"

#: ../Doc/whatsnew/3.11.rst:1054
msgid "typing"
msgstr "mecanografía"

#: ../Doc/whatsnew/3.11.rst:1056
msgid "For major changes, see :ref:`new-feat-related-type-hints-311`."
msgstr ""
"Para conocer los cambios importantes, consulte :ref:`new-feat-related-type-"
"hints-311`."

#: ../Doc/whatsnew/3.11.rst:1058
msgid ""
"Add :func:`typing.assert_never` and :class:`typing.Never`. :func:`typing."
"assert_never` is useful for asking a type checker to confirm that a line of "
"code is not reachable. At runtime, it raises an :exc:`AssertionError`. "
"(Contributed by Jelle Zijlstra in :gh:`90633`.)"
msgstr ""
"Agregue :func:`typing.assert_never` y :class:`typing.Never`. :func:`typing."
"assert_never` es útil para pedirle a un verificador de tipos que confirme "
"que no se puede acceder a una línea de código. En tiempo de ejecución, "
"genera un :exc:`AssertionError`. (Aportado por Jelle Zijlstra en :gh:"
"`90633`.)"

#: ../Doc/whatsnew/3.11.rst:1064
msgid ""
"Add :func:`typing.reveal_type`. This is useful for asking a type checker "
"what type it has inferred for a given expression. At runtime it prints the "
"type of the received value. (Contributed by Jelle Zijlstra in :gh:`90572`.)"
msgstr ""
"Agregue :func:`typing.reveal_type`. Esto es útil para preguntarle a un "
"verificador de tipos qué tipo ha inferido para una expresión dada. En tiempo "
"de ejecución imprime el tipo del valor recibido. (Aportado por Jelle "
"Zijlstra en :gh:`90572`.)"

#: ../Doc/whatsnew/3.11.rst:1069
msgid ""
"Add :func:`typing.assert_type`. This is useful for asking a type checker to "
"confirm that the type it has inferred for a given expression matches the "
"given type. At runtime it simply returns the received value. (Contributed by "
"Jelle Zijlstra in :gh:`90638`.)"
msgstr ""
"Agregue :func:`typing.assert_type`. Esto es útil para pedirle a un "
"verificador de tipos que confirme que el tipo que ha inferido para una "
"expresión dada coincide con el tipo dado. En tiempo de ejecución, "
"simplemente devuelve el valor recibido. (Aportado por Jelle Zijlstra en :gh:"
"`90638`.)"

#: ../Doc/whatsnew/3.11.rst:1074
msgid ""
":data:`typing.TypedDict` types can now be generic. (Contributed by Samodya "
"Abeysiriwardane in :gh:`89026`.)"
msgstr ""
"Los tipos :data:`typing.TypedDict` ahora pueden ser genéricos. (Aportado por "
"Samodya Abeysiriwardane en :gh:`89026`.)"

#: ../Doc/whatsnew/3.11.rst:1077
msgid ""
":class:`~typing.NamedTuple` types can now be generic. (Contributed by Serhiy "
"Storchaka in :issue:`43923`.)"
msgstr ""
"Los tipos :class:`~typing.NamedTuple` ahora pueden ser genéricos. (Aportado "
"por Serhiy Storchaka en :issue:`43923`.)"

#: ../Doc/whatsnew/3.11.rst:1080
msgid ""
"Allow subclassing of :class:`typing.Any`. This is useful for avoiding type "
"checker errors related to highly dynamic class, such as mocks. (Contributed "
"by Shantanu Jain in :gh:`91154`.)"
msgstr ""
"Permitir subclases de :class:`typing.Any`. Esto es útil para evitar errores "
"de verificación de tipos relacionados con clases altamente dinámicas, como "
"simulacros. (Aportado por Shantanu Jain en :gh:`91154`.)"

#: ../Doc/whatsnew/3.11.rst:1084
msgid ""
"The :func:`typing.final` decorator now sets the ``__final__`` attributed on "
"the decorated object. (Contributed by Jelle Zijlstra in :gh:`90500`.)"
msgstr ""
"El decorador :func:`typing.final` ahora establece el atributo ``__final__`` "
"en el objeto decorado. (Aportado por Jelle Zijlstra en :gh:`90500`.)"

#: ../Doc/whatsnew/3.11.rst:1088
msgid ""
"The :func:`typing.get_overloads` function can be used for introspecting the "
"overloads of a function. :func:`typing.clear_overloads` can be used to clear "
"all registered overloads of a function. (Contributed by Jelle Zijlstra in :"
"gh:`89263`.)"
msgstr ""
"La función :func:`typing.get_overloads` se puede utilizar para la "
"introspección de las sobrecargas de una función. :func:`typing."
"clear_overloads` se puede utilizar para borrar todas las sobrecargas "
"registradas de una función. (Aportado por Jelle Zijlstra en :gh:`89263`.)"

#: ../Doc/whatsnew/3.11.rst:1093
msgid ""
"The :meth:`__init__` method of :class:`~typing.Protocol` subclasses is now "
"preserved. (Contributed by Adrian Garcia Badarasco in :gh:`88970`.)"
msgstr ""
"El método :meth:`__init__` de las subclases :class:`~typing.Protocol` ahora "
"se conserva. (Aportado por Adrián García Badarasco en :gh:`88970`.)"

#: ../Doc/whatsnew/3.11.rst:1096
msgid ""
"The representation of empty tuple types (``Tuple[()]``) is simplified. This "
"affects introspection, e.g. ``get_args(Tuple[()])`` now evaluates to ``()`` "
"instead of ``((),)``. (Contributed by Serhiy Storchaka in :gh:`91137`.)"
msgstr ""
"La representación de tipos de tuplas vacías (``Tuple[()]``) se simplifica. "
"Esto afecta la introspección, p. ``get_args(Tuple[()])`` ahora se evalúa "
"como ``()`` en lugar de ``((),)``. (Aportado por Serhiy Storchaka en :gh:"
"`91137`.)"

#: ../Doc/whatsnew/3.11.rst:1101
msgid ""
"Loosen runtime requirements for type annotations by removing the callable "
"check in the private ``typing._type_check`` function. (Contributed by "
"Gregory Beauregard in :gh:`90802`.)"
msgstr ""
"Afloje los requisitos de tiempo de ejecución para las anotaciones de tipo "
"eliminando la verificación invocable en la función privada ``typing."
"_type_check``. (Aportado por Gregory Beauregard en :gh:`90802`.)"

#: ../Doc/whatsnew/3.11.rst:1105
msgid ""
":func:`typing.get_type_hints` now supports evaluating strings as forward "
"references in :ref:`PEP 585 generic aliases <types-genericalias>`. "
"(Contributed by Niklas Rosenstein in :gh:`85542`.)"
msgstr ""
":func:`typing.get_type_hints` ahora admite la evaluación de cadenas como "
"referencias directas en :ref:`PEP 585 generic aliases <types-genericalias>`. "
"(Aportado por Niklas Rosenstein en :gh:`85542`.)"

#: ../Doc/whatsnew/3.11.rst:1109
msgid ""
":func:`typing.get_type_hints` no longer adds :data:`~typing.Optional` to "
"parameters with ``None`` as a default. (Contributed by Nikita Sobolev in :gh:"
"`90353`.)"
msgstr ""
":func:`typing.get_type_hints` ya no agrega :data:`~typing.Optional` a los "
"parámetros con ``None`` como predeterminado. (Aportado por Nikita Sobolev "
"en :gh:`90353`.)"

#: ../Doc/whatsnew/3.11.rst:1113
msgid ""
":func:`typing.get_type_hints` now supports evaluating bare stringified :data:"
"`~typing.ClassVar` annotations. (Contributed by Gregory Beauregard in :gh:"
"`90711`.)"
msgstr ""
":func:`typing.get_type_hints` ahora admite la evaluación de anotaciones :"
"data:`~typing.ClassVar` con cadenas desnudas. (Aportado por Gregory "
"Beauregard en :gh:`90711`.)"

#: ../Doc/whatsnew/3.11.rst:1117
msgid ""
":func:`typing.no_type_check` no longer modifies external classes and "
"functions. It also now correctly marks classmethods as not to be type "
"checked. (Contributed by Nikita Sobolev in :gh:`90729`.)"
msgstr ""
":func:`typing.no_type_check` ya no modifica clases y funciones externas. "
"Ahora también marca correctamente los métodos de clase para que no se "
"verifique el tipo. (Aportado por Nikita Sobolev en :gh:`90729`.)"

#: ../Doc/whatsnew/3.11.rst:1123
msgid "tkinter"
msgstr "tkinter"

#: ../Doc/whatsnew/3.11.rst:1125
msgid ""
"Added method ``info_patchlevel()`` which returns the exact version of the "
"Tcl library as a named tuple similar to :data:`sys.version_info`. "
"(Contributed by Serhiy Storchaka in :gh:`91827`.)"
msgstr ""
"Se agregó el método ``info_patchlevel()`` que devuelve la versión exacta de "
"la biblioteca Tcl como una tupla con nombre similar a :data:`sys."
"version_info`. (Aportado por Serhiy Storchaka en :gh:`91827`.)"

#: ../Doc/whatsnew/3.11.rst:1131
msgid "unicodedata"
msgstr "unicodedata"

#: ../Doc/whatsnew/3.11.rst:1133
msgid ""
"The Unicode database has been updated to version 14.0.0. (Contributed by  "
"Benjamin Peterson in :issue:`45190`)."
msgstr ""
"La base de datos Unicode se ha actualizado a la versión 14.0.0. (Aportado "
"por Benjamin Peterson en :issue:`45190`)."

#: ../Doc/whatsnew/3.11.rst:1137
msgid "unittest"
msgstr "prueba de unidad"

#: ../Doc/whatsnew/3.11.rst:1139
msgid ""
"Added methods :meth:`~unittest.TestCase.enterContext` and :meth:`~unittest."
"TestCase.enterClassContext` of class :class:`~unittest.TestCase`, method :"
"meth:`~unittest.IsolatedAsyncioTestCase.enterAsyncContext` of class :class:"
"`~unittest.IsolatedAsyncioTestCase` and function :func:`unittest."
"enterModuleContext`. (Contributed by Serhiy Storchaka in :issue:`45046`.)"
msgstr ""
"Se agregaron los métodos :meth:`~unittest.TestCase.enterContext` y :meth:"
"`~unittest.TestCase.enterClassContext` de la clase :class:`~unittest."
"TestCase`, el método :meth:`~unittest.IsolatedAsyncioTestCase."
"enterAsyncContext` de la clase :class:`~unittest.IsolatedAsyncioTestCase` y "
"la función :func:`unittest.enterModuleContext`. (Aportado por Serhiy "
"Storchaka en :issue:`45046`.)"

#: ../Doc/whatsnew/3.11.rst:1149
msgid "venv"
msgstr "venv"

#: ../Doc/whatsnew/3.11.rst:1151
msgid ""
"When new Python virtual environments are created, the *venv* :ref:`sysconfig "
"installation scheme <installation_paths>` is used to determine the paths "
"inside the environment. When Python runs in a virtual environment, the same "
"installation scheme is the default. That means that downstream distributors "
"can change the default sysconfig install scheme without changing behavior of "
"virtual environments. Third party code that also creates new virtual "
"environments should do the same. (Contributed by Miro Hrončok in :issue:"
"`45413`.)"
msgstr ""
"Cuando se crean nuevos entornos virtuales de Python, el *venv* :ref:"
"`sysconfig installation scheme <installation_paths>` se utiliza para "
"determinar las rutas dentro del entorno. Cuando Python se ejecuta en un "
"entorno virtual, el mismo esquema de instalación es el predeterminado. Eso "
"significa que los distribuidores intermedios pueden cambiar el esquema de "
"instalación de sysconfig predeterminado sin cambiar el comportamiento de los "
"entornos virtuales. El código de terceros que también crea nuevos entornos "
"virtuales debería hacer lo mismo. (Aportado por Miro Hrončok en :issue:"
"`45413`.)"

#: ../Doc/whatsnew/3.11.rst:1162
msgid "warnings"
msgstr "advertencias"

#: ../Doc/whatsnew/3.11.rst:1164
msgid ""
":func:`warnings.catch_warnings` now accepts arguments for :func:`warnings."
"simplefilter`, providing a more concise way to locally ignore warnings or "
"convert them to errors. (Contributed by Zac Hatfield-Dodds in :issue:"
"`47074`.)"
msgstr ""
":func:`warnings.catch_warnings` ahora acepta argumentos para :func:`warnings."
"simplefilter`, lo que proporciona una forma más concisa de ignorar "
"localmente las advertencias o convertirlas en errores. (Aportado por Zac "
"Hatfield-Dodds en :issue:`47074`)."

#: ../Doc/whatsnew/3.11.rst:1172
msgid "zipfile"
msgstr "archivo zip"

#: ../Doc/whatsnew/3.11.rst:1174
msgid ""
"Added support for specifying member name encoding for reading metadata in a :"
"class:`~zipfile.ZipFile`'s directory and file headers. (Contributed by "
"Stephen J. Turnbull and Serhiy Storchaka in :issue:`28080`.)"
msgstr ""
"Se agregó compatibilidad para especificar la codificación de nombres de "
"miembros para leer metadatos en los encabezados de archivos y directorios "
"de :class:`~zipfile.ZipFile`. (Aportado por Stephen J. Turnbull y Serhiy "
"Storchaka en :issue:`28080`)."

#: ../Doc/whatsnew/3.11.rst:1178
msgid ""
"Added :meth:`ZipFile.mkdir() <zipfile.ZipFile.mkdir>` for creating new "
"directories inside ZIP archives. (Contributed by Sam Ezeh in :gh:`49083`.)"
msgstr ""
"Se agregó :meth:`ZipFile.mkdir() <zipfile.ZipFile.mkdir>` para crear nuevos "
"directorios dentro de archivos ZIP. (Aportado por Sam Ezeh en :gh:`49083`.)"

#: ../Doc/whatsnew/3.11.rst:1182
msgid ""
"Added :attr:`~zipfile.Path.stem`, :attr:`~zipfile.Path.suffix` and :attr:"
"`~zipfile.Path.suffixes` to :class:`zipfile.Path`. (Contributed by Miguel "
"Brito in :gh:`88261`.)"
msgstr ""
"Se agregaron :attr:`~zipfile.Path.stem`, :attr:`~zipfile.Path.suffix` y :"
"attr:`~zipfile.Path.suffixes` a :class:`zipfile.Path`. (Aportado por Miguel "
"Brito en :gh:`88261`.)"

#: ../Doc/whatsnew/3.11.rst:1188
msgid "fcntl"
msgstr "fcntl"

#: ../Doc/whatsnew/3.11.rst:1190
msgid ""
"On FreeBSD, the :attr:`F_DUP2FD` and :attr:`F_DUP2FD_CLOEXEC` flags "
"respectively are supported, the former equals to ``dup2`` usage while the "
"latter set the ``FD_CLOEXEC`` flag in addition."
msgstr ""
"En FreeBSD, se admiten las banderas :attr:`F_DUP2FD` y :attr:"
"`F_DUP2FD_CLOEXEC` respectivamente, la primera equivale al uso de ``dup2`` "
"mientras que la última establece además la bandera ``FD_CLOEXEC``."

#: ../Doc/whatsnew/3.11.rst:1198
msgid "Optimizations"
msgstr "Optimizaciones"

#: ../Doc/whatsnew/3.11.rst:1200
msgid ""
"This section covers specific optimizations independent of the :ref:"
"`whatsnew311-faster-cpython` project, which is covered in its own section."
msgstr ""
"Esta sección cubre optimizaciones específicas independientes del proyecto :"
"ref:`whatsnew311-faster-cpython`, que se trata en su propia sección."

#: ../Doc/whatsnew/3.11.rst:1203
#, python-format
msgid ""
"The compiler now optimizes simple :ref:`printf-style % formatting <old-"
"string-formatting>` on string literals containing only the format codes "
"``%s``, ``%r`` and ``%a`` and makes it as fast as a corresponding :term:`f-"
"string` expression. (Contributed by Serhiy Storchaka in :issue:`28307`.)"
msgstr ""
"El compilador ahora optimiza :ref:`printf-style % formatting <old-string-"
"formatting>` simple en cadenas literales que contienen solo los códigos de "
"formato ``%s``, ``%r`` y ``%a`` y lo hace tan rápido como una expresión :"
"term:`f-string` correspondiente. (Aportado por Serhiy Storchaka en :issue:"
"`28307`.)"

#: ../Doc/whatsnew/3.11.rst:1209
#, python-format
msgid ""
"Integer division (``//``) is better tuned for optimization by compilers. It "
"is now around 20% faster on x86-64 when dividing an :class:`int` by a value "
"smaller than ``2**30``. (Contributed by Gregory P. Smith and Tim Peters in :"
"gh:`90564`.)"
msgstr ""
"La división de enteros (``//``) está mejor ajustada para la optimización por "
"parte de los compiladores. Ahora es un 20 % más rápido en x86-64 cuando se "
"divide un :class:`int` por un valor menor que ``2**30``. (Aportado por "
"Gregory P. Smith y Tim Peters en :gh:`90564`.)"

#: ../Doc/whatsnew/3.11.rst:1214
#, python-format
msgid ""
":func:`sum` is now nearly 30% faster for integers smaller than ``2**30``. "
"(Contributed by Stefan Behnel in :gh:`68264`.)"
msgstr ""
":func:`sum` ahora es casi un 30 % más rápido para números enteros más "
"pequeños que ``2**30``. (Aportado por Stefan Behnel en :gh:`68264`.)"

#: ../Doc/whatsnew/3.11.rst:1217
msgid ""
"Resizing lists is streamlined for the common case, speeding up :meth:`list."
"append` by ≈15% and simple :term:`list comprehension`\\s by up to 20-30% "
"(Contributed by Dennis Sweeney in :gh:`91165`.)"
msgstr ""
"El cambio de tamaño de las listas está simplificado para el caso común, "
"acelerando :meth:`list.append` en ≈15 % y :term:`list comprehension`\\s "
"simples hasta en un 20-30 % (Contribuido por Dennis Sweeney en :gh:`91165`)."

#: ../Doc/whatsnew/3.11.rst:1222
#, python-format
msgid ""
"Dictionaries don't store hash values when all keys are Unicode objects, "
"decreasing :class:`dict` size. For example, ``sys.getsizeof(dict."
"fromkeys(\"abcdefg\"))`` is reduced from 352 bytes to 272 bytes "
"(23% smaller) on 64-bit platforms. (Contributed by Inada Naoki in :issue:"
"`46845`.)"
msgstr ""
"Los diccionarios no almacenan valores hash cuando todas las claves son "
"objetos Unicode, lo que reduce el tamaño de :class:`dict`. Por ejemplo, "
"``sys.getsizeof(dict.fromkeys(\"abcdefg\"))`` se reduce de 352 bytes a 272 "
"bytes (un 23 % más pequeño) en plataformas de 64 bits. (Aportado por Inada "
"Naoki en :issue:`46845`.)"

#: ../Doc/whatsnew/3.11.rst:1228
msgid ""
"Using :class:`asyncio.DatagramProtocol` is now orders of magnitude faster "
"when transferring large files over UDP, with speeds over 100 times higher "
"for a ≈60 MiB file. (Contributed by msoxzw in :gh:`91487`.)"
msgstr ""
"El uso de :class:`asyncio.DatagramProtocol` ahora es mucho más rápido cuando "
"se transfieren archivos grandes a través de UDP, con velocidades 100 veces "
"más altas para un archivo de ≈60 MiB. (Aportado por msoxzw en :gh:`91487`.)"

#: ../Doc/whatsnew/3.11.rst:1233
msgid ""
":mod:`math` functions :func:`~math.comb` and :func:`~math.perm` are now ≈10 "
"times faster for large arguments (with a larger speedup for larger *k*). "
"(Contributed by Serhiy Storchaka in :issue:`37295`.)"
msgstr ""
"Las funciones :mod:`math` :func:`~math.comb` y :func:`~math.perm` ahora son "
"≈10 veces más rápidas para argumentos grandes (con una aceleración mayor "
"para *k* más grandes). (Aportado por Serhiy Storchaka en :issue:`37295`.)"

#: ../Doc/whatsnew/3.11.rst:1237
msgid ""
"The :mod:`statistics` functions :func:`~statistics.mean`, :func:`~statistics."
"variance` and :func:`~statistics.stdev` now consume iterators in one pass "
"rather than converting them to a :class:`list` first. This is twice as fast "
"and can save substantial memory. (Contributed by Raymond Hettinger in :gh:"
"`90415`.)"
msgstr ""
"Las funciones :mod:`statistics` :func:`~statistics.mean`, :func:`~statistics."
"variance` y :func:`~statistics.stdev` ahora consumen iteradores en una sola "
"pasada en lugar de convertirlos primero en :class:`list`. Esto es el doble "
"de rápido y puede ahorrar una cantidad considerable de memoria. (Aportado "
"por Raymond Hettinger en :gh:`90415`.)"

#: ../Doc/whatsnew/3.11.rst:1243
msgid ""
":func:`unicodedata.normalize` now normalizes pure-ASCII strings in constant "
"time. (Contributed by Dong-hee Na in :issue:`44987`.)"
msgstr ""
":func:`unicodedata.normalize` ahora normaliza cadenas ASCII puras en tiempo "
"constante. (Aportado por Dong-hee Na en :issue:`44987`.)"

#: ../Doc/whatsnew/3.11.rst:1251
msgid "Faster CPython"
msgstr "CPython más rápido"

#: ../Doc/whatsnew/3.11.rst:1253
#, python-format
msgid ""
"CPython 3.11 is on average `25% faster <https://github.com/faster-cpython/"
"ideas#published-results>`_ than CPython 3.10 when measured with the "
"`pyperformance <https://github.com/python/pyperformance>`_ benchmark suite, "
"and compiled with GCC on Ubuntu Linux. Depending on your workload, the "
"speedup could be up to 10-60% faster."
msgstr ""
"CPython 3.11 es en promedio `25% faster <https://github.com/faster-cpython/"
"ideas#published-results>`_ que CPython 3.10 cuando se mide con el conjunto "
"de pruebas comparativas `pyperformance <https://github.com/python/"
"pyperformance>`_ y se compila con GCC en Ubuntu Linux. Dependiendo de su "
"carga de trabajo, la aceleración podría ser hasta un 10-60 % más rápida."

#: ../Doc/whatsnew/3.11.rst:1259
msgid ""
"This project focuses on two major areas in Python: faster startup and faster "
"runtime. Other optimizations not under this project are listed in "
"`Optimizations`_."
msgstr ""
"Este proyecto se centra en dos áreas principales de Python: un inicio más "
"rápido y un tiempo de ejecución más rápido. Otras optimizaciones que no "
"pertenecen a este proyecto se enumeran en `Optimizations`_."

#: ../Doc/whatsnew/3.11.rst:1266
msgid "Faster Startup"
msgstr "Inicio más rápido"

#: ../Doc/whatsnew/3.11.rst:1271
msgid "Frozen imports / Static code objects"
msgstr "Importaciones congeladas / Objetos de código estático"

#: ../Doc/whatsnew/3.11.rst:1273
msgid ""
"Python caches bytecode in the :ref:`__pycache__<tut-pycache>` directory to "
"speed up module loading."
msgstr ""
"Python almacena en caché el código de bytes en el directorio :ref:"
"`__pycache__<tut-pycache>` para acelerar la carga del módulo."

#: ../Doc/whatsnew/3.11.rst:1276
msgid "Previously in 3.10, Python module execution looked like this:"
msgstr "Previamente en 3.10, la ejecución del módulo de Python se veía así:"

#: ../Doc/whatsnew/3.11.rst:1282
msgid ""
"In Python 3.11, the core modules essential for Python startup are "
"\"frozen\". This means that their code objects (and bytecode) are statically "
"allocated by the interpreter. This reduces the steps in module execution "
"process to this:"
msgstr ""
"En Python 3.11, los módulos principales esenciales para el inicio de Python "
"están \"congelados\". Esto significa que sus objetos de código (y bytecode) "
"son asignados estáticamente por el intérprete. Esto reduce los pasos en el "
"proceso de ejecución del módulo a esto:"

#: ../Doc/whatsnew/3.11.rst:1290
#, python-format
msgid ""
"Interpreter startup is now 10-15% faster in Python 3.11. This has a big "
"impact for short-running programs using Python."
msgstr ""
"El inicio del intérprete ahora es un 10-15 % más rápido en Python 3.11. Esto "
"tiene un gran impacto para los programas de ejecución corta que usan Python."

#: ../Doc/whatsnew/3.11.rst:1293
msgid ""
"(Contributed by Eric Snow, Guido van Rossum and Kumar Aditya in numerous "
"issues.)"
msgstr ""
"(Aportado por Eric Snow, Guido van Rossum y Kumar Aditya en numerosos "
"números)."

#: ../Doc/whatsnew/3.11.rst:1299
msgid "Faster Runtime"
msgstr "Tiempo de ejecución más rápido"

#: ../Doc/whatsnew/3.11.rst:1304
msgid "Cheaper, lazy Python frames"
msgstr "Marcos de Python más baratos y perezosos"

#: ../Doc/whatsnew/3.11.rst:1306
msgid ""
"Python frames are created whenever Python calls a Python function. This "
"frame holds execution information. The following are new frame optimizations:"
msgstr ""
"Los marcos de Python se crean cada vez que Python llama a una función de "
"Python. Este marco contiene información de ejecución. Las siguientes son "
"nuevas optimizaciones de fotogramas:"

#: ../Doc/whatsnew/3.11.rst:1309
msgid "Streamlined the frame creation process."
msgstr "Simplificó el proceso de creación de marcos."

#: ../Doc/whatsnew/3.11.rst:1310
msgid ""
"Avoided memory allocation by generously re-using frame space on the C stack."
msgstr ""
"Se evitó la asignación de memoria al reutilizar generosamente el espacio de "
"marcos en la pila C."

#: ../Doc/whatsnew/3.11.rst:1311
msgid ""
"Streamlined the internal frame struct to contain only essential information. "
"Frames previously held extra debugging and memory management information."
msgstr ""
"Simplificó la estructura del marco interno para que contenga solo "
"información esencial. Los marcos contenían previamente información adicional "
"de gestión de memoria y depuración."

#: ../Doc/whatsnew/3.11.rst:1314
#, python-format
msgid ""
"Old-style frame objects are now created only when requested by debuggers or "
"by Python introspection functions such as ``sys._getframe`` or ``inspect."
"currentframe``. For most user code, no frame objects are created at all. As "
"a result, nearly all Python functions calls have sped up significantly. We "
"measured a 3-7% speedup in pyperformance."
msgstr ""
"Los objetos de marco de estilo antiguo ahora se crean solo cuando lo "
"solicitan los depuradores o las funciones de introspección de Python, como "
"``sys._getframe`` o ``inspect.currentframe``. Para la mayoría de los códigos "
"de usuario, no se crean objetos de marco en absoluto. Como resultado, casi "
"todas las llamadas a funciones de Python se han acelerado "
"significativamente. Medimos un 3-7% de aceleración en pyrendimiento."

#: ../Doc/whatsnew/3.11.rst:1320
msgid "(Contributed by Mark Shannon in :issue:`44590`.)"
msgstr "(Aportado por Mark Shannon en :issue:`44590`.)"

#: ../Doc/whatsnew/3.11.rst:1327
msgid "Inlined Python function calls"
msgstr "Llamadas a funciones de Python en línea"

#: ../Doc/whatsnew/3.11.rst:1329
msgid ""
"During a Python function call, Python will call an evaluating C function to "
"interpret that function's code. This effectively limits pure Python "
"recursion to what's safe for the C stack."
msgstr ""
"Durante una llamada de función de Python, Python llamará a una función C de "
"evaluación para interpretar el código de esa función. Esto limita "
"efectivamente la recursión pura de Python a lo que es seguro para la pila de "
"C."

#: ../Doc/whatsnew/3.11.rst:1333
msgid ""
"In 3.11, when CPython detects Python code calling another Python function, "
"it sets up a new frame, and \"jumps\" to the new code inside the new frame. "
"This avoids calling the C interpreting function altogether."
msgstr ""
"En 3.11, cuando CPython detecta código de Python que llama a otra función de "
"Python, configura un nuevo marco y \"salta\" al nuevo código dentro del "
"nuevo marco. Esto evita llamar a la función de interpretación de C por "
"completo."

#: ../Doc/whatsnew/3.11.rst:1337
#, python-format
msgid ""
"Most Python function calls now consume no C stack space. This speeds up most "
"of such calls. In simple recursive functions like fibonacci or factorial, a "
"1.7x speedup was observed. This also means recursive functions can recurse "
"significantly deeper (if the user increases the recursion limit). We "
"measured a 1-3% improvement in pyperformance."
msgstr ""
"La mayoría de las llamadas a funciones de Python ahora no consumen espacio "
"en la pila de C. Esto acelera la mayoría de tales llamadas. En funciones "
"recursivas simples como fibonacci o factorial, se observó una aceleración de "
"1,7x. Esto también significa que las funciones recursivas pueden repetirse "
"mucho más profundo (si el usuario aumenta el límite de recurrencia). Medimos "
"una mejora del 1-3 % en el rendimiento."

#: ../Doc/whatsnew/3.11.rst:1343
msgid "(Contributed by Pablo Galindo and Mark Shannon in :issue:`45256`.)"
msgstr "(Aportado por Pablo Galindo y Mark Shannon en :issue:`45256`.)"

#: ../Doc/whatsnew/3.11.rst:1349
msgid "PEP 659: Specializing Adaptive Interpreter"
msgstr "PEP 659: Intérprete Adaptativo Especializado"

#: ../Doc/whatsnew/3.11.rst:1351
msgid ""
":pep:`659` is one of the key parts of the faster CPython project. The "
"general idea is that while Python is a dynamic language, most code has "
"regions where objects and types rarely change. This concept is known as "
"*type stability*."
msgstr ""
":pep:`659` es una de las partes clave del proyecto CPython más rápido. La "
"idea general es que, si bien Python es un lenguaje dinámico, la mayoría del "
"código tiene regiones donde los objetos y los tipos rara vez cambian. Este "
"concepto se conoce como *type stability*."

#: ../Doc/whatsnew/3.11.rst:1355
msgid ""
"At runtime, Python will try to look for common patterns and type stability "
"in the executing code. Python will then replace the current operation with a "
"more specialized one. This specialized operation uses fast paths available "
"only to those use cases/types, which generally outperform their generic "
"counterparts. This also brings in another concept called *inline caching*, "
"where Python caches the results of expensive operations directly in the "
"bytecode."
msgstr ""
"En tiempo de ejecución, Python intentará buscar patrones comunes y escribir "
"estabilidad en el código de ejecución. Python luego reemplazará la operación "
"actual con una más especializada. Esta operación especializada usa rutas "
"rápidas disponibles solo para esos casos/tipos de uso, que generalmente "
"superan a sus contrapartes genéricas. Esto también trae otro concepto "
"llamado *inline caching*, donde Python almacena en caché los resultados de "
"operaciones costosas directamente en el código de bytes."

#: ../Doc/whatsnew/3.11.rst:1362
msgid ""
"The specializer will also combine certain common instruction pairs into one "
"superinstruction. This reduces the overhead during execution."
msgstr ""
"El especialista también combinará ciertos pares de instrucciones comunes en "
"una superinstrucción. Esto reduce la sobrecarga durante la ejecución."

#: ../Doc/whatsnew/3.11.rst:1365
msgid ""
"Python will only specialize when it sees code that is \"hot\" (executed "
"multiple times). This prevents Python from wasting time for run-once code. "
"Python can also de-specialize when code is too dynamic or when the use "
"changes. Specialization is attempted periodically, and specialization "
"attempts are not too expensive. This allows specialization to adapt to new "
"circumstances."
msgstr ""
"Python solo se especializará cuando vea un código \"caliente\" (ejecutado "
"varias veces). Esto evita que Python pierda tiempo con el código de "
"ejecución única. Python también puede dejar de especializarse cuando el "
"código es demasiado dinámico o cuando cambia el uso. La especialización se "
"intenta periódicamente y los intentos de especialización no son demasiado "
"costosos. Esto permite que la especialización se adapte a las nuevas "
"circunstancias."

#: ../Doc/whatsnew/3.11.rst:1372
msgid ""
"(PEP written by Mark Shannon, with ideas inspired by Stefan Brunthaler. See :"
"pep:`659` for more information. Implementation by Mark Shannon and Brandt "
"Bucher, with additional help from Irit Katriel and Dennis Sweeney.)"
msgstr ""
"(PEP escrito por Mark Shannon, con ideas inspiradas por Stefan Brunthaler. "
"Consulte :pep:`659` para obtener más información. Implementación por Mark "
"Shannon y Brandt Bucher, con ayuda adicional de Irit Katriel y Dennis "
"Sweeney)."

#: ../Doc/whatsnew/3.11.rst:1380
msgid "Operation"
msgstr "Operación"

#: ../Doc/whatsnew/3.11.rst:1380
msgid "Form"
msgstr "Forma"

#: ../Doc/whatsnew/3.11.rst:1380
msgid "Specialization"
msgstr "Especialización"

#: ../Doc/whatsnew/3.11.rst:1380
msgid "Operation speedup (up to)"
msgstr "Aceleración de la operación (hasta)"

#: ../Doc/whatsnew/3.11.rst:1380
msgid "Contributor(s)"
msgstr "Colaborador(es)"

#: ../Doc/whatsnew/3.11.rst:1383
msgid "Binary operations"
msgstr "Operaciones binarias"

#: ../Doc/whatsnew/3.11.rst:1383
msgid "``x+x; x*x; x-x;``"
msgstr "``x+x; x*x; x-x;``"

#: ../Doc/whatsnew/3.11.rst:1383
msgid ""
"Binary add, multiply and subtract for common types such as ``int``, "
"``float``, and ``str`` take custom fast paths for their underlying types."
msgstr ""
"La suma, multiplicación y resta binaria para tipos comunes como ``int``, "
"``float`` y ``str`` toman rutas rápidas personalizadas para sus tipos "
"subyacentes."

#: ../Doc/whatsnew/3.11.rst:1383
msgid "10%"
msgstr "10%"

#: ../Doc/whatsnew/3.11.rst:1383
msgid "Mark Shannon, Dong-hee Na, Brandt Bucher, Dennis Sweeney"
msgstr "Mark Shannon, Dong-hee Na, Brandt Bucher, Dennis Sweeney"

#: ../Doc/whatsnew/3.11.rst:1388
msgid "Subscript"
msgstr "Subíndice"

#: ../Doc/whatsnew/3.11.rst:1388
msgid "``a[i]``"
msgstr "``a[i]``"

#: ../Doc/whatsnew/3.11.rst:1388
msgid ""
"Subscripting container types such as ``list``, ``tuple`` and ``dict`` "
"directly index the underlying data structures."
msgstr ""
"Los tipos de contenedores de suscripción como ``list``, ``tuple`` y ``dict`` "
"indexan directamente las estructuras de datos subyacentes."

#: ../Doc/whatsnew/3.11.rst:1392
msgid ""
"Subscripting custom ``__getitem__`` is also inlined similar to :ref:`inline-"
"calls`."
msgstr ""
"La suscripción personalizada ``__getitem__`` también está en línea similar "
"a :ref:`inline-calls`."

#: ../Doc/whatsnew/3.11.rst:1388 ../Doc/whatsnew/3.11.rst:1395
msgid "10-25%"
msgstr "10-25%"

#: ../Doc/whatsnew/3.11.rst:1388
msgid "Irit Katriel, Mark Shannon"
msgstr "Irit KatrielMark Shannon"

#: ../Doc/whatsnew/3.11.rst:1395
msgid "Store subscript"
msgstr "Almacenar subíndice"

#: ../Doc/whatsnew/3.11.rst:1395
msgid "``a[i] = z``"
msgstr "``a[i] = z``"

#: ../Doc/whatsnew/3.11.rst:1395
msgid "Similar to subscripting specialization above."
msgstr "Similar a la especialización de subíndices anterior."

#: ../Doc/whatsnew/3.11.rst:1395
msgid "Dennis Sweeney"
msgstr "dennis sweeney"

#: ../Doc/whatsnew/3.11.rst:1398
msgid "Calls"
msgstr "Llamadas"

#: ../Doc/whatsnew/3.11.rst:1398
msgid "``f(arg)`` ``C(arg)``"
msgstr "``f(arg)`` ``C(arg)``"

#: ../Doc/whatsnew/3.11.rst:1398
msgid ""
"Calls to common builtin (C) functions and types such as ``len`` and ``str`` "
"directly call their underlying C version. This avoids going through the "
"internal calling convention."
msgstr ""
"Las llamadas a funciones y tipos integrados (C) comunes, como ``len`` y "
"``str``, llaman directamente a su versión C subyacente. Esto evita pasar por "
"la convención de llamada interna."

#: ../Doc/whatsnew/3.11.rst:1398
msgid "20%"
msgstr "20%"

#: ../Doc/whatsnew/3.11.rst:1398
msgid "Mark Shannon, Ken Jin"
msgstr "Mark ShannonKen Jin"

#: ../Doc/whatsnew/3.11.rst:1404
msgid "Load global variable"
msgstr "Cargar variable global"

#: ../Doc/whatsnew/3.11.rst:1404
msgid "``print`` ``len``"
msgstr "``print`` ``len``"

#: ../Doc/whatsnew/3.11.rst:1404
msgid ""
"The object's index in the globals/builtins namespace is cached. Loading "
"globals and builtins require zero namespace lookups."
msgstr ""
"El índice del objeto en el espacio de nombres globales/integrados se "
"almacena en caché. La carga de globales e integrados requiere cero búsquedas "
"de espacios de nombres."

#: ../Doc/whatsnew/3.11.rst:1404
msgid "[1]_"
msgstr "[1]_"

#: ../Doc/whatsnew/3.11.rst:1404 ../Doc/whatsnew/3.11.rst:1408
#: ../Doc/whatsnew/3.11.rst:1417
msgid "Mark Shannon"
msgstr "marca shannon"

#: ../Doc/whatsnew/3.11.rst:1408
msgid "Load attribute"
msgstr "Cargar atributo"

#: ../Doc/whatsnew/3.11.rst:1408
msgid "``o.attr``"
msgstr "``o.attr``"

#: ../Doc/whatsnew/3.11.rst:1408
msgid ""
"Similar to loading global variables. The attribute's index inside the class/"
"object's namespace is cached. In most cases, attribute loading will require "
"zero namespace lookups."
msgstr ""
"Similar a cargar variables globales. El índice del atributo dentro del "
"espacio de nombres de la clase/objeto se almacena en caché. En la mayoría de "
"los casos, la carga de atributos requerirá cero búsquedas de espacios de "
"nombres."

#: ../Doc/whatsnew/3.11.rst:1408
msgid "[2]_"
msgstr "[2]_"

#: ../Doc/whatsnew/3.11.rst:1413
msgid "Load methods for call"
msgstr "Cargar métodos para llamar"

#: ../Doc/whatsnew/3.11.rst:1413
msgid "``o.meth()``"
msgstr "``o.meth()``"

#: ../Doc/whatsnew/3.11.rst:1413
msgid ""
"The actual address of the method is cached. Method loading now has no "
"namespace lookups -- even for classes with long inheritance chains."
msgstr ""
"La dirección real del método se almacena en caché. La carga de métodos ahora "
"no tiene búsquedas de espacio de nombres, incluso para clases con largas "
"cadenas de herencia."

#: ../Doc/whatsnew/3.11.rst:1413
msgid "10-20%"
msgstr "10-20%"

#: ../Doc/whatsnew/3.11.rst:1413
msgid "Ken Jin, Mark Shannon"
msgstr "Ken JinMark Shannon"

#: ../Doc/whatsnew/3.11.rst:1417
msgid "Store attribute"
msgstr "Atributo de la tienda"

#: ../Doc/whatsnew/3.11.rst:1417
msgid "``o.attr = z``"
msgstr "``o.attr = z``"

#: ../Doc/whatsnew/3.11.rst:1417
msgid "Similar to load attribute optimization."
msgstr "Similar a la optimización de atributos de carga."

#: ../Doc/whatsnew/3.11.rst:1417
#, python-format
msgid "2% in pyperformance"
msgstr "2% en rendimiento"

#: ../Doc/whatsnew/3.11.rst:1420
msgid "Unpack Sequence"
msgstr "Secuencia de desempaquetado"

#: ../Doc/whatsnew/3.11.rst:1420
msgid "``*seq``"
msgstr "``*seq``"

#: ../Doc/whatsnew/3.11.rst:1420
msgid ""
"Specialized for common containers such as ``list`` and ``tuple``. Avoids "
"internal calling convention."
msgstr ""
"Especializado para contenedores comunes como ``list`` y ``tuple``. Evita la "
"convención de llamadas internas."

#: ../Doc/whatsnew/3.11.rst:1420
msgid "8%"
msgstr "8%"

#: ../Doc/whatsnew/3.11.rst:1420
msgid "Brandt Bucher"
msgstr "brandt bucher"

#: ../Doc/whatsnew/3.11.rst:1424
msgid ""
"A similar optimization already existed since Python 3.8.  3.11 specializes "
"for more forms and reduces some overhead."
msgstr ""
"Ya existía una optimización similar desde Python 3.8. 3.11 se especializa en "
"más formularios y reduce algunos gastos generales."

#: ../Doc/whatsnew/3.11.rst:1427
msgid ""
"A similar optimization already existed since Python 3.10. 3.11 specializes "
"for more forms. Furthermore, all attribute loads should be sped up by :issue:"
"`45947`."
msgstr ""
"Ya existía una optimización similar desde Python 3.10. 3.11 se especializa "
"en más formularios. Además, :issue:`45947` debería acelerar todas las cargas "
"de atributos."

#: ../Doc/whatsnew/3.11.rst:1435
msgid "Misc"
msgstr "Varios"

#: ../Doc/whatsnew/3.11.rst:1437
msgid ""
"Objects now require less memory due to lazily created object namespaces. "
"Their namespace dictionaries now also share keys more freely. (Contributed "
"Mark Shannon in :issue:`45340` and :issue:`40116`.)"
msgstr ""
"Los objetos ahora requieren menos memoria debido a los espacios de nombres "
"de objetos creados con pereza. Sus diccionarios de espacio de nombres ahora "
"también comparten claves más libremente. (Contribuido por Mark Shannon en :"
"issue:`45340` y :issue:`40116`)."

#: ../Doc/whatsnew/3.11.rst:1441
msgid ""
"A more concise representation of exceptions in the interpreter reduced the "
"time required for catching an exception by about 10%. (Contributed by Irit "
"Katriel in :issue:`45711`.)"
msgstr ""
"Una representación más concisa de las excepciones en el intérprete redujo el "
"tiempo necesario para detectar una excepción en aproximadamente un 10 %. "
"(Aportado por Irit Katriel en :issue:`45711`.)"

#: ../Doc/whatsnew/3.11.rst:1449
msgid "FAQ"
msgstr "Preguntas más frecuentes"

#: ../Doc/whatsnew/3.11.rst:1451
msgid "Q: How should I write my code to utilize these speedups?"
msgstr "P: ¿Cómo debo escribir mi código para utilizar estas aceleraciones?"

#: ../Doc/whatsnew/3.11.rst:1455
msgid ""
"A: You don't have to change your code. Write Pythonic code that follows "
"common best practices. The Faster CPython project optimizes for common code "
"patterns we observe."
msgstr ""
"R: No tienes que cambiar tu código. Escriba código Pythonic que siga las "
"mejores prácticas comunes. El proyecto Faster CPython optimiza los patrones "
"de código comunes que observamos."

#: ../Doc/whatsnew/3.11.rst:1458
msgid "Q: Will CPython 3.11 use more memory?"
msgstr "P: ¿CPython 3.11 usará más memoria?"

#: ../Doc/whatsnew/3.11.rst:1462
msgid ""
"A: Maybe not. We don't expect memory use to exceed 20% more than 3.10. This "
"is offset by memory optimizations for frame objects and object dictionaries "
"as mentioned above."
msgstr ""
"R: Tal vez no. No esperamos que el uso de memoria supere el 20% más que "
"3.10. Esto se compensa con las optimizaciones de memoria para objetos de "
"marco y diccionarios de objetos, como se mencionó anteriormente."

#: ../Doc/whatsnew/3.11.rst:1465
msgid "Q: I don't see any speedups in my workload. Why?"
msgstr "P: No veo ninguna aceleración en mi carga de trabajo. ¿Por qué?"

#: ../Doc/whatsnew/3.11.rst:1470
msgid ""
"A: Certain code won't have noticeable benefits. If your code spends most of "
"its time on I/O operations, or already does most of its computation in a C "
"extension library like numpy, there won't be significant speedup. This "
"project currently benefits pure-Python workloads the most."
msgstr ""
"R: Cierto código no tendrá beneficios notables. Si su código pasa la mayor "
"parte de su tiempo en operaciones de E/S, o ya realiza la mayor parte de su "
"cálculo en una biblioteca de extensión C como numpy, no habrá una "
"aceleración significativa. Actualmente, este proyecto es el que más "
"beneficia a las cargas de trabajo de Python puro."

#: ../Doc/whatsnew/3.11.rst:1474
msgid ""
"Furthermore, the pyperformance figures are a geometric mean. Even within the "
"pyperformance benchmarks, certain benchmarks have slowed down slightly, "
"while others have sped up by nearly 2x!"
msgstr ""
"Además, las cifras de pyperformance son una media geométrica. Incluso dentro "
"de los puntos de referencia de pyrendimiento, ciertos puntos de referencia "
"se han ralentizado ligeramente, mientras que otros se han acelerado casi 2 "
"veces."

#: ../Doc/whatsnew/3.11.rst:1477
msgid "Q: Is there a JIT compiler?"
msgstr "P: ¿Existe un compilador JIT?"

#: ../Doc/whatsnew/3.11.rst:1479
msgid "A: No. We're still exploring other optimizations."
msgstr "R: No. Todavía estamos explorando otras optimizaciones."

#: ../Doc/whatsnew/3.11.rst:1485
msgid "About"
msgstr "Sobre"

#: ../Doc/whatsnew/3.11.rst:1487
msgid ""
"Faster CPython explores optimizations for :term:`CPython`. The main team is "
"funded by Microsoft to work on this full-time. Pablo Galindo Salgado is also "
"funded by Bloomberg LP to work on the project part-time. Finally, many "
"contributors are volunteers from the community."
msgstr ""
"Faster CPython explora optimizaciones para :term:`CPython`. El equipo "
"principal está financiado por Microsoft para trabajar en esto a tiempo "
"completo. Pablo Galindo Salgado también está financiado por Bloomberg LP "
"para trabajar en el proyecto a tiempo parcial. Finalmente, muchos "
"contribuyentes son voluntarios de la comunidad."

#: ../Doc/whatsnew/3.11.rst:1496
msgid "CPython bytecode changes"
msgstr "Cambios en el código de bytes de CPython"

#: ../Doc/whatsnew/3.11.rst:1498
msgid ""
"The bytecode now contains inline cache entries, which take the form of the "
"newly-added :opcode:`CACHE` instructions. Many opcodes expect to be followed "
"by an exact number of caches, and instruct the interpreter to skip over them "
"at runtime. Populated caches can look like arbitrary instructions, so great "
"care should be taken when reading or modifying raw, adaptive bytecode "
"containing quickened data."
msgstr ""
"El código de bytes ahora contiene entradas de caché en línea, que toman la "
"forma de las instrucciones :opcode:`CACHE` recién agregadas. Muchos códigos "
"de operación esperan ser seguidos por una cantidad exacta de cachés e "
"indican al intérprete que los omita en tiempo de ejecución. Los cachés "
"poblados pueden parecer instrucciones arbitrarias, por lo que se debe tener "
"mucho cuidado al leer o modificar el código de bytes adaptativo sin procesar "
"que contiene datos acelerados."

#: ../Doc/whatsnew/3.11.rst:1510
msgid "New opcodes"
msgstr "Nuevos códigos de operación"

#: ../Doc/whatsnew/3.11.rst:1512
msgid ""
":opcode:`ASYNC_GEN_WRAP`, :opcode:`RETURN_GENERATOR` and :opcode:`SEND`, "
"used in generators and co-routines."
msgstr ""
":opcode:`ASYNC_GEN_WRAP`, :opcode:`RETURN_GENERATOR` y :opcode:`SEND`, "
"utilizados en generadores y co-rutinas."

#: ../Doc/whatsnew/3.11.rst:1515
msgid ""
":opcode:`COPY_FREE_VARS`, which avoids needing special caller-side code for "
"closures."
msgstr ""
":opcode:`COPY_FREE_VARS`, que evita la necesidad de un código especial del "
"lado de la persona que llama para los cierres."

#: ../Doc/whatsnew/3.11.rst:1518
msgid ""
":opcode:`JUMP_BACKWARD_NO_INTERRUPT`, for use in certain loops where "
"handling interrupts is undesirable."
msgstr ""
":opcode:`JUMP_BACKWARD_NO_INTERRUPT`, para usar en ciertos bucles donde no "
"es deseable manejar interrupciones."

#: ../Doc/whatsnew/3.11.rst:1521
msgid ":opcode:`MAKE_CELL`, to create :ref:`cell-objects`."
msgstr ":opcode:`MAKE_CELL`, para crear :ref:`cell-objects`."

#: ../Doc/whatsnew/3.11.rst:1523
msgid ""
":opcode:`CHECK_EG_MATCH`  and  :opcode:`PREP_RERAISE_STAR`, to handle the :"
"ref:`new exception groups and except* <whatsnew311-pep654>` added in :pep:"
"`654`."
msgstr ""
":opcode:`CHECK_EG_MATCH` y :opcode:`PREP_RERAISE_STAR`, para manejar el :ref:"
"`new exception groups and except* <whatsnew311-pep654>` agregado en :pep:"
"`654`."

#: ../Doc/whatsnew/3.11.rst:1527
msgid ":opcode:`PUSH_EXC_INFO`, for use in exception handlers."
msgstr ":opcode:`PUSH_EXC_INFO`, para uso en controladores de excepciones."

#: ../Doc/whatsnew/3.11.rst:1529
msgid ""
":opcode:`RESUME`, a no-op, for internal tracing, debugging and optimization "
"checks."
msgstr ""
":opcode:`RESUME`, no operativo, para el seguimiento interno, la depuración y "
"las comprobaciones de optimización."

#: ../Doc/whatsnew/3.11.rst:1536
msgid "Replaced opcodes"
msgstr "Códigos de operación reemplazados"

#: ../Doc/whatsnew/3.11.rst:1539
msgid "Replaced Opcode(s)"
msgstr "Códigos de operación reemplazados"

#: ../Doc/whatsnew/3.11.rst:1539
msgid "New Opcode(s)"
msgstr "Nuevos códigos de operación"

#: ../Doc/whatsnew/3.11.rst:1539
msgid "Notes"
msgstr "notas"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!BINARY_*`"
msgstr ":opcode:`!BINARY_*`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!INPLACE_*`"
msgstr ":opcode:`!INPLACE_*`"

#: ../Doc/whatsnew/3.11.rst:1541
msgid ":opcode:`BINARY_OP`"
msgstr ":opcode:`BINARY_OP`"

#: ../Doc/whatsnew/3.11.rst:1541
msgid "Replaced all numeric binary/in-place opcodes with a single opcode"
msgstr ""
"Reemplazó todos los códigos de operación numéricos binarios/en el lugar con "
"un solo código de operación"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!CALL_FUNCTION`"
msgstr ":opcode:`!CALL_FUNCTION`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!CALL_FUNCTION_KW`"
msgstr ":opcode:`!CALL_FUNCTION_KW`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!CALL_METHOD`"
msgstr ":opcode:`!CALL_METHOD`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`CALL`"
msgstr ":opcode:`CALL`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`KW_NAMES`"
msgstr ":opcode:`KW_NAMES`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`PRECALL`"
msgstr ":opcode:`PRECALL`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`PUSH_NULL`"
msgstr ":opcode:`PUSH_NULL`"

#: ../Doc/whatsnew/3.11.rst:1544
msgid ""
"Decouples argument shifting for methods from handling of keyword arguments; "
"allows better specialization of calls"
msgstr ""
"Separa el cambio de argumentos para métodos del manejo de argumentos de "
"palabras clave; permite una mejor especialización de las llamadas"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!DUP_TOP`"
msgstr ":opcode:`!DUP_TOP`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!DUP_TOP_TWO`"
msgstr ":opcode:`!DUP_TOP_TWO`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!ROT_TWO`"
msgstr ":opcode:`!ROT_TWO`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!ROT_THREE`"
msgstr ":opcode:`!ROT_THREE`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!ROT_FOUR`"
msgstr ":opcode:`!ROT_FOUR`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!ROT_N`"
msgstr ":opcode:`!ROT_N`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`COPY`"
msgstr ":opcode:`COPY`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`SWAP`"
msgstr ":opcode:`SWAP`"

#: ../Doc/whatsnew/3.11.rst:1549
msgid "Stack manipulation instructions"
msgstr "Instrucciones de manipulación de pilas"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!JUMP_IF_NOT_EXC_MATCH`"
msgstr ":opcode:`!JUMP_IF_NOT_EXC_MATCH`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`CHECK_EXC_MATCH`"
msgstr ":opcode:`CHECK_EXC_MATCH`"

#: ../Doc/whatsnew/3.11.rst:1556
msgid "Now performs check but doesn't jump"
msgstr "Ahora realiza la comprobación pero no salta."

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!JUMP_ABSOLUTE`"
msgstr ":opcode:`!JUMP_ABSOLUTE`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!POP_JUMP_IF_FALSE`"
msgstr ":opcode:`!POP_JUMP_IF_FALSE`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!POP_JUMP_IF_TRUE`"
msgstr ":opcode:`!POP_JUMP_IF_TRUE`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`JUMP_BACKWARD`"
msgstr ":opcode:`JUMP_BACKWARD`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`POP_JUMP_BACKWARD_IF_* <POP_JUMP_BACKWARD_IF_TRUE>`"
msgstr ":opcode:`POP_JUMP_BACKWARD_IF_* <POP_JUMP_BACKWARD_IF_TRUE>`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`POP_JUMP_FORWARD_IF_* <POP_JUMP_FORWARD_IF_TRUE>`"
msgstr ":opcode:`POP_JUMP_FORWARD_IF_* <POP_JUMP_FORWARD_IF_TRUE>`"

#: ../Doc/whatsnew/3.11.rst:1558
msgid ""
"See [#bytecode-jump]_; ``TRUE``, ``FALSE``, ``NONE`` and ``NOT_NONE`` "
"variants for each direction"
msgstr ""
"Ver [#bytecode-jump]_; Variantes ``TRUE``, ``FALSE``, ``NONE`` y "
"``NOT_NONE`` para cada dirección"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!SETUP_WITH`"
msgstr ":opcode:`!SETUP_WITH`"

#: ../Doc/whatsnew/3.11.rst
msgid ":opcode:`!SETUP_ASYNC_WITH`"
msgstr ":opcode:`!SETUP_ASYNC_WITH`"

#: ../Doc/whatsnew/3.11.rst:1564
msgid ":opcode:`BEFORE_WITH`"
msgstr ":opcode:`BEFORE_WITH`"

#: ../Doc/whatsnew/3.11.rst:1564
msgid ":keyword:`with` block setup"
msgstr "Configuración del bloque :keyword:`with`"

#: ../Doc/whatsnew/3.11.rst:1568
msgid ""
"All jump opcodes are now relative, including the existing :opcode:"
"`JUMP_IF_TRUE_OR_POP` and :opcode:`JUMP_IF_FALSE_OR_POP`. The argument is "
"now an offset from the current instruction rather than an absolute location."
msgstr ""
"Todos los códigos de operación de salto ahora son relativos, incluidos los :"
"opcode:`JUMP_IF_TRUE_OR_POP` y :opcode:`JUMP_IF_FALSE_OR_POP` existentes. El "
"argumento ahora es un desplazamiento de la instrucción actual en lugar de "
"una ubicación absoluta."

#: ../Doc/whatsnew/3.11.rst:1579
msgid "Changed/removed opcodes"
msgstr "Códigos de operación cambiados/eliminados"

#: ../Doc/whatsnew/3.11.rst:1581
msgid ""
"Changed :opcode:`MATCH_CLASS` and :opcode:`MATCH_KEYS` to no longer push an "
"additional boolean value to indicate success/failure. Instead, ``None`` is "
"pushed on failure in place of the tuple of extracted values."
msgstr ""
"Se cambiaron :opcode:`MATCH_CLASS` y :opcode:`MATCH_KEYS` para que ya no "
"envíen un valor booleano adicional para indicar éxito/fracaso. En su lugar, "
"se inserta ``None`` en caso de error en lugar de la tupla de valores "
"extraídos."

#: ../Doc/whatsnew/3.11.rst:1586
msgid ""
"Changed opcodes that work with exceptions to reflect them now being "
"represented as one item on the stack instead of three (see :gh:`89874`)."
msgstr ""
"Se cambiaron los códigos de operación que funcionan con excepciones para "
"reflejarlas y ahora se representan como un elemento en la pila en lugar de "
"tres (ver :gh:`89874`)."

#: ../Doc/whatsnew/3.11.rst:1590
msgid ""
"Removed :opcode:`!COPY_DICT_WITHOUT_KEYS`, :opcode:`!GEN_START`, :opcode:`!"
"POP_BLOCK`, :opcode:`!SETUP_FINALLY` and :opcode:`!YIELD_FROM`."
msgstr ""
"Se eliminaron :opcode:`!COPY_DICT_WITHOUT_KEYS`, :opcode:`!GEN_START`, :"
"opcode:`!POP_BLOCK`, :opcode:`!SETUP_FINALLY` y :opcode:`!YIELD_FROM`."

#: ../Doc/whatsnew/3.11.rst:1598 ../Doc/whatsnew/3.11.rst:2451
msgid "Deprecated"
msgstr "Obsoleto"

#: ../Doc/whatsnew/3.11.rst:1600
msgid ""
"This section lists Python APIs that have been deprecated in Python 3.11."
msgstr ""
"Esta sección enumera las API de Python que han quedado obsoletas en Python "
"3.11."

#: ../Doc/whatsnew/3.11.rst:1602
msgid ""
"Deprecated C APIs are :ref:`listed separately <whatsnew311-c-api-"
"deprecated>`."
msgstr ""
"Las API de C en desuso son :ref:`listed separately <whatsnew311-c-api-"
"deprecated>`."

#: ../Doc/whatsnew/3.11.rst:1609
msgid "Language/Builtins"
msgstr "Idioma/Construidos"

#: ../Doc/whatsnew/3.11.rst:1611
msgid ""
"Chaining :class:`classmethod` descriptors (introduced in :issue:`19072`) is "
"now deprecated.  It can no longer be used to wrap other descriptors such as :"
"class:`property`.  The core design of this feature was flawed and caused a "
"number of downstream problems.  To \"pass-through\" a :class:`classmethod`, "
"consider using the :attr:`!__wrapped__` attribute that was added in Python "
"3.10. (Contributed by Raymond Hettinger in :gh:`89519`.)"
msgstr ""
"El encadenamiento de descriptores :class:`classmethod` (introducido en :"
"issue:`19072`) ahora está en desuso. Ya no se puede usar para envolver otros "
"descriptores como :class:`property`. El diseño central de esta función tenía "
"fallas y causó una serie de problemas posteriores. Para \"transmitir\" un :"
"class:`classmethod`, considere usar el atributo :attr:`!__wrapped__` que se "
"agregó en Python 3.10. (Aportado por Raymond Hettinger en :gh:`89519`.)"

#: ../Doc/whatsnew/3.11.rst:1619
msgid ""
"Octal escapes in string and bytes literals with values larger than ``0o377`` "
"(255 in decimal) now produce a :exc:`DeprecationWarning`. In a future Python "
"version, they will raise a :exc:`SyntaxWarning` and eventually a :exc:"
"`SyntaxError`. (Contributed by Serhiy Storchaka in :gh:`81548`.)"
msgstr ""
"Los escapes octales en cadenas y bytes literales con valores mayores que "
"``0o377`` (255 en decimal) ahora producen un :exc:`DeprecationWarning`. En "
"una futura versión de Python, generarán un :exc:`SyntaxWarning` y "
"eventualmente un :exc:`SyntaxError`. (Aportado por Serhiy Storchaka en :gh:"
"`81548`.)"

#: ../Doc/whatsnew/3.11.rst:1625
msgid ""
"The delegation of :func:`int` to :meth:`~object.__trunc__` is now "
"deprecated. Calling ``int(a)`` when ``type(a)`` implements :meth:`!"
"__trunc__` but not :meth:`~object.__int__` or :meth:`~object.__index__` now "
"raises a :exc:`DeprecationWarning`. (Contributed by Zackery Spytz in :issue:"
"`44977`.)"
msgstr ""
"La delegación de :func:`int` a :meth:`~object.__trunc__` ahora está "
"obsoleta. Llamar a ``int(a)`` cuando ``type(a)`` implementa :meth:`!"
"__trunc__` pero no :meth:`~object.__int__` o :meth:`~object.__index__` ahora "
"genera un :exc:`DeprecationWarning`. (Aportado por Zackery Spytz en :issue:"
"`44977`)."

#: ../Doc/whatsnew/3.11.rst:1635
msgid "Modules"
msgstr "Módulos"

#: ../Doc/whatsnew/3.11.rst:1639
msgid ""
":pep:`594` led to the deprecations of the following modules slated for "
"removal in Python 3.13:"
msgstr ""
":pep:`594` condujo a la desaprobación de los siguientes módulos programados "
"para su eliminación en Python 3.13:"

#: ../Doc/whatsnew/3.11.rst:1643
msgid ":mod:`aifc`"
msgstr ":mod:`aifc`"

#: ../Doc/whatsnew/3.11.rst:1643
msgid ":mod:`chunk`"
msgstr ":mod:`chunk`"

#: ../Doc/whatsnew/3.11.rst:1643
msgid ":mod:`msilib`"
msgstr ":mod:`msilib`"

#: ../Doc/whatsnew/3.11.rst:1643
msgid ":mod:`pipes`"
msgstr ":mod:`pipes`"

#: ../Doc/whatsnew/3.11.rst:1643
msgid ":mod:`telnetlib`"
msgstr ":mod:`telnetlib`"

#: ../Doc/whatsnew/3.11.rst:1645
msgid ":mod:`audioop`"
msgstr ":mod:`audioop`"

#: ../Doc/whatsnew/3.11.rst:1645
msgid ":mod:`crypt`"
msgstr ":mod:`crypt`"

#: ../Doc/whatsnew/3.11.rst:1645
msgid ":mod:`nis`"
msgstr ":mod:`nis`"

#: ../Doc/whatsnew/3.11.rst:1645
msgid ":mod:`sndhdr`"
msgstr ":mod:`sndhdr`"

#: ../Doc/whatsnew/3.11.rst:1645
msgid ":mod:`uu`"
msgstr ":mod:`uu`"

#: ../Doc/whatsnew/3.11.rst:1647
msgid ":mod:`cgi`"
msgstr ":mod:`cgi`"

#: ../Doc/whatsnew/3.11.rst:1647
msgid ":mod:`imghdr`"
msgstr ":mod:`imghdr`"

#: ../Doc/whatsnew/3.11.rst:1647
msgid ":mod:`nntplib`"
msgstr ":mod:`nntplib`"

#: ../Doc/whatsnew/3.11.rst:1647
msgid ":mod:`spwd`"
msgstr ":mod:`spwd`"

#: ../Doc/whatsnew/3.11.rst:1647
msgid ":mod:`xdrlib`"
msgstr ":mod:`xdrlib`"

#: ../Doc/whatsnew/3.11.rst:1649
msgid ":mod:`cgitb`"
msgstr ":mod:`cgitb`"

#: ../Doc/whatsnew/3.11.rst:1649
msgid ":mod:`mailcap`"
msgstr ":mod:`mailcap`"

#: ../Doc/whatsnew/3.11.rst:1649
msgid ":mod:`ossaudiodev`"
msgstr ":mod:`ossaudiodev`"

#: ../Doc/whatsnew/3.11.rst:1649
msgid ":mod:`sunau`"
msgstr ":mod:`sunau`"

#: ../Doc/whatsnew/3.11.rst:1652
msgid ""
"(Contributed by Brett Cannon in :issue:`47061` and Victor Stinner in :gh:"
"`68966`.)"
msgstr ""
"(Aportado por Brett Cannon en :issue:`47061` y Victor Stinner en :gh:"
"`68966`)."

#: ../Doc/whatsnew/3.11.rst:1655
msgid ""
"The :mod:`asynchat`, :mod:`asyncore` and  :mod:`smtpd` modules have been "
"deprecated since at least Python 3.6. Their documentation and deprecation "
"warnings have now been updated to note they will removed in Python 3.12. "
"(Contributed by Hugo van Kemenade in :issue:`47022`.)"
msgstr ""
"Los módulos :mod:`asynchat`, :mod:`asyncore` y :mod:`smtpd` han quedado "
"obsoletos desde al menos Python 3.6. Su documentación y advertencias de "
"obsolescencia ahora se han actualizado para señalar que se eliminarán en "
"Python 3.12. (Aportado por Hugo van Kemenade en :issue:`47022`.)"

#: ../Doc/whatsnew/3.11.rst:1660
msgid ""
"The :mod:`lib2to3` package and :ref:`2to3 <2to3-reference>` tool are now "
"deprecated and may not be able to parse Python 3.10 or newer. See :pep:"
"`617`, introducing the new PEG parser, for details. (Contributed by Victor "
"Stinner in :issue:`40360`.)"
msgstr ""
"El paquete :mod:`lib2to3` y la herramienta :ref:`2to3 <2to3-reference>` "
"ahora están obsoletos y es posible que no puedan analizar Python 3.10 o "
"posterior. Consulte :pep:`617`, que presenta el nuevo analizador PEG, para "
"obtener más información. (Aportado por Victor Stinner en :issue:`40360`.)"

#: ../Doc/whatsnew/3.11.rst:1665
msgid ""
"Undocumented modules :mod:`!sre_compile`, :mod:`!sre_constants` and :mod:`!"
"sre_parse` are now deprecated. (Contributed by Serhiy Storchaka in :issue:"
"`47152`.)"
msgstr ""
"Los módulos no documentados :mod:`!sre_compile`, :mod:`!sre_constants` y :"
"mod:`!sre_parse` ahora están obsoletos. (Aportado por Serhiy Storchaka en :"
"issue:`47152`.)"

#: ../Doc/whatsnew/3.11.rst:1673
msgid "Standard Library"
msgstr "Biblioteca estándar"

#: ../Doc/whatsnew/3.11.rst:1675
msgid ""
"The following have been deprecated in :mod:`configparser` since Python 3.2. "
"Their deprecation warnings have now been updated to note they will removed "
"in Python 3.12:"
msgstr ""
"Los siguientes han quedado obsoletos en :mod:`configparser` desde Python "
"3.2. Sus advertencias de obsolescencia ahora se han actualizado para señalar "
"que se eliminarán en Python 3.12:"

#: ../Doc/whatsnew/3.11.rst:1679
msgid "the :class:`!configparser.SafeConfigParser` class"
msgstr "la clase :class:`!configparser.SafeConfigParser`"

#: ../Doc/whatsnew/3.11.rst:1680
msgid "the :attr:`!configparser.ParsingError.filename` property"
msgstr "la propiedad :attr:`!configparser.ParsingError.filename`"

#: ../Doc/whatsnew/3.11.rst:1681
msgid "the :meth:`configparser.RawConfigParser.readfp` method"
msgstr "el método :meth:`configparser.RawConfigParser.readfp`"

#: ../Doc/whatsnew/3.11.rst:1683
msgid "(Contributed by Hugo van Kemenade in :issue:`45173`.)"
msgstr "(Aportado por Hugo van Kemenade en :issue:`45173`.)"

#: ../Doc/whatsnew/3.11.rst:1685
msgid ""
":class:`!configparser.LegacyInterpolation` has been deprecated in the "
"docstring since Python 3.2, and is not listed in the :mod:`configparser` "
"documentation. It now emits a :exc:`DeprecationWarning` and will be removed "
"in Python 3.13. Use :class:`configparser.BasicInterpolation` or :class:"
"`configparser.ExtendedInterpolation` instead. (Contributed by Hugo van "
"Kemenade in :issue:`46607`.)"
msgstr ""
":class:`!configparser.LegacyInterpolation` ha quedado obsoleto en la cadena "
"de documentación desde Python 3.2 y no aparece en la documentación de :mod:"
"`configparser`. Ahora emite un :exc:`DeprecationWarning` y se eliminará en "
"Python 3.13. Utilice :class:`configparser.BasicInterpolation` o :class:"
"`configparser.ExtendedInterpolation` en su lugar. (Aportado por Hugo van "
"Kemenade en :issue:`46607`.)"

#: ../Doc/whatsnew/3.11.rst:1692
msgid ""
"The older set of :mod:`importlib.resources` functions were deprecated in "
"favor of the replacements added in Python 3.9 and will be removed in a "
"future Python version, due to not supporting resources located within "
"package subdirectories:"
msgstr ""
"El conjunto anterior de funciones :mod:`importlib.resources` quedó en desuso "
"en favor de los reemplazos agregados en Python 3.9 y se eliminará en una "
"versión futura de Python, debido a que no admite recursos ubicados dentro de "
"los subdirectorios del paquete:"

#: ../Doc/whatsnew/3.11.rst:1697
msgid ":func:`importlib.resources.contents`"
msgstr ":func:`importlib.resources.contents`"

#: ../Doc/whatsnew/3.11.rst:1698
msgid ":func:`importlib.resources.is_resource`"
msgstr ":func:`importlib.resources.is_resource`"

#: ../Doc/whatsnew/3.11.rst:1699
msgid ":func:`importlib.resources.open_binary`"
msgstr ":func:`importlib.resources.open_binary`"

#: ../Doc/whatsnew/3.11.rst:1700
msgid ":func:`importlib.resources.open_text`"
msgstr ":func:`importlib.resources.open_text`"

#: ../Doc/whatsnew/3.11.rst:1701
msgid ":func:`importlib.resources.read_binary`"
msgstr ":func:`importlib.resources.read_binary`"

#: ../Doc/whatsnew/3.11.rst:1702
msgid ":func:`importlib.resources.read_text`"
msgstr ":func:`importlib.resources.read_text`"

#: ../Doc/whatsnew/3.11.rst:1703
msgid ":func:`importlib.resources.path`"
msgstr ":func:`importlib.resources.path`"

#: ../Doc/whatsnew/3.11.rst:1705
msgid ""
"The :func:`locale.getdefaultlocale` function is deprecated and will be "
"removed in Python 3.13. Use :func:`locale.setlocale`, :func:`locale."
"getpreferredencoding(False) <locale.getpreferredencoding>` and :func:`locale."
"getlocale` functions instead. (Contributed by Victor Stinner in :gh:`90817`.)"
msgstr ""
"La función :func:`locale.getdefaultlocale` está en desuso y se eliminará en "
"Python 3.13. Utilice las funciones :func:`locale.setlocale`, :func:`locale."
"getpreferredencoding(False) <locale.getpreferredencoding>` y :func:`locale."
"getlocale` en su lugar. (Aportado por Victor Stinner en :gh:`90817`.)"

#: ../Doc/whatsnew/3.11.rst:1711
msgid ""
"The :func:`locale.resetlocale` function is deprecated and will be removed in "
"Python 3.13. Use ``locale.setlocale(locale.LC_ALL, \"\")`` instead. "
"(Contributed by Victor Stinner in :gh:`90817`.)"
msgstr ""
"La función :func:`locale.resetlocale` está en desuso y se eliminará en "
"Python 3.13. Utilice ``locale.setlocale(locale.LC_ALL, \"\")`` en su lugar. "
"(Aportado por Victor Stinner en :gh:`90817`.)"

#: ../Doc/whatsnew/3.11.rst:1715
msgid ""
"Stricter rules will now be applied for numerical group references and group "
"names in :ref:`regular expressions <re-syntax>`. Only sequences of ASCII "
"digits will now be accepted as a numerical reference, and the group name in :"
"class:`bytes` patterns and replacement strings can only contain ASCII "
"letters, digits and underscores. For now, a deprecation warning is raised "
"for syntax violating these rules. (Contributed by Serhiy Storchaka in :gh:"
"`91760`.)"
msgstr ""
"Ahora se aplicarán reglas más estrictas para las referencias de grupos "
"numéricos y los nombres de grupos en :ref:`regular expressions <re-syntax>`. "
"Ahora solo se aceptarán secuencias de dígitos ASCII como referencia "
"numérica, y el nombre del grupo en los patrones :class:`bytes` y las cadenas "
"de reemplazo solo pueden contener letras ASCII, dígitos y guiones bajos. Por "
"ahora, se genera una advertencia de desaprobación para la sintaxis que viola "
"estas reglas. (Aportado por Serhiy Storchaka en :gh:`91760`.)"

#: ../Doc/whatsnew/3.11.rst:1723
msgid ""
"In the :mod:`re` module, the :func:`!re.template` function and the "
"corresponding :data:`!re.TEMPLATE` and :data:`!re.T` flags are deprecated, "
"as they were undocumented and lacked an obvious purpose. They will be "
"removed in Python 3.13. (Contributed by Serhiy Storchaka and Miro Hrončok "
"in :gh:`92728`.)"
msgstr ""
"En el módulo :mod:`re`, la función :func:`!re.template` y los indicadores :"
"data:`!re.TEMPLATE` y :data:`!re.T` correspondientes están obsoletos, ya que "
"no estaban documentados y carecían de un propósito obvio. Se eliminarán en "
"Python 3.13. (Aportado por Serhiy Storchaka y Miro Hrončok en :gh:`92728`.)"

#: ../Doc/whatsnew/3.11.rst:1729
msgid ""
":func:`turtle.settiltangle` has been deprecated since Python 3.1; it now "
"emits a deprecation warning and will be removed in Python 3.13. Use :func:"
"`turtle.tiltangle` instead (it was earlier incorrectly marked as deprecated, "
"and its docstring is now corrected). (Contributed by Hugo van Kemenade in :"
"issue:`45837`.)"
msgstr ""
":func:`turtle.settiltangle` está en desuso desde Python 3.1; ahora emite una "
"advertencia de desaprobación y se eliminará en Python 3.13. Utilice :func:"
"`turtle.tiltangle` en su lugar (anteriormente se marcó incorrectamente como "
"obsoleto y su cadena de documentación ahora está corregida). (Aportado por "
"Hugo van Kemenade en :issue:`45837`.)"

#: ../Doc/whatsnew/3.11.rst:1735
msgid ""
":class:`typing.Text`, which exists solely to provide compatibility support "
"between Python 2 and Python 3 code, is now deprecated. Its removal is "
"currently unplanned, but users are encouraged to use :class:`str` instead "
"wherever possible. (Contributed by Alex Waygood in :gh:`92332`.)"
msgstr ""
":class:`typing.Text`, que existe únicamente para proporcionar soporte de "
"compatibilidad entre el código de Python 2 y Python 3, ahora está obsoleto. "
"Su eliminación no está planificada actualmente, pero se recomienda a los "
"usuarios que usen :class:`str` en su lugar siempre que sea posible. "
"(Aportado por Alex Waygood en :gh:`92332`.)"

#: ../Doc/whatsnew/3.11.rst:1741
msgid ""
"The keyword argument syntax for constructing :data:`typing.TypedDict` types "
"is now deprecated. Support will be removed in Python 3.13. (Contributed by "
"Jingchen Ye in :gh:`90224`.)"
msgstr ""
"La sintaxis de argumento de palabra clave para construir tipos :data:`typing."
"TypedDict` ahora está obsoleta. Se eliminará el soporte en Python 3.13. "
"(Aportado por Jingchen Ye en :gh:`90224`.)"

#: ../Doc/whatsnew/3.11.rst:1745
msgid ""
":class:`!webbrowser.MacOSX` is deprecated and will be removed in Python "
"3.13. It is untested, undocumented, and not used by :mod:`webbrowser` "
"itself. (Contributed by Dong-hee Na in :issue:`42255`.)"
msgstr ""
":class:`!webbrowser.MacOSX` está en desuso y se eliminará en Python 3.13. No "
"está probado, no está documentado y no es utilizado por el propio :mod:"
"`webbrowser`. (Aportado por Dong-hee Na en :issue:`42255`.)"

#: ../Doc/whatsnew/3.11.rst:1749
msgid ""
"The behavior of returning a value from a :class:`~unittest.TestCase` and :"
"class:`~unittest.IsolatedAsyncioTestCase` test methods (other than the "
"default ``None`` value) is now deprecated."
msgstr ""
"El comportamiento de devolver un valor de los métodos de prueba :class:"
"`~unittest.TestCase` y :class:`~unittest.IsolatedAsyncioTestCase` (aparte "
"del valor ``None`` predeterminado) ahora está obsoleto."

#: ../Doc/whatsnew/3.11.rst:1753
msgid ""
"Deprecated the following not-formally-documented :mod:`unittest` functions, "
"scheduled for removal in Python 3.13:"
msgstr ""
"Se descartaron las siguientes funciones :mod:`unittest` no documentadas "
"formalmente, programadas para su eliminación en Python 3.13:"

#: ../Doc/whatsnew/3.11.rst:1756
msgid ":func:`!unittest.findTestCases`"
msgstr ":func:`!unittest.findTestCases`"

#: ../Doc/whatsnew/3.11.rst:1757
msgid ":func:`!unittest.makeSuite`"
msgstr ":func:`!unittest.makeSuite`"

#: ../Doc/whatsnew/3.11.rst:1758
msgid ":func:`!unittest.getTestCaseNames`"
msgstr ":func:`!unittest.getTestCaseNames`"

#: ../Doc/whatsnew/3.11.rst:1760
msgid "Use :class:`~unittest.TestLoader` methods instead:"
msgstr "Utilice métodos :class:`~unittest.TestLoader` en su lugar:"

#: ../Doc/whatsnew/3.11.rst:1762
msgid ":meth:`unittest.TestLoader.loadTestsFromModule`"
msgstr ":meth:`unittest.TestLoader.loadTestsFromModule`"

#: ../Doc/whatsnew/3.11.rst:1763
msgid ":meth:`unittest.TestLoader.loadTestsFromTestCase`"
msgstr ":meth:`unittest.TestLoader.loadTestsFromTestCase`"

#: ../Doc/whatsnew/3.11.rst:1764
msgid ":meth:`unittest.TestLoader.getTestCaseNames`"
msgstr ":meth:`unittest.TestLoader.getTestCaseNames`"

#: ../Doc/whatsnew/3.11.rst:1766
msgid "(Contributed by Erlend E. Aasland in :issue:`5846`.)"
msgstr "(Aportado por Erlend E. Aasland en :issue:`5846`.)"

#: ../Doc/whatsnew/3.11.rst:1773 ../Doc/whatsnew/3.11.rst:2479
msgid "Pending Removal in Python 3.12"
msgstr "Eliminación pendiente en Python 3.12"

#: ../Doc/whatsnew/3.11.rst:1775
msgid ""
"The following Python APIs have been deprecated in earlier Python releases, "
"and will be removed in Python 3.12."
msgstr ""
"Las siguientes API de Python han quedado obsoletas en versiones anteriores "
"de Python y se eliminarán en Python 3.12."

#: ../Doc/whatsnew/3.11.rst:1778
msgid ""
"C APIs pending removal are :ref:`listed separately <whatsnew311-c-api-"
"pending-removal>`."
msgstr ""
"Las API de C pendientes de eliminación son :ref:`listed separately "
"<whatsnew311-c-api-pending-removal>`."

#: ../Doc/whatsnew/3.11.rst:1781
msgid ":class:`pkgutil.ImpImporter`"
msgstr ":class:`pkgutil.ImpImporter`"

#: ../Doc/whatsnew/3.11.rst:1782
msgid ":class:`pkgutil.ImpLoader`"
msgstr ":class:`pkgutil.ImpLoader`"

#: ../Doc/whatsnew/3.11.rst:1783
msgid ":envvar:`PYTHONTHREADDEBUG`"
msgstr ":envvar:`PYTHONTHREADDEBUG`"

#: ../Doc/whatsnew/3.11.rst:1784
msgid ":func:`importlib.find_loader`"
msgstr ":func:`importlib.find_loader`"

#: ../Doc/whatsnew/3.11.rst:1785
msgid ":func:`importlib.util.module_for_loader`"
msgstr ":func:`importlib.util.module_for_loader`"

#: ../Doc/whatsnew/3.11.rst:1786
msgid ":func:`importlib.util.set_loader_wrapper`"
msgstr ":func:`importlib.util.set_loader_wrapper`"

#: ../Doc/whatsnew/3.11.rst:1787
msgid ":func:`importlib.util.set_package_wrapper`"
msgstr ":func:`importlib.util.set_package_wrapper`"

#: ../Doc/whatsnew/3.11.rst:1788
msgid ":meth:`importlib.abc.Loader.module_repr`"
msgstr ":meth:`importlib.abc.Loader.module_repr`"

#: ../Doc/whatsnew/3.11.rst:1789
msgid ":meth:`importlib.abc.Loadermodule_repr`"
msgstr ":meth:`importlib.abc.Loadermodule_repr`"

#: ../Doc/whatsnew/3.11.rst:1790 ../Doc/whatsnew/3.11.rst:1791
msgid ":meth:`importlib.abc.MetaPathFinder.find_module`"
msgstr ":meth:`importlib.abc.MetaPathFinder.find_module`"

#: ../Doc/whatsnew/3.11.rst:1792
msgid ":meth:`importlib.abc.PathEntryFinder.find_loader`"
msgstr ":meth:`importlib.abc.PathEntryFinder.find_loader`"

#: ../Doc/whatsnew/3.11.rst:1793
msgid ":meth:`importlib.abc.PathEntryFinder.find_module`"
msgstr ":meth:`importlib.abc.PathEntryFinder.find_module`"

#: ../Doc/whatsnew/3.11.rst:1794
msgid ":meth:`importlib.machinery.BuiltinImporter.find_module`"
msgstr ":meth:`importlib.machinery.BuiltinImporter.find_module`"

#: ../Doc/whatsnew/3.11.rst:1795
msgid ":meth:`importlib.machinery.BuiltinLoader.module_repr`"
msgstr ":meth:`importlib.machinery.BuiltinLoader.module_repr`"

#: ../Doc/whatsnew/3.11.rst:1796
msgid ":meth:`importlib.machinery.FileFinder.find_loader`"
msgstr ":meth:`importlib.machinery.FileFinder.find_loader`"

#: ../Doc/whatsnew/3.11.rst:1797
msgid ":meth:`importlib.machinery.FileFinder.find_module`"
msgstr ":meth:`importlib.machinery.FileFinder.find_module`"

#: ../Doc/whatsnew/3.11.rst:1798
msgid ":meth:`importlib.machinery.FrozenImporter.find_module`"
msgstr ":meth:`importlib.machinery.FrozenImporter.find_module`"

#: ../Doc/whatsnew/3.11.rst:1799
msgid ":meth:`importlib.machinery.FrozenLoader.module_repr`"
msgstr ":meth:`importlib.machinery.FrozenLoader.module_repr`"

#: ../Doc/whatsnew/3.11.rst:1800
msgid ":meth:`importlib.machinery.PathFinder.find_module`"
msgstr ":meth:`importlib.machinery.PathFinder.find_module`"

#: ../Doc/whatsnew/3.11.rst:1801
msgid ":meth:`importlib.machinery.WindowsRegistryFinder.find_module`"
msgstr ":meth:`importlib.machinery.WindowsRegistryFinder.find_module`"

#: ../Doc/whatsnew/3.11.rst:1802
msgid ":meth:`pathlib.Path.link_to`"
msgstr ":meth:`pathlib.Path.link_to`"

#: ../Doc/whatsnew/3.11.rst:1803
msgid "The entire :ref:`distutils namespace <distutils-deprecated>`"
msgstr "Todo el :ref:`distutils namespace <distutils-deprecated>`"

#: ../Doc/whatsnew/3.11.rst:1804
msgid ":func:`cgi.log`"
msgstr ":func:`cgi.log`"

#: ../Doc/whatsnew/3.11.rst:1805
msgid ":func:`sqlite3.OptimizedUnicode`"
msgstr ":func:`sqlite3.OptimizedUnicode`"

#: ../Doc/whatsnew/3.11.rst:1806
msgid ":func:`sqlite3.enable_shared_cache`"
msgstr ":func:`sqlite3.enable_shared_cache`"

#: ../Doc/whatsnew/3.11.rst:1813 ../Doc/whatsnew/3.11.rst:2505
msgid "Removed"
msgstr "Remoto"

#: ../Doc/whatsnew/3.11.rst:1815
msgid "This section lists Python APIs that have been removed in Python 3.12."
msgstr ""
"Esta sección enumera las API de Python que se han eliminado en Python 3.12."

#: ../Doc/whatsnew/3.11.rst:1817
msgid ""
"Removed C APIs are :ref:`listed separately <whatsnew311-c-api-removed>`."
msgstr ""
"Las API C eliminadas son :ref:`listed separately <whatsnew311-c-api-"
"removed>`."

#: ../Doc/whatsnew/3.11.rst:1819
msgid ""
"Removed the :func:`!@asyncio.coroutine` :term:`decorator` enabling legacy "
"generator-based coroutines to be compatible with :keyword:`async` / :keyword:"
"`await` code. The function has been deprecated since Python 3.8 and the "
"removal was initially scheduled for Python 3.10. Use :keyword:`async def` "
"instead. (Contributed by Illia Volochii in :issue:`43216`.)"
msgstr ""
"Se eliminó :func:`!@asyncio.coroutine` :term:`decorator`, lo que permite que "
"las corrutinas basadas en generadores heredados sean compatibles con el "
"código :keyword:`async`/:keyword:`await`. La función ha quedado obsoleta "
"desde Python 3.8 y la eliminación se programó inicialmente para Python 3.10. "
"Utilice :keyword:`async def` en su lugar. (Aportado por Illia Volochii en :"
"issue:`43216`.)"

#: ../Doc/whatsnew/3.11.rst:1826
msgid ""
"Removed :class:`!asyncio.coroutines.CoroWrapper` used for wrapping legacy "
"generator-based coroutine objects in the debug mode. (Contributed by Illia "
"Volochii in :issue:`43216`.)"
msgstr ""
"Se eliminó :class:`!asyncio.coroutines.CoroWrapper` utilizado para envolver "
"objetos de corrutina basados ​​en generadores heredados en el modo de "
"depuración. (Aportado por Illia Volochii en :issue:`43216`.)"

#: ../Doc/whatsnew/3.11.rst:1830
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint`, disabled in Python 3.9, is now "
"entirely removed. This is because of the behavior of the socket option "
"``SO_REUSEADDR`` in UDP. (Contributed by Hugo van Kemenade in :issue:"
"`45129`.)"
msgstr ""
"Debido a importantes problemas de seguridad, el parámetro *reuse_address* "
"de :meth:`asyncio.loop.create_datagram_endpoint`, deshabilitado en Python "
"3.9, ahora se eliminó por completo. Esto se debe al comportamiento de la "
"opción de socket ``SO_REUSEADDR`` en UDP. (Aportado por Hugo van Kemenade "
"en :issue:`45129`.)"

#: ../Doc/whatsnew/3.11.rst:1836
msgid ""
"Removed the :mod:`!binhex` module, deprecated in Python 3.9. Also removed "
"the related, similarly-deprecated :mod:`binascii` functions:"
msgstr ""
"Se eliminó el módulo :mod:`!binhex`, obsoleto en Python 3.9. También se "
"eliminaron las funciones :mod:`binascii` relacionadas y obsoletas de manera "
"similar:"

#: ../Doc/whatsnew/3.11.rst:1839
msgid ":func:`!binascii.a2b_hqx`"
msgstr ":func:`!binascii.a2b_hqx`"

#: ../Doc/whatsnew/3.11.rst:1840
msgid ":func:`!binascii.b2a_hqx`"
msgstr ":func:`!binascii.b2a_hqx`"

#: ../Doc/whatsnew/3.11.rst:1841
msgid ":func:`!binascii.rlecode_hqx`"
msgstr ":func:`!binascii.rlecode_hqx`"

#: ../Doc/whatsnew/3.11.rst:1842
msgid ":func:`!binascii.rldecode_hqx`"
msgstr ":func:`!binascii.rldecode_hqx`"

#: ../Doc/whatsnew/3.11.rst:1844
msgid "The :func:`binascii.crc_hqx` function remains available."
msgstr "La función :func:`binascii.crc_hqx` permanece disponible."

#: ../Doc/whatsnew/3.11.rst:1846
msgid "(Contributed by Victor Stinner in :issue:`45085`.)"
msgstr "(Aportado por Victor Stinner en :issue:`45085`.)"

#: ../Doc/whatsnew/3.11.rst:1848
msgid ""
"Removed the :mod:`distutils` ``bdist_msi`` command deprecated in Python 3.9. "
"Use ``bdist_wheel`` (wheel packages) instead. (Contributed by Hugo van "
"Kemenade in :issue:`45124`.)"
msgstr ""
"Se eliminó el comando :mod:`distutils` ``bdist_msi`` en desuso en Python "
"3.9. Utilice ``bdist_wheel`` (paquetes de ruedas) en su lugar. (Aportado por "
"Hugo van Kemenade en :issue:`45124`.)"

#: ../Doc/whatsnew/3.11.rst:1852
msgid ""
"Removed the :meth:`~object.__getitem__` methods of :class:`xml.dom.pulldom."
"DOMEventStream`, :class:`wsgiref.util.FileWrapper` and :class:`fileinput."
"FileInput`, deprecated since Python 3.9. (Contributed by Hugo van Kemenade "
"in :issue:`45132`.)"
msgstr ""
"Se eliminaron los métodos :meth:`~object.__getitem__` de :class:`xml.dom."
"pulldom.DOMEventStream`, :class:`wsgiref.util.FileWrapper` y :class:"
"`fileinput.FileInput`, obsoletos desde Python 3.9. (Aportado por Hugo van "
"Kemenade en :issue:`45132`.)"

#: ../Doc/whatsnew/3.11.rst:1857
msgid ""
"Removed the deprecated :mod:`gettext` functions :func:`!lgettext`, :func:`!"
"ldgettext`, :func:`!lngettext` and :func:`!ldngettext`. Also removed the :"
"func:`!bind_textdomain_codeset` function, the :meth:`!NullTranslations."
"output_charset` and :meth:`!NullTranslations.set_output_charset` methods, "
"and the *codeset* parameter of :func:`!translation` and :func:`!install`, "
"since they are only used for the :func:`!l*gettext` functions. (Contributed "
"by Dong-hee Na and Serhiy Storchaka in :issue:`44235`.)"
msgstr ""
"Se eliminaron las funciones obsoletas :mod:`gettext` :func:`!lgettext`, :"
"func:`!ldgettext`, :func:`!lngettext` y :func:`!ldngettext`. También se "
"eliminó la función :func:`!bind_textdomain_codeset`, los métodos :meth:`!"
"NullTranslations.output_charset` y :meth:`!NullTranslations."
"set_output_charset`, y el parámetro *codeset* de :func:`!translation` y :"
"func:`!install`, ya que solo se usan para las funciones :func:`!l*gettext`. "
"(Aportado por Dong-hee Na y Serhiy Storchaka en :issue:`44235`)."

#: ../Doc/whatsnew/3.11.rst:1867
msgid "Removed from the :mod:`inspect` module:"
msgstr "Eliminado del módulo :mod:`inspect`:"

#: ../Doc/whatsnew/3.11.rst:1869
msgid ""
"The :func:`!getargspec` function, deprecated since Python 3.0; use :func:"
"`inspect.signature` or :func:`inspect.getfullargspec` instead."
msgstr ""
"La función :func:`!getargspec`, en desuso desde Python 3.0; utilice :func:"
"`inspect.signature` o :func:`inspect.getfullargspec` en su lugar."

#: ../Doc/whatsnew/3.11.rst:1872
msgid ""
"The :func:`!formatargspec` function, deprecated since Python 3.5; use the :"
"func:`inspect.signature` function or the :class:`inspect.Signature` object "
"directly."
msgstr ""
"La función :func:`!formatargspec`, obsoleta desde Python 3.5; use la "
"función :func:`inspect.signature` o el objeto :class:`inspect.Signature` "
"directamente."

#: ../Doc/whatsnew/3.11.rst:1876
msgid ""
"The undocumented :meth:`!Signature.from_builtin` and :meth:`!Signature."
"from_function` methods, deprecated since Python 3.5; use the :meth:"
"`Signature.from_callable() <inspect.Signature.from_callable>` method instead."
msgstr ""
"Los métodos :meth:`!Signature.from_builtin` y :meth:`!Signature."
"from_function` no documentados, obsoletos desde Python 3.5; utilice el "
"método :meth:`Signature.from_callable() <inspect.Signature.from_callable>` "
"en su lugar."

#: ../Doc/whatsnew/3.11.rst:1881
msgid "(Contributed by Hugo van Kemenade in :issue:`45320`.)"
msgstr "(Aportado por Hugo van Kemenade en :issue:`45320`.)"

#: ../Doc/whatsnew/3.11.rst:1883
msgid ""
"Removed the :meth:`~object.__class_getitem__` method from :class:`pathlib."
"PurePath`, because it was not used and added by mistake in previous "
"versions. (Contributed by Nikita Sobolev in :issue:`46483`.)"
msgstr ""
"Se eliminó el método :meth:`~object.__class_getitem__` de :class:`pathlib."
"PurePath`, porque no se usó y se agregó por error en versiones anteriores. "
"(Aportado por Nikita Sobolev en :issue:`46483`.)"

#: ../Doc/whatsnew/3.11.rst:1888
msgid ""
"Removed the :class:`!MailmanProxy` class in the :mod:`smtpd` module, as it "
"is unusable without the external :mod:`!mailman` package. (Contributed by "
"Dong-hee Na in :issue:`35800`.)"
msgstr ""
"Se eliminó la clase :class:`!MailmanProxy` en el módulo :mod:`smtpd`, ya que "
"no se puede usar sin el paquete :mod:`!mailman` externo. (Aportado por Dong-"
"hee Na en :issue:`35800`.)"

#: ../Doc/whatsnew/3.11.rst:1892
msgid ""
"Removed the deprecated :meth:`!split` method of :class:`!_tkinter."
"TkappType`. (Contributed by Erlend E. Aasland in :issue:`38371`.)"
msgstr ""
"Se eliminó el método obsoleto :meth:`!split` de :class:`!_tkinter."
"TkappType`. (Aportado por Erlend E. Aasland en :issue:`38371`.)"

#: ../Doc/whatsnew/3.11.rst:1895
msgid ""
"Removed namespace package support from :mod:`unittest` discovery. It was "
"introduced in Python 3.4 but has been broken since Python 3.7. (Contributed "
"by Inada Naoki in :issue:`23882`.)"
msgstr ""
"Se eliminó la compatibilidad con el paquete de espacio de nombres del "
"descubrimiento :mod:`unittest`. Se introdujo en Python 3.4 pero se rompió "
"desde Python 3.7. (Aportado por Inada Naoki en :issue:`23882`.)"

#: ../Doc/whatsnew/3.11.rst:1899
msgid ""
"Removed the undocumented private :meth:`!float.__set_format__()` method, "
"previously known as :meth:`!float.__setformat__()` in Python 3.7. Its "
"docstring said: \"You probably don't want to use this function. It exists "
"mainly to be used in Python's test suite.\" (Contributed by Victor Stinner "
"in :issue:`46852`.)"
msgstr ""
"Se eliminó el método :meth:`!float.__set_format__()` privado no documentado, "
"anteriormente conocido como :meth:`!float.__setformat__()` en Python 3.7. Su "
"cadena de documentación decía: \"Probablemente no desee utilizar esta "
"función. Existe principalmente para ser utilizada en el conjunto de pruebas "
"de Python\". (Aportado por Victor Stinner en :issue:`46852`.)"

#: ../Doc/whatsnew/3.11.rst:1905
msgid ""
"The :option:`!--experimental-isolated-subinterpreters` configure flag (and "
"corresponding :c:macro:`!EXPERIMENTAL_ISOLATED_SUBINTERPRETERS` macro) have "
"been removed."
msgstr ""
"El indicador de configuración :option:`!--experimental-isolated-"
"subinterpreters` (y la macro :c:macro:`!"
"EXPERIMENTAL_ISOLATED_SUBINTERPRETERS` correspondiente) se han eliminado."

#: ../Doc/whatsnew/3.11.rst:1909
msgid ""
"`Pynche <https://pypi.org/project/pynche/>`_ --- The Pythonically Natural "
"Color and Hue Editor --- has been moved out of ``Tools/scripts`` and is "
"`being developed independently <https://gitlab.com/warsaw/pynche/-/tree/"
"main>`_ from the Python source tree."
msgstr ""
"`Pynche <https://pypi.org/project/pynche/>`_ --- El editor de tonos y "
"colores naturales de Python --- se ha sacado de ``Tools/scripts`` y es "
"`being developed independently <https://gitlab.com/warsaw/pynche/-/tree/"
"main>`_ del árbol de fuentes de Python."

#: ../Doc/whatsnew/3.11.rst:1919 ../Doc/whatsnew/3.11.rst:2149
msgid "Porting to Python 3.11"
msgstr "Migración a Python 3.11"

#: ../Doc/whatsnew/3.11.rst:1921
msgid ""
"This section lists previously described changes and other bugfixes in the "
"Python API that may require changes to your Python code."
msgstr ""
"Esta sección enumera los cambios descritos anteriormente y otras "
"correcciones de errores en la API de Python que pueden requerir cambios en "
"su código de Python."

#: ../Doc/whatsnew/3.11.rst:1924
msgid ""
"Porting notes for the C API are :ref:`listed separately <whatsnew311-c-api-"
"porting>`."
msgstr ""
"Las notas de portabilidad para la API de C son :ref:`listed separately "
"<whatsnew311-c-api-porting>`."

#: ../Doc/whatsnew/3.11.rst:1927
msgid ""
":func:`open`, :func:`io.open`, :func:`codecs.open` and :class:`fileinput."
"FileInput` no longer accept ``'U'`` (\"universal newline\") in the file "
"mode. In Python 3, \"universal newline\" mode is used by default whenever a "
"file is opened in text mode, and the ``'U'`` flag has been deprecated since "
"Python 3.3. The :ref:`newline parameter <open-newline-parameter>` to these "
"functions controls how universal newlines work. (Contributed by Victor "
"Stinner in :issue:`37330`.)"
msgstr ""
":func:`open`, :func:`io.open`, :func:`codecs.open` y :class:`fileinput."
"FileInput` ya no aceptan ``'U'`` (\"nueva línea universal\") en el modo de "
"archivo. En Python 3, el modo \"nueva línea universal\" se usa de forma "
"predeterminada cada vez que se abre un archivo en modo de texto, y el "
"indicador ``'U'`` ha quedado obsoleto desde Python 3.3. El :ref:`newline "
"parameter <open-newline-parameter>` para estas funciones controla cómo "
"funcionan las nuevas líneas universales. (Aportado por Victor Stinner en :"
"issue:`37330`.)"

#: ../Doc/whatsnew/3.11.rst:1936
msgid ""
":class:`ast.AST` node positions are now validated when provided to :func:"
"`compile` and other related functions. If invalid positions are detected, a :"
"exc:`ValueError` will be raised. (Contributed by Pablo Galindo in :gh:"
"`93351`)"
msgstr ""
"Las posiciones de los nodos :class:`ast.AST` ahora se validan cuando se "
"proporcionan a :func:`compile` y otras funciones relacionadas. Si se "
"detectan posiciones no válidas, se generará un :exc:`ValueError`. (Aportado "
"por Pablo Galindo en :gh:`93351`)"

#: ../Doc/whatsnew/3.11.rst:1940
msgid ""
"Prohibited passing non-:class:`concurrent.futures.ThreadPoolExecutor` "
"executors to :meth:`asyncio.loop.set_default_executor` following a "
"deprecation in Python 3.8. (Contributed by Illia Volochii in :issue:`43234`.)"
msgstr ""
"Prohibido pasar ejecutores que no sean :class:`concurrent.futures."
"ThreadPoolExecutor` a :meth:`asyncio.loop.set_default_executor` luego de una "
"obsolescencia en Python 3.8. (Aportado por Illia Volochii en :issue:`43234`.)"

#: ../Doc/whatsnew/3.11.rst:1945
msgid ""
":mod:`calendar`: The :class:`calendar.LocaleTextCalendar` and :class:"
"`calendar.LocaleHTMLCalendar` classes now use :func:`locale.getlocale`, "
"instead of using :func:`locale.getdefaultlocale`, if no locale is specified. "
"(Contributed by Victor Stinner in :issue:`46659`.)"
msgstr ""
":mod:`calendar`: las clases :class:`calendar.LocaleTextCalendar` y :class:"
"`calendar.LocaleHTMLCalendar` ahora usan :func:`locale.getlocale`, en lugar "
"de usar :func:`locale.getdefaultlocale`, si no se especifica una "
"configuración regional. (Aportado por Victor Stinner en :issue:`46659`.)"

#: ../Doc/whatsnew/3.11.rst:1951
msgid ""
"The :mod:`pdb` module now reads the :file:`.pdbrc` configuration file with "
"the ``'UTF-8'`` encoding. (Contributed by Srinivas Reddy Thatiparthy (శ్రీనివాస్  "
"రెడ్డి తాటిపర్తి) in :issue:`41137`.)"
msgstr ""
"El módulo :mod:`pdb` ahora lee el archivo de configuración :file:`.pdbrc` "
"con la codificación ``'UTF-8'``. (Contribuido por Srinivas Reddy Thatiparthy "
"(శ్రీనివాస్ రెడ్డి తాటిపర్తి) en :issue:`41137`.)"

#: ../Doc/whatsnew/3.11.rst:1955
msgid ""
"The *population* parameter of :func:`random.sample` must be a sequence, and "
"automatic conversion of :class:`set`\\s to :class:`list`\\s is no longer "
"supported. Also, if the sample size is larger than the population size, a :"
"exc:`ValueError` is raised. (Contributed by Raymond Hettinger in :issue:"
"`40465`.)"
msgstr ""
"El parámetro *population* de :func:`random.sample` debe ser una secuencia y "
"ya no se admite la conversión automática de :class:`set`\\s a :class:"
"`list`\\s. Además, si el tamaño de la muestra es mayor que el tamaño de la "
"población, se genera un :exc:`ValueError`. (Aportado por Raymond Hettinger "
"en :issue:`40465`.)"

#: ../Doc/whatsnew/3.11.rst:1961
msgid ""
"The *random* optional parameter of :func:`random.shuffle` was removed. It "
"was previously an arbitrary random function to use for the shuffle; now, :"
"func:`random.random` (its previous default) will always be used."
msgstr ""
"Se eliminó el parámetro opcional *random* de :func:`random.shuffle`. "
"Anteriormente, era una función aleatoria arbitraria para usar en la "
"reproducción aleatoria; ahora, siempre se utilizará :func:`random.random` "
"(su valor predeterminado anterior)."

#: ../Doc/whatsnew/3.11.rst:1965
msgid ""
"In :mod:`re` :ref:`re-syntax`, global inline flags (e.g. ``(?i)``) can now "
"only be used at the start of regular expressions. Using them elsewhere has "
"been deprecated since Python 3.6. (Contributed by Serhiy Storchaka in :issue:"
"`47066`.)"
msgstr ""
"En :mod:`re` :ref:`re-syntax`, las banderas en línea globales (por ejemplo, "
"``(?i)``) ahora solo se pueden usar al comienzo de las expresiones "
"regulares. Su uso en otros lugares ha quedado obsoleto desde Python 3.6. "
"(Aportado por Serhiy Storchaka en :issue:`47066`.)"

#: ../Doc/whatsnew/3.11.rst:1970
msgid ""
"In the :mod:`re` module, several long-standing bugs where fixed that, in "
"rare cases, could cause capture groups to get the wrong result. Therefore, "
"this could change the captured output in these cases. (Contributed by Ma Lin "
"in :issue:`35859`.)"
msgstr ""
"En el módulo :mod:`re`, se corrigieron varios errores antiguos que, en casos "
"excepcionales, podían hacer que los grupos de captura obtuvieran un "
"resultado incorrecto. Por lo tanto, esto podría cambiar la salida capturada "
"en estos casos. (Contribuido por Ma Lin en :issue:`35859`.)"

#: ../Doc/whatsnew/3.11.rst:1979
msgid "Build Changes"
msgstr "Construir cambios"

#: ../Doc/whatsnew/3.11.rst:1981
msgid ""
"CPython now has :pep:`11` :pep:`Tier 3 support <11#tier-3>` for cross "
"compiling to the `WebAssembly <https://webassembly.org/>`_ platforms "
"`Emscripten <https://emscripten.org/>`_ (``wasm32-unknown-emscripten``, i.e. "
"Python in the browser) and `WebAssembly System Interface (WASI) <https://"
"wasi.dev/>`_ (``wasm32-unknown-wasi``). The effort is inspired by previous "
"work like `Pyodide <https://pyodide.org/>`_. These platforms provide a "
"limited subset of POSIX APIs; Python standard libraries features and modules "
"related to networking, processes, threading, signals, mmap, and users/groups "
"are not available or don't work. (Emscripten contributed by Christian Heimes "
"and Ethan Smith in :gh:`84461` and WASI contributed by Christian Heimes in :"
"gh:`90473`; platforms promoted in :gh:`95085`)"
msgstr ""
"CPython ahora tiene :pep:`11` :pep:`Tier 3 support <11#tier-3>` para la "
"compilación cruzada en las plataformas `WebAssembly <https://webassembly.org/"
">`_ `Emscripten <https://emscripten.org/>`_ (``wasm32-unknown-emscripten``, "
"es decir, Python en el navegador) y `WebAssembly System Interface (WASI) "
"<https://wasi.dev/>`_ (``wasm32-unknown-wasi``). El esfuerzo está inspirado "
"en trabajos anteriores como `Pyodide <https://pyodide.org/>`_. Estas "
"plataformas proporcionan un subconjunto limitado de API POSIX; Las funciones "
"y módulos de las bibliotecas estándar de Python relacionadas con redes, "
"procesos, subprocesos, señales, mmap y usuarios/grupos no están disponibles "
"o no funcionan. (Escritos aportados por Christian Heimes y Ethan Smith en :"
"gh:`84461` y WASI aportados por Christian Heimes en :gh:`90473`; plataformas "
"promocionadas en :gh:`95085`)"

#: ../Doc/whatsnew/3.11.rst:1995
msgid "Building Python now requires:"
msgstr "Construir Python ahora requiere:"

#: ../Doc/whatsnew/3.11.rst:1997
msgid ""
"A `C11 <https://en.cppreference.com/w/c/11>`_ compiler. `Optional C11 "
"features <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ are not required. "
"(Contributed by Victor Stinner in :issue:`46656`.)"
msgstr ""
"Un compilador `C11 <https://en.cppreference.com/w/c/11>`_. `Optional C11 "
"features <https://en.wikipedia.org/wiki/"
"C11_(C_standard_revision)#Optional_features>`_ no son necesarios. (Aportado "
"por Victor Stinner en :issue:`46656`.)"

#: ../Doc/whatsnew/3.11.rst:2003
msgid ""
"Support for `IEEE 754 <https://en.wikipedia.org/wiki/IEEE_754>`_ floating "
"point numbers. (Contributed by Victor Stinner in :issue:`46917`.)"
msgstr ""
"Compatibilidad con números de punto flotante `IEEE 754 <https://en.wikipedia."
"org/wiki/IEEE_754>`_. (Aportado por Victor Stinner en :issue:`46917`.)"

#: ../Doc/whatsnew/3.11.rst:2007
msgid ""
"Support for `floating point Not-a-Number (NaN) <https://en.wikipedia.org/"
"wiki/NaN#Floating_point>`_, as the :c:macro:`!Py_NO_NAN` macro has been "
"removed. (Contributed by Victor Stinner in :issue:`46656`.)"
msgstr ""
"Compatibilidad con `floating point Not-a-Number (NaN) <https://en.wikipedia."
"org/wiki/NaN#Floating_point>`_, ya que se eliminó la macro :c:macro:`!"
"Py_NO_NAN`. (Aportado por Victor Stinner en :issue:`46656`.)"

#: ../Doc/whatsnew/3.11.rst:2012
msgid ""
"A `C99 <https://en.cppreference.com/w/c/99>`_ ``<math.h>`` header file "
"providing the :c:func:`!copysign`, :c:func:`!hypot`, :c:func:`!isfinite`, :c:"
"func:`!isinf`, :c:func:`!isnan`, and :c:func:`!round` functions (contributed "
"by Victor Stinner in :issue:`45440`); and a :c:data:`!NAN` constant or the :"
"c:func:`!__builtin_nan` function (Contributed by Victor Stinner in :issue:"
"`46640`)."
msgstr ""
"Un archivo de encabezado `C99 <https://en.cppreference.com/w/c/99>`_ ``<math."
"h>`` que proporciona las funciones :c:func:`!copysign`, :c:func:`!hypot`, :c:"
"func:`!isfinite`, :c:func:`!isinf`, :c:func:`!isnan` y :c:func:`!round` "
"(aportado por Victor Stinner en :issue:`45440`); y una constante :c:data:`!"
"NAN` o la función :c:func:`!__builtin_nan` (Aportado por Victor Stinner en :"
"issue:`46640`)."

#: ../Doc/whatsnew/3.11.rst:2020
msgid ""
"The :mod:`tkinter` package now requires `Tcl/Tk <https://www.tcl.tk>`_ "
"version 8.5.12 or newer. (Contributed by Serhiy Storchaka in :issue:`46996`.)"
msgstr ""
"El paquete :mod:`tkinter` ahora requiere `Tcl/Tk <https://www.tcl.tk>`_ "
"versión 8.5.12 o posterior. (Aportado por Serhiy Storchaka en :issue:"
"`46996`.)"

#: ../Doc/whatsnew/3.11.rst:2024
msgid ""
"Build dependencies, compiler flags, and linker flags for most stdlib "
"extension modules are now detected by :program:`configure`. libffi, libnsl, "
"libsqlite3, zlib, bzip2, liblzma, libcrypt, Tcl/Tk, and uuid flags are "
"detected by `pkg-config <https://www.freedesktop.org/wiki/Software/pkg-"
"config/>`_ (when available). :mod:`tkinter` now requires a pkg-config "
"command to detect development settings for `Tcl/Tk`_ headers and libraries. "
"(Contributed by Christian Heimes and Erlend Egeberg Aasland in :issue:"
"`45847`, :issue:`45747`, and :issue:`45763`.)"
msgstr ""
"Las dependencias de compilación, los indicadores del compilador y los "
"indicadores del vinculador para la mayoría de los módulos de extensión "
"stdlib ahora son detectados por :program:`configure`. `pkg-config <https://"
"www.freedesktop.org/wiki/Software/pkg-config/>`_ detecta los indicadores "
"libffi, libnsl, libsqlite3, zlib, bzip2, liblzma, libcrypt, Tcl/Tk y uuid "
"(si están disponibles). :mod:`tkinter` ahora requiere un comando pkg-config "
"para detectar configuraciones de desarrollo para encabezados y bibliotecas "
"`Tcl/Tk`_. (Aportado por Christian Heimes y Erlend Egeberg Aasland en :issue:"
"`45847`, :issue:`45747` y :issue:`45763`)."

#: ../Doc/whatsnew/3.11.rst:2034
msgid ""
"libpython is no longer linked against libcrypt. (Contributed by Mike Gilbert "
"in :issue:`45433`.)"
msgstr ""
"libpython ya no está vinculado con libcrypt. (Aportado por Mike Gilbert en :"
"issue:`45433`.)"

#: ../Doc/whatsnew/3.11.rst:2037
msgid ""
"CPython can now be built with the `ThinLTO <https://clang.llvm.org/docs/"
"ThinLTO.html>`_ option via passing ``thin`` to :option:`--with-lto`, i.e. "
"``--with-lto=thin``. (Contributed by Dong-hee Na and Brett Holman in :issue:"
"`44340`.)"
msgstr ""
"CPython ahora se puede compilar con la opción `ThinLTO <https://clang.llvm."
"org/docs/ThinLTO.html>`_ pasando ``thin`` a :option:`--with-lto`, es decir, "
"``--with-lto=thin``. (Aportado por Dong-hee Na y Brett Holman en :issue:"
"`44340`)."

#: ../Doc/whatsnew/3.11.rst:2042
msgid ""
"Freelists for object structs can now be disabled. A new :program:`configure` "
"option :option:`!--without-freelists` can be used to disable all freelists "
"except empty tuple singleton. (Contributed by Christian Heimes in :issue:"
"`45522`.)"
msgstr ""
"Las listas libres para estructuras de objetos ahora se pueden deshabilitar. "
"Se puede usar una nueva opción :program:`configure` :option:`!--without-"
"freelists` para deshabilitar todas las listas libres excepto el singleton de "
"tupla vacío. (Aportado por Christian Heimes en :issue:`45522`.)"

#: ../Doc/whatsnew/3.11.rst:2047
msgid ""
"``Modules/Setup`` and ``Modules/makesetup`` have been improved and tied up. "
"Extension modules can now be built through ``makesetup``. All except some "
"test modules can be linked statically into a main binary or library. "
"(Contributed by Brett Cannon and Christian Heimes in :issue:`45548`, :issue:"
"`45570`, :issue:`45571`, and :issue:`43974`.)"
msgstr ""
"``Modules/Setup`` y ``Modules/makesetup`` se han mejorado y atado. Los "
"módulos de extensión ahora se pueden construir a través de ``makesetup``. "
"Todos, excepto algunos módulos de prueba, se pueden vincular estáticamente a "
"una biblioteca o binario principal. (Aportado por Brett Cannon y Christian "
"Heimes en :issue:`45548`, :issue:`45570`, :issue:`45571` y :issue:`43974`)."

#: ../Doc/whatsnew/3.11.rst:2054
msgid ""
"Use the environment variables :envvar:`!TCLTK_CFLAGS` and :envvar:`!"
"TCLTK_LIBS` to manually specify the location of Tcl/Tk headers and "
"libraries. The :program:`configure` options :option:`!--with-tcltk-includes` "
"and :option:`!--with-tcltk-libs` have been removed."
msgstr ""
"Utilice las variables de entorno :envvar:`!TCLTK_CFLAGS` y :envvar:`!"
"TCLTK_LIBS` para especificar manualmente la ubicación de los encabezados y "
"bibliotecas Tcl/Tk. Se han eliminado las opciones :program:`configure` :"
"option:`!--with-tcltk-includes` y :option:`!--with-tcltk-libs`."

#: ../Doc/whatsnew/3.11.rst:2060
msgid ""
"On RHEL 7 and CentOS 7 the development packages do not provide ``tcl.pc`` "
"and ``tk.pc``; use ``TCLTK_LIBS=\"-ltk8.5 -ltkstub8.5 -ltcl8.5\"``. The "
"directory ``Misc/rhel7`` contains ``.pc`` files and instructions on how to "
"build Python with RHEL 7's and CentOS 7's Tcl/Tk and OpenSSL."
msgstr ""
"En RHEL 7 y CentOS 7, los paquetes de desarrollo no proporcionan ``tcl.pc`` "
"y ``tk.pc``; usa ``TCLTK_LIBS=\"-ltk8.5 -ltkstub8.5 -ltcl8.5\"``. El "
"directorio ``Misc/rhel7`` contiene archivos ``.pc`` e instrucciones sobre "
"cómo compilar Python con Tcl/Tk y OpenSSL de RHEL 7 y CentOS 7."

#: ../Doc/whatsnew/3.11.rst:2065
msgid ""
"CPython will now use 30-bit digits by default for the Python :class:`int` "
"implementation. Previously, the default was to use 30-bit digits on "
"platforms with ``SIZEOF_VOID_P >= 8``, and 15-bit digits otherwise. It's "
"still possible to explicitly request use of 15-bit digits via either the :"
"option:`--enable-big-digits` option to the configure script or (for Windows) "
"the ``PYLONG_BITS_IN_DIGIT`` variable in ``PC/pyconfig.h``, but this option "
"may be removed at some point in the future. (Contributed by Mark Dickinson "
"in :issue:`45569`.)"
msgstr ""
"CPython ahora usará dígitos de 30 bits de manera predeterminada para la "
"implementación de Python :class:`int`. Anteriormente, el valor "
"predeterminado era usar dígitos de 30 bits en plataformas con "
"``SIZEOF_VOID_P >= 8`` y dígitos de 15 bits en caso contrario. Todavía es "
"posible solicitar explícitamente el uso de dígitos de 15 bits a través de la "
"opción :option:`--enable-big-digits` en el script de configuración o (para "
"Windows) la variable ``PYLONG_BITS_IN_DIGIT`` en ``PC/pyconfig.h``, pero es "
"posible que esta opción se elimine en algún momento en el futuro. "
"(Contribuido por Mark Dickinson en :issue:`45569`.)"

#: ../Doc/whatsnew/3.11.rst:2078
msgid "C API Changes"
msgstr "Cambios en la API de C"

#: ../Doc/whatsnew/3.11.rst:2085
msgid ""
"Add a new :c:func:`PyType_GetName` function to get type's short name. "
"(Contributed by Hai Shi in :issue:`42035`.)"
msgstr ""
"Agregue una nueva función :c:func:`PyType_GetName` para obtener el nombre "
"corto del tipo. (Aportado por Hai Shi en :issue:`42035`.)"

#: ../Doc/whatsnew/3.11.rst:2088
msgid ""
"Add a new :c:func:`PyType_GetQualName` function to get type's qualified "
"name. (Contributed by Hai Shi in :issue:`42035`.)"
msgstr ""
"Agregue una nueva función :c:func:`PyType_GetQualName` para obtener el "
"nombre completo del tipo. (Aportado por Hai Shi en :issue:`42035`.)"

#: ../Doc/whatsnew/3.11.rst:2091
msgid ""
"Add new :c:func:`PyThreadState_EnterTracing` and :c:func:"
"`PyThreadState_LeaveTracing` functions to the limited C API to suspend and "
"resume tracing and profiling. (Contributed by Victor Stinner in :issue:"
"`43760`.)"
msgstr ""
"Agregue nuevas funciones :c:func:`PyThreadState_EnterTracing` y :c:func:"
"`PyThreadState_LeaveTracing` a la API de C limitada para suspender y "
"reanudar el seguimiento y la creación de perfiles. (Aportado por Victor "
"Stinner en :issue:`43760`.)"

#: ../Doc/whatsnew/3.11.rst:2096
msgid ""
"Added the :c:data:`Py_Version` constant which bears the same value as :c:"
"macro:`PY_VERSION_HEX`. (Contributed by  Gabriele N. Tornetta in :issue:"
"`43931`.)"
msgstr ""
"Se agregó la constante :c:data:`Py_Version` que tiene el mismo valor que :c:"
"macro:`PY_VERSION_HEX`. (Aportado por Gabriele N. Tornetta en :issue:"
"`43931`.)"

#: ../Doc/whatsnew/3.11.rst:2100
msgid ""
":c:type:`Py_buffer` and APIs are now part of the limited API and the stable "
"ABI:"
msgstr ""
":c:type:`Py_buffer` y las API ahora forman parte de la API limitada y la ABI "
"estable:"

#: ../Doc/whatsnew/3.11.rst:2103
msgid ":c:func:`PyObject_CheckBuffer`"
msgstr ":c:func:`PyObject_CheckBuffer`"

#: ../Doc/whatsnew/3.11.rst:2104
msgid ":c:func:`PyObject_GetBuffer`"
msgstr ":c:func:`PyObject_GetBuffer`"

#: ../Doc/whatsnew/3.11.rst:2105
msgid ":c:func:`PyBuffer_GetPointer`"
msgstr ":c:func:`PyBuffer_GetPointer`"

#: ../Doc/whatsnew/3.11.rst:2106
msgid ":c:func:`PyBuffer_SizeFromFormat`"
msgstr ":c:func:`PyBuffer_SizeFromFormat`"

#: ../Doc/whatsnew/3.11.rst:2107
msgid ":c:func:`PyBuffer_ToContiguous`"
msgstr ":c:func:`PyBuffer_ToContiguous`"

#: ../Doc/whatsnew/3.11.rst:2108
msgid ":c:func:`PyBuffer_FromContiguous`"
msgstr ":c:func:`PyBuffer_FromContiguous`"

#: ../Doc/whatsnew/3.11.rst:2109
msgid ":c:func:`PyBuffer_CopyData`"
msgstr ":c:func:`PyBuffer_CopyData`"

#: ../Doc/whatsnew/3.11.rst:2110
msgid ":c:func:`PyBuffer_IsContiguous`"
msgstr ":c:func:`PyBuffer_IsContiguous`"

#: ../Doc/whatsnew/3.11.rst:2111
msgid ":c:func:`PyBuffer_FillContiguousStrides`"
msgstr ":c:func:`PyBuffer_FillContiguousStrides`"

#: ../Doc/whatsnew/3.11.rst:2112
msgid ":c:func:`PyBuffer_FillInfo`"
msgstr ":c:func:`PyBuffer_FillInfo`"

#: ../Doc/whatsnew/3.11.rst:2113
msgid ":c:func:`PyBuffer_Release`"
msgstr ":c:func:`PyBuffer_Release`"

#: ../Doc/whatsnew/3.11.rst:2114
msgid ":c:func:`PyMemoryView_FromBuffer`"
msgstr ":c:func:`PyMemoryView_FromBuffer`"

#: ../Doc/whatsnew/3.11.rst:2115
msgid ""
":c:member:`~PyBufferProcs.bf_getbuffer` and :c:member:`~PyBufferProcs."
"bf_releasebuffer` type slots"
msgstr ""
"Ranuras de tipo :c:member:`~PyBufferProcs.bf_getbuffer` y :c:member:"
"`~PyBufferProcs.bf_releasebuffer`"

#: ../Doc/whatsnew/3.11.rst:2118
msgid "(Contributed by Christian Heimes in :issue:`45459`.)"
msgstr "(Aportado por Christian Heimes en :issue:`45459`.)"

#: ../Doc/whatsnew/3.11.rst:2120
msgid ""
"Added the :c:data:`PyType_GetModuleByDef` function, used to get the module "
"in which a method was defined, in cases where this information is not "
"available directly (via :c:type:`PyCMethod`). (Contributed by Petr Viktorin "
"in :issue:`46613`.)"
msgstr ""
"Se agregó la función :c:data:`PyType_GetModuleByDef`, utilizada para obtener "
"el módulo en el que se definió un método, en los casos en que esta "
"información no esté disponible directamente (a través de :c:type:"
"`PyCMethod`). (Aportado por Petr Viktorin en :issue:`46613`.)"

#: ../Doc/whatsnew/3.11.rst:2125
msgid ""
"Add new functions to pack and unpack C double (serialize and deserialize): :"
"c:func:`PyFloat_Pack2`, :c:func:`PyFloat_Pack4`, :c:func:`PyFloat_Pack8`, :c:"
"func:`PyFloat_Unpack2`, :c:func:`PyFloat_Unpack4` and :c:func:"
"`PyFloat_Unpack8`. (Contributed by Victor Stinner in :issue:`46906`.)"
msgstr ""
"Agrega nuevas funciones para empaquetar y desempaquetar C doble (serializar "
"y deserializar): :c:func:`PyFloat_Pack2`, :c:func:`PyFloat_Pack4`, :c:func:"
"`PyFloat_Pack8`, :c:func:`PyFloat_Unpack2`, :c:func:`PyFloat_Unpack4` y :c:"
"func:`PyFloat_Unpack8`. (Aportado por Victor Stinner en :issue:`46906`.)"

#: ../Doc/whatsnew/3.11.rst:2131
msgid ""
"Add new functions to get frame object attributes: :c:func:"
"`PyFrame_GetBuiltins`, :c:func:`PyFrame_GetGenerator`, :c:func:"
"`PyFrame_GetGlobals`, :c:func:`PyFrame_GetLasti`."
msgstr ""
"Agregue nuevas funciones para obtener atributos de objetos de marco: :c:func:"
"`PyFrame_GetBuiltins`, :c:func:`PyFrame_GetGenerator`, :c:func:"
"`PyFrame_GetGlobals`, :c:func:`PyFrame_GetLasti`."

#: ../Doc/whatsnew/3.11.rst:2135
msgid ""
"Added two new functions to get and set the active exception instance: :c:"
"func:`PyErr_GetHandledException` and :c:func:`PyErr_SetHandledException`. "
"These are alternatives to :c:func:`PyErr_SetExcInfo()` and :c:func:"
"`PyErr_GetExcInfo()` which work with the legacy 3-tuple representation of "
"exceptions. (Contributed by Irit Katriel in :issue:`46343`.)"
msgstr ""
"Se agregaron dos funciones nuevas para obtener y configurar la instancia de "
"excepción activa: :c:func:`PyErr_GetHandledException` y :c:func:"
"`PyErr_SetHandledException`. Estas son alternativas a :c:func:"
"`PyErr_SetExcInfo()` y :c:func:`PyErr_GetExcInfo()` que funcionan con la "
"representación de excepciones heredada de 3 tuplas. (Aportado por Irit "
"Katriel en :issue:`46343`.)"

#: ../Doc/whatsnew/3.11.rst:2142
msgid ""
"Added the :c:member:`PyConfig.safe_path` member. (Contributed by Victor "
"Stinner in :gh:`57684`.)"
msgstr ""
"Se agregó el miembro :c:member:`PyConfig.safe_path`. (Aportado por Victor "
"Stinner en :gh:`57684`.)"

#: ../Doc/whatsnew/3.11.rst:2153
msgid ""
"Some macros have been converted to static inline functions to avoid `macro "
"pitfalls <https://gcc.gnu.org/onlinedocs/cpp/Macro-Pitfalls.html>`_. The "
"change should be mostly transparent to users, as the replacement functions "
"will cast their arguments to the expected types to avoid compiler warnings "
"due to static type checks. However, when the limited C API is set to >=3.11, "
"these casts are not done, and callers will need to cast arguments to their "
"expected types. See :pep:`670` for more details. (Contributed by Victor "
"Stinner and Erlend E. Aasland in :gh:`89653`.)"
msgstr ""
"Algunas macros se han convertido en funciones estáticas en línea para evitar "
"`macro pitfalls <https://gcc.gnu.org/onlinedocs/cpp/Macro-Pitfalls.html>`_. "
"El cambio debería ser en su mayoría transparente para los usuarios, ya que "
"las funciones de reemplazo emitirán sus argumentos a los tipos esperados "
"para evitar advertencias del compilador debido a comprobaciones de tipos "
"estáticos. Sin embargo, cuando la API de C limitada se establece en >=3.11, "
"estas conversiones no se realizan y las personas que llaman deberán "
"convertir argumentos a sus tipos esperados. Ver :pep:`670` para más "
"detalles. (Aportado por Victor Stinner y Erlend E. Aasland en :gh:`89653`.)"

#: ../Doc/whatsnew/3.11.rst:2164
msgid ""
":c:func:`PyErr_SetExcInfo()` no longer uses the ``type`` and ``traceback`` "
"arguments, the interpreter now derives those values from the exception "
"instance (the ``value`` argument). The function still steals references of "
"all three arguments. (Contributed by Irit Katriel in :issue:`45711`.)"
msgstr ""
":c:func:`PyErr_SetExcInfo()` ya no usa los argumentos ``type`` y "
"``traceback``, el intérprete ahora deriva esos valores de la instancia de "
"excepción (el argumento ``value``). La función aún roba referencias de los "
"tres argumentos. (Aportado por Irit Katriel en :issue:`45711`.)"

#: ../Doc/whatsnew/3.11.rst:2170
msgid ""
":c:func:`PyErr_GetExcInfo()` now derives the ``type`` and ``traceback`` "
"fields of the result from the exception instance (the ``value`` field). "
"(Contributed by Irit Katriel in :issue:`45711`.)"
msgstr ""
":c:func:`PyErr_GetExcInfo()` ahora deriva los campos ``type`` y "
"``traceback`` del resultado de la instancia de excepción (el campo "
"``value``). (Aportado por Irit Katriel en :issue:`45711`.)"

#: ../Doc/whatsnew/3.11.rst:2174
msgid ""
":c:struct:`_frozen` has a new ``is_package`` field to indicate whether or "
"not the frozen module is a package.  Previously, a negative value in the "
"``size`` field was the indicator.  Now only non-negative values be used for "
"``size``. (Contributed by Kumar Aditya in :issue:`46608`.)"
msgstr ""
":c:struct:`_frozen` tiene un nuevo campo ``is_package`` para indicar si el "
"módulo congelado es o no un paquete. Anteriormente, un valor negativo en el "
"campo ``size`` era el indicador. Ahora solo se pueden usar valores no "
"negativos para ``size``. (Aportado por Kumar Aditya en :issue:`46608`.)"

#: ../Doc/whatsnew/3.11.rst:2180
msgid ""
":c:func:`_PyFrameEvalFunction` now takes ``_PyInterpreterFrame*`` as its "
"second parameter, instead of ``PyFrameObject*``. See :pep:`523` for more "
"details of how to use this function pointer type."
msgstr ""
":c:func:`_PyFrameEvalFunction` ahora toma ``_PyInterpreterFrame*`` como su "
"segundo parámetro, en lugar de ``PyFrameObject*``. Consulte :pep:`523` para "
"obtener más detalles sobre cómo usar este tipo de puntero de función."

#: ../Doc/whatsnew/3.11.rst:2184
msgid ""
":c:func:`PyCode_New` and :c:func:`PyCode_NewWithPosOnlyArgs` now take an "
"additional ``exception_table`` argument. Using these functions should be "
"avoided, if at all possible. To get a custom code object: create a code "
"object using the compiler, then get a modified version with the ``replace`` "
"method."
msgstr ""
":c:func:`PyCode_New` y :c:func:`PyCode_NewWithPosOnlyArgs` ahora toman un "
"argumento ``exception_table`` adicional. Debe evitarse el uso de estas "
"funciones, en la medida de lo posible. Para obtener un objeto de código "
"personalizado: cree un objeto de código usando el compilador, luego obtenga "
"una versión modificada con el método ``replace``."

#: ../Doc/whatsnew/3.11.rst:2190
msgid ""
":c:type:`PyCodeObject` no longer has the ``co_code``, ``co_varnames``, "
"``co_cellvars`` and ``co_freevars`` fields.  Instead, use :c:func:"
"`PyCode_GetCode`, :c:func:`PyCode_GetVarnames`, :c:func:`PyCode_GetCellvars` "
"and :c:func:`PyCode_GetFreevars` respectively to access them via the C API. "
"(Contributed by Brandt Bucher in :issue:`46841` and Ken Jin in :gh:`92154` "
"and :gh:`94936`.)"
msgstr ""
":c:type:`PyCodeObject` ya no tiene los campos ``co_code``, ``co_varnames``, "
"``co_cellvars`` y ``co_freevars``. En su lugar, utilice :c:func:"
"`PyCode_GetCode`, :c:func:`PyCode_GetVarnames`, :c:func:`PyCode_GetCellvars` "
"y :c:func:`PyCode_GetFreevars` respectivamente para acceder a ellos a través "
"de la API de C. (Aportado por Brandt Bucher en :issue:`46841` y Ken Jin en :"
"gh:`92154` y :gh:`94936`)."

#: ../Doc/whatsnew/3.11.rst:2198
msgid ""
"The old trashcan macros (``Py_TRASHCAN_SAFE_BEGIN``/"
"``Py_TRASHCAN_SAFE_END``) are now deprecated. They should be replaced by the "
"new macros ``Py_TRASHCAN_BEGIN`` and ``Py_TRASHCAN_END``."
msgstr ""
"Las antiguas macros de papelera (``Py_TRASHCAN_SAFE_BEGIN``/"
"``Py_TRASHCAN_SAFE_END``) ahora están obsoletas. Deberían ser reemplazadas "
"por las nuevas macros ``Py_TRASHCAN_BEGIN`` y ``Py_TRASHCAN_END``."

#: ../Doc/whatsnew/3.11.rst:2202
msgid "A tp_dealloc function that has the old macros, such as::"
msgstr "Una función tp_dealloc que tiene las macros antiguas, como:"

#: ../Doc/whatsnew/3.11.rst:2213
msgid "should migrate to the new macros as follows::"
msgstr "debe migrar a las nuevas macros de la siguiente manera:"

#: ../Doc/whatsnew/3.11.rst:2224
msgid ""
"Note that ``Py_TRASHCAN_BEGIN`` has a second argument which should be the "
"deallocation function it is in."
msgstr ""
"Tenga en cuenta que ``Py_TRASHCAN_BEGIN`` tiene un segundo argumento que "
"debería ser la función de desasignación en la que se encuentra."

#: ../Doc/whatsnew/3.11.rst:2227
msgid ""
"To support older Python versions in the same codebase, you can define the "
"following macros and use them throughout the code (credit: these were copied "
"from the ``mypy`` codebase)::"
msgstr ""
"Para admitir versiones anteriores de Python en la misma base de código, "
"puede definir las siguientes macros y usarlas en todo el código (crédito: se "
"copiaron de la base de código ``mypy``):"

#: ../Doc/whatsnew/3.11.rst:2239
msgid ""
"The :c:func:`PyType_Ready` function now raises an error if a type is defined "
"with the :const:`Py_TPFLAGS_HAVE_GC` flag set but has no traverse function (:"
"c:member:`PyTypeObject.tp_traverse`). (Contributed by Victor Stinner in :"
"issue:`44263`.)"
msgstr ""
"La función :c:func:`PyType_Ready` ahora genera un error si un tipo se define "
"con el indicador :const:`Py_TPFLAGS_HAVE_GC` establecido pero no tiene "
"función transversal (:c:member:`PyTypeObject.tp_traverse`). (Aportado por "
"Victor Stinner en :issue:`44263`.)"

#: ../Doc/whatsnew/3.11.rst:2244
msgid ""
"Heap types with the :const:`Py_TPFLAGS_IMMUTABLETYPE` flag can now inherit "
"the :pep:`590` vectorcall protocol.  Previously, this was only possible for :"
"ref:`static types <static-types>`. (Contributed by Erlend E. Aasland in :"
"issue:`43908`)"
msgstr ""
"Los tipos de almacenamiento dinámico con el indicador :const:"
"`Py_TPFLAGS_IMMUTABLETYPE` ahora pueden heredar el protocolo vectorcall :pep:"
"`590`. Anteriormente, esto solo era posible para :ref:`static types <static-"
"types>`. (Aportado por Erlend E. Aasland en :issue:`43908`)"

#: ../Doc/whatsnew/3.11.rst:2249
msgid ""
"Since :c:func:`Py_TYPE()` is changed to a inline static function, "
"``Py_TYPE(obj) = new_type`` must be replaced with ``Py_SET_TYPE(obj, "
"new_type)``: see the :c:func:`Py_SET_TYPE()` function (available since "
"Python 3.9). For backward compatibility, this macro can be used::"
msgstr ""
"Dado que :c:func:`Py_TYPE()` se cambia a una función estática en línea, "
"``Py_TYPE(obj) = new_type`` debe reemplazarse por ``Py_SET_TYPE(obj, "
"new_type)``: consulte la función :c:func:`Py_SET_TYPE()` (disponible desde "
"Python 3.9). Para compatibilidad con versiones anteriores, se puede usar "
"esta macro:"

#: ../Doc/whatsnew/3.11.rst:2261 ../Doc/whatsnew/3.11.rst:2275
msgid "(Contributed by Victor Stinner in :issue:`39573`.)"
msgstr "(Aportado por Victor Stinner en :issue:`39573`.)"

#: ../Doc/whatsnew/3.11.rst:2263
msgid ""
"Since :c:func:`Py_SIZE()` is changed to a inline static function, "
"``Py_SIZE(obj) = new_size`` must be replaced with ``Py_SET_SIZE(obj, "
"new_size)``: see the :c:func:`Py_SET_SIZE()` function (available since "
"Python 3.9). For backward compatibility, this macro can be used::"
msgstr ""
"Dado que :c:func:`Py_SIZE()` se cambia a una función estática en línea, "
"``Py_SIZE(obj) = new_size`` debe reemplazarse por ``Py_SET_SIZE(obj, "
"new_size)``: consulte la función :c:func:`Py_SET_SIZE()` (disponible desde "
"Python 3.9). Para compatibilidad con versiones anteriores, se puede usar "
"esta macro:"

#: ../Doc/whatsnew/3.11.rst:2277
msgid ""
"``<Python.h>`` no longer includes the header files ``<stdlib.h>``, ``<stdio."
"h>``, ``<errno.h>`` and ``<string.h>`` when the ``Py_LIMITED_API`` macro is "
"set to ``0x030b0000`` (Python 3.11) or higher. C extensions should "
"explicitly include the header files after ``#include <Python.h>``. "
"(Contributed by Victor Stinner in :issue:`45434`.)"
msgstr ""
"``<Python.h>`` ya no incluye los archivos de encabezado ``<stdlib.h>``, "
"``<stdio.h>``, ``<errno.h>`` y ``<string.h>`` cuando la macro "
"``Py_LIMITED_API`` se establece en ``0x030b0000`` (Python 3.11) o superior. "
"Las extensiones de C deben incluir explícitamente los archivos de encabezado "
"después de ``#include <Python.h>``. (Aportado por Victor Stinner en :issue:"
"`45434`.)"

#: ../Doc/whatsnew/3.11.rst:2283
msgid ""
"The non-limited API files ``cellobject.h``, ``classobject.h``, ``code.h``, "
"``context.h``, ``funcobject.h``, ``genobject.h`` and ``longintrepr.h`` have "
"been moved to the ``Include/cpython`` directory. Moreover, the ``eval.h`` "
"header file was removed. These files must not be included directly, as they "
"are already included in ``Python.h``: :ref:`Include Files <api-includes>`. "
"If they have been included directly, consider including ``Python.h`` "
"instead. (Contributed by Victor Stinner in :issue:`35134`.)"
msgstr ""
"Los archivos de API no limitados ``cellobject.h``, ``classobject.h``, ``code."
"h``, ``context.h``, ``funcobject.h``, ``genobject.h`` y ``longintrepr.h`` se "
"han movido al directorio ``Include/cpython``. Además, se eliminó el archivo "
"de encabezado ``eval.h``. Estos archivos no deben incluirse directamente, ya "
"que ya están incluidos en ``Python.h``: :ref:`Include Files <api-includes>`. "
"Si se han incluido directamente, considere incluir ``Python.h`` en su lugar. "
"(Aportado por Victor Stinner en :issue:`35134`.)"

#: ../Doc/whatsnew/3.11.rst:2291
msgid ""
"The :c:func:`PyUnicode_CHECK_INTERNED` macro has been excluded from the "
"limited C API. It was never usable there, because it used internal "
"structures which are not available in the limited C API. (Contributed by "
"Victor Stinner in :issue:`46007`.)"
msgstr ""
"La macro :c:func:`PyUnicode_CHECK_INTERNED` se ha excluido de la API de C "
"limitada. Nunca se pudo usar allí, porque usaba estructuras internas que no "
"están disponibles en la API de C limitada. (Aportado por Victor Stinner en :"
"issue:`46007`.)"

#: ../Doc/whatsnew/3.11.rst:2296
msgid ""
"The following frame functions and type are now directly available with "
"``#include <Python.h>``, it's no longer needed to add ``#include "
"<frameobject.h>``:"
msgstr ""
"Las siguientes funciones y tipos de cuadros ahora están disponibles "
"directamente con ``#include <Python.h>``, ya no es necesario agregar "
"``#include <frameobject.h>``:"

#: ../Doc/whatsnew/3.11.rst:2300
msgid ":c:func:`PyFrame_Check`"
msgstr ":c:func:`PyFrame_Check`"

#: ../Doc/whatsnew/3.11.rst:2301
msgid ":c:func:`PyFrame_GetBack`"
msgstr ":c:func:`PyFrame_GetBack`"

#: ../Doc/whatsnew/3.11.rst:2302
msgid ":c:func:`PyFrame_GetBuiltins`"
msgstr ":c:func:`PyFrame_GetBuiltins`"

#: ../Doc/whatsnew/3.11.rst:2303
msgid ":c:func:`PyFrame_GetGenerator`"
msgstr ":c:func:`PyFrame_GetGenerator`"

#: ../Doc/whatsnew/3.11.rst:2304
msgid ":c:func:`PyFrame_GetGlobals`"
msgstr ":c:func:`PyFrame_GetGlobals`"

#: ../Doc/whatsnew/3.11.rst:2305
msgid ":c:func:`PyFrame_GetLasti`"
msgstr ":c:func:`PyFrame_GetLasti`"

#: ../Doc/whatsnew/3.11.rst:2306
msgid ":c:func:`PyFrame_GetLocals`"
msgstr ":c:func:`PyFrame_GetLocals`"

#: ../Doc/whatsnew/3.11.rst:2307
msgid ":c:type:`PyFrame_Type`"
msgstr ":c:type:`PyFrame_Type`"

#: ../Doc/whatsnew/3.11.rst:2309
msgid "(Contributed by Victor Stinner in :gh:`93937`.)"
msgstr "(Aportado por Victor Stinner en :gh:`93937`.)"

#: ../Doc/whatsnew/3.11.rst:2313
msgid ""
"The :c:type:`PyFrameObject` structure members have been removed from the "
"public C API."
msgstr ""
"Los miembros de la estructura :c:type:`PyFrameObject` se han eliminado de la "
"API de C pública."

#: ../Doc/whatsnew/3.11.rst:2316
msgid ""
"While the documentation notes that the :c:type:`PyFrameObject` fields are "
"subject to change at any time, they have been stable for a long time and "
"were used in several popular extensions."
msgstr ""
"Si bien la documentación señala que los campos :c:type:`PyFrameObject` están "
"sujetos a cambios en cualquier momento, se han mantenido estables durante "
"mucho tiempo y se usaron en varias extensiones populares."

#: ../Doc/whatsnew/3.11.rst:2320
msgid ""
"In Python 3.11, the frame struct was reorganized to allow performance "
"optimizations. Some fields were removed entirely, as they were details of "
"the old implementation."
msgstr ""
"En Python 3.11, la estructura del marco se reorganizó para permitir "
"optimizaciones de rendimiento. Algunos campos se eliminaron por completo, ya "
"que eran detalles de la implementación anterior."

#: ../Doc/whatsnew/3.11.rst:2324
msgid ":c:type:`PyFrameObject` fields:"
msgstr "Campos :c:type:`PyFrameObject`:"

#: ../Doc/whatsnew/3.11.rst:2326
msgid "``f_back``: use :c:func:`PyFrame_GetBack`."
msgstr "``f_back``: usa :c:func:`PyFrame_GetBack`."

#: ../Doc/whatsnew/3.11.rst:2327
msgid "``f_blockstack``: removed."
msgstr "``f_blockstack``: eliminado."

#: ../Doc/whatsnew/3.11.rst:2328
msgid "``f_builtins``: use :c:func:`PyFrame_GetBuiltins`."
msgstr "``f_builtins``: usa :c:func:`PyFrame_GetBuiltins`."

#: ../Doc/whatsnew/3.11.rst:2329
msgid "``f_code``: use :c:func:`PyFrame_GetCode`."
msgstr "``f_code``: usa :c:func:`PyFrame_GetCode`."

#: ../Doc/whatsnew/3.11.rst:2330
msgid "``f_gen``: use :c:func:`PyFrame_GetGenerator`."
msgstr "``f_gen``: usa :c:func:`PyFrame_GetGenerator`."

#: ../Doc/whatsnew/3.11.rst:2331
msgid "``f_globals``: use :c:func:`PyFrame_GetGlobals`."
msgstr "``f_globals``: usa :c:func:`PyFrame_GetGlobals`."

#: ../Doc/whatsnew/3.11.rst:2332
msgid "``f_iblock``: removed."
msgstr "``f_iblock``: eliminado."

#: ../Doc/whatsnew/3.11.rst:2333
msgid ""
"``f_lasti``: use :c:func:`PyFrame_GetLasti`. Code using ``f_lasti`` with "
"``PyCode_Addr2Line()`` should use :c:func:`PyFrame_GetLineNumber` instead; "
"it may be faster."
msgstr ""
"``f_lasti``: usa :c:func:`PyFrame_GetLasti`. El código que usa ``f_lasti`` "
"con ``PyCode_Addr2Line()`` debería usar :c:func:`PyFrame_GetLineNumber` en "
"su lugar; puede ser más rápido."

#: ../Doc/whatsnew/3.11.rst:2336
msgid "``f_lineno``: use :c:func:`PyFrame_GetLineNumber`"
msgstr "``f_lineno``: usar :c:func:`PyFrame_GetLineNumber`"

#: ../Doc/whatsnew/3.11.rst:2337
msgid "``f_locals``: use :c:func:`PyFrame_GetLocals`."
msgstr "``f_locals``: usa :c:func:`PyFrame_GetLocals`."

#: ../Doc/whatsnew/3.11.rst:2338
msgid "``f_stackdepth``: removed."
msgstr "``f_stackdepth``: eliminado."

#: ../Doc/whatsnew/3.11.rst:2339
msgid "``f_state``: no public API (renamed to ``f_frame.f_state``)."
msgstr "``f_state``: sin API pública (renombrado como ``f_frame.f_state``)."

#: ../Doc/whatsnew/3.11.rst:2340
msgid "``f_trace``: no public API."
msgstr "``f_trace``: sin API pública."

#: ../Doc/whatsnew/3.11.rst:2341
msgid ""
"``f_trace_lines``: use ``PyObject_GetAttrString((PyObject*)frame, "
"\"f_trace_lines\")``."
msgstr ""
"``f_trace_lines``: utiliza ``PyObject_GetAttrString((PyObject*)frame, "
"\"f_trace_lines\")``."

#: ../Doc/whatsnew/3.11.rst:2342
msgid ""
"``f_trace_opcodes``: use ``PyObject_GetAttrString((PyObject*)frame, "
"\"f_trace_opcodes\")``."
msgstr ""
"``f_trace_opcodes``: utiliza ``PyObject_GetAttrString((PyObject*)frame, "
"\"f_trace_opcodes\")``."

#: ../Doc/whatsnew/3.11.rst:2343
msgid "``f_localsplus``: no public API (renamed to ``f_frame.localsplus``)."
msgstr ""
"``f_localsplus``: sin API pública (renombrado como ``f_frame.localsplus``)."

#: ../Doc/whatsnew/3.11.rst:2344
msgid "``f_valuestack``: removed."
msgstr "``f_valuestack``: eliminado."

#: ../Doc/whatsnew/3.11.rst:2346
msgid ""
"The Python frame object is now created lazily. A side effect is that the "
"``f_back`` member must not be accessed directly, since its value is now also "
"computed lazily. The :c:func:`PyFrame_GetBack` function must be called "
"instead."
msgstr ""
"El objeto marco de Python ahora se crea de forma perezosa. Un efecto "
"secundario es que no se debe acceder directamente al miembro ``f_back``, ya "
"que su valor ahora también se calcula de forma diferida. En su lugar, se "
"debe llamar a la función :c:func:`PyFrame_GetBack`."

#: ../Doc/whatsnew/3.11.rst:2351
msgid ""
"Debuggers that accessed the ``f_locals`` directly *must* call :c:func:"
"`PyFrame_GetLocals` instead. They no longer need to call :c:func:"
"`PyFrame_FastToLocalsWithError` or :c:func:`PyFrame_LocalsToFast`, in fact "
"they should not call those functions. The necessary updating of the frame is "
"now managed by the virtual machine."
msgstr ""
"Los depuradores que accedieron a ``f_locals`` directamente *must* llaman a :"
"c:func:`PyFrame_GetLocals` en su lugar. Ya no necesitan llamar a :c:func:"
"`PyFrame_FastToLocalsWithError` o :c:func:`PyFrame_LocalsToFast`, de hecho, "
"no deberían llamar a esas funciones. La actualización necesaria del marco "
"ahora es administrada por la máquina virtual."

#: ../Doc/whatsnew/3.11.rst:2357
msgid "Code defining ``PyFrame_GetCode()`` on Python 3.8 and older::"
msgstr "Código que define ``PyFrame_GetCode()`` en Python 3.8 y anteriores:"

#: ../Doc/whatsnew/3.11.rst:2367
msgid "Code defining ``PyFrame_GetBack()`` on Python 3.8 and older::"
msgstr "Código que define ``PyFrame_GetBack()`` en Python 3.8 y anteriores:"

#: ../Doc/whatsnew/3.11.rst:2377
msgid ""
"Or use the `pythoncapi_compat project <https://github.com/python/"
"pythoncapi_compat>`__ to get these two functions on older Python versions."
msgstr ""
"O use `pythoncapi_compat project <https://github.com/python/"
"pythoncapi_compat>`__ para obtener estas dos funciones en versiones "
"anteriores de Python."

#: ../Doc/whatsnew/3.11.rst:2381
msgid "Changes of the :c:type:`PyThreadState` structure members:"
msgstr "Cambios de los miembros de la estructura :c:type:`PyThreadState`:"

#: ../Doc/whatsnew/3.11.rst:2383
msgid ""
"``frame``: removed, use :c:func:`PyThreadState_GetFrame` (function added to "
"Python 3.9 by :issue:`40429`). Warning: the function returns a :term:`strong "
"reference`, need to call :c:func:`Py_XDECREF`."
msgstr ""
"``frame``: eliminado, use :c:func:`PyThreadState_GetFrame` (función agregada "
"a Python 3.9 por :issue:`40429`). Advertencia: la función devuelve un :term:"
"`strong reference`, necesita llamar a :c:func:`Py_XDECREF`."

#: ../Doc/whatsnew/3.11.rst:2387
msgid ""
"``tracing``: changed, use :c:func:`PyThreadState_EnterTracing` and :c:func:"
"`PyThreadState_LeaveTracing` (functions added to Python 3.11 by :issue:"
"`43760`)."
msgstr ""
"``tracing``: cambiado, use :c:func:`PyThreadState_EnterTracing` y :c:func:"
"`PyThreadState_LeaveTracing` (funciones agregadas a Python 3.11 por :issue:"
"`43760`)."

#: ../Doc/whatsnew/3.11.rst:2390
msgid ""
"``recursion_depth``: removed, use ``(tstate->recursion_limit - tstate-"
">recursion_remaining)`` instead."
msgstr ""
"``recursion_depth``: eliminado, use ``(tstate->recursion_limit - tstate-"
">recursion_remaining)`` en su lugar."

#: ../Doc/whatsnew/3.11.rst:2392
msgid "``stackcheck_counter``: removed."
msgstr "``stackcheck_counter``: eliminado."

#: ../Doc/whatsnew/3.11.rst:2394
msgid "Code defining ``PyThreadState_GetFrame()`` on Python 3.8 and older::"
msgstr ""
"Código que define ``PyThreadState_GetFrame()`` en Python 3.8 y anteriores:"

#: ../Doc/whatsnew/3.11.rst:2404
msgid ""
"Code defining ``PyThreadState_EnterTracing()`` and "
"``PyThreadState_LeaveTracing()`` on Python 3.10 and older::"
msgstr ""
"Código que define ``PyThreadState_EnterTracing()`` y "
"``PyThreadState_LeaveTracing()`` en Python 3.10 y versiones anteriores:"

#: ../Doc/whatsnew/3.11.rst:2430
msgid ""
"Or use `the pythoncapi_compat project <https://github.com/python/"
"pythoncapi_compat>`__ to get these functions on old Python functions."
msgstr ""
"O use `the pythoncapi_compat project <https://github.com/python/"
"pythoncapi_compat>`__ para obtener estas funciones en funciones antiguas de "
"Python."

#: ../Doc/whatsnew/3.11.rst:2434
msgid ""
"Distributors are encouraged to build Python with the optimized Blake2 "
"library `libb2`_."
msgstr ""
"Se alienta a los distribuidores a compilar Python con la biblioteca Blake2 "
"optimizada `libb2`_."

#: ../Doc/whatsnew/3.11.rst:2437
msgid ""
"The :c:member:`PyConfig.module_search_paths_set` field must now be set to 1 "
"for initialization to use :c:member:`PyConfig.module_search_paths` to "
"initialize :data:`sys.path`. Otherwise, initialization will recalculate the "
"path and replace any values added to ``module_search_paths``."
msgstr ""
"El campo :c:member:`PyConfig.module_search_paths_set` ahora debe "
"establecerse en 1 para que la inicialización use :c:member:`PyConfig."
"module_search_paths` para inicializar :data:`sys.path`. De lo contrario, la "
"inicialización volverá a calcular la ruta y reemplazará los valores "
"agregados a ``module_search_paths``."

#: ../Doc/whatsnew/3.11.rst:2442
msgid ""
":c:func:`PyConfig_Read` no longer calculates the initial search path, and "
"will not fill any values into :c:member:`PyConfig.module_search_paths`. To "
"calculate default paths and then modify them, finish initialization and use :"
"c:func:`PySys_GetObject` to retrieve :data:`sys.path` as a Python list "
"object and modify it directly."
msgstr ""
":c:func:`PyConfig_Read` ya no calcula la ruta de búsqueda inicial y no "
"completará ningún valor en :c:member:`PyConfig.module_search_paths`. Para "
"calcular rutas predeterminadas y luego modificarlas, finalice la "
"inicialización y use :c:func:`PySys_GetObject` para recuperar :data:`sys."
"path` como un objeto de lista de Python y modificarlo directamente."

#: ../Doc/whatsnew/3.11.rst:2453
msgid ""
"Deprecate the following functions to configure the Python initialization:"
msgstr ""
"Deseche las siguientes funciones para configurar la inicialización de Python:"

#: ../Doc/whatsnew/3.11.rst:2455
msgid ":c:func:`PySys_AddWarnOptionUnicode`"
msgstr ":c:func:`PySys_AddWarnOptionUnicode`"

#: ../Doc/whatsnew/3.11.rst:2456
msgid ":c:func:`PySys_AddWarnOption`"
msgstr ":c:func:`PySys_AddWarnOption`"

#: ../Doc/whatsnew/3.11.rst:2457
msgid ":c:func:`PySys_AddXOption`"
msgstr ":c:func:`PySys_AddXOption`"

#: ../Doc/whatsnew/3.11.rst:2458
msgid ":c:func:`PySys_HasWarnOptions`"
msgstr ":c:func:`PySys_HasWarnOptions`"

#: ../Doc/whatsnew/3.11.rst:2459
msgid ":c:func:`PySys_SetArgvEx`"
msgstr ":c:func:`PySys_SetArgvEx`"

#: ../Doc/whatsnew/3.11.rst:2460
msgid ":c:func:`PySys_SetArgv`"
msgstr ":c:func:`PySys_SetArgv`"

#: ../Doc/whatsnew/3.11.rst:2461
msgid ":c:func:`PySys_SetPath`"
msgstr ":c:func:`PySys_SetPath`"

#: ../Doc/whatsnew/3.11.rst:2462
msgid ":c:func:`Py_SetPath`"
msgstr ":c:func:`Py_SetPath`"

#: ../Doc/whatsnew/3.11.rst:2463
msgid ":c:func:`Py_SetProgramName`"
msgstr ":c:func:`Py_SetProgramName`"

#: ../Doc/whatsnew/3.11.rst:2464
msgid ":c:func:`Py_SetPythonHome`"
msgstr ":c:func:`Py_SetPythonHome`"

#: ../Doc/whatsnew/3.11.rst:2465
msgid ":c:func:`Py_SetStandardStreamEncoding`"
msgstr ":c:func:`Py_SetStandardStreamEncoding`"

#: ../Doc/whatsnew/3.11.rst:2466
msgid ":c:func:`_Py_SetProgramFullPath`"
msgstr ":c:func:`_Py_SetProgramFullPath`"

#: ../Doc/whatsnew/3.11.rst:2468
msgid ""
"Use the new :c:type:`PyConfig` API of the :ref:`Python Initialization "
"Configuration <init-config>` instead (:pep:`587`). (Contributed by Victor "
"Stinner in :gh:`88279`.)"
msgstr ""
"Utilice la nueva API :c:type:`PyConfig` de :ref:`Python Initialization "
"Configuration <init-config>` en su lugar (:pep:`587`). (Aportado por Victor "
"Stinner en :gh:`88279`.)"

#: ../Doc/whatsnew/3.11.rst:2472
msgid ""
"Deprecate the ``ob_shash`` member of the :c:type:`PyBytesObject`. Use :c:"
"func:`PyObject_Hash` instead. (Contributed by Inada Naoki in :issue:`46864`.)"
msgstr ""
"Deje obsoleto el miembro ``ob_shash`` de :c:type:`PyBytesObject`. Utilice :c:"
"func:`PyObject_Hash` en su lugar. (Aportado por Inada Naoki en :issue:"
"`46864`.)"

#: ../Doc/whatsnew/3.11.rst:2481
msgid ""
"The following C APIs have been deprecated in earlier Python releases, and "
"will be removed in Python 3.12."
msgstr ""
"Las siguientes API de C quedaron obsoletas en versiones anteriores de Python "
"y se eliminarán en Python 3.12."

#: ../Doc/whatsnew/3.11.rst:2484
msgid ":c:func:`PyUnicode_AS_DATA`"
msgstr ":c:func:`PyUnicode_AS_DATA`"

#: ../Doc/whatsnew/3.11.rst:2485
msgid ":c:func:`PyUnicode_AS_UNICODE`"
msgstr ":c:func:`PyUnicode_AS_UNICODE`"

#: ../Doc/whatsnew/3.11.rst:2486
msgid ":c:func:`PyUnicode_AsUnicodeAndSize`"
msgstr ":c:func:`PyUnicode_AsUnicodeAndSize`"

#: ../Doc/whatsnew/3.11.rst:2487
msgid ":c:func:`PyUnicode_AsUnicode`"
msgstr ":c:func:`PyUnicode_AsUnicode`"

#: ../Doc/whatsnew/3.11.rst:2488
msgid ":c:func:`PyUnicode_FromUnicode`"
msgstr ":c:func:`PyUnicode_FromUnicode`"

#: ../Doc/whatsnew/3.11.rst:2489
msgid ":c:func:`PyUnicode_GET_DATA_SIZE`"
msgstr ":c:func:`PyUnicode_GET_DATA_SIZE`"

#: ../Doc/whatsnew/3.11.rst:2490
msgid ":c:func:`PyUnicode_GET_SIZE`"
msgstr ":c:func:`PyUnicode_GET_SIZE`"

#: ../Doc/whatsnew/3.11.rst:2491
msgid ":c:func:`PyUnicode_GetSize`"
msgstr ":c:func:`PyUnicode_GetSize`"

#: ../Doc/whatsnew/3.11.rst:2492
msgid ":c:func:`PyUnicode_IS_COMPACT`"
msgstr ":c:func:`PyUnicode_IS_COMPACT`"

#: ../Doc/whatsnew/3.11.rst:2493
msgid ":c:func:`PyUnicode_IS_READY`"
msgstr ":c:func:`PyUnicode_IS_READY`"

#: ../Doc/whatsnew/3.11.rst:2494
msgid ":c:func:`PyUnicode_READY`"
msgstr ":c:func:`PyUnicode_READY`"

#: ../Doc/whatsnew/3.11.rst:2495
msgid ":c:func:`Py_UNICODE_WSTR_LENGTH`"
msgstr ":c:func:`Py_UNICODE_WSTR_LENGTH`"

#: ../Doc/whatsnew/3.11.rst:2496
msgid ":c:func:`_PyUnicode_AsUnicode`"
msgstr ":c:func:`_PyUnicode_AsUnicode`"

#: ../Doc/whatsnew/3.11.rst:2497
msgid ":c:macro:`PyUnicode_WCHAR_KIND`"
msgstr ":c:macro:`PyUnicode_WCHAR_KIND`"

#: ../Doc/whatsnew/3.11.rst:2498
msgid ":c:type:`PyUnicodeObject`"
msgstr ":c:type:`PyUnicodeObject`"

#: ../Doc/whatsnew/3.11.rst:2499
msgid ":c:func:`PyUnicode_InternImmortal()`"
msgstr ":c:func:`PyUnicode_InternImmortal()`"

#: ../Doc/whatsnew/3.11.rst:2507
msgid ""
":c:func:`PyFrame_BlockSetup` and :c:func:`PyFrame_BlockPop` have been "
"removed. (Contributed by Mark Shannon in :issue:`40222`.)"
msgstr ""
"Se han eliminado :c:func:`PyFrame_BlockSetup` y :c:func:`PyFrame_BlockPop`. "
"(Aportado por Mark Shannon en :issue:`40222`.)"

#: ../Doc/whatsnew/3.11.rst:2511
msgid "Remove the following math macros using the ``errno`` variable:"
msgstr "Quite las siguientes macros matemáticas usando la variable ``errno``:"

#: ../Doc/whatsnew/3.11.rst:2513
msgid "``Py_ADJUST_ERANGE1()``"
msgstr "``Py_ADJUST_ERANGE1()``"

#: ../Doc/whatsnew/3.11.rst:2514
msgid "``Py_ADJUST_ERANGE2()``"
msgstr "``Py_ADJUST_ERANGE2()``"

#: ../Doc/whatsnew/3.11.rst:2515
msgid "``Py_OVERFLOWED()``"
msgstr "``Py_OVERFLOWED()``"

#: ../Doc/whatsnew/3.11.rst:2516
msgid "``Py_SET_ERANGE_IF_OVERFLOW()``"
msgstr "``Py_SET_ERANGE_IF_OVERFLOW()``"

#: ../Doc/whatsnew/3.11.rst:2517
msgid "``Py_SET_ERRNO_ON_MATH_ERROR()``"
msgstr "``Py_SET_ERRNO_ON_MATH_ERROR()``"

#: ../Doc/whatsnew/3.11.rst:2519
msgid "(Contributed by Victor Stinner in :issue:`45412`.)"
msgstr "(Aportado por Victor Stinner en :issue:`45412`.)"

#: ../Doc/whatsnew/3.11.rst:2521
msgid ""
"Remove ``Py_UNICODE_COPY()`` and ``Py_UNICODE_FILL()`` macros, deprecated "
"since Python 3.3. Use ``PyUnicode_CopyCharacters()`` or ``memcpy()`` "
"(``wchar_t*`` string), and ``PyUnicode_Fill()`` functions instead. "
"(Contributed by Victor Stinner in :issue:`41123`.)"
msgstr ""
"Elimine las macros ``Py_UNICODE_COPY()`` y ``Py_UNICODE_FILL()``, obsoletas "
"desde Python 3.3. Utilice ``PyUnicode_CopyCharacters()`` o ``memcpy()`` "
"(cadena ``wchar_t*``) y las funciones ``PyUnicode_Fill()`` en su lugar. "
"(Aportado por Victor Stinner en :issue:`41123`.)"

#: ../Doc/whatsnew/3.11.rst:2526
msgid ""
"Remove the ``pystrhex.h`` header file. It only contains private functions. C "
"extensions should only include the main ``<Python.h>`` header file. "
"(Contributed by Victor Stinner in :issue:`45434`.)"
msgstr ""
"Elimine el archivo de encabezado ``pystrhex.h``. Solo contiene funciones "
"privadas. Las extensiones C solo deben incluir el archivo de encabezado "
"principal ``<Python.h>``. (Aportado por Victor Stinner en :issue:`45434`.)"

#: ../Doc/whatsnew/3.11.rst:2530
msgid ""
"Remove the ``Py_FORCE_DOUBLE()`` macro. It was used by the "
"``Py_IS_INFINITY()`` macro. (Contributed by Victor Stinner in :issue:"
"`45440`.)"
msgstr ""
"Quite la macro ``Py_FORCE_DOUBLE()``. Fue utilizado por la macro "
"``Py_IS_INFINITY()``. (Aportado por Victor Stinner en :issue:`45440`.)"

#: ../Doc/whatsnew/3.11.rst:2534
msgid ""
"The following items are no longer available when :c:macro:`Py_LIMITED_API` "
"is defined:"
msgstr ""
"Los siguientes elementos ya no están disponibles cuando se define :c:macro:"
"`Py_LIMITED_API`:"

#: ../Doc/whatsnew/3.11.rst:2537
msgid ":c:func:`PyMarshal_WriteLongToFile`"
msgstr ":c:func:`PyMarshal_WriteLongToFile`"

#: ../Doc/whatsnew/3.11.rst:2538
msgid ":c:func:`PyMarshal_WriteObjectToFile`"
msgstr ":c:func:`PyMarshal_WriteObjectToFile`"

#: ../Doc/whatsnew/3.11.rst:2539
msgid ":c:func:`PyMarshal_ReadObjectFromString`"
msgstr ":c:func:`PyMarshal_ReadObjectFromString`"

#: ../Doc/whatsnew/3.11.rst:2540
msgid ":c:func:`PyMarshal_WriteObjectToString`"
msgstr ":c:func:`PyMarshal_WriteObjectToString`"

#: ../Doc/whatsnew/3.11.rst:2541
msgid "the ``Py_MARSHAL_VERSION`` macro"
msgstr "la macro ``Py_MARSHAL_VERSION``"

#: ../Doc/whatsnew/3.11.rst:2543
msgid "These are not part of the :ref:`limited API <stable-abi-list>`."
msgstr "Estos no son parte del :ref:`limited API <stable-abi-list>`."

#: ../Doc/whatsnew/3.11.rst:2545
msgid "(Contributed by Victor Stinner in :issue:`45474`.)"
msgstr "(Aportado por Victor Stinner en :issue:`45474`.)"

#: ../Doc/whatsnew/3.11.rst:2547
msgid ""
"Exclude :c:func:`PyWeakref_GET_OBJECT` from the limited C API. It never "
"worked since the :c:type:`PyWeakReference` structure is opaque in the "
"limited C API. (Contributed by Victor Stinner in :issue:`35134`.)"
msgstr ""
"Excluya :c:func:`PyWeakref_GET_OBJECT` de la API de C limitada. Nunca "
"funcionó ya que la estructura :c:type:`PyWeakReference` es opaca en la API "
"de C limitada. (Aportado por Victor Stinner en :issue:`35134`.)"

#: ../Doc/whatsnew/3.11.rst:2552
msgid ""
"Remove the ``PyHeapType_GET_MEMBERS()`` macro. It was exposed in the public "
"C API by mistake, it must only be used by Python internally. Use the "
"``PyTypeObject.tp_members`` member instead. (Contributed by Victor Stinner "
"in :issue:`40170`.)"
msgstr ""
"Quite la macro ``PyHeapType_GET_MEMBERS()``. Fue expuesto en la API pública "
"de C por error, solo debe ser utilizado por Python internamente. Utilice el "
"miembro ``PyTypeObject.tp_members`` en su lugar. (Aportado por Victor "
"Stinner en :issue:`40170`.)"

#: ../Doc/whatsnew/3.11.rst:2557
msgid ""
"Remove the ``HAVE_PY_SET_53BIT_PRECISION`` macro (moved to the internal C "
"API). (Contributed by Victor Stinner in :issue:`45412`.)"
msgstr ""
"Elimine la macro ``HAVE_PY_SET_53BIT_PRECISION`` (movida a la API de C "
"interna). (Aportado por Victor Stinner en :issue:`45412`.)"

#: ../Doc/whatsnew/3.11.rst:2563
msgid ""
"Remove the :c:type:`Py_UNICODE` encoder APIs, as they have been deprecated "
"since Python 3.3, are little used and are inefficient relative to the "
"recommended alternatives."
msgstr ""
"Elimine las API del codificador :c:type:`Py_UNICODE`, ya que han quedado "
"obsoletas desde Python 3.3, se usan poco y son ineficientes en relación con "
"las alternativas recomendadas."

#: ../Doc/whatsnew/3.11.rst:2568
msgid "The removed functions are:"
msgstr "Las funciones eliminadas son:"

#: ../Doc/whatsnew/3.11.rst:2570
msgid ":func:`!PyUnicode_Encode`"
msgstr ":func:`!PyUnicode_Encode`"

#: ../Doc/whatsnew/3.11.rst:2571
msgid ":func:`!PyUnicode_EncodeASCII`"
msgstr ":func:`!PyUnicode_EncodeASCII`"

#: ../Doc/whatsnew/3.11.rst:2572
msgid ":func:`!PyUnicode_EncodeLatin1`"
msgstr ":func:`!PyUnicode_EncodeLatin1`"

#: ../Doc/whatsnew/3.11.rst:2573
msgid ":func:`!PyUnicode_EncodeUTF7`"
msgstr ":func:`!PyUnicode_EncodeUTF7`"

#: ../Doc/whatsnew/3.11.rst:2574
msgid ":func:`!PyUnicode_EncodeUTF8`"
msgstr ":func:`!PyUnicode_EncodeUTF8`"

#: ../Doc/whatsnew/3.11.rst:2575
msgid ":func:`!PyUnicode_EncodeUTF16`"
msgstr ":func:`!PyUnicode_EncodeUTF16`"

#: ../Doc/whatsnew/3.11.rst:2576
msgid ":func:`!PyUnicode_EncodeUTF32`"
msgstr ":func:`!PyUnicode_EncodeUTF32`"

#: ../Doc/whatsnew/3.11.rst:2577
msgid ":func:`!PyUnicode_EncodeUnicodeEscape`"
msgstr ":func:`!PyUnicode_EncodeUnicodeEscape`"

#: ../Doc/whatsnew/3.11.rst:2578
msgid ":func:`!PyUnicode_EncodeRawUnicodeEscape`"
msgstr ":func:`!PyUnicode_EncodeRawUnicodeEscape`"

#: ../Doc/whatsnew/3.11.rst:2579
msgid ":func:`!PyUnicode_EncodeCharmap`"
msgstr ":func:`!PyUnicode_EncodeCharmap`"

#: ../Doc/whatsnew/3.11.rst:2580
msgid ":func:`!PyUnicode_TranslateCharmap`"
msgstr ":func:`!PyUnicode_TranslateCharmap`"

#: ../Doc/whatsnew/3.11.rst:2581
msgid ":func:`!PyUnicode_EncodeDecimal`"
msgstr ":func:`!PyUnicode_EncodeDecimal`"

#: ../Doc/whatsnew/3.11.rst:2582
msgid ":func:`!PyUnicode_TransformDecimalToASCII`"
msgstr ":func:`!PyUnicode_TransformDecimalToASCII`"

#: ../Doc/whatsnew/3.11.rst:2584
msgid ""
"See :pep:`624` for details and :pep:`migration guidance <624#alternative-"
"apis>`. (Contributed by Inada Naoki in :issue:`44029`.)"
msgstr ""
"Ver :pep:`624` para más detalles y :pep:`migration guidance <624#alternative-"
"apis>`. (Aportado por Inada Naoki en :issue:`44029`.)"

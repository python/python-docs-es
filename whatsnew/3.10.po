# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2021, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.10\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-25 19:47+0200\n"
"PO-Revision-Date: 2022-10-31 18:04-0300\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language-Team: \n"
"Language: es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.10.3\n"
"X-Generator: Poedit 3.2.1\n"

#: ../Doc/whatsnew/3.10.rst:3
msgid "What's New In Python 3.10"
msgstr "Qué hay de nuevo en Python 3.10"

#: ../Doc/whatsnew/3.10.rst
msgid "Release"
msgstr "Versión"

#: ../Doc/whatsnew/3.10.rst:5
msgid "|release|"
msgstr "|release|"

#: ../Doc/whatsnew/3.10.rst
msgid "Date"
msgstr "Fecha"

#: ../Doc/whatsnew/3.10.rst:6
msgid "|today|"
msgstr "|today|"

#: ../Doc/whatsnew/3.10.rst
msgid "Editor"
msgstr "Editor"

#: ../Doc/whatsnew/3.10.rst:7
msgid "Pablo Galindo Salgado"
msgstr "Pablo Galindo Salgado"

#: ../Doc/whatsnew/3.10.rst:49
msgid ""
"This article explains the new features in Python 3.10, compared to 3.9. "
"Python 3.10 was released on October 4, 2021. For full details, see the :ref:"
"`changelog <changelog>`."
msgstr ""
"Este artículo explica las nuevas características de Python 3.10, en "
"comparación con la 3.9. Python 3.10 se publicó el 4 de octubre de 2021. Para "
"obtener todos los detalles, consulte el :ref:`changelog <changelog>`."

#: ../Doc/whatsnew/3.10.rst:54
msgid "Summary -- Release highlights"
msgstr "Resumen: aspectos destacados de la versión"

#: ../Doc/whatsnew/3.10.rst:62
msgid "New syntax features:"
msgstr "Nuevas funciones de sintaxis:"

#: ../Doc/whatsnew/3.10.rst:64
msgid ":pep:`634`, Structural Pattern Matching: Specification"
msgstr ":pep:`634`, Coincidencia de patrones estructurales: Especificación"

#: ../Doc/whatsnew/3.10.rst:65
msgid ":pep:`635`, Structural Pattern Matching: Motivation and Rationale"
msgstr ""
":pep:`635`, Coincidencia de patrones estructurales: motivación y fundamento"

#: ../Doc/whatsnew/3.10.rst:66
msgid ":pep:`636`, Structural Pattern Matching: Tutorial"
msgstr ":pep:`636`, Coincidencia de patrones estructurales: Tutorial"

#: ../Doc/whatsnew/3.10.rst:67
msgid ""
":issue:`12782`, Parenthesized context managers are now officially allowed."
msgstr ""
":issue:`12782`, los administradores de contexto entre paréntesis ahora están "
"oficialmente permitidos."

#: ../Doc/whatsnew/3.10.rst:69
msgid "New features in the standard library:"
msgstr "Nuevas funciones en la biblioteca estándar:"

#: ../Doc/whatsnew/3.10.rst:71
msgid ":pep:`618`, Add Optional Length-Checking To zip."
msgstr ":pep:`618`, agregue verificación de longitud opcional al cierre."

#: ../Doc/whatsnew/3.10.rst:73
msgid "Interpreter improvements:"
msgstr "Mejoras en el intérprete:"

#: ../Doc/whatsnew/3.10.rst:75
msgid ":pep:`626`, Precise line numbers for debugging and other tools."
msgstr ""
":pep:`626`, números de línea precisos para depuración y otras herramientas."

#: ../Doc/whatsnew/3.10.rst:77
msgid "New typing features:"
msgstr "Nuevas funciones de escritura:"

#: ../Doc/whatsnew/3.10.rst:79
msgid ":pep:`604`, Allow writing union types as X | Y"
msgstr ":pep:`604`, Permitir escribir tipos de unión como X | Y"

#: ../Doc/whatsnew/3.10.rst:80
msgid ":pep:`613`, Explicit Type Aliases"
msgstr ":pep:`613`, alias de tipo explícito"

#: ../Doc/whatsnew/3.10.rst:81
msgid ":pep:`612`, Parameter Specification Variables"
msgstr ":pep:`612`, variables de especificación de parámetros"

#: ../Doc/whatsnew/3.10.rst:83
msgid "Important deprecations, removals or restrictions:"
msgstr "Desactivaciones, eliminaciones o restricciones importantes:"

#: ../Doc/whatsnew/3.10.rst:85
msgid ":pep:`644`, Require OpenSSL 1.1.1 or newer"
msgstr ":pep:`644`, requiere OpenSSL 1.1.1 o más reciente"

#: ../Doc/whatsnew/3.10.rst:86
msgid ":pep:`632`, Deprecate distutils module."
msgstr ":pep:`632`, módulo distutils obsoleto."

#: ../Doc/whatsnew/3.10.rst:87
msgid ""
":pep:`623`, Deprecate and prepare for the removal of the wstr member in "
"PyUnicodeObject."
msgstr ""
":pep:`623`, desaprobar y prepararse para la eliminación del miembro wstr en "
"PyUnicodeObject."

#: ../Doc/whatsnew/3.10.rst:88
msgid ":pep:`624`, Remove Py_UNICODE encoder APIs"
msgstr ":pep:`624`, eliminar las API del codificador Py_UNICODE"

#: ../Doc/whatsnew/3.10.rst:89
msgid ":pep:`597`, Add optional EncodingWarning"
msgstr ":pep:`597`, agregar codificación opcional"

#: ../Doc/whatsnew/3.10.rst:93 ../Doc/whatsnew/3.10.rst:2055
msgid "New Features"
msgstr "Nuevas características"

#: ../Doc/whatsnew/3.10.rst:98
msgid "Parenthesized context managers"
msgstr "Administradores de contexto entre paréntesis"

#: ../Doc/whatsnew/3.10.rst:100
msgid ""
"Using enclosing parentheses for continuation across multiple lines in "
"context managers is now supported. This allows formatting a long collection "
"of context managers in multiple lines in a similar way as it was previously "
"possible with import statements. For instance, all these examples are now "
"valid:"
msgstr ""
"Ahora se admite el uso de entre paréntesis para continuar en varias líneas "
"en los administradores de contexto. Esto permite formatear una colección "
"larga de administradores de contexto en múltiples líneas de una manera "
"similar a como era posible anteriormente con declaraciones de importación. "
"Por ejemplo, todos estos ejemplos ahora son válidos:"

#: ../Doc/whatsnew/3.10.rst:131
msgid ""
"it is also possible to use a trailing comma at the end of the enclosed group:"
msgstr "también es posible usar una coma al final del grupo adjunto:"

#: ../Doc/whatsnew/3.10.rst:143
msgid ""
"This new syntax uses the non LL(1) capacities of the new parser. Check :pep:"
"`617` for more details."
msgstr ""
"Esta nueva sintaxis utiliza las capacidades no LL (1) del nuevo analizador. "
"Consulte :pep:`617` para obtener más detalles."

#: ../Doc/whatsnew/3.10.rst:146
msgid ""
"(Contributed by Guido van Rossum, Pablo Galindo and Lysandros Nikolaou in :"
"issue:`12782` and :issue:`40334`.)"
msgstr ""
"(Contribuido por Guido van Rossum, Pablo Galindo y Lysandros Nikolaou en :"
"issue:`12782` y :issue:`40334`.)"

#: ../Doc/whatsnew/3.10.rst:151
msgid "Better error messages"
msgstr "Mejores mensajes de error"

#: ../Doc/whatsnew/3.10.rst:154
msgid "SyntaxErrors"
msgstr "SyntaxErrors"

#: ../Doc/whatsnew/3.10.rst:156
msgid ""
"When parsing code that contains unclosed parentheses or brackets the "
"interpreter now includes the location of the unclosed bracket of parentheses "
"instead of displaying *SyntaxError: unexpected EOF while parsing* or "
"pointing to some incorrect location. For instance, consider the following "
"code (notice the unclosed '{'):"
msgstr ""
"Al analizar el código que contiene paréntesis o corchetes sin cerrar, el "
"intérprete ahora incluye la ubicación del corchete de paréntesis sin cerrar "
"en lugar de mostrar *SyntaxError: unexpected EOF while parsing* o señalar "
"una ubicación incorrecta. Por ejemplo, considere el siguiente código "
"(observe el '{' sin cerrar):"

#: ../Doc/whatsnew/3.10.rst:167
msgid ""
"Previous versions of the interpreter reported confusing places as the "
"location of the syntax error:"
msgstr ""
"Las versiones anteriores del intérprete informaron lugares confusos como la "
"ubicación del error de sintaxis:"

#: ../Doc/whatsnew/3.10.rst:177
msgid "but in Python 3.10 a more informative error is emitted:"
msgstr "pero en Python 3.10 se emite un error más informativo:"

#: ../Doc/whatsnew/3.10.rst:187
msgid ""
"In a similar way, errors involving unclosed string literals (single and "
"triple quoted) now point to the start of the string instead of reporting EOF/"
"EOL."
msgstr ""
"De manera similar, los errores que involucran cadenas literales no cerradas "
"(entre comillas simples y triples) ahora apuntan al inicio de la cadena en "
"lugar de informar EOF / EOL."

#: ../Doc/whatsnew/3.10.rst:190
msgid ""
"These improvements are inspired by previous work in the PyPy interpreter."
msgstr ""
"Estas mejoras están inspiradas en trabajos anteriores en el intérprete de "
"PyPy."

#: ../Doc/whatsnew/3.10.rst:192
msgid ""
"(Contributed by Pablo Galindo in :issue:`42864` and Batuhan Taskaya in :"
"issue:`40176`.)"
msgstr ""
"(Contribuido por Pablo Galindo en :issue:`42864` y Batuhan Taskaya en :issue:"
"`40176`.)"

#: ../Doc/whatsnew/3.10.rst:195
msgid ""
":exc:`SyntaxError` exceptions raised by the interpreter will now highlight "
"the full error range of the expression that constitutes the syntax error "
"itself, instead of just where the problem is detected. In this way, instead "
"of displaying (before Python 3.10):"
msgstr ""
"Las excepciones de :exc:`SyntaxError` planteadas por el intérprete ahora "
"resaltarán el rango de error completo de la expresión que constituye el "
"error de sintaxis en sí, en lugar de solo dónde se detecta el problema. De "
"esta manera, en lugar de mostrar (antes de Python 3.10):"

#: ../Doc/whatsnew/3.10.rst:208
msgid "now Python 3.10 will display the exception as:"
msgstr "ahora Python 3.10 mostrará la excepción como:"

#: ../Doc/whatsnew/3.10.rst:218
msgid "This improvement was contributed by Pablo Galindo in :issue:`43914`."
msgstr "Esta mejora fue aportada por Pablo Galindo en :issue:`43914`."

#: ../Doc/whatsnew/3.10.rst:220
msgid ""
"A considerable amount of new specialized messages for :exc:`SyntaxError` "
"exceptions have been incorporated. Some of the most notable ones are as "
"follows:"
msgstr ""
"Se ha incorporado una cantidad considerable de nuevos mensajes "
"especializados para excepciones :exc:`SyntaxError`. Algunos de los más "
"notables son los siguientes:"

#: ../Doc/whatsnew/3.10.rst:223
msgid "Missing ``:`` before blocks:"
msgstr "Falta ``:`` antes de los bloques:"

#: ../Doc/whatsnew/3.10.rst:233
msgid "(Contributed by Pablo Galindo in :issue:`42997`.)"
msgstr "(Aportado por Pablo Galindo en :issue:`42997`.)"

#: ../Doc/whatsnew/3.10.rst:235
msgid "Unparenthesised tuples in comprehensions targets:"
msgstr "Tuplas sin paréntesis en objetivos de comprensión:"

#: ../Doc/whatsnew/3.10.rst:245
msgid "(Contributed by Pablo Galindo in :issue:`43017`.)"
msgstr "(Aportado por Pablo Galindo en :issue:`43017`.)"

#: ../Doc/whatsnew/3.10.rst:247
msgid "Missing commas in collection literals and between expressions:"
msgstr "Faltan comas en literales de colección y entre expresiones:"

#: ../Doc/whatsnew/3.10.rst:260
msgid "(Contributed by Pablo Galindo in :issue:`43822`.)"
msgstr "(Aportado por Pablo Galindo en :issue:`43822`.)"

#: ../Doc/whatsnew/3.10.rst:262
msgid "Multiple Exception types without parentheses:"
msgstr "Varios tipos de excepciones sin paréntesis:"

#: ../Doc/whatsnew/3.10.rst:274
msgid "(Contributed by Pablo Galindo in :issue:`43149`.)"
msgstr "(Aportado por Pablo Galindo en :issue:`43149`.)"

#: ../Doc/whatsnew/3.10.rst:276
msgid "Missing ``:`` and values in dictionary literals:"
msgstr "Falta ``:`` y valores en literales de diccionario:"

#: ../Doc/whatsnew/3.10.rst:296
msgid "(Contributed by Pablo Galindo in :issue:`43823`.)"
msgstr "(Aportado por Pablo Galindo en :issue:`43823`.)"

#: ../Doc/whatsnew/3.10.rst:298
msgid "``try`` blocks without ``except`` or ``finally`` blocks:"
msgstr "Bloques ``try`` sin bloques ``except`` o ``finally``:"

#: ../Doc/whatsnew/3.10.rst:310
msgid "(Contributed by Pablo Galindo in :issue:`44305`.)"
msgstr "(Aportado por Pablo Galindo en :issue:`44305`.)"

#: ../Doc/whatsnew/3.10.rst:312
msgid "Usage of ``=`` instead of ``==`` in comparisons:"
msgstr "Uso de ``=`` en lugar de ``==`` en comparaciones:"

#: ../Doc/whatsnew/3.10.rst:322
msgid "(Contributed by Pablo Galindo in :issue:`43797`.)"
msgstr "(Aportado por Pablo Galindo en :issue:`43797`.)"

#: ../Doc/whatsnew/3.10.rst:324
msgid "Usage of ``*`` in f-strings:"
msgstr "Uso de ``*`` en f-strings:"

#: ../Doc/whatsnew/3.10.rst:334
msgid "(Contributed by Pablo Galindo in :issue:`41064`.)"
msgstr "(Aportado por Pablo Galindo en :issue:`41064`.)"

#: ../Doc/whatsnew/3.10.rst:337
msgid "IndentationErrors"
msgstr "Errores de sangría"

#: ../Doc/whatsnew/3.10.rst:339
msgid ""
"Many :exc:`IndentationError` exceptions now have more context regarding what "
"kind of block was expecting an indentation, including the location of the "
"statement:"
msgstr ""
"Muchas excepciones de :exc:`IndentationError` ahora tienen más contexto con "
"respecto a qué tipo de bloque esperaba una sangría, incluida la ubicación de "
"la declaración:"

#: ../Doc/whatsnew/3.10.rst:354
msgid "AttributeErrors"
msgstr "AttributeErrors"

#: ../Doc/whatsnew/3.10.rst:356
msgid ""
"When printing :exc:`AttributeError`, :c:func:`PyErr_Display` will offer "
"suggestions of similar attribute names in the object that the exception was "
"raised from:"
msgstr ""
"Al imprimir :exc:`AttributeError`, :c:func:`PyErr_Display` ofrecerá "
"sugerencias de nombres de atributos similares en el objeto desde el que se "
"generó la excepción:"

#: ../Doc/whatsnew/3.10.rst:367 ../Doc/whatsnew/3.10.rst:389
msgid "(Contributed by Pablo Galindo in :issue:`38530`.)"
msgstr "(Contribuido por Pablo Galindo en :issue:`38530`.)"

#: ../Doc/whatsnew/3.10.rst:370
msgid ""
"Notice this won't work if :c:func:`PyErr_Display` is not called to display "
"the error which can happen if some other custom error display function is "
"used. This is a common scenario in some REPLs like IPython."
msgstr ""
"Tenga en cuenta que esto no funcionará si no se llama a :c:func:"
"`PyErr_Display` para mostrar el error, lo que puede suceder si se utiliza "
"alguna otra función de visualización de error personalizada. Este es un "
"escenario común en algunos REPL como IPython."

#: ../Doc/whatsnew/3.10.rst:375
msgid "NameErrors"
msgstr "NameErrors"

#: ../Doc/whatsnew/3.10.rst:377
msgid ""
"When printing :exc:`NameError` raised by the interpreter, :c:func:"
"`PyErr_Display` will offer suggestions of similar variable names in the "
"function that the exception was raised from:"
msgstr ""
"Al imprimir :exc:`NameError` generado por el intérprete, :c:func:"
"`PyErr_Display` ofrecerá sugerencias de nombres de variable similares en la "
"función desde la que se generó la excepción:"

#: ../Doc/whatsnew/3.10.rst:392
msgid ""
"Notice this won't work if :c:func:`PyErr_Display` is not called to display "
"the error, which can happen if some other custom error display function is "
"used. This is a common scenario in some REPLs like IPython."
msgstr ""
"Tenga en cuenta que esto no funcionará si no se llama a :c:func:"
"`PyErr_Display` para mostrar el error, lo que puede suceder si se utiliza "
"alguna otra función de visualización de error personalizada. Este es un "
"escenario común en algunos REPL como IPython."

#: ../Doc/whatsnew/3.10.rst:398
msgid "PEP 626: Precise line numbers for debugging and other tools"
msgstr ""
"PEP 626: números de línea precisos para depuración y otras herramientas"

#: ../Doc/whatsnew/3.10.rst:400
msgid ""
"PEP 626 brings more precise and reliable line numbers for debugging, "
"profiling and coverage tools. Tracing events, with the correct line number, "
"are generated for all lines of code executed and only for lines of code that "
"are executed."
msgstr ""
"PEP 626 ofrece números de línea más precisos y confiables para herramientas "
"de depuración, creación de perfiles y cobertura. Los eventos de rastreo, con "
"el número de línea correcto, se generan para todas las líneas de código "
"ejecutadas y solo para las líneas de código que se ejecutan."

#: ../Doc/whatsnew/3.10.rst:403
msgid ""
"The ``f_lineno`` attribute of frame objects will always contain the expected "
"line number."
msgstr ""
"El atributo ``f_lineno`` de los objetos marco siempre contendrá el número de "
"línea esperado."

#: ../Doc/whatsnew/3.10.rst:405
msgid ""
"The ``co_lnotab`` attribute of code objects is deprecated and will be "
"removed in 3.12. Code that needs to convert from offset to line number "
"should use the new ``co_lines()`` method instead."
msgstr ""
"El atributo ``co_lnotab`` de los objetos de código está obsoleto y se "
"eliminará en 3.12. El código que necesita convertir de desplazamiento a "
"número de línea debe usar el nuevo método ``co_lines()`` en su lugar."

#: ../Doc/whatsnew/3.10.rst:409
msgid "PEP 634: Structural Pattern Matching"
msgstr "PEP 634: Coincidencia de patrones estructurales"

#: ../Doc/whatsnew/3.10.rst:411
msgid ""
"Structural pattern matching has been added in the form of a *match "
"statement* and *case statements* of patterns with associated actions. "
"Patterns consist of sequences, mappings, primitive data types as well as "
"class instances. Pattern matching enables programs to extract information "
"from complex data types, branch on the structure of data, and apply specific "
"actions based on different forms of data."
msgstr ""
"Se ha agregado la coincidencia de patrones estructurales en forma de un "
"*match statement* and *case statements* de patrones con acciones asociadas. "
"Los patrones constan de secuencias, asignaciones, tipos de datos primitivos "
"e instancias de clases. La coincidencia de patrones permite a los programas "
"extraer información de tipos de datos complejos, ramificar la estructura de "
"los datos y aplicar acciones específicas basadas en diferentes formas de "
"datos."

#: ../Doc/whatsnew/3.10.rst:419
msgid "Syntax and operations"
msgstr "Sintaxis y operaciones"

#: ../Doc/whatsnew/3.10.rst:421
msgid "The generic syntax of pattern matching is::"
msgstr "La sintaxis genérica de la coincidencia de patrones es:"

#: ../Doc/whatsnew/3.10.rst:433
msgid ""
"A match statement takes an expression and compares its value to successive "
"patterns given as one or more case blocks.  Specifically, pattern matching "
"operates by:"
msgstr ""
"Una declaración de coincidencia toma una expresión y compara su valor con "
"los patrones sucesivos dados como uno o más bloques de casos. "
"Específicamente, la coincidencia de patrones funciona mediante:"

#: ../Doc/whatsnew/3.10.rst:437
msgid "using data with type and shape (the ``subject``)"
msgstr "usando datos con tipo y forma (el ``subject``)"

#: ../Doc/whatsnew/3.10.rst:438
msgid "evaluating the ``subject`` in the ``match`` statement"
msgstr "evaluar el ``subject`` en la declaración ``match``"

#: ../Doc/whatsnew/3.10.rst:439
msgid ""
"comparing the subject with each pattern in a ``case`` statement from top to "
"bottom until a match is confirmed."
msgstr ""
"comparar el sujeto con cada patrón en una declaración ``case`` de arriba a "
"abajo hasta que se confirme una coincidencia."

#: ../Doc/whatsnew/3.10.rst:441
msgid "executing the action associated with the pattern of the confirmed match"
msgstr ""
"ejecutar la acción asociada con el patrón de la coincidencia confirmada"

#: ../Doc/whatsnew/3.10.rst:443
msgid ""
"If an exact match is not confirmed, the last case, a wildcard ``_``, if "
"provided, will be used as the matching case. If an exact match is not "
"confirmed and a wildcard case does not exist, the entire match block is a no-"
"op."
msgstr ""
"Si no se confirma una coincidencia exacta, el último caso, un comodín ``_``, "
"si se proporciona, se utilizará como caso coincidente. Si no se confirma una "
"coincidencia exacta y no existe un comodín, todo el bloque de coincidencias "
"es inactivo."

#: ../Doc/whatsnew/3.10.rst:449
msgid "Declarative approach"
msgstr "Enfoque declarativo"

#: ../Doc/whatsnew/3.10.rst:451
msgid ""
"Readers may be aware of pattern matching through the simple example of "
"matching a subject (data object) to a literal (pattern) with the switch "
"statement found in C, Java or JavaScript (and many other languages). Often "
"the switch statement is used for comparison of an object/expression with "
"case statements containing literals."
msgstr ""
"Los lectores pueden ser conscientes de la coincidencia de patrones a través "
"del simple ejemplo de hacer coincidir un sujeto (objeto de datos) con un "
"literal (patrón) con la declaración de cambio que se encuentra en C, Java o "
"JavaScript (y muchos otros lenguajes). A menudo, la declaración de cambio se "
"utiliza para comparar un objeto / expresión con declaraciones de casos que "
"contienen literales."

#: ../Doc/whatsnew/3.10.rst:457
msgid ""
"More powerful examples of pattern matching can be found in languages such as "
"Scala and Elixir. With structural pattern matching, the approach is "
"\"declarative\" and explicitly states the conditions (the patterns) for data "
"to match."
msgstr ""
"Se pueden encontrar ejemplos más poderosos de coincidencia de patrones en "
"lenguajes como Scala y Elixir. Con la coincidencia de patrones "
"estructurales, el enfoque es \"declarativo\" y establece explícitamente las "
"condiciones (los patrones) para que los datos coincidan."

#: ../Doc/whatsnew/3.10.rst:461
msgid ""
"While an \"imperative\" series of instructions using nested \"if\" "
"statements could be used to accomplish something similar to structural "
"pattern matching, it is less clear than the \"declarative\" approach. "
"Instead the \"declarative\" approach states the conditions to meet for a "
"match and is more readable through its explicit patterns. While structural "
"pattern matching can be used in its simplest form comparing a variable to a "
"literal in a case statement, its true value for Python lies in its handling "
"of the subject's type and shape."
msgstr ""
"Si bien una serie \"imperativa\" de instrucciones que utilizan declaraciones "
"\"if\" anidadas podría usarse para lograr algo similar a la coincidencia de "
"patrones estructurales, es menos claro que el enfoque \"declarativo\". En "
"cambio, el enfoque \"declarativo\" establece las condiciones que se deben "
"cumplir para una coincidencia y es más legible a través de sus patrones "
"explícitos. Si bien la coincidencia de patrones estructurales se puede usar "
"en su forma más simple comparando una variable con un literal en una "
"declaración de caso, su verdadero valor para Python radica en su manejo del "
"tipo y la forma del sujeto."

#: ../Doc/whatsnew/3.10.rst:470
msgid "Simple pattern: match to a literal"
msgstr "Patrón simple: coincidir con un literal"

#: ../Doc/whatsnew/3.10.rst:472
msgid ""
"Let's look at this example as pattern matching in its simplest form: a "
"value, the subject, being matched to several literals, the patterns. In the "
"example below, ``status`` is the subject of the match statement. The "
"patterns are each of the case statements, where literals represent request "
"status codes. The associated action to the case is executed after a match::"
msgstr ""
"Veamos este ejemplo como coincidencia de patrones en su forma más simple: un "
"valor, el sujeto, se empareja con varios literales, los patrones. En el "
"siguiente ejemplo, ``status`` es el tema de la declaración de coincidencia. "
"Los patrones son cada una de las declaraciones de casos, donde los literales "
"representan códigos de estado de solicitud. La acción asociada al caso se "
"ejecuta después de una coincidencia:"

#: ../Doc/whatsnew/3.10.rst:489
msgid ""
"If the above function is passed a ``status`` of 418, \"I'm a teapot\" is "
"returned. If the above function is passed a ``status`` of 500, the case "
"statement with ``_`` will match as a wildcard, and \"Something's wrong with "
"the internet\" is returned. Note the last block: the variable name, ``_``, "
"acts as a *wildcard* and insures the subject will always match. The use of "
"``_`` is optional."
msgstr ""
"Si a la función anterior se le pasa un ``status`` de 418, se devuelve \"Soy "
"una tetera\". Si a la función anterior se le pasa un ``status`` de 500, la "
"declaración de caso con ``_`` coincidirá como un comodín y se devuelve "
"\"Algo anda mal con Internet\". Tenga en cuenta el último bloque: el nombre "
"de la variable, ``_``, actúa como *wildcard* y asegura que el sujeto siempre "
"coincidirá. El uso de ``_`` es opcional."

#: ../Doc/whatsnew/3.10.rst:496
msgid ""
"You can combine several literals in a single pattern using ``|`` (\"or\")::"
msgstr ""
"Puede combinar varios literales en un solo patrón usando ``|`` (\"o\") ::"

#: ../Doc/whatsnew/3.10.rst:502
msgid "Behavior without the wildcard"
msgstr "Comportamiento sin el comodín"

#: ../Doc/whatsnew/3.10.rst:504
msgid ""
"If we modify the above example by removing the last case block, the example "
"becomes::"
msgstr ""
"Si modificamos el ejemplo anterior eliminando el último bloque de caso, el "
"ejemplo se convierte en:"

#: ../Doc/whatsnew/3.10.rst:516
msgid ""
"Without the use of ``_`` in a case statement, a match may not exist. If no "
"match exists, the behavior is a no-op. For example, if ``status`` of 500 is "
"passed, a no-op occurs."
msgstr ""
"Sin el uso de ``_`` en una declaración de caso, es posible que no exista una "
"coincidencia. Si no existe ninguna coincidencia, el comportamiento es "
"inactivo. Por ejemplo, si se pasa ``status`` de 500, se produce una no "
"operación."

#: ../Doc/whatsnew/3.10.rst:521
msgid "Patterns with a literal and variable"
msgstr "Patrones con un literal y una variable"

#: ../Doc/whatsnew/3.10.rst:523
msgid ""
"Patterns can look like unpacking assignments, and a pattern may be used to "
"bind variables. In this example, a data point can be unpacked to its x-"
"coordinate and y-coordinate::"
msgstr ""
"Los patrones pueden verse como asignaciones de desempaquetado y se puede "
"usar un patrón para vincular variables. En este ejemplo, un punto de datos "
"se puede descomprimir en su coordenada xy coordenada y:"

#: ../Doc/whatsnew/3.10.rst:540
msgid ""
"The first pattern has two literals, ``(0, 0)``, and may be thought of as an "
"extension of the literal pattern shown above. The next two patterns combine "
"a literal and a variable, and the variable *binds* a value from the subject "
"(``point``).  The fourth pattern captures two values, which makes it "
"conceptually similar to the unpacking assignment ``(x, y) = point``."
msgstr ""
"El primer patrón tiene dos literales, ``(0, 0)``, y se puede considerar como "
"una extensión del patrón literal que se muestra arriba. Los siguientes dos "
"patrones combinan un literal y una variable, y la variable *binds* un valor "
"del sujeto (``point``). El cuarto patrón captura dos valores, lo que lo hace "
"conceptualmente similar a la asignación de desembalaje ``(x, y) = point``."

#: ../Doc/whatsnew/3.10.rst:547
msgid "Patterns and classes"
msgstr "Patrones y clases"

#: ../Doc/whatsnew/3.10.rst:549
msgid ""
"If you are using classes to structure your data, you can use as a pattern "
"the class name followed by an argument list resembling a constructor. This "
"pattern has the ability to capture class attributes into variables::"
msgstr ""
"Si está usando clases para estructurar sus datos, puede usar como patrón el "
"nombre de la clase seguido de una lista de argumentos que se asemeja a un "
"constructor. Este patrón tiene la capacidad de capturar atributos de clase "
"en variables:"

#: ../Doc/whatsnew/3.10.rst:571
msgid "Patterns with positional parameters"
msgstr "Patrones con parámetros posicionales"

#: ../Doc/whatsnew/3.10.rst:573
msgid ""
"You can use positional parameters with some builtin classes that provide an "
"ordering for their attributes (e.g. dataclasses). You can also define a "
"specific position for attributes in patterns by setting the "
"``__match_args__`` special attribute in your classes. If it's set to (\"x\", "
"\"y\"), the following patterns are all equivalent (and all bind the ``y`` "
"attribute to the ``var`` variable)::"
msgstr ""
"Puede usar parámetros posicionales con algunas clases integradas que "
"proporcionan un orden para sus atributos (por ejemplo, clases de datos). "
"También puede definir una posición específica para atributos en patrones "
"configurando el atributo especial ``__match_args__`` en sus clases. Si se "
"establece en (\"x\", \"y\"), los siguientes patrones son todos equivalentes "
"(y todos vinculan el atributo ``y`` a la variable ``var``):"

#: ../Doc/whatsnew/3.10.rst:585
msgid "Nested patterns"
msgstr "Patrones anidados"

#: ../Doc/whatsnew/3.10.rst:587
msgid ""
"Patterns can be arbitrarily nested.  For example, if our data is a short "
"list of points, it could be matched like this::"
msgstr ""
"Los patrones se pueden anidar arbitrariamente. Por ejemplo, si nuestros "
"datos son una lista corta de puntos, podrían coincidir así:"

#: ../Doc/whatsnew/3.10.rst:603
msgid "Complex patterns and the wildcard"
msgstr "Patrones complejos y el comodín"

#: ../Doc/whatsnew/3.10.rst:605
msgid ""
"To this point, the examples have used ``_`` alone in the last case "
"statement. A wildcard can be used in more complex patterns, such as "
"``('error', code, _)``. For example::"
msgstr ""
"Hasta este punto, los ejemplos han utilizado ``_`` solo en la última "
"declaración de caso. Se puede utilizar un comodín en patrones más complejos, "
"como ``('error', code, _)``. Por ejemplo::"

#: ../Doc/whatsnew/3.10.rst:615
msgid ""
"In the above case, ``test_variable`` will match for ('error', code, 100) and "
"('error', code, 800)."
msgstr ""
"En el caso anterior, ``test_variable`` coincidirá con ('error', código, 100) "
"y ('error', código, 800)."

#: ../Doc/whatsnew/3.10.rst:619
msgid "Guard"
msgstr "Guardia"

#: ../Doc/whatsnew/3.10.rst:621
msgid ""
"We can add an ``if`` clause to a pattern, known as a \"guard\".  If the "
"guard is false, ``match`` goes on to try the next case block.  Note that "
"value capture happens before the guard is evaluated::"
msgstr ""
"Podemos agregar una cláusula ``if`` a un patrón, conocido como \"guardia\". "
"Si la guardia es falsa, ``match`` pasa a probar el siguiente bloque de caso. "
"Tenga en cuenta que la captura de valor ocurre antes de que se evalúe la "
"guardia:"

#: ../Doc/whatsnew/3.10.rst:632
msgid "Other Key Features"
msgstr "Otras características clave"

#: ../Doc/whatsnew/3.10.rst:634
msgid "Several other key features:"
msgstr "Varias otras características clave:"

#: ../Doc/whatsnew/3.10.rst:636
msgid ""
"Like unpacking assignments, tuple and list patterns have exactly the same "
"meaning and actually match arbitrary sequences. Technically, the subject "
"must be a sequence. Therefore, an important exception is that patterns don't "
"match iterators. Also, to prevent a common mistake, sequence patterns don't "
"match strings."
msgstr ""
"Al igual que las asignaciones de desempaquetado, los patrones de tupla y "
"lista tienen exactamente el mismo significado y en realidad coinciden con "
"secuencias arbitrarias. Técnicamente, el tema debe ser una secuencia. Por lo "
"tanto, una excepción importante es que los patrones no coinciden con los "
"iteradores. Además, para evitar un error común, los patrones de secuencia no "
"coinciden con las cadenas."

#: ../Doc/whatsnew/3.10.rst:642
msgid ""
"Sequence patterns support wildcards: ``[x, y, *rest]`` and ``(x, y, *rest)`` "
"work similar to wildcards in unpacking assignments.  The name after ``*`` "
"may also be ``_``, so ``(x, y, *_)`` matches a sequence of at least two "
"items without binding the remaining items."
msgstr ""
"Los patrones de secuencia admiten comodines: ``[x, y, *rest]`` y ``(x, y, "
"*rest)`` funcionan de manera similar a los comodines en las asignaciones de "
"desempaquetado. El nombre después de ``*`` también puede ser ``_``, por lo "
"que ``(x, y, *_)`` coincide con una secuencia de al menos dos elementos sin "
"vincular los elementos restantes."

#: ../Doc/whatsnew/3.10.rst:647
msgid ""
"Mapping patterns: ``{\"bandwidth\": b, \"latency\": l}`` captures the "
"``\"bandwidth\"`` and ``\"latency\"`` values from a dict.  Unlike sequence "
"patterns, extra keys are ignored.  A wildcard ``**rest`` is also supported.  "
"(But ``**_`` would be redundant, so is not allowed.)"
msgstr ""
"Patrones de mapeo: ``{\"bandwidth\": b, \"latency\": l}`` captura los "
"valores ``\"bandwidth\"`` y ``\"latency\"`` de un dict. A diferencia de los "
"patrones de secuencia, las claves adicionales se ignoran. También se admite "
"un comodín ``**rest``. (Pero ``**_`` sería redundante, por lo que no está "
"permitido)."

#: ../Doc/whatsnew/3.10.rst:652
msgid "Subpatterns may be captured using the ``as`` keyword::"
msgstr "Los subpatrones se pueden capturar utilizando la palabra clave ``as``:"

#: ../Doc/whatsnew/3.10.rst:656
msgid ""
"This binds x1, y1, x2, y2 like you would expect without the ``as`` clause, "
"and p2 to the entire second item of the subject."
msgstr ""
"Esto vincula x1, y1, x2, y2 como cabría esperar sin la cláusula ``as`` y p2 "
"a todo el segundo elemento del tema."

#: ../Doc/whatsnew/3.10.rst:659
msgid ""
"Most literals are compared by equality. However, the singletons ``True``, "
"``False`` and ``None`` are compared by identity."
msgstr ""
"La mayoría de los literales se comparan por igualdad. Sin embargo, los "
"singleton ``True``, ``False`` y ``None`` se comparan por identidad."

#: ../Doc/whatsnew/3.10.rst:662
msgid ""
"Named constants may be used in patterns.  These named constants must be "
"dotted names to prevent the constant from being interpreted as a capture "
"variable::"
msgstr ""
"Las constantes con nombre se pueden usar en patrones. Estas constantes "
"nombradas deben ser nombres con puntos para evitar que la constante se "
"interprete como una variable de captura:"

#: ../Doc/whatsnew/3.10.rst:680
msgid ""
"For the full specification see :pep:`634`.  Motivation and rationale are in :"
"pep:`635`, and a longer tutorial is in :pep:`636`."
msgstr ""
"Para obtener la especificación completa, consulte :pep:`634`. La motivación "
"y el fundamento están en :pep:`635`, y un tutorial más largo está en :pep:"
"`636`."

#: ../Doc/whatsnew/3.10.rst:687
msgid "Optional ``EncodingWarning`` and ``encoding=\"locale\"`` option"
msgstr "Opción opcional ``EncodingWarning`` y ``encoding=\"locale\"``"

#: ../Doc/whatsnew/3.10.rst:689
msgid ""
"The default encoding of :class:`TextIOWrapper` and :func:`open` is platform "
"and locale dependent. Since UTF-8 is used on most Unix platforms, omitting "
"``encoding`` option when opening UTF-8 files (e.g. JSON, YAML, TOML, "
"Markdown) is a very common bug. For example::"
msgstr ""
"La codificación predeterminada de :class:`TextIOWrapper` y :func:`open` "
"depende de la plataforma y la configuración regional. Dado que UTF-8 se usa "
"en la mayoría de las plataformas Unix, omitir la opción ``encoding`` al "
"abrir archivos UTF-8 (por ejemplo, JSON, YAML, TOML, Markdown) es un error "
"muy común. Por ejemplo::"

#: ../Doc/whatsnew/3.10.rst:698
msgid ""
"To find this type of bug, an optional ``EncodingWarning`` is added. It is "
"emitted when :data:`sys.flags.warn_default_encoding <sys.flags>` is true and "
"locale-specific default encoding is used."
msgstr ""
"Para encontrar este tipo de error, se agrega un ``EncodingWarning`` "
"opcional. Se emite cuando :data:`sys.flags.warn_default_encoding <sys."
"flags>` es verdadero y se utiliza la codificación predeterminada específica "
"de la configuración regional."

#: ../Doc/whatsnew/3.10.rst:702
msgid ""
"``-X warn_default_encoding`` option and :envvar:`PYTHONWARNDEFAULTENCODING` "
"are added to enable the warning."
msgstr ""
"Se agregan la opción ``-X warn_default_encoding`` y :envvar:"
"`PYTHONWARNDEFAULTENCODING` para habilitar la advertencia."

#: ../Doc/whatsnew/3.10.rst:705
msgid "See :ref:`io-text-encoding` for more information."
msgstr "Consulte :ref:`io-text-encoding` para obtener más información."

#: ../Doc/whatsnew/3.10.rst:710
msgid "New Features Related to Type Hints"
msgstr "Nuevas funciones relacionadas con las sugerencias de tipos"

#: ../Doc/whatsnew/3.10.rst:712
msgid ""
"This section covers major changes affecting :pep:`484` type hints and the :"
"mod:`typing` module."
msgstr ""
"Esta sección cubre los cambios importantes que afectan a las sugerencias de "
"tipo :pep:`484` y al módulo :mod:`typing`."

#: ../Doc/whatsnew/3.10.rst:717
msgid "PEP 604: New Type Union Operator"
msgstr "PEP 604: Nuevo tipo de operador unión"

#: ../Doc/whatsnew/3.10.rst:719
msgid ""
"A new type union operator was introduced which enables the syntax ``X | Y``. "
"This provides a cleaner way of expressing 'either type X or type Y' instead "
"of using :data:`typing.Union`, especially in type hints."
msgstr ""
"Se introdujo un nuevo operador de unión de tipos que habilita la sintaxis "
"``X | Y``. Esto proporciona una forma más limpia de expresar 'tipo X o tipo "
"Y' en lugar de usar :data:`typing.Union`, especialmente en sugerencias de "
"tipo."

#: ../Doc/whatsnew/3.10.rst:723
msgid ""
"In previous versions of Python, to apply a type hint for functions accepting "
"arguments of multiple types, :data:`typing.Union` was used::"
msgstr ""
"En versiones anteriores de Python, para aplicar una sugerencia de tipo para "
"funciones que aceptan argumentos de múltiples tipos, se usó :data:`typing."
"Union`:"

#: ../Doc/whatsnew/3.10.rst:730
msgid "Type hints can now be written in a more succinct manner::"
msgstr ""
"Las sugerencias de tipo ahora se pueden escribir de una manera más sucinta:"

#: ../Doc/whatsnew/3.10.rst:736
msgid ""
"This new syntax is also accepted as the second argument to :func:"
"`isinstance` and :func:`issubclass`::"
msgstr ""
"Esta nueva sintaxis también se acepta como segundo argumento para :func:"
"`isinstance` y :func:`issubclass`:"

#: ../Doc/whatsnew/3.10.rst:742
msgid "See :ref:`types-union` and :pep:`604` for more details."
msgstr "Consulte :ref:`types-union` y :pep:`604` para obtener más detalles."

#: ../Doc/whatsnew/3.10.rst:744
msgid ""
"(Contributed by Maggie Moss and Philippe Prados in :issue:`41428`, with "
"additions by Yurii Karabas and Serhiy Storchaka in :issue:`44490`.)"
msgstr ""
"(Contribuido por Maggie Moss y Philippe Prados en :issue:`41428`, con "
"adiciones de Yurii Karabas y Serhiy Storchaka en :issue:`44490`.)"

#: ../Doc/whatsnew/3.10.rst:749
msgid "PEP 612: Parameter Specification Variables"
msgstr "PEP 612: Variables de especificación de parámetros"

#: ../Doc/whatsnew/3.10.rst:751
msgid ""
"Two new options to improve the information provided to static type checkers "
"for :pep:`484`\\ 's ``Callable`` have been added to the :mod:`typing` module."
msgstr ""
"Se han agregado al módulo :mod:`typing` dos nuevas opciones para mejorar la "
"información proporcionada a los verificadores de tipo estático para :pep:"
"`484` \\ 's ``Callable``."

#: ../Doc/whatsnew/3.10.rst:754
msgid ""
"The first is the parameter specification variable.  They are used to forward "
"the parameter types of one callable to another callable -- a pattern "
"commonly found in higher order functions and decorators.  Examples of usage "
"can be found in :class:`typing.ParamSpec`. Previously, there was no easy way "
"to type annotate dependency of parameter types in such a precise manner."
msgstr ""
"La primera es la variable de especificación de parámetros. Se utilizan para "
"reenviar los tipos de parámetros de un invocable a otro invocable, un patrón "
"que se encuentra comúnmente en funciones y decoradores de orden superior. Se "
"pueden encontrar ejemplos de uso en :class:`typing.ParamSpec`. "
"Anteriormente, no había una manera fácil de escribir anotar la dependencia "
"de los tipos de parámetros de una manera tan precisa."

#: ../Doc/whatsnew/3.10.rst:760
msgid ""
"The second option is the new ``Concatenate`` operator. It's used in "
"conjunction with parameter specification variables to type annotate a higher "
"order callable which adds or removes parameters of another callable.  "
"Examples of usage can be found in :class:`typing.Concatenate`."
msgstr ""
"La segunda opción es el nuevo operador ``Concatenate``. Se usa junto con las "
"variables de especificación de parámetros para escribir anotar un invocable "
"de orden superior que agrega o elimina parámetros de otro invocable. Se "
"pueden encontrar ejemplos de uso en :class:`typing.Concatenate`."

#: ../Doc/whatsnew/3.10.rst:765
msgid ""
"See :class:`typing.Callable`, :class:`typing.ParamSpec`, :class:`typing."
"Concatenate`, :class:`typing.ParamSpecArgs`, :class:`typing."
"ParamSpecKwargs`, and :pep:`612` for more details."
msgstr ""
"Consulte :class:`typing.Callable`, :class:`typing.ParamSpec`, :class:`typing."
"Concatenate`, :class:`typing.ParamSpecArgs`, :class:`typing.ParamSpecKwargs` "
"y :pep:`612` para obtener más detalles."

#: ../Doc/whatsnew/3.10.rst:769
msgid ""
"(Contributed by Ken Jin in :issue:`41559`, with minor enhancements by Jelle "
"Zijlstra in :issue:`43783`.  PEP written by Mark Mendoza.)"
msgstr ""
"(Contribuido por Ken Jin en :issue:`41559`, con pequeñas mejoras de Jelle "
"Zijlstra en :issue:`43783`. PEP escrito por Mark Mendoza.)"

#: ../Doc/whatsnew/3.10.rst:774
msgid "PEP 613: TypeAlias"
msgstr "PEP 613: TypeAlias"

#: ../Doc/whatsnew/3.10.rst:776
msgid ""
":pep:`484` introduced the concept of type aliases, only requiring them to be "
"top-level unannotated assignments. This simplicity sometimes made it "
"difficult for type checkers to distinguish between type aliases and ordinary "
"assignments, especially when forward references or invalid types were "
"involved. Compare::"
msgstr ""
":pep:`484` introdujo el concepto de alias de tipo, solo requiriendo que sean "
"asignaciones no anotadas de nivel superior. Esta simplicidad a veces "
"dificultaba que los verificadores de tipos distinguieran entre alias de "
"tipos y asignaciones ordinarias, especialmente cuando se trataba de "
"referencias directas o tipos no válidos. Comparar::"

#: ../Doc/whatsnew/3.10.rst:784
msgid ""
"Now the :mod:`typing` module has a special value :data:`TypeAlias` which "
"lets you declare type aliases more explicitly::"
msgstr ""
"Ahora el módulo :mod:`typing` tiene un valor especial :data:`TypeAlias` que "
"le permite declarar los alias de tipo de forma más explícita:"

#: ../Doc/whatsnew/3.10.rst:790
msgid "See :pep:`613` for more details."
msgstr "Consulte :pep:`613` para obtener más detalles."

#: ../Doc/whatsnew/3.10.rst:792
msgid "(Contributed by Mikhail Golubev in :issue:`41923`.)"
msgstr "(Contribuido por Mikhail Golubev en :issue:`41923`.)"

#: ../Doc/whatsnew/3.10.rst:795
msgid "PEP 647: User-Defined Type Guards"
msgstr "PEP 647: protectores de tipo definidos por el usuario"

#: ../Doc/whatsnew/3.10.rst:797
msgid ""
":data:`TypeGuard` has been added to the :mod:`typing` module to annotate "
"type guard functions and improve information provided to static type "
"checkers during type narrowing.  For more information, please see :data:"
"`TypeGuard`\\ 's documentation, and :pep:`647`."
msgstr ""
"Se ha agregado :data:`TypeGuard` al módulo :mod:`typing` para anotar las "
"funciones de protección de tipos y mejorar la información proporcionada a "
"los verificadores de tipos estáticos durante el estrechamiento de tipos. "
"Para obtener más información, consulte la documentación de :data:`TypeGuard` "
"y :pep:`647`."

#: ../Doc/whatsnew/3.10.rst:802
msgid ""
"(Contributed by Ken Jin and Guido van Rossum in :issue:`43766`. PEP written "
"by Eric Traut.)"
msgstr ""
"(Contribuido por Ken Jin y Guido van Rossum en :issue:`43766`. PEP escrito "
"por Eric Traut.)"

#: ../Doc/whatsnew/3.10.rst:806
msgid "Other Language Changes"
msgstr "Otros cambios de idioma"

#: ../Doc/whatsnew/3.10.rst:808
msgid ""
"The :class:`int` type has a new method :meth:`int.bit_count`, returning the "
"number of ones in the binary expansion of a given integer, also known as the "
"population count. (Contributed by Niklas Fiekas in :issue:`29882`.)"
msgstr ""
"El tipo :class:`int` tiene un nuevo método :meth:`int.bit_count`, que "
"devuelve el número de unos en la expansión binaria de un entero dado, "
"también conocido como recuento de población. (Contribuido por Niklas Fiekas "
"en :issue:`29882`.)"

#: ../Doc/whatsnew/3.10.rst:812
msgid ""
"The views returned by :meth:`dict.keys`, :meth:`dict.values` and :meth:`dict."
"items` now all have a ``mapping`` attribute that gives a :class:`types."
"MappingProxyType` object wrapping the original dictionary. (Contributed by "
"Dennis Sweeney in :issue:`40890`.)"
msgstr ""
"Las vistas devueltas por :meth:`dict.keys`, :meth:`dict.values` y :meth:"
"`dict.items` ahora tienen todas un atributo ``mapping`` que proporciona un "
"objeto :class:`types.MappingProxyType` que envuelve el diccionario original. "
"(Contribuido por Dennis Sweeney en :issue:`40890`.)"

#: ../Doc/whatsnew/3.10.rst:817
msgid ""
":pep:`618`: The :func:`zip` function now has an optional ``strict`` flag, "
"used to require that all the iterables have an equal length."
msgstr ""
":pep:`618`: La función :func:`zip` ahora tiene un indicador ``strict`` "
"opcional, que se utiliza para requerir que todos los iterables tengan la "
"misma longitud."

#: ../Doc/whatsnew/3.10.rst:820
msgid ""
"Builtin and extension functions that take integer arguments no longer "
"accept :class:`~decimal.Decimal`\\ s, :class:`~fractions.Fraction`\\ s and "
"other objects that can be converted to integers only with a loss (e.g. that "
"have the :meth:`~object.__int__` method but do not have the :meth:`~object."
"__index__` method). (Contributed by Serhiy Storchaka in :issue:`37999`.)"
msgstr ""
"Las funciones integradas y de extensión que toman argumentos enteros ya no "
"aceptan :class:`~decimal.Decimal` \\ s, :class:`~fractions.Fraction` \\ sy "
"otros objetos que se pueden convertir a números enteros solo con una pérdida "
"(por ejemplo, que tienen el método :meth:`~object.__int__` pero no tienen el "
"método :meth:`~object.__index__`). (Contribuido por Serhiy Storchaka en :"
"issue:`37999`.)"

#: ../Doc/whatsnew/3.10.rst:827
msgid ""
"If :func:`object.__ipow__` returns :const:`NotImplemented`, the operator "
"will correctly fall back to :func:`object.__pow__` and :func:`object."
"__rpow__` as expected. (Contributed by Alex Shkop in :issue:`38302`.)"
msgstr ""
"Si :func:`object.__ipow__` devuelve :const:`NotImplemented`, el operador "
"retrocederá correctamente a :func:`object.__pow__` y :func:`object.__rpow__` "
"como se esperaba. (Contribuido por Alex Shkop en :issue:`38302`.)"

#: ../Doc/whatsnew/3.10.rst:831
msgid ""
"Assignment expressions can now be used unparenthesized within set literals "
"and set comprehensions, as well as in sequence indexes (but not slices)."
msgstr ""
"Las expresiones de asignación ahora se pueden usar sin paréntesis dentro de "
"literales de conjuntos y comprensiones de conjuntos, así como en índices de "
"secuencia (pero no por sectores)."

#: ../Doc/whatsnew/3.10.rst:834
msgid ""
"Functions have a new ``__builtins__`` attribute which is used to look for "
"builtin symbols when a function is executed, instead of looking into "
"``__globals__['__builtins__']``. The attribute is initialized from "
"``__globals__[\"__builtins__\"]`` if it exists, else from the current "
"builtins. (Contributed by Mark Shannon in :issue:`42990`.)"
msgstr ""
"Las funciones tienen un nuevo atributo ``__builtins__`` que se usa para "
"buscar símbolos incorporados cuando se ejecuta una función, en lugar de "
"buscar en ``__globals__['__builtins__']``. El atributo se inicializa desde "
"``__globals__[\"__builtins__\"]`` si existe, de lo contrario desde las "
"incorporaciones actuales. (Contribuido por Mark Shannon en :issue:`42990`.)"

#: ../Doc/whatsnew/3.10.rst:840
msgid ""
"Two new builtin functions -- :func:`aiter` and :func:`anext` have been added "
"to provide asynchronous counterparts to :func:`iter` and :func:`next`, "
"respectively. (Contributed by Joshua Bronson, Daniel Pope, and Justin Wang "
"in :issue:`31861`.)"
msgstr ""
"Se han agregado dos nuevas funciones integradas: :func:`aiter` y :func:"
"`anext` para proporcionar contrapartes asíncronas a :func:`iter` y :func:"
"`next`, respectivamente. (Contribuido por Joshua Bronson, Daniel Pope y "
"Justin Wang en :issue:`31861`.)"

#: ../Doc/whatsnew/3.10.rst:845
msgid ""
"Static methods (:func:`@staticmethod <staticmethod>`) and class methods (:"
"func:`@classmethod <classmethod>`) now inherit the method attributes "
"(``__module__``, ``__name__``, ``__qualname__``, ``__doc__``, "
"``__annotations__``) and have a new ``__wrapped__`` attribute. Moreover, "
"static methods are now callable as regular functions. (Contributed by Victor "
"Stinner in :issue:`43682`.)"
msgstr ""
"Los métodos estáticos (:func:`@staticmethod <staticmethod>`) y los métodos "
"de clase (:func:`@classmethod <classmethod>`) ahora heredan los atributos "
"del método (``__module__``, ``__name__``, ``__qualname__``, ``__doc__``, "
"``__annotations__``) y tienen un nuevo atributo ``__wrapped__``. Además, los "
"métodos estáticos ahora se pueden llamar como funciones regulares. "
"(Contribuido por Victor Stinner en :issue:`43682`.)"

#: ../Doc/whatsnew/3.10.rst:852
msgid ""
"Annotations for complex targets (everything beside ``simple name`` targets "
"defined by :pep:`526`) no longer cause any runtime effects with ``from "
"__future__ import annotations``. (Contributed by Batuhan Taskaya in :issue:"
"`42737`.)"
msgstr ""
"Las anotaciones para objetivos complejos (todo junto a los objetivos "
"``simple name`` definidos por :pep:`526`) ya no causan ningún efecto de "
"tiempo de ejecución con ``from __future__ import annotations``. (Contribuido "
"por Batuhan Taskaya en :issue:`42737`.)"

#: ../Doc/whatsnew/3.10.rst:856
msgid ""
"Class and module objects now lazy-create empty annotations dicts on demand. "
"The annotations dicts are stored in the object’s ``__dict__`` for backwards "
"compatibility.  This improves the best practices for working with "
"``__annotations__``; for more information, please see :ref:`annotations-"
"howto`. (Contributed by Larry Hastings in :issue:`43901`.)"
msgstr ""
"Los objetos de clase y módulo ahora crean de forma perezosa anotaciones "
"vacías dictados a pedido. Los dictados de anotaciones se almacenan en el "
"``__dict__`` del objeto para compatibilidad con versiones anteriores. Esto "
"mejora las mejores prácticas para trabajar con ``__annotations__``; para "
"obtener más información, consulte :ref:`annotations-howto`. (Contribuido por "
"Larry Hastings en :issue:`43901`.)"

#: ../Doc/whatsnew/3.10.rst:863
msgid ""
"Annotations consist of ``yield``, ``yield from``, ``await`` or named "
"expressions are now forbidden under ``from __future__ import annotations`` "
"due to their side effects. (Contributed by Batuhan Taskaya in :issue:"
"`42725`.)"
msgstr ""
"Las anotaciones consisten en ``yield``, ``yield from``, ``await`` o "
"expresiones con nombre ahora están prohibidas bajo ``from __future__ import "
"annotations`` debido a sus efectos secundarios. (Contribuido por Batuhan "
"Taskaya en :issue:`42725`.)"

#: ../Doc/whatsnew/3.10.rst:868
msgid ""
"Usage of unbound variables, ``super()`` and other expressions that might "
"alter the processing of symbol table as annotations are now rendered "
"effectless under ``from __future__ import annotations``. (Contributed by "
"Batuhan Taskaya in :issue:`42725`.)"
msgstr ""
"El uso de variables independientes, ``super()`` y otras expresiones que "
"podrían alterar el procesamiento de la tabla de símbolos como anotaciones "
"ahora no tienen efecto bajo ``from __future__ import annotations``. "
"(Contribuido por Batuhan Taskaya en :issue:`42725`.)"

#: ../Doc/whatsnew/3.10.rst:873
msgid ""
"Hashes of NaN values of both :class:`float` type and :class:`decimal."
"Decimal` type now depend on object identity. Formerly, they always hashed to "
"``0`` even though NaN values are not equal to one another. This caused "
"potentially quadratic runtime behavior due to excessive hash collisions when "
"creating dictionaries and sets containing multiple NaNs. (Contributed by "
"Raymond Hettinger in :issue:`43475`.)"
msgstr ""
"Los valores hash de NaN tanto del tipo :class:`float` como del tipo :class:"
"`decimal.Decimal` ahora dependen de la identidad del objeto. Anteriormente, "
"siempre tenían hash en ``0`` aunque los valores de NaN no son iguales entre "
"sí. Esto provocó un comportamiento de tiempo de ejecución potencialmente "
"cuadrático debido a colisiones de hash excesivas al crear diccionarios y "
"conjuntos que contienen varios NaN. (Contribuido por Raymond Hettinger en :"
"issue:`43475`.)"

#: ../Doc/whatsnew/3.10.rst:880
msgid ""
"A :exc:`SyntaxError` (instead of a :exc:`NameError`) will be raised when "
"deleting the :const:`__debug__` constant.  (Contributed by Dong-hee Na in :"
"issue:`45000`.)"
msgstr ""
"Un :exc:`SyntaxError` (en lugar de una constante :exc:`NameError`) se "
"lanzara cuando se elimine la constante :const:`__debug__`. (Contribuido por "
"Dong-hee Na en :issue:`45000`)."

#: ../Doc/whatsnew/3.10.rst:883
msgid ""
":exc:`SyntaxError` exceptions now have ``end_lineno`` and ``end_offset`` "
"attributes.  They will be ``None`` if not determined. (Contributed by Pablo "
"Galindo in :issue:`43914`.)"
msgstr ""
"Las excepciones :exc:`SyntaxError` ahora tienen atributos ``end_lineno`` y "
"``end_offset``. Serán ``None`` si no se determinan. (Contribuido por Pablo "
"Galindo en :issue:`43914`.)"

#: ../Doc/whatsnew/3.10.rst:888
msgid "New Modules"
msgstr "Nuevos módulos"

#: ../Doc/whatsnew/3.10.rst:890
msgid "None yet."
msgstr "Ninguno todavía."

#: ../Doc/whatsnew/3.10.rst:894
msgid "Improved Modules"
msgstr "Módulos mejorados"

#: ../Doc/whatsnew/3.10.rst:897
msgid "asyncio"
msgstr "asyncio"

#: ../Doc/whatsnew/3.10.rst:899
msgid ""
"Add missing :meth:`~asyncio.events.AbstractEventLoop."
"connect_accepted_socket` method. (Contributed by Alex Grönholm in :issue:"
"`41332`.)"
msgstr ""
"Agregue el método :meth:`~asyncio.events.AbstractEventLoop."
"connect_accepted_socket` faltante. (Contribuido por Alex Grönholm en :issue:"
"`41332`.)"

#: ../Doc/whatsnew/3.10.rst:904
msgid "argparse"
msgstr "argumentar"

#: ../Doc/whatsnew/3.10.rst:906
msgid ""
"Misleading phrase \"optional arguments\" was replaced with \"options\" in "
"argparse help. Some tests might require adaptation if they rely on exact "
"output match. (Contributed by Raymond Hettinger in :issue:`9694`.)"
msgstr ""
"La frase engañosa \"argumentos opcionales\" fue reemplazada por \"opciones\" "
"en la ayuda de argparse. Algunas pruebas pueden requerir una adaptación si "
"se basan en la coincidencia exacta de la salida. (Contribuido por Raymond "
"Hettinger en :issue:`9694`.)"

#: ../Doc/whatsnew/3.10.rst:910
msgid "array"
msgstr "formación"

#: ../Doc/whatsnew/3.10.rst:912
msgid ""
"The :meth:`~array.array.index` method of :class:`array.array` now has "
"optional *start* and *stop* parameters. (Contributed by Anders Lorentsen and "
"Zackery Spytz in :issue:`31956`.)"
msgstr ""
"El método :meth:`~array.array.index` de :class:`array.array` ahora tiene "
"parámetros *start* and *stop* opcionales. (Contribuido por Anders Lorentsen "
"y Zackery Spytz en :issue:`31956`.)"

#: ../Doc/whatsnew/3.10.rst:917
msgid "asynchat, asyncore, smtpd"
msgstr "asynchat, asyncore, smtpd"

#: ../Doc/whatsnew/3.10.rst:918
msgid ""
"These modules have been marked as deprecated in their module documentation "
"since Python 3.6.  An import-time :class:`DeprecationWarning` has now been "
"added to all three of these modules."
msgstr ""
"Estos módulos se han marcado como obsoletos en la documentación del módulo "
"desde Python 3.6. Ahora se ha agregado un :class:`DeprecationWarning` en "
"tiempo de importación a estos tres módulos."

#: ../Doc/whatsnew/3.10.rst:923
msgid "base64"
msgstr "base64"

#: ../Doc/whatsnew/3.10.rst:925
msgid ""
"Add :func:`base64.b32hexencode` and :func:`base64.b32hexdecode` to support "
"the Base32 Encoding with Extended Hex Alphabet."
msgstr ""
"Agregue :func:`base64.b32hexencode` y :func:`base64.b32hexdecode` para "
"admitir la codificación Base32 con alfabeto hexadecimal extendido."

#: ../Doc/whatsnew/3.10.rst:929
msgid "bdb"
msgstr "bdb"

#: ../Doc/whatsnew/3.10.rst:931
msgid ""
"Add :meth:`~bdb.Breakpoint.clearBreakpoints` to reset all set breakpoints. "
"(Contributed by Irit Katriel in :issue:`24160`.)"
msgstr ""
"Agregue :meth:`~bdb.Breakpoint.clearBreakpoints` para restablecer todos los "
"puntos de interrupción establecidos. (Contribuido por Irit Katriel en :issue:"
"`24160`.)"

#: ../Doc/whatsnew/3.10.rst:935
msgid "bisect"
msgstr "bisecar"

#: ../Doc/whatsnew/3.10.rst:937
msgid ""
"Added the possibility of providing a *key* function to the APIs in the :mod:"
"`bisect` module. (Contributed by Raymond Hettinger in :issue:`4356`.)"
msgstr ""
"Se agregó la posibilidad de proporcionar una función *key* a las API en el "
"módulo :mod:`bisect`. (Contribuido por Raymond Hettinger en :issue:`4356`.)"

#: ../Doc/whatsnew/3.10.rst:941
msgid "codecs"
msgstr "códecs"

#: ../Doc/whatsnew/3.10.rst:943
msgid ""
"Add a :func:`codecs.unregister` function to unregister a codec search "
"function. (Contributed by Hai Shi in :issue:`41842`.)"
msgstr ""
"Agregue una función :func:`codecs.unregister` para anular el registro de una "
"función de búsqueda de códec. (Contribuido por Hai Shi en :issue:`41842`.)"

#: ../Doc/whatsnew/3.10.rst:947
msgid "collections.abc"
msgstr "colecciones.abc"

#: ../Doc/whatsnew/3.10.rst:949
msgid ""
"The ``__args__`` of the :ref:`parameterized generic <types-genericalias>` "
"for :class:`collections.abc.Callable` are now consistent with :data:`typing."
"Callable`. :class:`collections.abc.Callable` generic now flattens type "
"parameters, similar to what :data:`typing.Callable` currently does.  This "
"means that ``collections.abc.Callable[[int, str], str]`` will have "
"``__args__`` of ``(int, str, str)``; previously this was ``([int, str], "
"str)``.  To allow this change, :class:`types.GenericAlias` can now be "
"subclassed, and a subclass will be returned when subscripting the :class:"
"`collections.abc.Callable` type.  Note that a :exc:`TypeError` may be raised "
"for invalid forms of parameterizing :class:`collections.abc.Callable` which "
"may have passed silently in Python 3.9. (Contributed by Ken Jin in :issue:"
"`42195`.)"
msgstr ""
"El ``__args__`` del :ref:`parameterized generic <types-genericalias>` para :"
"class:`collections.abc.Callable` ahora es consistente con :data:`typing."
"Callable`. :class:`collections.abc.Callable` genérico ahora aplana los "
"parámetros de tipo, similar a lo que hace actualmente :data:`typing."
"Callable`. Esto significa que ``collections.abc.Callable[[int, str], str]`` "
"tendrá ``__args__`` de ``(int, str, str)``; anteriormente esto era ``([int, "
"str], str)``. Para permitir este cambio, :class:`types.GenericAlias` ahora "
"puede ser subclasificado, y se devolverá una subclase al subíndice el tipo :"
"class:`collections.abc.Callable`. Tenga en cuenta que se puede generar un :"
"exc:`TypeError` para formas no válidas de parametrizar :class:`collections."
"abc.Callable` que pueden haber pasado silenciosamente en Python 3.9. "
"(Contribuido por Ken Jin en :issue:`42195`.)"

#: ../Doc/whatsnew/3.10.rst:962
msgid "contextlib"
msgstr "contextlib"

#: ../Doc/whatsnew/3.10.rst:964
msgid ""
"Add a :func:`contextlib.aclosing` context manager to safely close async "
"generators and objects representing asynchronously released resources. "
"(Contributed by Joongi Kim and John Belmonte in :issue:`41229`.)"
msgstr ""
"Agregue un administrador de contexto :func:`contextlib.aclosing` para cerrar "
"de forma segura los generadores asíncronos y los objetos que representan "
"recursos liberados de manera asíncrona. (Contribuido por Joongi Kim y John "
"Belmonte en :issue:`41229`.)"

#: ../Doc/whatsnew/3.10.rst:968
msgid ""
"Add asynchronous context manager support to :func:`contextlib.nullcontext`. "
"(Contributed by Tom Gringauz in :issue:`41543`.)"
msgstr ""
"Agregue soporte de administrador de contexto asincrónico a :func:`contextlib."
"nullcontext`. (Contribuido por Tom Gringauz en :issue:`41543`.)"

#: ../Doc/whatsnew/3.10.rst:971
msgid ""
"Add :class:`AsyncContextDecorator`, for supporting usage of async context "
"managers as decorators."
msgstr ""
"Agregue :class:`AsyncContextDecorator`, para admitir el uso de "
"administradores de contexto asíncronos como decoradores."

#: ../Doc/whatsnew/3.10.rst:975
msgid "curses"
msgstr "maldiciones"

#: ../Doc/whatsnew/3.10.rst:977
msgid ""
"The extended color functions added in ncurses 6.1 will be used transparently "
"by :func:`curses.color_content`, :func:`curses.init_color`, :func:`curses."
"init_pair`, and :func:`curses.pair_content`. A new function, :func:`curses."
"has_extended_color_support`, indicates whether extended color support is "
"provided by the underlying ncurses library. (Contributed by Jeffrey "
"Kintscher and Hans Petter Jansson in :issue:`36982`.)"
msgstr ""
"Las funciones de color extendidas agregadas en ncurses 6.1 serán utilizadas "
"de forma transparente por :func:`curses.color_content`, :func:`curses."
"init_color`, :func:`curses.init_pair` y :func:`curses.pair_content`. Una "
"nueva función, :func:`curses.has_extended_color_support`, indica si la "
"biblioteca ncurses subyacente proporciona compatibilidad de color ampliada. "
"(Contribuido por Jeffrey Kintscher y Hans Petter Jansson en :issue:`36982`.)"

#: ../Doc/whatsnew/3.10.rst:984
msgid ""
"The ``BUTTON5_*`` constants are now exposed in the :mod:`curses` module if "
"they are provided by the underlying curses library. (Contributed by Zackery "
"Spytz in :issue:`39273`.)"
msgstr ""
"Las constantes ``BUTTON5_*`` ahora se exponen en el módulo :mod:`curses` si "
"las proporciona la biblioteca de curses subyacente. (Contribuido por Zackery "
"Spytz en :issue:`39273`.)"

#: ../Doc/whatsnew/3.10.rst:989
msgid "dataclasses"
msgstr "clases de datos"

#: ../Doc/whatsnew/3.10.rst:992
msgid "__slots__"
msgstr "__slots__"

#: ../Doc/whatsnew/3.10.rst:994
msgid ""
"Added ``slots`` parameter in :func:`dataclasses.dataclass` decorator. "
"(Contributed by Yurii Karabas in :issue:`42269`)"
msgstr ""
"Se agregó el parámetro ``slots`` en el decorador :func:`dataclasses."
"dataclass`. (Contribuido por Yurii Karabas en :issue:`42269`)"

#: ../Doc/whatsnew/3.10.rst:998
msgid "Keyword-only fields"
msgstr "Campos solo de palabras clave"

#: ../Doc/whatsnew/3.10.rst:1000
msgid ""
"dataclasses now supports fields that are keyword-only in the generated "
"__init__ method.  There are a number of ways of specifying keyword-only "
"fields."
msgstr ""
"dataclasses ahora admite campos que son solo palabras clave en el método "
"__init__ generado. Hay varias formas de especificar campos de solo palabras "
"clave."

#: ../Doc/whatsnew/3.10.rst:1004
msgid "You can say that every field is keyword-only:"
msgstr "Puede decir que todos los campos son solo palabras clave:"

#: ../Doc/whatsnew/3.10.rst:1015
msgid ""
"Both ``name`` and ``birthday`` are keyword-only parameters to the generated "
"__init__ method."
msgstr ""
"Tanto ``name`` como ``birthday`` son parámetros de solo palabras clave para "
"el método __init__ generado."

#: ../Doc/whatsnew/3.10.rst:1018
msgid "You can specify keyword-only on a per-field basis:"
msgstr "Puede especificar solo palabras clave por campo:"

#: ../Doc/whatsnew/3.10.rst:1029
msgid ""
"Here only ``birthday`` is keyword-only.  If you set ``kw_only`` on "
"individual fields, be aware that there are rules about re-ordering fields "
"due to keyword-only fields needing to follow non-keyword-only fields.  See "
"the full dataclasses documentation for details."
msgstr ""
"Aquí solo ``birthday`` es solo palabra clave. Si configura ``kw_only`` en "
"campos individuales, tenga en cuenta que existen reglas sobre el "
"reordenamiento de los campos debido a que los campos de solo palabras clave "
"deben seguir campos que no son solo de palabras clave. Consulte la "
"documentación completa de clases de datos para obtener más detalles."

#: ../Doc/whatsnew/3.10.rst:1034
msgid ""
"You can also specify that all fields following a KW_ONLY marker are keyword-"
"only.  This will probably be the most common usage:"
msgstr ""
"También puede especificar que todos los campos que siguen a un marcador "
"KW_ONLY sean solo de palabras clave. Este será probablemente el uso más "
"común:"

#: ../Doc/whatsnew/3.10.rst:1049
msgid ""
"Here, ``z`` and ``t`` are keyword-only parameters, while ``x`` and ``y`` are "
"not. (Contributed by Eric V. Smith in :issue:`43532`.)"
msgstr ""
"Aquí, ``z`` y ``t`` son parámetros de solo palabras clave, mientras que "
"``x`` y ``y`` no lo son. (Aportado por Eric V. Smith en :issue:`43532`.)"

#: ../Doc/whatsnew/3.10.rst:1056
msgid "distutils"
msgstr "distutils"

#: ../Doc/whatsnew/3.10.rst:1058
msgid ""
"The entire ``distutils`` package is deprecated, to be removed in Python "
"3.12. Its functionality for specifying package builds has already been "
"completely replaced by third-party packages ``setuptools`` and "
"``packaging``, and most other commonly used APIs are available elsewhere in "
"the standard library (such as :mod:`platform`, :mod:`shutil`, :mod:"
"`subprocess` or :mod:`sysconfig`). There are no plans to migrate any other "
"functionality from ``distutils``, and applications that are using other "
"functions should plan to make private copies of the code. Refer to :pep:"
"`632` for discussion."
msgstr ""
"Todo el paquete ``distutils`` está obsoleto y se eliminará en Python 3.12. "
"Su funcionalidad para especificar compilaciones de paquetes ya ha sido "
"completamente reemplazada por paquetes de terceros ``setuptools`` y "
"``packaging``, y la mayoría de las otras API de uso común están disponibles "
"en otras partes de la biblioteca estándar (como :mod:`platform`, :mod:"
"`shutil`, :mod:`subprocess` o :mod:`sysconfig`). No hay planes para migrar "
"ninguna otra funcionalidad de ``distutils``, y las aplicaciones que utilizan "
"otras funciones deben planificar la realización de copias privadas del "
"código. Consulte :pep:`632` para obtener más información."

#: ../Doc/whatsnew/3.10.rst:1068
msgid ""
"The ``bdist_wininst`` command deprecated in Python 3.8 has been removed. The "
"``bdist_wheel`` command is now recommended to distribute binary packages on "
"Windows. (Contributed by Victor Stinner in :issue:`42802`.)"
msgstr ""
"Se eliminó el comando ``bdist_wininst`` en desuso en Python 3.8. Ahora se "
"recomienda el comando ``bdist_wheel`` para distribuir paquetes binarios en "
"Windows. (Contribuido por Victor Stinner en :issue:`42802`.)"

#: ../Doc/whatsnew/3.10.rst:1074
msgid "doctest"
msgstr "doctest"

#: ../Doc/whatsnew/3.10.rst:1076 ../Doc/whatsnew/3.10.rst:1211
#: ../Doc/whatsnew/3.10.rst:1238 ../Doc/whatsnew/3.10.rst:1337
msgid ""
"When a module does not define ``__loader__``, fall back to ``__spec__."
"loader``. (Contributed by Brett Cannon in :issue:`42133`.)"
msgstr ""
"Cuando un módulo no define ``__loader__``, recurre a ``__spec__.loader``. "
"(Contribuido por Brett Cannon en :issue:`42133`.)"

#: ../Doc/whatsnew/3.10.rst:1080
msgid "encodings"
msgstr "codificaciones"

#: ../Doc/whatsnew/3.10.rst:1082
msgid ""
":func:`encodings.normalize_encoding` now ignores non-ASCII characters. "
"(Contributed by Hai Shi in :issue:`39337`.)"
msgstr ""
":func:`encodings.normalize_encoding` ahora ignora los caracteres que no son "
"ASCII. (Contribuido por Hai Shi en :issue:`39337`.)"

#: ../Doc/whatsnew/3.10.rst:1086
msgid "enum"
msgstr "enum"

#: ../Doc/whatsnew/3.10.rst:1088
msgid ""
":class:`Enum` :func:`__repr__` now returns ``enum_name.member_name`` and :"
"func:`__str__` now returns ``member_name``.  Stdlib enums available as "
"module constants have a :func:`repr` of ``module_name.member_name``. "
"(Contributed by Ethan Furman in :issue:`40066`.)"
msgstr ""
":class:`Enum` :func:`__repr__` ahora devuelve ``enum_name.member_name`` y :"
"func:`__str__` ahora devuelve ``member_name``.  Los enums de Stdlib "
"disponibles como constantes de módulo tienen un :func:`repr` de "
"``module_name.member_name``. (Contribuido por Ethan Furman en :issue:"
"`40066`.)"

#: ../Doc/whatsnew/3.10.rst:1093
msgid ""
"Add :class:`enum.StrEnum` for enums where all members are strings. "
"(Contributed by Ethan Furman in :issue:`41816`.)"
msgstr ""
"Añadir :class:`enum.StrEnum` para los enums en los que todos los miembros "
"son cadenas. (Contribuido por Ethan Furman en :issue:`41816`.)"

#: ../Doc/whatsnew/3.10.rst:1097
msgid "fileinput"
msgstr "entrada de archivo"

#: ../Doc/whatsnew/3.10.rst:1099
msgid ""
"Add *encoding* and *errors* parameters in :func:`fileinput.input` and :class:"
"`fileinput.FileInput`. (Contributed by Inada Naoki in :issue:`43712`.)"
msgstr ""
"Agregue los parámetros *encoding* and *errors* en :func:`fileinput.input` y :"
"class:`fileinput.FileInput`. (Contribuido por Inada Naoki en :issue:`43712`.)"

#: ../Doc/whatsnew/3.10.rst:1103
msgid ""
":func:`fileinput.hook_compressed` now returns :class:`TextIOWrapper` object "
"when *mode* is \"r\" and file is compressed, like uncompressed files. "
"(Contributed by Inada Naoki in :issue:`5758`.)"
msgstr ""
":func:`fileinput.hook_compressed` ahora devuelve el objeto :class:"
"`TextIOWrapper` cuando *mode* es \"r\" y el archivo está comprimido, como "
"archivos sin comprimir. (Contribuido por Inada Naoki en :issue:`5758`.)"

#: ../Doc/whatsnew/3.10.rst:1108
msgid "faulthandler"
msgstr "manipulador de faltas"

#: ../Doc/whatsnew/3.10.rst:1110
msgid ""
"The :mod:`faulthandler` module now detects if a fatal error occurs during a "
"garbage collector collection. (Contributed by Victor Stinner in :issue:"
"`44466`.)"
msgstr ""
"El módulo :mod:`faulthandler` ahora detecta si ocurre un error fatal durante "
"la recolección de un recolector de basura. (Contribuido por Victor Stinner "
"en :issue:`44466`.)"

#: ../Doc/whatsnew/3.10.rst:1115
msgid "gc"
msgstr "GC"

#: ../Doc/whatsnew/3.10.rst:1117
msgid ""
"Add audit hooks for :func:`gc.get_objects`, :func:`gc.get_referrers` and :"
"func:`gc.get_referents`. (Contributed by Pablo Galindo in :issue:`43439`.)"
msgstr ""
"Agregue ganchos de auditoría para :func:`gc.get_objects`, :func:`gc."
"get_referrers` y :func:`gc.get_referents`. (Contribuido por Pablo Galindo "
"en :issue:`43439`.)"

#: ../Doc/whatsnew/3.10.rst:1121
msgid "glob"
msgstr "glob"

#: ../Doc/whatsnew/3.10.rst:1123
msgid ""
"Add the *root_dir* and *dir_fd* parameters in :func:`~glob.glob` and :func:"
"`~glob.iglob` which allow to specify the root directory for searching. "
"(Contributed by Serhiy Storchaka in :issue:`38144`.)"
msgstr ""
"Agregue los parámetros *root_dir* and *dir_fd* en :func:`~glob.glob` y :func:"
"`~glob.iglob` que permiten especificar el directorio raíz para la búsqueda. "
"(Contribuido por Serhiy Storchaka en :issue:`38144`.)"

#: ../Doc/whatsnew/3.10.rst:1128
msgid "hashlib"
msgstr "hashlib"

#: ../Doc/whatsnew/3.10.rst:1130
msgid ""
"The hashlib module requires OpenSSL 1.1.1 or newer. (Contributed by "
"Christian Heimes in :pep:`644` and :issue:`43669`.)"
msgstr ""
"El módulo hashlib requiere OpenSSL 1.1.1 o más reciente. (Contribuido por "
"Christian Heimes en :pep:`644` y :issue:`43669`.)"

#: ../Doc/whatsnew/3.10.rst:1133
msgid ""
"The hashlib module has preliminary support for OpenSSL 3.0.0. (Contributed "
"by Christian Heimes in :issue:`38820` and other issues.)"
msgstr ""
"El módulo hashlib tiene soporte preliminar para OpenSSL 3.0.0. (Contribuido "
"por Christian Heimes en :issue:`38820` y otros números)."

#: ../Doc/whatsnew/3.10.rst:1136
msgid ""
"The pure-Python fallback of :func:`~hashlib.pbkdf2_hmac` is deprecated. In "
"the future PBKDF2-HMAC will only be available when Python has been built "
"with OpenSSL support. (Contributed by Christian Heimes in :issue:`43880`.)"
msgstr ""
"El respaldo de Python puro de :func:`~hashlib.pbkdf2_hmac` está en desuso. "
"En el futuro, PBKDF2-HMAC solo estará disponible cuando Python se haya "
"construido con soporte OpenSSL. (Contribuido por Christian Heimes en :issue:"
"`43880`.)"

#: ../Doc/whatsnew/3.10.rst:1142
msgid "hmac"
msgstr "hmac"

#: ../Doc/whatsnew/3.10.rst:1144
msgid ""
"The hmac module now uses OpenSSL's HMAC implementation internally. "
"(Contributed by Christian Heimes in :issue:`40645`.)"
msgstr ""
"El módulo hmac ahora usa la implementación HMAC de OpenSSL internamente. "
"(Contribuido por Christian Heimes en :issue:`40645`.)"

#: ../Doc/whatsnew/3.10.rst:1148
msgid "IDLE and idlelib"
msgstr "IDLE e idlelib"

#: ../Doc/whatsnew/3.10.rst:1150
msgid ""
"Make IDLE invoke :func:`sys.excepthook` (when started without '-n'). User "
"hooks were previously ignored.  (Contributed by Ken Hilton in :issue:"
"`43008`.)"
msgstr ""
"Hacer que IDLE invoque :func:`sys.excepthook` (cuando se inicia sin '-n'). "
"Los ganchos de usuario se ignoraban anteriormente. (Aportado por Ken Hilton "
"en :issue:`43008`.)"

#: ../Doc/whatsnew/3.10.rst:1154
msgid ""
"Rearrange the settings dialog.  Split the General tab into Windows and Shell/"
"Ed tabs.  Move help sources, which extend the Help menu, to the Extensions "
"tab.  Make space for new options and shorten the dialog. The latter makes "
"the dialog better fit small screens.  (Contributed by Terry Jan Reedy in :"
"issue:`40468`.)  Move the indent space setting from the Font tab to the new "
"Windows tab.  (Contributed by Mark Roseman and Terry Jan Reedy in :issue:"
"`33962`.)"
msgstr ""
"Reorganizar el diálogo de configuración.  Dividir la pestaña General en las "
"pestañas Windows y Shell/Ed.  Mover las fuentes de ayuda, que amplían el "
"menú Ayuda, a la pestaña Extensiones.  Hacer espacio para nuevas opciones y "
"acortar el diálogo. Esto último hace que el diálogo se adapte mejor a las "
"pantallas pequeñas.  (Contribuido por Terry Jan Reedy en :issue:`40468`.) "
"Mover la configuración del espacio de indentación de la pestaña de Fuente a "
"la nueva pestaña Windows.  (Contribuido por Mark Roseman y Terry Jan Reedy "
"en :issue:`33962`.)"

#: ../Doc/whatsnew/3.10.rst:1162
msgid "The changes above were backported to a 3.9 maintenance release."
msgstr ""
"Los cambios anteriores se trasladaron a una versión de mantenimiento 3.9."

#: ../Doc/whatsnew/3.10.rst:1164
msgid ""
"Add a Shell sidebar.  Move the primary prompt ('>>>') to the sidebar. Add "
"secondary prompts ('...') to the sidebar.  Left click and optional drag "
"selects one or more lines of text, as with the editor line number sidebar.  "
"Right click after selecting text lines displays a context menu with 'copy "
"with prompts'.  This zips together prompts from the sidebar with lines from "
"the selected text.  This option also appears on the context menu for the "
"text.  (Contributed by Tal Einat in :issue:`37903`.)"
msgstr ""
"Agrega una barra lateral de Shell. Mueva el indicador principal ('>>>') a la "
"barra lateral. Agregue mensajes secundarios ('...') a la barra lateral. El "
"clic izquierdo y el arrastre opcional seleccionan una o más líneas de texto, "
"como con la barra lateral del número de línea del editor. Al hacer clic "
"derecho después de seleccionar líneas de texto, se muestra un menú "
"contextual con 'copiar con indicaciones'. Esto comprime los mensajes de la "
"barra lateral con líneas del texto seleccionado. Esta opción también aparece "
"en el menú contextual del texto. (Contribuido por Tal Einat en :issue:"
"`37903`.)"

#: ../Doc/whatsnew/3.10.rst:1173
msgid ""
"Use spaces instead of tabs to indent interactive code.  This makes "
"interactive code entries 'look right'.  Making this feasible was a major "
"motivation for adding the shell sidebar.  (Contributed by Terry Jan Reedy "
"in :issue:`37892`.)"
msgstr ""
"Use espacios en lugar de tabulaciones para sangrar el código interactivo. "
"Esto hace que las entradas de código interactivo 'se vean bien'. Hacer esto "
"factible fue una de las principales motivaciones para agregar la barra "
"lateral de shell. (Aportado por Terry Jan Reedy en :issue:`37892`.)"

#: ../Doc/whatsnew/3.10.rst:1178
msgid ""
"Highlight the new :ref:`soft keywords <soft-keywords>` :keyword:`match`, :"
"keyword:`case <match>`, and :keyword:`_ <wildcard-patterns>` in pattern-"
"matching statements. However, this highlighting is not perfect and will be "
"incorrect in some rare cases, including some ``_``-s in ``case`` patterns.  "
"(Contributed by Tal Einat in :issue:`44010`.)"
msgstr ""
"Resalte los nuevos :ref:`soft keywords <soft-keywords>` :keyword:`match`, :"
"keyword:`case <match>` y :keyword:`_ <wildcard-patterns>` en declaraciones "
"de coincidencia de patrones. Sin embargo, este resaltado no es perfecto y "
"será incorrecto en algunos casos excepcionales, incluidos algunos ``_``-s en "
"patrones ``case``. (Aportado por Tal Einat en :issue:`44010`.)"

#: ../Doc/whatsnew/3.10.rst:1184
msgid "New in 3.10 maintenance releases."
msgstr "Nuevo en la versión de mantenimiento 3.10."

#: ../Doc/whatsnew/3.10.rst:1186
msgid ""
"Apply syntax highlighting to ``.pyi`` files. (Contributed by Alex Waygood "
"and Terry Jan Reedy in :issue:`45447`.)"
msgstr ""
"Aplicar el resaltado de sintaxis a los archivos ``.pyi``. (Contribución de "
"Alex Waygood y Terry Jan Reedy en :issue:`45447`.)"

#: ../Doc/whatsnew/3.10.rst:1189
msgid ""
"Include prompts when saving Shell with inputs and outputs. (Contributed by "
"Terry Jan Reedy in :gh:`95191`.)"
msgstr ""
"Incluir avisos al guardar Shell con entradas y salidas. (Contribuido por "
"Terry Jan Reedy en :gh:`95191`.)"

#: ../Doc/whatsnew/3.10.rst:1193
msgid "importlib.metadata"
msgstr "importlib.metadata"

#: ../Doc/whatsnew/3.10.rst:1195
msgid ""
"Feature parity with ``importlib_metadata`` 4.6 (`history <https://importlib-"
"metadata.readthedocs.io/en/latest/history.html>`_)."
msgstr ""
"Paridad de características con ``importlib_metadata`` 4.6 (`history <https://"
"importlib-metadata.readthedocs.io/en/latest/history.html>`_)."

#: ../Doc/whatsnew/3.10.rst:1198
msgid ""
":ref:`importlib.metadata entry points <entry-points>` now provide a nicer "
"experience for selecting entry points by group and name through a new :class:"
"`importlib.metadata.EntryPoints` class. See the Compatibility Note in the "
"docs for more info on the deprecation and usage."
msgstr ""
":ref:`importlib.metadata entry points <entry-points>` ahora brinda una mejor "
"experiencia para seleccionar puntos de entrada por grupo y nombre a través "
"de una nueva clase :class:`importlib.metadata.EntryPoints`. Consulte la Nota "
"de compatibilidad en los documentos para obtener más información sobre la "
"obsolescencia y el uso."

#: ../Doc/whatsnew/3.10.rst:1204
msgid ""
"Added :func:`importlib.metadata.packages_distributions` for resolving top-"
"level Python modules and packages to their :class:`importlib.metadata."
"Distribution`."
msgstr ""
"Se agregó :func:`importlib.metadata.packages_distributions` para resolver "
"módulos y paquetes de Python de nivel superior en su :class:`importlib."
"metadata.Distribution`."

#: ../Doc/whatsnew/3.10.rst:1209
msgid "inspect"
msgstr "inspeccionar"

#: ../Doc/whatsnew/3.10.rst:1214
msgid ""
"Add :func:`inspect.get_annotations`, which safely computes the annotations "
"defined on an object. It works around the quirks of accessing the "
"annotations on various types of objects, and makes very few assumptions "
"about the object it examines. :func:`inspect.get_annotations` can also "
"correctly un-stringize stringized annotations.  :func:`inspect."
"get_annotations` is now considered best practice for accessing the "
"annotations dict defined on any Python object; for more information on best "
"practices for working with annotations, please see :ref:`annotations-howto`. "
"Relatedly, :func:`inspect.signature`, :func:`inspect.Signature."
"from_callable`, and :func:`inspect.Signature.from_function` now call :func:"
"`inspect.get_annotations` to retrieve annotations. This means :func:`inspect."
"signature` and :func:`inspect.Signature.from_callable` can also now un-"
"stringize stringized annotations. (Contributed by Larry Hastings in :issue:"
"`43817`.)"
msgstr ""
"Agregue :func:`inspect.get_annotations`, que calcula de manera segura las "
"anotaciones definidas en un objeto. Resuelve las peculiaridades de acceder a "
"las anotaciones en varios tipos de objetos y hace muy pocas suposiciones "
"sobre el objeto que examina. :func:`inspect.get_annotations` también puede "
"eliminar correctamente las cadenas de anotaciones. :func:`inspect."
"get_annotations` ahora se considera la mejor práctica para acceder al "
"dictado de anotaciones definido en cualquier objeto de Python; Para obtener "
"más información sobre las mejores prácticas para trabajar con anotaciones, "
"consulte :ref:`annotations-howto`. De manera relacionada, :func:`inspect."
"signature`, :func:`inspect.Signature.from_callable` y :func:`inspect."
"Signature.from_function` ahora llaman a :func:`inspect.get_annotations` para "
"recuperar anotaciones. Esto significa que :func:`inspect.signature` y :func:"
"`inspect.Signature.from_callable` ahora también pueden anular cadenas de "
"anotaciones. (Contribuido por Larry Hastings en :issue:`43817`.)"

#: ../Doc/whatsnew/3.10.rst:1230
msgid "itertools"
msgstr "itertools"

#: ../Doc/whatsnew/3.10.rst:1232
msgid ""
"Add :func:`itertools.pairwise()`. (Contributed by Raymond Hettinger in :"
"issue:`38200`.)"
msgstr ""
"Añadir :func:`itertools.pairwise()`. (Contribución de Raymond Hettinger en :"
"issue:`38200`.)"

#: ../Doc/whatsnew/3.10.rst:1236
msgid "linecache"
msgstr "caché de línea"

#: ../Doc/whatsnew/3.10.rst:1242
msgid "os"
msgstr "os"

#: ../Doc/whatsnew/3.10.rst:1244
msgid ""
"Add :func:`os.cpu_count()` support for VxWorks RTOS. (Contributed by Peixing "
"Xin in :issue:`41440`.)"
msgstr ""
"Agregue soporte :func:`os.cpu_count()` para VxWorks RTOS. (Contribuido por "
"Peixing Xin en :issue:`41440`.)"

#: ../Doc/whatsnew/3.10.rst:1247
msgid ""
"Add a new function :func:`os.eventfd` and related helpers to wrap the "
"``eventfd2`` syscall on Linux. (Contributed by Christian Heimes in :issue:"
"`41001`.)"
msgstr ""
"Agregue una nueva función :func:`os.eventfd` y ayudantes relacionados para "
"envolver el syscall ``eventfd2`` en Linux. (Contribuido por Christian Heimes "
"en :issue:`41001`.)"

#: ../Doc/whatsnew/3.10.rst:1251
msgid ""
"Add :func:`os.splice()` that allows to move data between two file "
"descriptors without copying between kernel address space and user address "
"space, where one of the file descriptors must refer to a pipe. (Contributed "
"by Pablo Galindo in :issue:`41625`.)"
msgstr ""
"Agregue :func:`os.splice()` que permite mover datos entre dos descriptores "
"de archivos sin copiar entre el espacio de direcciones del kernel y el "
"espacio de direcciones del usuario, donde uno de los descriptores de "
"archivos debe hacer referencia a una tubería. (Contribuido por Pablo Galindo "
"en :issue:`41625`.)"

#: ../Doc/whatsnew/3.10.rst:1256
msgid ""
"Add :data:`~os.O_EVTONLY`, :data:`~os.O_FSYNC`, :data:`~os.O_SYMLINK` and :"
"data:`~os.O_NOFOLLOW_ANY` for macOS. (Contributed by Dong-hee Na in :issue:"
"`43106`.)"
msgstr ""
"Agregue :data:`~os.O_EVTONLY`, :data:`~os.O_FSYNC`, :data:`~os.O_SYMLINK` y :"
"data:`~os.O_NOFOLLOW_ANY` para macOS. (Contribuido por Dong-hee Na en :issue:"
"`43106`.)"

#: ../Doc/whatsnew/3.10.rst:1261
msgid "os.path"
msgstr "os.path"

#: ../Doc/whatsnew/3.10.rst:1263
msgid ""
":func:`os.path.realpath` now accepts a *strict* keyword-only argument. When "
"set to ``True``, :exc:`OSError` is raised if a path doesn't exist or a "
"symlink loop is encountered. (Contributed by Barney Gale in :issue:`43757`.)"
msgstr ""
":func:`os.path.realpath` ahora acepta un argumento de solo palabra clave "
"*strict*. Cuando se establece en ``True``, :exc:`OSError` se genera si no "
"existe una ruta o se encuentra un bucle de enlace simbólico. (Contribuido "
"por Barney Gale en :issue:`43757`.)"

#: ../Doc/whatsnew/3.10.rst:1269
msgid "pathlib"
msgstr "Pathlib"

#: ../Doc/whatsnew/3.10.rst:1271
msgid ""
"Add slice support to :attr:`PurePath.parents <pathlib.PurePath.parents>`. "
"(Contributed by Joshua Cannon in :issue:`35498`.)"
msgstr ""
"Agregue soporte de división a :attr:`PurePath.parents <pathlib.PurePath."
"parents>`. (Aportado por Joshua Cannon en :issue:`35498`.)"

#: ../Doc/whatsnew/3.10.rst:1274
msgid ""
"Add negative indexing support to :attr:`PurePath.parents <pathlib.PurePath."
"parents>`. (Contributed by Yaroslav Pankovych in :issue:`21041`.)"
msgstr ""
"Agregue soporte de indexación negativa a :attr:`PurePath.parents <pathlib."
"PurePath.parents>`. (Aportado por Yaroslav Pankovych en :issue:`21041`.)"

#: ../Doc/whatsnew/3.10.rst:1278
msgid ""
"Add :meth:`Path.hardlink_to <pathlib.Path.hardlink_to>` method that "
"supersedes :meth:`~pathlib.Path.link_to`. The new method has the same "
"argument order as :meth:`~pathlib.Path.symlink_to`. (Contributed by Barney "
"Gale in :issue:`39950`.)"
msgstr ""
"Agregue el método :meth:`Path.hardlink_to <pathlib.Path.hardlink_to>` que "
"reemplaza a :meth:`~pathlib.Path.link_to`. El nuevo método tiene el mismo "
"orden de argumentos que :meth:`~pathlib.Path.symlink_to`. (Contribuido por "
"Barney Gale en :issue:`39950`.)"

#: ../Doc/whatsnew/3.10.rst:1283
msgid ""
":meth:`pathlib.Path.stat` and :meth:`~pathlib.Path.chmod` now accept a "
"*follow_symlinks* keyword-only argument for consistency with corresponding "
"functions in the :mod:`os` module. (Contributed by Barney Gale in :issue:"
"`39906`.)"
msgstr ""
":meth:`pathlib.Path.stat` y :meth:`~pathlib.Path.chmod` ahora aceptan un "
"argumento de solo palabra clave *follow_symlinks* para mantener la "
"coherencia con las funciones correspondientes en el módulo :mod:`os`. "
"(Contribuido por Barney Gale en :issue:`39906`.)"

#: ../Doc/whatsnew/3.10.rst:1289
msgid "platform"
msgstr "plataforma"

#: ../Doc/whatsnew/3.10.rst:1291
msgid ""
"Add :func:`platform.freedesktop_os_release()` to retrieve operation system "
"identification from `freedesktop.org os-release <https://www.freedesktop.org/"
"software/systemd/man/os-release.html>`_ standard file. (Contributed by "
"Christian Heimes in :issue:`28468`.)"
msgstr ""
"Agregue :func:`platform.freedesktop_os_release()` para recuperar la "
"identificación del sistema operativo del archivo estándar `freedesktop.org "
"os-release <https://www.freedesktop.org/software/systemd/man/os-release."
"html>`_. (Aportado por Christian Heimes en :issue:`28468`.)"

#: ../Doc/whatsnew/3.10.rst:1297
msgid "pprint"
msgstr "pprint"

#: ../Doc/whatsnew/3.10.rst:1299
msgid ""
":func:`pprint.pprint` now accepts a new ``underscore_numbers`` keyword "
"argument. (Contributed by sblondon in :issue:`42914`.)"
msgstr ""
":func:`pprint.pprint` ahora acepta un nuevo argumento de palabra clave "
"``underscore_numbers``. (Contribuido por sblondon en :issue:`42914`.)"

#: ../Doc/whatsnew/3.10.rst:1302
msgid ""
":mod:`pprint` can now pretty-print :class:`dataclasses.dataclass` instances. "
"(Contributed by Lewis Gaul in :issue:`43080`.)"
msgstr ""
":mod:`pprint` ahora puede imprimir de forma bonita instancias de :class:"
"`dataclasses.dataclass`. (Contribuido por Lewis Gaul en :issue:`43080`.)"

#: ../Doc/whatsnew/3.10.rst:1306
msgid "py_compile"
msgstr "py_compile"

#: ../Doc/whatsnew/3.10.rst:1308
msgid ""
"Add ``--quiet`` option to command-line interface of :mod:`py_compile`. "
"(Contributed by Gregory Schevchenko in :issue:`38731`.)"
msgstr ""
"Agregue la opción ``--quiet`` a la interfaz de línea de comandos de :mod:"
"`py_compile`. (Contribuido por Gregory Schevchenko en :issue:`38731`.)"

#: ../Doc/whatsnew/3.10.rst:1312
msgid "pyclbr"
msgstr "pyclbr"

#: ../Doc/whatsnew/3.10.rst:1314
msgid ""
"Add an ``end_lineno`` attribute to the ``Function`` and ``Class`` objects in "
"the tree returned by :func:`pyclbr.readline` and :func:`pyclbr."
"readline_ex`.  It matches the existing (start) ``lineno``. (Contributed by "
"Aviral Srivastava in :issue:`38307`.)"
msgstr ""
"Agregue un atributo ``end_lineno`` a los objetos ``Function`` y ``Class`` en "
"el árbol devuelto por :func:`pyclbr.readline` y :func:`pyclbr.readline_ex`. "
"Coincide con el ``lineno`` existente (inicio). (Contribuido por Aviral "
"Srivastava en :issue:`38307`.)"

#: ../Doc/whatsnew/3.10.rst:1320
msgid "shelve"
msgstr "dejar de lado"

#: ../Doc/whatsnew/3.10.rst:1322
msgid ""
"The :mod:`shelve` module now uses :data:`pickle.DEFAULT_PROTOCOL` by default "
"instead of :mod:`pickle` protocol ``3`` when creating shelves. (Contributed "
"by Zackery Spytz in :issue:`34204`.)"
msgstr ""
"El módulo :mod:`shelve` ahora usa :data:`pickle.DEFAULT_PROTOCOL` por "
"defecto en lugar del protocolo :mod:`pickle` ``3`` al crear estantes. "
"(Contribuido por Zackery Spytz en :issue:`34204`.)"

#: ../Doc/whatsnew/3.10.rst:1327
msgid "statistics"
msgstr "Estadísticas"

#: ../Doc/whatsnew/3.10.rst:1329
msgid ""
"Add :func:`~statistics.covariance`, Pearson's :func:`~statistics."
"correlation`, and simple :func:`~statistics.linear_regression` functions. "
"(Contributed by Tymoteusz Wołodźko in :issue:`38490`.)"
msgstr ""
"Agregue las funciones :func:`~statistics.covariance`, :func:`~statistics."
"correlation` de Pearson y :func:`~statistics.linear_regression` simple. "
"(Contribuido por Tymoteusz Wołodźko en :issue:`38490`.)"

#: ../Doc/whatsnew/3.10.rst:1335
msgid "site"
msgstr "sitio"

#: ../Doc/whatsnew/3.10.rst:1341
msgid "socket"
msgstr "enchufe"

#: ../Doc/whatsnew/3.10.rst:1343
msgid ""
"The exception :exc:`socket.timeout` is now an alias of :exc:`TimeoutError`. "
"(Contributed by Christian Heimes in :issue:`42413`.)"
msgstr ""
"La excepción :exc:`socket.timeout` ahora es un alias de :exc:`TimeoutError`. "
"(Contribuido por Christian Heimes en :issue:`42413`.)"

#: ../Doc/whatsnew/3.10.rst:1346
msgid ""
"Add option to create MPTCP sockets with ``IPPROTO_MPTCP`` (Contributed by "
"Rui Cunha in :issue:`43571`.)"
msgstr ""
"Agregue la opción para crear sockets MPTCP con ``IPPROTO_MPTCP`` "
"(Contribuido por Rui Cunha en :issue:`43571`.)"

#: ../Doc/whatsnew/3.10.rst:1349
msgid ""
"Add ``IP_RECVTOS`` option to receive the type of service (ToS) or DSCP/ECN "
"fields (Contributed by Georg Sauthoff in :issue:`44077`.)"
msgstr ""
"Agregue la opción ``IP_RECVTOS`` para recibir el tipo de servicio (ToS) o "
"los campos DSCP / ECN (Contribuido por Georg Sauthoff en :issue:`44077`)."

#: ../Doc/whatsnew/3.10.rst:1353
msgid "ssl"
msgstr "ssl"

#: ../Doc/whatsnew/3.10.rst:1355
msgid ""
"The ssl module requires OpenSSL 1.1.1 or newer. (Contributed by Christian "
"Heimes in :pep:`644` and :issue:`43669`.)"
msgstr ""
"El módulo ssl requiere OpenSSL 1.1.1 o más reciente. (Contribuido por "
"Christian Heimes en :pep:`644` y :issue:`43669`.)"

#: ../Doc/whatsnew/3.10.rst:1358
msgid ""
"The ssl module has preliminary support for OpenSSL 3.0.0 and new option :"
"data:`~ssl.OP_IGNORE_UNEXPECTED_EOF`. (Contributed by Christian Heimes in :"
"issue:`38820`, :issue:`43794`, :issue:`43788`, :issue:`43791`, :issue:"
"`43799`, :issue:`43920`, :issue:`43789`, and :issue:`43811`.)"
msgstr ""
"El módulo ssl tiene soporte preliminar para OpenSSL 3.0.0 y la nueva opción :"
"data:`~ssl.OP_IGNORE_UNEXPECTED_EOF`. (Contribuido por Christian Heimes en :"
"issue:`38820`, :issue:`43794`, :issue:`43788`, :issue:`43791`, :issue:"
"`43799`, :issue:`43920`, :issue:`43789` y :issue:`43811`.)"

#: ../Doc/whatsnew/3.10.rst:1364
msgid ""
"Deprecated function and use of deprecated constants now result in a :exc:"
"`DeprecationWarning`. :attr:`ssl.SSLContext.options` has :data:`~ssl."
"OP_NO_SSLv2` and :data:`~ssl.OP_NO_SSLv3` set by default and therefore "
"cannot warn about setting the flag again. The :ref:`deprecation section "
"<whatsnew310-deprecated>` has a list of deprecated features. (Contributed by "
"Christian Heimes in :issue:`43880`.)"
msgstr ""
"La función obsoleta y el uso de constantes obsoletas ahora dan como "
"resultado un :exc:`DeprecationWarning`. :attr:`ssl.SSLContext.options` "
"tiene :data:`~ssl.OP_NO_SSLv2` y :data:`~ssl.OP_NO_SSLv3` configurados de "
"forma predeterminada y, por lo tanto, no puede advertir sobre la "
"configuración de la bandera nuevamente. El :ref:`deprecation section "
"<whatsnew310-deprecated>` tiene una lista de funciones obsoletas. "
"(Contribuido por Christian Heimes en :issue:`43880`.)"

#: ../Doc/whatsnew/3.10.rst:1372
msgid ""
"The ssl module now has more secure default settings. Ciphers without forward "
"secrecy or SHA-1 MAC are disabled by default. Security level 2 prohibits "
"weak RSA, DH, and ECC keys with less than 112 bits of security. :class:`~ssl."
"SSLContext` defaults to minimum protocol version TLS 1.2. Settings are based "
"on Hynek Schlawack's research. (Contributed by Christian Heimes in :issue:"
"`43998`.)"
msgstr ""
"El módulo ssl ahora tiene una configuración predeterminada más segura. Los "
"cifrados sin confidencialidad directa o SHA-1 MAC están deshabilitados de "
"forma predeterminada. El nivel de seguridad 2 prohíbe claves RSA, DH y ECC "
"débiles con menos de 112 bits de seguridad. :class:`~ssl.SSLContext` tiene "
"por defecto la versión mínima del protocolo TLS 1.2. Los ajustes se basan en "
"la investigación de Hynek Schlawack. (Contribuido por Christian Heimes en :"
"issue:`43998`.)"

#: ../Doc/whatsnew/3.10.rst:1379
msgid ""
"The deprecated protocols SSL 3.0, TLS 1.0, and TLS 1.1 are no longer "
"officially supported. Python does not block them actively. However OpenSSL "
"build options, distro configurations, vendor patches, and cipher suites may "
"prevent a successful handshake."
msgstr ""
"Los protocolos obsoletos SSL 3.0, TLS 1.0 y TLS 1.1 ya no son compatibles "
"oficialmente. Python no los bloquea activamente. Sin embargo, las opciones "
"de compilación de OpenSSL, las configuraciones de distribución, los parches "
"de proveedores y los conjuntos de cifrado pueden impedir un protocolo de "
"enlace exitoso."

#: ../Doc/whatsnew/3.10.rst:1384
msgid ""
"Add a *timeout* parameter to the :func:`ssl.get_server_certificate` "
"function. (Contributed by Zackery Spytz in :issue:`31870`.)"
msgstr ""
"Agregue un parámetro *timeout* a la función :func:`ssl."
"get_server_certificate`. (Contribuido por Zackery Spytz en :issue:`31870`.)"

#: ../Doc/whatsnew/3.10.rst:1387
msgid ""
"The ssl module uses heap-types and multi-phase initialization. (Contributed "
"by Christian Heimes in :issue:`42333`.)"
msgstr ""
"El módulo ssl utiliza tipos de pila e inicialización multifase. (Contribuido "
"por Christian Heimes en :issue:`42333`.)"

#: ../Doc/whatsnew/3.10.rst:1390
msgid ""
"A new verify flag :data:`~ssl.VERIFY_X509_PARTIAL_CHAIN` has been added. "
"(Contributed by l0x in :issue:`40849`.)"
msgstr ""
"Se ha agregado un nuevo indicador de verificación :data:`~ssl."
"VERIFY_X509_PARTIAL_CHAIN`. (Contribuido por l0x en :issue:`40849`.)"

#: ../Doc/whatsnew/3.10.rst:1394
msgid "sqlite3"
msgstr "sqlite3"

#: ../Doc/whatsnew/3.10.rst:1396
msgid ""
"Add audit events for :func:`~sqlite3.connect/handle`, :meth:`~sqlite3."
"Connection.enable_load_extension`, and :meth:`~sqlite3.Connection."
"load_extension`. (Contributed by Erlend E. Aasland in :issue:`43762`.)"
msgstr ""
"Agregue eventos de auditoría para :func:`~sqlite3.connect/handle`, :meth:"
"`~sqlite3.Connection.enable_load_extension` y :meth:`~sqlite3.Connection."
"load_extension`. (Contribuido por Erlend E. Aasland en :issue:`43762`.)"

#: ../Doc/whatsnew/3.10.rst:1402
msgid "sys"
msgstr "sys"

#: ../Doc/whatsnew/3.10.rst:1404
msgid ""
"Add :data:`sys.orig_argv` attribute: the list of the original command line "
"arguments passed to the Python executable. (Contributed by Victor Stinner "
"in :issue:`23427`.)"
msgstr ""
"Agregar atributo :data:`sys.orig_argv`: la lista de los argumentos "
"originales de la línea de comando pasados al ejecutable de Python. "
"(Contribuido por Victor Stinner en :issue:`23427`.)"

#: ../Doc/whatsnew/3.10.rst:1408
msgid ""
"Add :data:`sys.stdlib_module_names`, containing the list of the standard "
"library module names. (Contributed by Victor Stinner in :issue:`42955`.)"
msgstr ""
"Agregue :data:`sys.stdlib_module_names`, que contiene la lista de nombres de "
"módulos de biblioteca estándar. (Contribuido por Victor Stinner en :issue:"
"`42955`.)"

#: ../Doc/whatsnew/3.10.rst:1413
msgid "_thread"
msgstr "_hilo"

#: ../Doc/whatsnew/3.10.rst:1415
msgid ""
":func:`_thread.interrupt_main` now takes an optional signal number to "
"simulate (the default is still :data:`signal.SIGINT`). (Contributed by "
"Antoine Pitrou in :issue:`43356`.)"
msgstr ""
":func:`_thread.interrupt_main` ahora toma un número de señal opcional para "
"simular (el predeterminado sigue siendo :data:`signal.SIGINT`). (Contribuido "
"por Antoine Pitrou en :issue:`43356`.)"

#: ../Doc/whatsnew/3.10.rst:1420
msgid "threading"
msgstr "enhebrar"

#: ../Doc/whatsnew/3.10.rst:1422
msgid ""
"Add :func:`threading.gettrace` and :func:`threading.getprofile` to retrieve "
"the functions set by :func:`threading.settrace` and :func:`threading."
"setprofile` respectively. (Contributed by Mario Corchero in :issue:`42251`.)"
msgstr ""
"Agregue :func:`threading.gettrace` y :func:`threading.getprofile` para "
"recuperar las funciones establecidas por :func:`threading.settrace` y :func:"
"`threading.setprofile` respectivamente. (Contribuido por Mario Corchero en :"
"issue:`42251`.)"

#: ../Doc/whatsnew/3.10.rst:1427
msgid ""
"Add :data:`threading.__excepthook__` to allow retrieving the original value "
"of :func:`threading.excepthook` in case it is set to a broken or a different "
"value. (Contributed by Mario Corchero in :issue:`42308`.)"
msgstr ""
"Agregue :data:`threading.__excepthook__` para permitir recuperar el valor "
"original de :func:`threading.excepthook` en caso de que esté configurado en "
"un valor roto o diferente. (Contribuido por Mario Corchero en :issue:"
"`42308`.)"

#: ../Doc/whatsnew/3.10.rst:1433
msgid "traceback"
msgstr "rastrear"

#: ../Doc/whatsnew/3.10.rst:1435
msgid ""
"The :func:`~traceback.format_exception`, :func:`~traceback."
"format_exception_only`, and :func:`~traceback.print_exception` functions can "
"now take an exception object as a positional-only argument. (Contributed by "
"Zackery Spytz and Matthias Bussonnier in :issue:`26389`.)"
msgstr ""
"Las funciones :func:`~traceback.format_exception`, :func:`~traceback."
"format_exception_only` y :func:`~traceback.print_exception` ahora pueden "
"tomar un objeto de excepción como un argumento solo posicional. (Contribuido "
"por Zackery Spytz y Matthias Bussonnier en :issue:`26389`.)"

#: ../Doc/whatsnew/3.10.rst:1442
msgid "types"
msgstr "tipos"

#: ../Doc/whatsnew/3.10.rst:1444
msgid ""
"Reintroduce the :data:`types.EllipsisType`, :data:`types.NoneType` and :data:"
"`types.NotImplementedType` classes, providing a new set of types readily "
"interpretable by type checkers. (Contributed by Bas van Beek in :issue:"
"`41810`.)"
msgstr ""
"Reintroduzca las clases :data:`types.EllipsisType`, :data:`types.NoneType` "
"y :data:`types.NotImplementedType`, proporcionando un nuevo conjunto de "
"tipos fácilmente interpretables por los verificadores de tipos. (Contribuido "
"por Bas van Beek en :issue:`41810`.)"

#: ../Doc/whatsnew/3.10.rst:1450
msgid "typing"
msgstr "mecanografía"

#: ../Doc/whatsnew/3.10.rst:1452
msgid "For major changes, see :ref:`new-feat-related-type-hints`."
msgstr ""
"Para conocer los cambios importantes, consulte :ref:`new-feat-related-type-"
"hints`."

#: ../Doc/whatsnew/3.10.rst:1454
msgid ""
"The behavior of :class:`typing.Literal` was changed to conform with :pep:"
"`586` and to match the behavior of static type checkers specified in the PEP."
msgstr ""
"El comportamiento de :class:`typing.Literal` se modificó para cumplir con :"
"pep:`586` y para coincidir con el comportamiento de los verificadores de "
"tipo estático especificados en el PEP."

#: ../Doc/whatsnew/3.10.rst:1457
msgid "``Literal`` now de-duplicates parameters."
msgstr "``Literal`` ahora elimina los parámetros duplicados."

#: ../Doc/whatsnew/3.10.rst:1458
msgid ""
"Equality comparisons between ``Literal`` objects are now order independent."
msgstr ""
"Las comparaciones de igualdad entre objetos ``Literal`` ahora son "
"independientes del orden."

#: ../Doc/whatsnew/3.10.rst:1459
msgid ""
"``Literal`` comparisons now respect types.  For example, ``Literal[0] == "
"Literal[False]`` previously evaluated to ``True``.  It is now ``False``.  To "
"support this change, the internally used type cache now supports "
"differentiating types."
msgstr ""
"Las comparaciones ``Literal`` ahora respetan los tipos. Por ejemplo, "
"``Literal[0] == Literal[False]`` se evaluó previamente como ``True``. Ahora "
"es ``False``. Para admitir este cambio, la memoria caché de tipos utilizada "
"internamente ahora admite tipos diferenciados."

#: ../Doc/whatsnew/3.10.rst:1463
msgid ""
"``Literal`` objects will now raise a :exc:`TypeError` exception during "
"equality comparisons if any of their parameters are not :term:`hashable`. "
"Note that declaring ``Literal`` with unhashable parameters will not throw an "
"error::"
msgstr ""
"Los objetos ``Literal`` ahora generarán una excepción :exc:`TypeError` "
"durante las comparaciones de igualdad si alguno de sus parámetros no es :"
"term:`hashable`. Tenga en cuenta que declarar ``Literal`` con parámetros que "
"no se pueden aplicar hash no arrojará un error:"

#: ../Doc/whatsnew/3.10.rst:1475
msgid "(Contributed by Yurii Karabas in :issue:`42345`.)"
msgstr "(Contribuido por Yurii Karabas en :issue:`42345`.)"

#: ../Doc/whatsnew/3.10.rst:1477
msgid ""
"Add new function :func:`typing.is_typeddict` to introspect if an annotation "
"is a :class:`typing.TypedDict`. (Contributed by Patrick Reader in :issue:"
"`41792`.)"
msgstr ""
"Agregue la nueva función :func:`typing.is_typeddict` a la introspección si "
"una anotación es :class:`typing.TypedDict`. (Contribuido por Patrick Reader "
"en :issue:`41792`.)"

#: ../Doc/whatsnew/3.10.rst:1481
msgid ""
"Subclasses of ``typing.Protocol`` which only have data variables declared "
"will now raise a ``TypeError`` when checked with ``isinstance`` unless they "
"are decorated with :func:`runtime_checkable`.  Previously, these checks "
"passed silently.  Users should decorate their subclasses with the :func:"
"`runtime_checkable` decorator if they want runtime protocols. (Contributed "
"by Yurii Karabas in :issue:`38908`.)"
msgstr ""
"Las subclases de ``typing.Protocol`` que solo tienen variables de datos "
"declaradas ahora generarán un ``TypeError`` cuando se verifiquen con "
"``isinstance`` a menos que estén decoradas con :func:`runtime_checkable`. "
"Anteriormente, estos controles pasaban en silencio. Los usuarios deben "
"decorar sus subclases con el decorador :func:`runtime_checkable` si quieren "
"protocolos de tiempo de ejecución. (Aportado por Yurii Karabas en :issue:"
"`38908`.)"

#: ../Doc/whatsnew/3.10.rst:1489
msgid ""
"Importing from the ``typing.io`` and ``typing.re`` submodules will now emit :"
"exc:`DeprecationWarning`.  These submodules have been deprecated since "
"Python 3.8 and will be removed in a future version of Python.  Anything "
"belonging to those submodules should be imported directly from :mod:`typing` "
"instead. (Contributed by Sebastian Rittau in :issue:`38291`.)"
msgstr ""
"La importación desde los submódulos ``typing.io`` y ``typing.re`` ahora "
"emitirá :exc:`DeprecationWarning`. Estos submódulos quedaron obsoletos desde "
"Python 3.8 y se eliminarán en una versión futura de Python. Todo lo que "
"pertenezca a esos submódulos debe importarse directamente desde :mod:"
"`typing`. (Aportado por Sebastian Rittau en :issue:`38291`.)"

#: ../Doc/whatsnew/3.10.rst:1497
msgid "unittest"
msgstr "prueba de unidad"

#: ../Doc/whatsnew/3.10.rst:1499
msgid ""
"Add new method :meth:`~unittest.TestCase.assertNoLogs` to complement the "
"existing :meth:`~unittest.TestCase.assertLogs`. (Contributed by Kit Yan Choi "
"in :issue:`39385`.)"
msgstr ""
"Agregue un nuevo método :meth:`~unittest.TestCase.assertNoLogs` para "
"complementar el :meth:`~unittest.TestCase.assertLogs` existente. "
"(Contribuido por Kit Yan Choi en :issue:`39385`.)"

#: ../Doc/whatsnew/3.10.rst:1504
msgid "urllib.parse"
msgstr "urllib.parse"

#: ../Doc/whatsnew/3.10.rst:1506
msgid ""
"Python versions earlier than Python 3.10 allowed using both ``;`` and ``&`` "
"as query parameter separators in :func:`urllib.parse.parse_qs` and :func:"
"`urllib.parse.parse_qsl`.  Due to security concerns, and to conform with "
"newer W3C recommendations, this has been changed to allow only a single "
"separator key, with ``&`` as the default.  This change also affects :func:"
"`cgi.parse` and :func:`cgi.parse_multipart` as they use the affected "
"functions internally.  For more details, please see their respective "
"documentation. (Contributed by Adam Goldschmidt, Senthil Kumaran and Ken Jin "
"in :issue:`42967`.)"
msgstr ""
"Las versiones de Python anteriores a Python 3.10 permitían el uso de ``;`` y "
"``&`` como separadores de parámetros de consulta en :func:`urllib.parse."
"parse_qs` y :func:`urllib.parse.parse_qsl`. Debido a problemas de seguridad "
"y para cumplir con las recomendaciones más recientes del W3C, esto se ha "
"cambiado para permitir solo una clave separadora, con ``&`` como "
"predeterminado. Este cambio también afecta a :func:`cgi.parse` y :func:`cgi."
"parse_multipart` ya que utilizan las funciones afectadas internamente. Para "
"obtener más detalles, consulte su documentación respectiva. (Contribuido por "
"Adam Goldschmidt, Senthil Kumaran y Ken Jin en :issue:`42967`.)"

#: ../Doc/whatsnew/3.10.rst:1517
msgid "xml"
msgstr "xml"

#: ../Doc/whatsnew/3.10.rst:1519
msgid ""
"Add a :class:`~xml.sax.handler.LexicalHandler` class to the :mod:`xml.sax."
"handler` module. (Contributed by Jonathan Gossage and Zackery Spytz in :"
"issue:`35018`.)"
msgstr ""
"Agregue una clase :class:`~xml.sax.handler.LexicalHandler` al módulo :mod:"
"`xml.sax.handler`. (Contribuido por Jonathan Gossage y Zackery Spytz en :"
"issue:`35018`.)"

#: ../Doc/whatsnew/3.10.rst:1524
msgid "zipimport"
msgstr "zipimport"

#: ../Doc/whatsnew/3.10.rst:1525
msgid ""
"Add methods related to :pep:`451`: :meth:`~zipimport.zipimporter."
"find_spec`, :meth:`zipimport.zipimporter.create_module`, and :meth:"
"`zipimport.zipimporter.exec_module`. (Contributed by Brett Cannon in :issue:"
"`42131`.)"
msgstr ""
"Agregue métodos relacionados con :pep:`451`: :meth:`~zipimport.zipimporter."
"find_spec`, :meth:`zipimport.zipimporter.create_module` y :meth:`zipimport."
"zipimporter.exec_module`. (Contribuido por Brett Cannon en :issue:`42131`.)"

#: ../Doc/whatsnew/3.10.rst:1530
msgid ""
"Add :meth:`~zipimport.zipimporter.invalidate_caches` method. (Contributed by "
"Desmond Cheong in :issue:`14678`.)"
msgstr ""
"Agregue el método :meth:`~zipimport.zipimporter.invalidate_caches`. "
"(Contribuido por Desmond Cheong en :issue:`14678`.)"

#: ../Doc/whatsnew/3.10.rst:1535
msgid "Optimizations"
msgstr "Optimizaciones"

#: ../Doc/whatsnew/3.10.rst:1537
#, python-format
msgid ""
"Constructors :func:`str`, :func:`bytes` and :func:`bytearray` are now faster "
"(around 30--40% for small objects). (Contributed by Serhiy Storchaka in :"
"issue:`41334`.)"
msgstr ""
"Los constructores :func:`str`, :func:`bytes` y :func:`bytearray` ahora son "
"más rápidos (alrededor del 30-40% para objetos pequeños). (Contribuido por "
"Serhiy Storchaka en :issue:`41334`.)"

#: ../Doc/whatsnew/3.10.rst:1541
msgid ""
"The :mod:`runpy` module now imports fewer modules. The ``python3 -m module-"
"name`` command startup time is 1.4x faster in average. On Linux, ``python3 -"
"I -m module-name`` imports 69 modules on Python 3.9, whereas it only imports "
"51 modules (-18) on Python 3.10. (Contributed by Victor Stinner in :issue:"
"`41006` and :issue:`41718`.)"
msgstr ""
"El módulo :mod:`runpy` ahora importa menos módulos. El tiempo de inicio del "
"comando ``python3 -m module-name`` es 1,4 veces más rápido en promedio. En "
"Linux, ``python3 -I -m module-name`` importa 69 módulos en Python 3.9, "
"mientras que solo importa 51 módulos (-18) en Python 3.10. (Contribuido por "
"Victor Stinner en :issue:`41006` y :issue:`41718`.)"

#: ../Doc/whatsnew/3.10.rst:1547
#, python-format
msgid ""
"The ``LOAD_ATTR`` instruction now uses new \"per opcode cache\" mechanism.  "
"It is about 36% faster now for regular attributes and 44% faster for slots. "
"(Contributed by Pablo Galindo and Yury Selivanov in :issue:`42093` and Guido "
"van Rossum in :issue:`42927`, based on ideas implemented originally in PyPy "
"and MicroPython.)"
msgstr ""
"La instrucción ``LOAD_ATTR`` ahora usa un nuevo mecanismo \"por caché de "
"código de operación\". Es aproximadamente un 36% más rápido ahora para los "
"atributos regulares y un 44% más rápido para las tragamonedas. (Contribuido "
"por Pablo Galindo y Yury Selivanov en :issue:`42093` y Guido van Rossum en :"
"issue:`42927`, basado en ideas implementadas originalmente en PyPy y "
"MicroPython)."

#: ../Doc/whatsnew/3.10.rst:1553
msgid ""
"When building Python with :option:`--enable-optimizations` now ``-fno-"
"semantic-interposition`` is added to both the compile and link line. This "
"speeds builds of the Python interpreter created with :option:`--enable-"
"shared` with ``gcc`` by up to 30%. See `this article <https://developers."
"redhat.com/blog/2020/06/25/red-hat-enterprise-linux-8-2-brings-faster-"
"python-3-8-run-speeds/>`_ for more details. (Contributed by Victor Stinner "
"and Pablo Galindo in :issue:`38980`.)"
msgstr ""
"Al compilar Python con :option:`--enable-optimizations`, ahora ``-fno-"
"semantic-interposition`` se agrega tanto a la línea de compilación como a la "
"de enlace. Esto acelera las compilaciones del intérprete de Python creado "
"con :option:`--enable-shared` con ``gcc`` hasta en un 30%. Consulte `this "
"article <https://developers.redhat.com/blog/2020/06/25/red-hat-enterprise-"
"linux-8-2-brings-faster-python-3-8-run-speeds/>`_ para obtener más detalles. "
"(Contribuido por Victor Stinner y Pablo Galindo en :issue:`38980`.)"

#: ../Doc/whatsnew/3.10.rst:1561
msgid ""
"Use a new output buffer management code for :mod:`bz2` / :mod:`lzma` / :mod:"
"`zlib` modules, and add ``.readall()`` function to ``_compression."
"DecompressReader`` class. bz2 decompression is now 1.09x ~ 1.17x faster, "
"lzma decompression 1.20x ~ 1.32x faster, ``GzipFile.read(-1)`` 1.11x ~ 1.18x "
"faster. (Contributed by Ma Lin, reviewed by Gregory P. Smith, in :issue:"
"`41486`)"
msgstr ""
"Utilice un nuevo código de gestión del búfer de salida para los módulos :mod:"
"`bz2` / :mod:`lzma` / :mod:`zlib` y agregue la función ``.readall()`` a la "
"clase ``_compression.DecompressReader``. La descompresión de bz2 ahora es "
"1.09x ~ 1.17x más rápida, la descompresión de lzma 1.20x ~ 1.32x más rápida, "
"``GzipFile.read(-1)`` 1.11x ~ 1.18x más rápida. (Contribuido por Ma Lin, "
"revisado por Gregory P. Smith, en :issue:`41486`)"

#: ../Doc/whatsnew/3.10.rst:1567
msgid ""
"When using stringized annotations, annotations dicts for functions are no "
"longer created when the function is created.  Instead, they are stored as a "
"tuple of strings, and the function object lazily converts this into the "
"annotations dict on demand.  This optimization cuts the CPU time needed to "
"define an annotated function by half. (Contributed by Yurii Karabas and "
"Inada Naoki in :issue:`42202`.)"
msgstr ""
"Cuando se utilizan anotaciones en cadena, los dictados de anotaciones para "
"funciones ya no se crean cuando se crea la función. En su lugar, se "
"almacenan como una tupla de cadenas, y el objeto de función convierte esto "
"de forma perezosa en el dictado de anotaciones a pedido. Esta optimización "
"reduce a la mitad el tiempo de CPU necesario para definir una función "
"anotada. (Aportado por Yurii Karabas e Inada Naoki en :issue:`42202`.)"

#: ../Doc/whatsnew/3.10.rst:1574
msgid ""
"Substring search functions such as ``str1 in str2`` and ``str2.find(str1)`` "
"now sometimes use Crochemore & Perrin's \"Two-Way\" string searching "
"algorithm to avoid quadratic behavior on long strings.  (Contributed by "
"Dennis Sweeney in :issue:`41972`)"
msgstr ""
"Las funciones de búsqueda de subcadenas como ``str1 in str2`` y ``str2."
"find(str1)`` ahora utilizan a veces el algoritmo de búsqueda de cadenas "
"\"bidireccional\" de Crochemore & Perrin para evitar el comportamiento "
"cuadrático en cadenas largas. (Contribuido por Dennis Sweeney en :issue:"
"`41972`)"

#: ../Doc/whatsnew/3.10.rst:1579
msgid ""
"Add micro-optimizations to ``_PyType_Lookup()`` to improve type attribute "
"cache lookup performance in the common case of cache hits. This makes the "
"interpreter 1.04 times faster on average. (Contributed by Dino Viehland in :"
"issue:`43452`.)"
msgstr ""
"Agregue microoptimizaciones a ``_PyType_Lookup()`` para mejorar el "
"rendimiento de búsqueda de caché de atributos de tipo en el caso común de "
"coincidencias de caché. Esto hace que el intérprete sea 1,04 veces más "
"rápido de media. (Aportado por Dino Viehland en :issue:`43452`.)"

#: ../Doc/whatsnew/3.10.rst:1583
msgid ""
"The following built-in functions now support the faster :pep:`590` "
"vectorcall calling convention: :func:`map`, :func:`filter`, :func:"
"`reversed`, :func:`bool` and :func:`float`. (Contributed by Dong-hee Na and "
"Jeroen Demeyer in :issue:`43575`, :issue:`43287`, :issue:`41922`, :issue:"
"`41873` and :issue:`41870`.)"
msgstr ""
"Las siguientes funciones integradas ahora son compatibles con la convención "
"de llamada de llamada vectorial :pep:`590` más rápida: :func:`map`, :func:"
"`filter`, :func:`reversed`, :func:`bool` y :func:`float`. (Aportado por Dong-"
"hee Na y Jeroen Demeyer en :issue:`43575`, :issue:`43287`, :issue:`41922`, :"
"issue:`41873` y :issue:`41870`)."

#: ../Doc/whatsnew/3.10.rst:1587
msgid ""
":class:`BZ2File` performance is improved by removing internal ``RLock``. "
"This makes :class:`BZ2File` thread unsafe in the face of multiple "
"simultaneous readers or writers, just like its equivalent classes in :mod:"
"`gzip` and :mod:`lzma` have always been.  (Contributed by Inada Naoki in :"
"issue:`43785`.)"
msgstr ""
"El rendimiento de :class:`BZ2File` se mejora al eliminar el ``RLock`` "
"interno. Esto hace que el subproceso :class:`BZ2File` no sea seguro frente a "
"múltiples lectores o escritores simultáneos, al igual que siempre lo han "
"sido sus clases equivalentes en :mod:`gzip` y :mod:`lzma`. (Aportado por "
"Inada Naoki en :issue:`43785`.)"

#: ../Doc/whatsnew/3.10.rst:1595 ../Doc/whatsnew/3.10.rst:2214
msgid "Deprecated"
msgstr "Obsoleto"

#: ../Doc/whatsnew/3.10.rst:1597
msgid ""
"Currently Python accepts numeric literals immediately followed by keywords, "
"for example ``0in x``, ``1or x``, ``0if 1else 2``.  It allows confusing and "
"ambiguous expressions like ``[0x1for x in y]`` (which can be interpreted as "
"``[0x1 for x in y]`` or ``[0x1f or x in y]``).  Starting in this release, a "
"deprecation warning is raised if the numeric literal is immediately followed "
"by one of keywords :keyword:`and`, :keyword:`else`, :keyword:`for`, :keyword:"
"`if`, :keyword:`in`, :keyword:`is` and :keyword:`or`. In future releases it "
"will be changed to syntax warning, and finally to syntax error. (Contributed "
"by Serhiy Storchaka in :issue:`43833`.)"
msgstr ""
"Actualmente, Python acepta literales numéricos seguidos inmediatamente de "
"palabras clave, por ejemplo, ``0in x``, ``1or x``, ``0if 1else 2``. Permite "
"expresiones confusas y ambiguas como ``[0x1for x in y]`` (que puede "
"interpretarse como ``[0x1 for x in y]`` o ``[0x1f or x in y]``). A partir de "
"esta versión, se genera una advertencia de desuso si el literal numérico va "
"seguido inmediatamente por una de las palabras clave :keyword:`and`, :"
"keyword:`else`, :keyword:`for`, :keyword:`if`, :keyword:`in`, :keyword:`is` "
"y :keyword:`or`. En versiones futuras, se cambiará a advertencia de sintaxis "
"y, finalmente, a error de sintaxis. (Aportado por Serhiy Storchaka en :issue:"
"`43833`.)"

#: ../Doc/whatsnew/3.10.rst:1608
msgid ""
"Starting in this release, there will be a concerted effort to begin cleaning "
"up old import semantics that were kept for Python 2.7 compatibility. "
"Specifically, :meth:`~importlib.abc.PathEntryFinder.find_loader`/:meth:"
"`~importlib.abc.Finder.find_module` (superseded by :meth:`~importlib.abc."
"Finder.find_spec`), :meth:`~importlib.abc.Loader.load_module` (superseded "
"by :meth:`~importlib.abc.Loader.exec_module`), :meth:`~importlib.abc.Loader."
"module_repr` (which the import system takes care of for you), the "
"``__package__`` attribute (superseded by ``__spec__.parent``), the "
"``__loader__`` attribute (superseded by ``__spec__.loader``), and the "
"``__cached__`` attribute (superseded by ``__spec__.cached``) will slowly be "
"removed (as well as other classes and methods in :mod:`importlib`). :exc:"
"`ImportWarning` and/or :exc:`DeprecationWarning` will be raised as "
"appropriate to help identify code which needs updating during this "
"transition."
msgstr ""
"A partir de esta versión, habrá un esfuerzo concertado para comenzar a "
"limpiar la semántica de importación antigua que se mantuvo para la "
"compatibilidad con Python 2.7. Específicamente, :meth:`~importlib.abc."
"PathEntryFinder.find_loader` / :meth:`~importlib.abc.Finder.find_module` "
"(reemplazado por :meth:`~importlib.abc.Finder.find_spec`), :meth:`~importlib."
"abc.Loader.load_module` (reemplazado por :meth:`~importlib.abc.Loader."
"exec_module`), :meth:`~importlib.abc.Loader.module_repr` (que el sistema de "
"importación se ocupa por usted), el atributo ``__package__`` (reemplazado "
"por ``__spec__.parent``), el atributo ``__loader__`` (reemplazado por "
"``__spec__.loader``) y el atributo ``__cached__`` (reemplazado por "
"``__spec__.cached``) se eliminará lentamente (así como otras clases y "
"métodos en :mod:`importlib`). :exc:`ImportWarning` y / o :exc:"
"`DeprecationWarning` se generarán según corresponda para ayudar a "
"identificar el código que debe actualizarse durante esta transición."

#: ../Doc/whatsnew/3.10.rst:1625
msgid ""
"The entire ``distutils`` namespace is deprecated, to be removed in Python "
"3.12. Refer to the :ref:`module changes <distutils-deprecated>` section for "
"more information."
msgstr ""
"Todo el espacio de nombres ``distutils`` está obsoleto y se eliminará en "
"Python 3.12. Consulte la sección :ref:`module changes <distutils-"
"deprecated>` para obtener más información."

#: ../Doc/whatsnew/3.10.rst:1629
msgid ""
"Non-integer arguments to :func:`random.randrange` are deprecated. The :exc:"
"`ValueError` is deprecated in favor of a :exc:`TypeError`. (Contributed by "
"Serhiy Storchaka and Raymond Hettinger in :issue:`37319`.)"
msgstr ""
"Los argumentos que no son enteros para :func:`random.randrange` están en "
"desuso. El :exc:`ValueError` está en desuso en favor de un :exc:`TypeError`. "
"(Contribuido por Serhiy Storchaka y Raymond Hettinger en :issue:`37319`.)"

#: ../Doc/whatsnew/3.10.rst:1633
msgid ""
"The various ``load_module()`` methods of :mod:`importlib` have been "
"documented as deprecated since Python 3.6, but will now also trigger a :exc:"
"`DeprecationWarning`. Use :meth:`~importlib.abc.Loader.exec_module` instead. "
"(Contributed by Brett Cannon in :issue:`26131`.)"
msgstr ""
"Los diversos métodos ``load_module()`` de :mod:`importlib` se han "
"documentado como obsoletos desde Python 3.6, pero ahora también activarán "
"un :exc:`DeprecationWarning`. Utilice :meth:`~importlib.abc.Loader."
"exec_module` en su lugar. (Contribuido por Brett Cannon en :issue:`26131`.)"

#: ../Doc/whatsnew/3.10.rst:1639
msgid ""
":meth:`zimport.zipimporter.load_module` has been deprecated in preference "
"for :meth:`~zipimport.zipimporter.exec_module`. (Contributed by Brett Cannon "
"in :issue:`26131`.)"
msgstr ""
":meth:`zimport.zipimporter.load_module` ha quedado obsoleto en preferencia "
"a :meth:`~zipimport.zipimporter.exec_module`. (Contribuido por Brett Cannon "
"en :issue:`26131`.)"

#: ../Doc/whatsnew/3.10.rst:1643
msgid ""
"The use of :meth:`~importlib.abc.Loader.load_module` by the import system "
"now triggers an :exc:`ImportWarning` as :meth:`~importlib.abc.Loader."
"exec_module` is preferred. (Contributed by Brett Cannon in :issue:`26131`.)"
msgstr ""
"El uso de :meth:`~importlib.abc.Loader.load_module` por parte del sistema de "
"importación ahora activa un :exc:`ImportWarning` ya que se prefiere :meth:"
"`~importlib.abc.Loader.exec_module`. (Contribuido por Brett Cannon en :issue:"
"`26131`.)"

#: ../Doc/whatsnew/3.10.rst:1648
msgid ""
"The use of :meth:`importlib.abc.MetaPathFinder.find_module` and :meth:"
"`importlib.abc.PathEntryFinder.find_module` by the import system now trigger "
"an :exc:`ImportWarning` as :meth:`importlib.abc.MetaPathFinder.find_spec` "
"and :meth:`importlib.abc.PathEntryFinder.find_spec` are preferred, "
"respectively. You can use :func:`importlib.util.spec_from_loader` to help in "
"porting. (Contributed by Brett Cannon in :issue:`42134`.)"
msgstr ""
"El uso de :meth:`importlib.abc.MetaPathFinder.find_module` y :meth:"
"`importlib.abc.PathEntryFinder.find_module` por parte del sistema de "
"importación ahora activa un :exc:`ImportWarning`, ya que se prefieren :meth:"
"`importlib.abc.MetaPathFinder.find_spec` y :meth:`importlib.abc."
"PathEntryFinder.find_spec`, respectivamente. Puede utilizar :func:`importlib."
"util.spec_from_loader` para ayudar en la migración. (Contribuido por Brett "
"Cannon en :issue:`42134`.)"

#: ../Doc/whatsnew/3.10.rst:1657
msgid ""
"The use of :meth:`importlib.abc.PathEntryFinder.find_loader` by the import "
"system now triggers an :exc:`ImportWarning` as :meth:`importlib.abc."
"PathEntryFinder.find_spec` is preferred. You can use :func:`importlib.util."
"spec_from_loader` to help in porting. (Contributed by Brett Cannon in :issue:"
"`43672`.)"
msgstr ""
"El uso de :meth:`importlib.abc.PathEntryFinder.find_loader` por parte del "
"sistema de importación ahora activa un :exc:`ImportWarning`, ya que se "
"prefiere :meth:`importlib.abc.PathEntryFinder.find_spec`. Puede utilizar :"
"func:`importlib.util.spec_from_loader` para ayudar en la migración. "
"(Contribuido por Brett Cannon en :issue:`43672`.)"

#: ../Doc/whatsnew/3.10.rst:1663
msgid ""
"The various implementations of :meth:`importlib.abc.MetaPathFinder."
"find_module` ( :meth:`importlib.machinery.BuiltinImporter.find_module`, :"
"meth:`importlib.machinery.FrozenImporter.find_module`, :meth:`importlib."
"machinery.WindowsRegistryFinder.find_module`, :meth:`importlib.machinery."
"PathFinder.find_module`, :meth:`importlib.abc.MetaPathFinder."
"find_module` ), :meth:`importlib.abc.PathEntryFinder.find_module` ( :meth:"
"`importlib.machinery.FileFinder.find_module` ), and :meth:`importlib.abc."
"PathEntryFinder.find_loader` ( :meth:`importlib.machinery.FileFinder."
"find_loader` ) now raise :exc:`DeprecationWarning` and are slated for "
"removal in Python 3.12 (previously they were documented as deprecated in "
"Python 3.4). (Contributed by Brett Cannon in :issue:`42135`.)"
msgstr ""
"Las diversas implementaciones de :meth:`importlib.abc.MetaPathFinder."
"find_module` ( :meth:`importlib.machinery.BuiltinImporter.find_module`, :"
"meth:`importlib.machinery.FrozenImporter.find_module`, :meth:`importlib."
"machinery.WindowsRegistryFinder.find_module`, :meth:`importlib.machinery."
"PathFinder.find_module`, :meth:`importlib.abc.MetaPathFinder."
"find_module` ), :meth:`importlib.abc.PathEntryFinder.find_module` ( :meth:"
"`importlib.machinery.FileFinder.find_module` ) y :meth:`importlib.abc."
"PathEntryFinder.find_loader` ( :meth:`importlib.machinery.FileFinder."
"find_loader` ) ahora generan :exc:`DeprecationWarning` y están programadas "
"para su eliminación en Python 3.12 (anteriormente se documentaron como "
"obsoletas en Python 3.4). (Aportado por Brett Cannon en :issue:`42135`.)"

#: ../Doc/whatsnew/3.10.rst:1678
msgid ""
":class:`importlib.abc.Finder` is deprecated (including its sole method, :"
"meth:`~importlib.abc.Finder.find_module`). Both :class:`importlib.abc."
"MetaPathFinder` and :class:`importlib.abc.PathEntryFinder` no longer inherit "
"from the class. Users should inherit from one of these two classes as "
"appropriate instead. (Contributed by Brett Cannon in :issue:`42135`.)"
msgstr ""
":class:`importlib.abc.Finder` está en desuso (incluido su único método, :"
"meth:`~importlib.abc.Finder.find_module`). Tanto :class:`importlib.abc."
"MetaPathFinder` como :class:`importlib.abc.PathEntryFinder` ya no heredan de "
"la clase. Los usuarios deben heredar de una de estas dos clases según "
"corresponda. (Contribuido por Brett Cannon en :issue:`42135`.)"

#: ../Doc/whatsnew/3.10.rst:1685
msgid ""
"The deprecations of :mod:`imp`, :func:`importlib.find_loader`, :func:"
"`importlib.util.set_package_wrapper`, :func:`importlib.util."
"set_loader_wrapper`, :func:`importlib.util.module_for_loader`, :class:"
"`pkgutil.ImpImporter`, and :class:`pkgutil.ImpLoader` have all been updated "
"to list Python 3.12 as the slated version of removal (they began raising :"
"exc:`DeprecationWarning` in previous versions of Python). (Contributed by "
"Brett Cannon in :issue:`43720`.)"
msgstr ""
"Las bajas de :mod:`imp`, :func:`importlib.find_loader`, :func:`importlib."
"util.set_package_wrapper`, :func:`importlib.util.set_loader_wrapper`, :func:"
"`importlib.util.module_for_loader`, :class:`pkgutil.ImpImporter` y :class:"
"`pkgutil.ImpLoader` se han actualizado para incluir Python 3.12 como la "
"versión programada de eliminación (comenzaron a generar :exc:"
"`DeprecationWarning` en versiones anteriores de Python). (Contribuido por "
"Brett Cannon en :issue:`43720`.)"

#: ../Doc/whatsnew/3.10.rst:1695
msgid ""
"The import system now uses the ``__spec__`` attribute on modules before "
"falling back on :meth:`~importlib.abc.Loader.module_repr` for a module's "
"``__repr__()`` method. Removal of the use of ``module_repr()`` is scheduled "
"for Python 3.12. (Contributed by Brett Cannon in :issue:`42137`.)"
msgstr ""
"El sistema de importación ahora usa el atributo ``__spec__`` en los módulos "
"antes de recurrir a :meth:`~importlib.abc.Loader.module_repr` para el método "
"``__repr__()`` de un módulo. La eliminación del uso de ``module_repr()`` "
"está programada para Python 3.12. (Contribuido por Brett Cannon en :issue:"
"`42137`.)"

#: ../Doc/whatsnew/3.10.rst:1701
msgid ""
":meth:`importlib.abc.Loader.module_repr`, :meth:`importlib.machinery."
"FrozenLoader.module_repr`, and :meth:`importlib.machinery.BuiltinLoader."
"module_repr` are deprecated and slated for removal in Python 3.12. "
"(Contributed by Brett Cannon in :issue:`42136`.)"
msgstr ""
":meth:`importlib.abc.Loader.module_repr`, :meth:`importlib.machinery."
"FrozenLoader.module_repr` y :meth:`importlib.machinery.BuiltinLoader."
"module_repr` están en desuso y están programados para su eliminación en "
"Python 3.12. (Contribuido por Brett Cannon en :issue:`42136`.)"

#: ../Doc/whatsnew/3.10.rst:1707
msgid ""
"``sqlite3.OptimizedUnicode`` has been undocumented and obsolete since Python "
"3.3, when it was made an alias to :class:`str`.  It is now deprecated, "
"scheduled for removal in Python 3.12. (Contributed by Erlend E. Aasland in :"
"issue:`42264`.)"
msgstr ""
"``sqlite3.OptimizedUnicode`` ha sido indocumentado y obsoleto desde Python "
"3.3, cuando se convirtió en un alias para :class:`str`. Ahora está en "
"desuso, programado para su eliminación en Python 3.12. (Contribuido por "
"Erlend E. Aasland en :issue:`42264`.)"

#: ../Doc/whatsnew/3.10.rst:1712
msgid ""
":func:`asyncio.get_event_loop` now emits a deprecation warning if there is "
"no running event loop. In the future it will be an alias of :func:`~asyncio."
"get_running_loop`. :mod:`asyncio` functions which implicitly create :class:"
"`~asyncio.Future` or :class:`~asyncio.Task` objects now emit a deprecation "
"warning if there is no running event loop and no explicit *loop* argument is "
"passed: :func:`~asyncio.ensure_future`, :func:`~asyncio.wrap_future`, :func:"
"`~asyncio.gather`, :func:`~asyncio.shield`, :func:`~asyncio.as_completed` "
"and constructors of :class:`~asyncio.Future`, :class:`~asyncio.Task`, :class:"
"`~asyncio.StreamReader`, :class:`~asyncio.StreamReaderProtocol`. "
"(Contributed by Serhiy Storchaka in :issue:`39529`.)"
msgstr ""
":func:`asyncio.get_event_loop` ahora emite una advertencia de desaprobación "
"si no hay un bucle de eventos en ejecución. En el futuro será un alias de :"
"func:`~asyncio.get_running_loop`. Las funciones :mod:`asyncio` que crean "
"implícitamente objetos :class:`~asyncio.Future` o :class:`~asyncio.Task` "
"ahora emiten una advertencia de desuso si no hay un bucle de eventos en "
"ejecución y no se pasa un argumento *loop* explícito: :func:`~asyncio."
"ensure_future`, :func:`~asyncio.wrap_future`, :func:`~asyncio.gather`, :func:"
"`~asyncio.shield`, :func:`~asyncio.as_completed` y constructores de :class:"
"`~asyncio.Future`, :class:`~asyncio.Task`, :class:`~asyncio.StreamReader`, :"
"class:`~asyncio.StreamReaderProtocol`. (Aportado por Serhiy Storchaka en :"
"issue:`39529`.)"

#: ../Doc/whatsnew/3.10.rst:1725
msgid ""
"The undocumented built-in function ``sqlite3.enable_shared_cache`` is now "
"deprecated, scheduled for removal in Python 3.12.  Its use is strongly "
"discouraged by the SQLite3 documentation.  See `the SQLite3 docs <https://"
"sqlite.org/c3ref/enable_shared_cache.html>`_ for more details. If a shared "
"cache must be used, open the database in URI mode using the ``cache=shared`` "
"query parameter. (Contributed by Erlend E. Aasland in :issue:`24464`.)"
msgstr ""
"La función incorporada no documentada ``sqlite3.enable_shared_cache`` ahora "
"está en desuso, programada para su eliminación en Python 3.12. Su uso está "
"fuertemente desaconsejado por la documentación de SQLite3. Consulte `the "
"SQLite3 docs <https://sqlite.org/c3ref/enable_shared_cache.html>`_ para "
"obtener más detalles. Si se debe usar una caché compartida, abra la base de "
"datos en modo URI usando el parámetro de consulta ``cache=shared``. "
"(Contribuido por Erlend E. Aasland en :issue:`24464`.)"

#: ../Doc/whatsnew/3.10.rst:1733
msgid "The following ``threading`` methods are now deprecated:"
msgstr "Los siguientes métodos ``threading`` ahora están en desuso:"

#: ../Doc/whatsnew/3.10.rst:1735
msgid "``threading.currentThread`` => :func:`threading.current_thread`"
msgstr "``threading.currentThread`` => :func:`threading.current_thread`"

#: ../Doc/whatsnew/3.10.rst:1737
msgid "``threading.activeCount`` => :func:`threading.active_count`"
msgstr "``threading.activeCount`` => :func:`threading.active_count`"

#: ../Doc/whatsnew/3.10.rst:1739
msgid ""
"``threading.Condition.notifyAll`` => :meth:`threading.Condition.notify_all`"
msgstr ""
"``threading.Condition.notifyAll`` => :meth:`threading.Condition.notify_all`"

#: ../Doc/whatsnew/3.10.rst:1742
msgid "``threading.Event.isSet`` => :meth:`threading.Event.is_set`"
msgstr "``threading.Event.isSet`` => :meth:`threading.Event.is_set`"

#: ../Doc/whatsnew/3.10.rst:1744
msgid "``threading.Thread.setName`` => :attr:`threading.Thread.name`"
msgstr "``threading.Thread.setName`` => :attr:`threading.Thread.name`"

#: ../Doc/whatsnew/3.10.rst:1746
msgid "``threading.thread.getName`` => :attr:`threading.Thread.name`"
msgstr "``threading.thread.getName`` => :attr:`threading.Thread.name`"

#: ../Doc/whatsnew/3.10.rst:1748
msgid "``threading.Thread.isDaemon`` => :attr:`threading.Thread.daemon`"
msgstr "``threading.Thread.isDaemon`` => :attr:`threading.Thread.daemon`"

#: ../Doc/whatsnew/3.10.rst:1750
msgid "``threading.Thread.setDaemon`` => :attr:`threading.Thread.daemon`"
msgstr "``threading.Thread.setDaemon`` => :attr:`threading.Thread.daemon`"

#: ../Doc/whatsnew/3.10.rst:1752
msgid "(Contributed by Jelle Zijlstra in :gh:`87889`.)"
msgstr "(Aportado por Jelle Zijlstra en :gh:`87889`.)"

#: ../Doc/whatsnew/3.10.rst:1754
msgid ""
":meth:`pathlib.Path.link_to` is deprecated and slated for removal in Python "
"3.12. Use :meth:`pathlib.Path.hardlink_to` instead. (Contributed by Barney "
"Gale in :issue:`39950`.)"
msgstr ""
":meth:`pathlib.Path.link_to` está en desuso y está programado para su "
"eliminación en Python 3.12. Utilice :meth:`pathlib.Path.hardlink_to` en su "
"lugar. (Contribuido por Barney Gale en :issue:`39950`.)"

#: ../Doc/whatsnew/3.10.rst:1758
msgid ""
"``cgi.log()`` is deprecated and slated for removal in Python 3.12. "
"(Contributed by Inada Naoki in :issue:`41139`.)"
msgstr ""
"``cgi.log()`` está obsoleto y está programado para su eliminación en Python "
"3.12. (Contribuido por Inada Naoki en :issue:`41139`.)"

#: ../Doc/whatsnew/3.10.rst:1761
msgid ""
"The following :mod:`ssl` features have been deprecated since Python 3.6, "
"Python 3.7, or OpenSSL 1.1.0 and will be removed in 3.11:"
msgstr ""
"Las siguientes funciones de :mod:`ssl` han quedado obsoletas desde Python "
"3.6, Python 3.7 u OpenSSL 1.1.0 y se eliminarán en 3.11:"

#: ../Doc/whatsnew/3.10.rst:1764
msgid ""
":data:`~ssl.OP_NO_SSLv2`, :data:`~ssl.OP_NO_SSLv3`, :data:`~ssl."
"OP_NO_TLSv1`, :data:`~ssl.OP_NO_TLSv1_1`, :data:`~ssl.OP_NO_TLSv1_2`, and :"
"data:`~ssl.OP_NO_TLSv1_3` are replaced by :attr:`sslSSLContext."
"minimum_version` and :attr:`sslSSLContext.maximum_version`."
msgstr ""
":data:`~ssl.OP_NO_SSLv2`, :data:`~ssl.OP_NO_SSLv3`, :data:`~ssl."
"OP_NO_TLSv1`, :data:`~ssl.OP_NO_TLSv1_1`, :data:`~ssl.OP_NO_TLSv1_2` y :data:"
"`~ssl.OP_NO_TLSv1_3` se reemplazan por :attr:`sslSSLContext.minimum_version` "
"y :attr:`sslSSLContext.maximum_version`."

#: ../Doc/whatsnew/3.10.rst:1770
msgid ""
":data:`~ssl.PROTOCOL_SSLv2`, :data:`~ssl.PROTOCOL_SSLv3`, :data:`~ssl."
"PROTOCOL_SSLv23`, :data:`~ssl.PROTOCOL_TLSv1`, :data:`~ssl."
"PROTOCOL_TLSv1_1`, :data:`~ssl.PROTOCOL_TLSv1_2`, and :data:`~ssl."
"PROTOCOL_TLS` are deprecated in favor of :data:`~ssl.PROTOCOL_TLS_CLIENT` "
"and :data:`~ssl.PROTOCOL_TLS_SERVER`"
msgstr ""
":data:`~ssl.PROTOCOL_SSLv2`, :data:`~ssl.PROTOCOL_SSLv3`, :data:`~ssl."
"PROTOCOL_SSLv23`, :data:`~ssl.PROTOCOL_TLSv1`, :data:`~ssl."
"PROTOCOL_TLSv1_1`, :data:`~ssl.PROTOCOL_TLSv1_2` y :data:`~ssl.PROTOCOL_TLS` "
"están en desuso a favor de :data:`~ssl.PROTOCOL_TLS_CLIENT` y :data:`~ssl."
"PROTOCOL_TLS_SERVER`"

#: ../Doc/whatsnew/3.10.rst:1776
msgid ""
":func:`~ssl.wrap_socket` is replaced by :meth:`ssl.SSLContext.wrap_socket`"
msgstr ""
":func:`~ssl.wrap_socket` es reemplazado por :meth:`ssl.SSLContext."
"wrap_socket`"

#: ../Doc/whatsnew/3.10.rst:1778
msgid ":func:`~ssl.match_hostname`"
msgstr ":func:`~ssl.match_hostname`"

#: ../Doc/whatsnew/3.10.rst:1780
msgid ":func:`~ssl.RAND_pseudo_bytes`, :func:`~ssl.RAND_egd`"
msgstr ":func:`~ssl.RAND_pseudo_bytes`, :func:`~ssl.RAND_egd`"

#: ../Doc/whatsnew/3.10.rst:1782
msgid ""
"NPN features like :meth:`ssl.SSLSocket.selected_npn_protocol` and :meth:`ssl."
"SSLContext.set_npn_protocols` are replaced by ALPN."
msgstr ""
"Las funciones NPN como :meth:`ssl.SSLSocket.selected_npn_protocol` y :meth:"
"`ssl.SSLContext.set_npn_protocols` son reemplazadas por ALPN."

#: ../Doc/whatsnew/3.10.rst:1785
msgid ""
"The threading debug (:envvar:`PYTHONTHREADDEBUG` environment variable) is "
"deprecated in Python 3.10 and will be removed in Python 3.12. This feature "
"requires a :ref:`debug build of Python <debug-build>`. (Contributed by "
"Victor Stinner in :issue:`44584`.)"
msgstr ""
"La depuración de subprocesos (variable de entorno :envvar:"
"`PYTHONTHREADDEBUG`) está obsoleta en Python 3.10 y se eliminará en Python "
"3.12. Esta característica requiere un :ref:`debug build of Python <debug-"
"build>`. (Contribuido por Victor Stinner en :issue:`44584`.)"

#: ../Doc/whatsnew/3.10.rst:1790
msgid ""
"Importing from the ``typing.io`` and ``typing.re`` submodules will now emit :"
"exc:`DeprecationWarning`.  These submodules will be removed in a future "
"version of Python.  Anything belonging to these submodules should be "
"imported directly from :mod:`typing` instead. (Contributed by Sebastian "
"Rittau in :issue:`38291`.)"
msgstr ""
"La importación desde los submódulos ``typing.io`` y ``typing.re`` ahora "
"emitirá :exc:`DeprecationWarning`. Estos submódulos se eliminarán en una "
"versión futura de Python. Todo lo que pertenezca a estos submódulos debe "
"importarse directamente desde :mod:`typing`. (Aportado por Sebastian Rittau "
"en :issue:`38291`.)"

#: ../Doc/whatsnew/3.10.rst:1799 ../Doc/whatsnew/3.10.rst:2222
msgid "Removed"
msgstr "Eliminado"

#: ../Doc/whatsnew/3.10.rst:1801
msgid ""
"Removed special methods ``__int__``, ``__float__``, ``__floordiv__``, "
"``__mod__``, ``__divmod__``, ``__rfloordiv__``, ``__rmod__`` and "
"``__rdivmod__`` of the :class:`complex` class.  They always raised a :exc:"
"`TypeError`. (Contributed by Serhiy Storchaka in :issue:`41974`.)"
msgstr ""
"Se eliminaron los métodos especiales ``__int__``, ``__float__``, "
"``__floordiv__``, ``__mod__``, ``__divmod__``, ``__rfloordiv__``, "
"``__rmod__`` y ``__rdivmod__`` de la clase :class:`complex`. Siempre "
"levantaron un :exc:`TypeError`. (Contribuido por Serhiy Storchaka en :issue:"
"`41974`.)"

#: ../Doc/whatsnew/3.10.rst:1807
msgid ""
"The ``ParserBase.error()`` method from the private and undocumented "
"``_markupbase`` module has been removed.  :class:`html.parser.HTMLParser` is "
"the only subclass of ``ParserBase`` and its ``error()`` implementation was "
"already removed in Python 3.5. (Contributed by Berker Peksag in :issue:"
"`31844`.)"
msgstr ""
"Se ha eliminado el método ``ParserBase.error()`` del módulo ``_markupbase`` "
"privado e indocumentado. :class:`html.parser.HTMLParser` es la única "
"subclase de ``ParserBase`` y su implementación ``error()`` ya se eliminó en "
"Python 3.5. (Contribuido por Berker Peksag en :issue:`31844`.)"

#: ../Doc/whatsnew/3.10.rst:1813
msgid ""
"Removed the ``unicodedata.ucnhash_CAPI`` attribute which was an internal "
"PyCapsule object. The related private ``_PyUnicode_Name_CAPI`` structure was "
"moved to the internal C API. (Contributed by Victor Stinner in :issue:"
"`42157`.)"
msgstr ""
"Se eliminó el atributo ``unicodedata.ucnhash_CAPI`` que era un objeto "
"interno de PyCapsule. La estructura ``_PyUnicode_Name_CAPI`` privada "
"relacionada se movió a la API C interna. (Contribuido por Victor Stinner en :"
"issue:`42157`.)"

#: ../Doc/whatsnew/3.10.rst:1818
msgid ""
"Removed the ``parser`` module, which was deprecated in 3.9 due to the switch "
"to the new PEG parser, as well as all the C source and header files that "
"were only being used by the old parser, including ``node.h``, ``parser.h``, "
"``graminit.h`` and ``grammar.h``."
msgstr ""
"Se eliminó el módulo ``parser``, que quedó obsoleto en 3.9 debido al cambio "
"al nuevo analizador PEG, así como todos los archivos fuente y de encabezado "
"C que solo usaba el analizador anterior, incluidos ``node.h``, ``parser.h``, "
"``graminit.h`` y ``grammar.h``."

#: ../Doc/whatsnew/3.10.rst:1823
msgid ""
"Removed the Public C API functions ``PyParser_SimpleParseStringFlags``, "
"``PyParser_SimpleParseStringFlagsFilename``, "
"``PyParser_SimpleParseFileFlags`` and ``PyNode_Compile`` that were "
"deprecated in 3.9 due to the switch to the new PEG parser."
msgstr ""
"Se eliminaron las funciones de la API pública de C "
"``PyParser_SimpleParseStringFlags``, "
"``PyParser_SimpleParseStringFlagsFilename``, "
"``PyParser_SimpleParseFileFlags`` y ``PyNode_Compile`` que estaban en desuso "
"en 3.9 debido al cambio al nuevo analizador PEG."

#: ../Doc/whatsnew/3.10.rst:1828
msgid ""
"Removed the ``formatter`` module, which was deprecated in Python 3.4. It is "
"somewhat obsolete, little used, and not tested. It was originally scheduled "
"to be removed in Python 3.6, but such removals were delayed until after "
"Python 2.7 EOL. Existing users should copy whatever classes they use into "
"their code. (Contributed by Dong-hee Na and Terry J. Reedy in :issue:"
"`42299`.)"
msgstr ""
"Se eliminó el módulo ``formatter``, que estaba en desuso en Python 3.4. Es "
"algo obsoleto, poco usado y no probado. Originalmente estaba programado para "
"ser eliminado en Python 3.6, pero tales eliminaciones se retrasaron hasta "
"después de Python 2.7 EOL. Los usuarios existentes deben copiar cualquier "
"clase que utilicen en su código. (Contribuido por Dong-hee Na y Terry J. "
"Reedy en :issue:`42299`.)"

#: ../Doc/whatsnew/3.10.rst:1835
msgid ""
"Removed the :c:func:`PyModule_GetWarningsModule` function that was useless "
"now due to the _warnings module was converted to a builtin module in 2.6. "
"(Contributed by Hai Shi in :issue:`42599`.)"
msgstr ""
"Se eliminó la función :c:func:`PyModule_GetWarningsModule` que ahora era "
"inútil debido a que el módulo _warnings se convirtió en un módulo "
"incorporado en 2.6. (Contribuido por Hai Shi en :issue:`42599`.)"

#: ../Doc/whatsnew/3.10.rst:1839
msgid ""
"Remove deprecated aliases to :ref:`collections-abstract-base-classes` from "
"the :mod:`collections` module. (Contributed by Victor Stinner in :issue:"
"`37324`.)"
msgstr ""
"Elimine los alias obsoletos a :ref:`collections-abstract-base-classes` del "
"módulo :mod:`collections`. (Contribuido por Victor Stinner en :issue:"
"`37324`.)"

#: ../Doc/whatsnew/3.10.rst:1843
msgid ""
"The ``loop`` parameter has been removed from most of :mod:`asyncio`\\ 's :"
"doc:`high-level API <../library/asyncio-api-index>` following deprecation in "
"Python 3.8.  The motivation behind this change is multifold:"
msgstr ""
"El parámetro ``loop`` se ha eliminado de la mayoría de :mod:`asyncio`\\ 's :"
"doc:`API de alto nivel <../library/asyncio-api-index>` después de la "
"desaprobación en Python 3.8. La motivación detrás de este cambio es múltiple:"

#: ../Doc/whatsnew/3.10.rst:1847
msgid "This simplifies the high-level API."
msgstr "Esto simplifica la API de alto nivel."

#: ../Doc/whatsnew/3.10.rst:1848
msgid ""
"The functions in the high-level API have been implicitly getting the current "
"thread's running event loop since Python 3.7.  There isn't a need to pass "
"the event loop to the API in most normal use cases."
msgstr ""
"Las funciones en la API de alto nivel han obtenido implícitamente el bucle "
"de eventos en ejecución del hilo actual desde Python 3.7. No es necesario "
"pasar el bucle de eventos a la API en la mayoría de los casos de uso "
"normales."

#: ../Doc/whatsnew/3.10.rst:1851
msgid ""
"Event loop passing is error-prone especially when dealing with loops running "
"in different threads."
msgstr ""
"El paso de bucles de eventos es propenso a errores, especialmente cuando se "
"trata de bucles que se ejecutan en diferentes subprocesos."

#: ../Doc/whatsnew/3.10.rst:1854
msgid ""
"Note that the low-level API will still accept ``loop``. See :ref:`changes-"
"python-api` for examples of how to replace existing code."
msgstr ""
"Tenga en cuenta que la API de bajo nivel seguirá aceptando ``loop``. "
"Consulte :ref:`changes-python-api` para ver ejemplos de cómo reemplazar el "
"código existente."

#: ../Doc/whatsnew/3.10.rst:1857 ../Doc/whatsnew/3.10.rst:1929
msgid ""
"(Contributed by Yurii Karabas, Andrew Svetlov, Yury Selivanov and Kyle "
"Stanley in :issue:`42392`.)"
msgstr ""
"(Contribuido por Yurii Karabas, Andrew Svetlov, Yury Selivanov y Kyle "
"Stanley en :issue:`42392`.)"

#: ../Doc/whatsnew/3.10.rst:1862 ../Doc/whatsnew/3.10.rst:2149
msgid "Porting to Python 3.10"
msgstr "Portar a Python 3.10"

#: ../Doc/whatsnew/3.10.rst:1864
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta sección enumera los cambios descritos anteriormente y otras "
"correcciones de errores que pueden requerir cambios en su código."

#: ../Doc/whatsnew/3.10.rst:1869
msgid "Changes in the Python syntax"
msgstr "Cambios en la sintaxis de Python"

#: ../Doc/whatsnew/3.10.rst:1871
msgid ""
"Deprecation warning is now emitted when compiling previously valid syntax if "
"the numeric literal is immediately followed by a keyword (like in ``0in "
"x``). In future releases it will be changed to syntax warning, and finally "
"to a syntax error.  To get rid of the warning and make the code compatible "
"with future releases just add a space between the numeric literal and the "
"following keyword. (Contributed by Serhiy Storchaka in :issue:`43833`.)"
msgstr ""
"Ahora se emite una advertencia de desaprobación cuando se compila una "
"sintaxis previamente válida si el literal numérico va seguido inmediatamente "
"de una palabra clave (como en ``0in x``). En versiones futuras, se cambiará "
"a advertencia de sintaxis y, finalmente, a error de sintaxis. Para "
"deshacerse de la advertencia y hacer que el código sea compatible con "
"versiones futuras, simplemente agregue un espacio entre el literal numérico "
"y la siguiente palabra clave. (Aportado por Serhiy Storchaka en :issue:"
"`43833`.)"

#: ../Doc/whatsnew/3.10.rst:1882
msgid "Changes in the Python API"
msgstr "Cambios en la API de Python"

#: ../Doc/whatsnew/3.10.rst:1884
msgid ""
"The *etype* parameters of the :func:`~traceback.format_exception`, :func:"
"`~traceback.format_exception_only`, and :func:`~traceback.print_exception` "
"functions in the :mod:`traceback` module have been renamed to *exc*. "
"(Contributed by Zackery Spytz and Matthias Bussonnier in :issue:`26389`.)"
msgstr ""
"Los parámetros *etype* de las funciones :func:`~traceback."
"format_exception`, :func:`~traceback.format_exception_only`, y :func:"
"`~traceback.print_exception` en el módulo :mod:`traceback` han sido "
"renombradas a *exc*. (Contribuido por Zackery Spytz y Matthias Bussonnier "
"en :issue:`26389`.)"

#: ../Doc/whatsnew/3.10.rst:1890
msgid ""
":mod:`atexit`: At Python exit, if a callback registered with :func:`atexit."
"register` fails, its exception is now logged. Previously, only some "
"exceptions were logged, and the last exception was always silently ignored. "
"(Contributed by Victor Stinner in :issue:`42639`.)"
msgstr ""
":mod:`atexit`: en la salida de Python, si falla una devolución de llamada "
"registrada con :func:`atexit.register`, ahora se registra su excepción. "
"Anteriormente, solo se registraban algunas excepciones y la última excepción "
"siempre se ignoraba en silencio. (Contribuido por Victor Stinner en :issue:"
"`42639`.)"

#: ../Doc/whatsnew/3.10.rst:1896
msgid ""
":class:`collections.abc.Callable` generic now flattens type parameters, "
"similar to what :data:`typing.Callable` currently does.  This means that "
"``collections.abc.Callable[[int, str], str]`` will have ``__args__`` of "
"``(int, str, str)``; previously this was ``([int, str], str)``.  Code which "
"accesses the arguments via :func:`typing.get_args` or ``__args__`` need to "
"account for this change.  Furthermore, :exc:`TypeError` may be raised for "
"invalid forms of parameterizing :class:`collections.abc.Callable` which may "
"have passed silently in Python 3.9. (Contributed by Ken Jin in :issue:"
"`42195`.)"
msgstr ""
":class:`collections.abc.Callable` genérico ahora aplana los parámetros de "
"tipo, similar a lo que hace actualmente :data:`typing.Callable`. Esto "
"significa que ``collections.abc.Callable[[int, str], str]`` tendrá "
"``__args__`` de ``(int, str, str)``; anteriormente esto era ``([int, str], "
"str)``. El código que accede a los argumentos a través de :func:`typing."
"get_args` o ``__args__`` debe tener en cuenta este cambio. Además, :exc:"
"`TypeError` se puede generar para formas no válidas de parametrizar :class:"
"`collections.abc.Callable` que pueden haber pasado silenciosamente en Python "
"3.9. (Contribuido por Ken Jin en :issue:`42195`.)"

#: ../Doc/whatsnew/3.10.rst:1906
msgid ""
":meth:`socket.htons` and :meth:`socket.ntohs` now raise :exc:`OverflowError` "
"instead of :exc:`DeprecationWarning` if the given parameter will not fit in "
"a 16-bit unsigned integer. (Contributed by Erlend E. Aasland in :issue:"
"`42393`.)"
msgstr ""
":meth:`socket.htons` y :meth:`socket.ntohs` ahora generan :exc:"
"`OverflowError` en lugar de :exc:`DeprecationWarning` si el parámetro dado "
"no cabe en un entero sin signo de 16 bits. (Contribuido por Erlend E. "
"Aasland en :issue:`42393`.)"

#: ../Doc/whatsnew/3.10.rst:1911
msgid ""
"The ``loop`` parameter has been removed from most of :mod:`asyncio`\\ 's :"
"doc:`high-level API <../library/asyncio-api-index>` following deprecation in "
"Python 3.8."
msgstr ""
"El parámetro ``loop`` se ha eliminado de la mayoría de :mod:`asyncio`\\ 's :"
"doc:`API de alto nivel <../library/asyncio-api-index>` después de la "
"desaprobación en Python 3.8."

#: ../Doc/whatsnew/3.10.rst:1915
msgid "A coroutine that currently looks like this::"
msgstr "Una corrutina que actualmente se ve así:"

#: ../Doc/whatsnew/3.10.rst:1920
msgid "Should be replaced with this::"
msgstr "Debería ser reemplazado por esto:"

#: ../Doc/whatsnew/3.10.rst:1925
msgid ""
"If ``foo()`` was specifically designed *not* to run in the current thread's "
"running event loop (e.g. running in another thread's event loop), consider "
"using :func:`asyncio.run_coroutine_threadsafe` instead."
msgstr ""
"Si ``foo()`` fue diseñado específicamente *not* para ejecutarse en el bucle "
"de eventos en ejecución del hilo actual (por ejemplo, ejecutándose en el "
"bucle de eventos de otro hilo), considere usar :func:`asyncio."
"run_coroutine_threadsafe` en su lugar."

#: ../Doc/whatsnew/3.10.rst:1932
msgid ""
"The :data:`types.FunctionType` constructor now inherits the current builtins "
"if the *globals* dictionary has no ``\"__builtins__\"`` key, rather than "
"using ``{\"None\": None}`` as builtins: same behavior as :func:`eval` and :"
"func:`exec` functions.  Defining a function with ``def function(...): ...`` "
"in Python is not affected, globals cannot be overridden with this syntax: it "
"also inherits the current builtins. (Contributed by Victor Stinner in :issue:"
"`42990`.)"
msgstr ""
"El constructor :data:`types.FunctionType` ahora hereda las incorporaciones "
"actuales si el diccionario *globals* no tiene clave ``\"__builtins__\"``, en "
"lugar de usar ``{\"None\": None}`` como incorporaciones: el mismo "
"comportamiento que las funciones :func:`eval` y :func:`exec`. La definición "
"de una función con ``def function(...): ...`` en Python no se ve afectada, "
"los globales no se pueden anular con esta sintaxis: también hereda las "
"incorporaciones actuales. (Contribuido por Victor Stinner en :issue:`42990`.)"

#: ../Doc/whatsnew/3.10.rst:1941
msgid "Changes in the C API"
msgstr "Cambios en la API de C"

#: ../Doc/whatsnew/3.10.rst:1943
msgid ""
"The C API functions ``PyParser_SimpleParseStringFlags``, "
"``PyParser_SimpleParseStringFlagsFilename``, "
"``PyParser_SimpleParseFileFlags``, ``PyNode_Compile`` and the type used by "
"these functions, ``struct _node``, were removed due to the switch to the new "
"PEG parser."
msgstr ""
"Las funciones de API C ``PyParser_SimpleParseStringFlags``, "
"``PyParser_SimpleParseStringFlagsFilename``, "
"``PyParser_SimpleParseFileFlags``, ``PyNode_Compile`` y el tipo utilizado "
"por estas funciones, ``struct _node``, se eliminaron debido al cambio al "
"nuevo analizador PEG."

#: ../Doc/whatsnew/3.10.rst:1949
msgid ""
"Source should be now be compiled directly to a code object using, for "
"example, :c:func:`Py_CompileString`. The resulting code object can then be "
"evaluated using, for example, :c:func:`PyEval_EvalCode`."
msgstr ""
"La fuente debe compilarse ahora directamente en un objeto de código "
"utilizando, por ejemplo, :c:func:`Py_CompileString`. A continuación, el "
"objeto de código resultante se puede evaluar utilizando, por ejemplo, :c:"
"func:`PyEval_EvalCode`."

#: ../Doc/whatsnew/3.10.rst:1953
msgid "Specifically:"
msgstr "Específicamente:"

#: ../Doc/whatsnew/3.10.rst:1955
msgid ""
"A call to ``PyParser_SimpleParseStringFlags`` followed by ``PyNode_Compile`` "
"can be replaced by calling :c:func:`Py_CompileString`."
msgstr ""
"Una llamada a ``PyParser_SimpleParseStringFlags`` seguida de "
"``PyNode_Compile`` se puede reemplazar llamando a :c:func:`Py_CompileString`."

#: ../Doc/whatsnew/3.10.rst:1958
msgid ""
"There is no direct replacement for ``PyParser_SimpleParseFileFlags``. To "
"compile code from a ``FILE *`` argument, you will need to read the file in C "
"and pass the resulting buffer to :c:func:`Py_CompileString`."
msgstr ""
"No hay reemplazo directo para ``PyParser_SimpleParseFileFlags``. Para "
"compilar código a partir de un argumento ``FILE *``, deberá leer el archivo "
"en C y pasar el búfer resultante a :c:func:`Py_CompileString`."

#: ../Doc/whatsnew/3.10.rst:1962
msgid ""
"To compile a file given a ``char *`` filename, explicitly open the file, "
"read it and compile the result. One way to do this is using the :py:mod:`io` "
"module with :c:func:`PyImport_ImportModule`, :c:func:`PyObject_CallMethod`, :"
"c:func:`PyBytes_AsString` and :c:func:`Py_CompileString`, as sketched below. "
"(Declarations and error handling are omitted.) ::"
msgstr ""
"Para compilar un archivo con un nombre de archivo ``char *``, abra "
"explícitamente el archivo, léalo y compile el resultado. Una forma de "
"hacerlo es utilizando el módulo :py:mod:`io` con :c:func:"
"`PyImport_ImportModule`, :c:func:`PyObject_CallMethod`, :c:func:"
"`PyBytes_AsString` y :c:func:`Py_CompileString`, como se muestra a "
"continuación. (Se omiten las declaraciones y el manejo de errores). ::"

#: ../Doc/whatsnew/3.10.rst:1975
msgid ""
"For ``FrameObject`` objects, the ``f_lasti`` member now represents a "
"wordcode offset instead of a simple offset into the bytecode string. This "
"means that this number needs to be multiplied by 2 to be used with APIs that "
"expect a byte offset instead (like :c:func:`PyCode_Addr2Line` for example). "
"Notice as well that the ``f_lasti`` member of ``FrameObject`` objects is not "
"considered stable: please use :c:func:`PyFrame_GetLineNumber` instead."
msgstr ""
"Para los objetos ``FrameObject``, el miembro ``f_lasti`` ahora representa un "
"desplazamiento de código de palabra en lugar de un desplazamiento simple en "
"la cadena de código de bytes. Esto significa que este número debe "
"multiplicarse por 2 para usarse con API que esperan un desplazamiento de "
"bytes en su lugar (como :c:func:`PyCode_Addr2Line`, por ejemplo). Tenga en "
"cuenta también que el miembro ``f_lasti`` de los objetos ``FrameObject`` no "
"se considera estable: utilice :c:func:`PyFrame_GetLineNumber` en su lugar."

#: ../Doc/whatsnew/3.10.rst:1983
msgid "CPython bytecode changes"
msgstr "Cambios en el código de bytes de CPython"

#: ../Doc/whatsnew/3.10.rst:1985
msgid ""
"The ``MAKE_FUNCTION`` instruction now accepts either a dict or a tuple of "
"strings as the function's annotations. (Contributed by Yurii Karabas and "
"Inada Naoki in :issue:`42202`.)"
msgstr ""
"La instrucción ``MAKE_FUNCTION`` ahora acepta un dict o una tupla de cadenas "
"como anotaciones de la función. (Aportado por Yurii Karabas e Inada Naoki "
"en :issue:`42202`.)"

#: ../Doc/whatsnew/3.10.rst:1990
msgid "Build Changes"
msgstr "Construir cambios"

#: ../Doc/whatsnew/3.10.rst:1992
msgid ""
":pep:`644`: Python now requires OpenSSL 1.1.1 or newer. OpenSSL 1.0.2 is no "
"longer supported. (Contributed by Christian Heimes in :issue:`43669`.)"
msgstr ""
":pep:`644`: Python ahora requiere OpenSSL 1.1.1 o más reciente. OpenSSL "
"1.0.2 ya no es compatible. (Contribuido por Christian Heimes en :issue:"
"`43669`.)"

#: ../Doc/whatsnew/3.10.rst:1996
msgid ""
"The C99 functions :c:func:`snprintf` and :c:func:`vsnprintf` are now "
"required to build Python. (Contributed by Victor Stinner in :issue:`36020`.)"
msgstr ""
"Las funciones C99 :c:func:`snprintf` y :c:func:`vsnprintf` ahora son "
"necesarias para construir Python. (Contribuido por Victor Stinner en :issue:"
"`36020`.)"

#: ../Doc/whatsnew/3.10.rst:2000
msgid ""
":mod:`sqlite3` requires SQLite 3.7.15 or higher. (Contributed by Sergey "
"Fedoseev and Erlend E. Aasland in :issue:`40744` and :issue:`40810`.)"
msgstr ""
":mod:`sqlite3` requiere SQLite 3.7.15 o superior. (Aportado por Sergey "
"Fedoseev y Erlend E. Aasland en :issue:`40744` y :issue:`40810`)."

#: ../Doc/whatsnew/3.10.rst:2003
msgid ""
"The :mod:`atexit` module must now always be built as a built-in module. "
"(Contributed by Victor Stinner in :issue:`42639`.)"
msgstr ""
"El módulo :mod:`atexit` ahora debe construirse siempre como un módulo "
"integrado. (Contribuido por Victor Stinner en :issue:`42639`.)"

#: ../Doc/whatsnew/3.10.rst:2006
msgid ""
"Add :option:`--disable-test-modules` option to the ``configure`` script: "
"don't build nor install test modules. (Contributed by Xavier de Gaye, Thomas "
"Petazzoni and Peixing Xin in :issue:`27640`.)"
msgstr ""
"Agregue la opción :option:`--disable-test-modules` al script ``configure``: "
"no cree ni instale módulos de prueba. (Contribuido por Xavier de Gaye, "
"Thomas Petazzoni y Peixing Xin en :issue:`27640`.)"

#: ../Doc/whatsnew/3.10.rst:2010
msgid ""
"Add :option:`--with-wheel-pkg-dir=PATH option <--with-wheel-pkg-dir>` to the "
"``./configure`` script. If specified, the :mod:`ensurepip` module looks for "
"``setuptools`` and ``pip`` wheel packages in this directory: if both are "
"present, these wheel packages are used instead of ensurepip bundled wheel "
"packages."
msgstr ""
"Agregue :option:`--with-wheel-pkg-dir=PATH option <--with-wheel-pkg-dir>` al "
"script ``./configure``. Si se especifica, el módulo :mod:`ensurepip` busca "
"paquetes de ruedas ``setuptools`` y ``pip`` en este directorio: si ambos "
"están presentes, estos paquetes de ruedas se utilizan en lugar de los "
"paquetes de ruedas asegurados."

#: ../Doc/whatsnew/3.10.rst:2016
msgid ""
"Some Linux distribution packaging policies recommend against bundling "
"dependencies. For example, Fedora installs wheel packages in the ``/usr/"
"share/python-wheels/`` directory and don't install the ``ensurepip."
"_bundled`` package."
msgstr ""
"Algunas políticas de empaquetado de distribución de Linux recomiendan no "
"empaquetar dependencias. Por ejemplo, Fedora instala paquetes de rueda en el "
"directorio ``/usr/share/python-wheels/`` y no instala el paquete ``ensurepip."
"_bundled``."

#: ../Doc/whatsnew/3.10.rst:2021
msgid "(Contributed by Victor Stinner in :issue:`42856`.)"
msgstr "(Contribuido por Victor Stinner en :issue:`42856`.)"

#: ../Doc/whatsnew/3.10.rst:2023
msgid ""
"Add a new :option:`configure --without-static-libpython option <--without-"
"static-libpython>` to not build the ``libpythonMAJOR.MINOR.a`` static "
"library and not install the ``python.o`` object file."
msgstr ""
"Agregue un nuevo :option:`configure --without-static-libpython option <--"
"without-static-libpython>` para no construir la biblioteca estática "
"``libpythonMAJOR.MINOR.a`` y no instalar el archivo de objeto ``python.o``."

#: ../Doc/whatsnew/3.10.rst:2027
msgid "(Contributed by Victor Stinner in :issue:`43103`.)"
msgstr "(Contribuido por Victor Stinner en :issue:`43103`.)"

#: ../Doc/whatsnew/3.10.rst:2029
msgid ""
"The ``configure`` script now uses the ``pkg-config`` utility, if available, "
"to detect the location of Tcl/Tk headers and libraries.  As before, those "
"locations can be explicitly specified with the ``--with-tcltk-includes`` and "
"``--with-tcltk-libs`` configuration options. (Contributed by Manolis "
"Stamatogiannakis in :issue:`42603`.)"
msgstr ""
"El script ``configure`` ahora usa la utilidad ``pkg-config``, si está "
"disponible, para detectar la ubicación de los encabezados y bibliotecas Tcl/"
"Tk. Como antes, esas ubicaciones se pueden especificar explícitamente con "
"las opciones de configuración ``--with-tcltk-includes`` y ``--with-tcltk-"
"libs``. (Aportado por Manolis Stamatogiannakis en :issue:`42603`.)"

#: ../Doc/whatsnew/3.10.rst:2035
msgid ""
"Add :option:`--with-openssl-rpath` option to ``configure`` script. The "
"option simplifies building Python with a custom OpenSSL installation, e.g. "
"``./configure --with-openssl=/path/to/openssl --with-openssl-rpath=auto``. "
"(Contributed by Christian Heimes in :issue:`43466`.)"
msgstr ""
"Agregue la opción :option:`--with-openssl-rpath` al script ``configure``. La "
"opción simplifica la construcción de Python con una instalación "
"personalizada de OpenSSL, p. Ej. ``./configure --with-openssl=/path/to/"
"openssl --with-openssl-rpath=auto``. (Contribuido por Christian Heimes en :"
"issue:`43466`.)"

#: ../Doc/whatsnew/3.10.rst:2042
msgid "C API Changes"
msgstr "Cambios en la API de C"

#: ../Doc/whatsnew/3.10.rst:2045
msgid "PEP 652: Maintaining the Stable ABI"
msgstr "PEP 652: Mantenimiento del ABI estable"

#: ../Doc/whatsnew/3.10.rst:2047
msgid ""
"The Stable ABI (Application Binary Interface) for extension modules or "
"embedding Python is now explicitly defined. :ref:`stable` describes C API "
"and ABI stability guarantees along with best practices for using the Stable "
"ABI."
msgstr ""
"La ABI estable (interfaz binaria de aplicación) para módulos de extensión o "
"incrustación de Python ahora está definida explícitamente. :ref:`stable` "
"describe las garantías de estabilidad C API y ABI junto con las mejores "
"prácticas para usar la ABI estable."

#: ../Doc/whatsnew/3.10.rst:2052
msgid "(Contributed by Petr Viktorin in :pep:`652` and :issue:`43795`.)"
msgstr "(Contribuido por Petr Viktorin en :pep:`652` y :issue:`43795`.)"

#: ../Doc/whatsnew/3.10.rst:2057
msgid ""
"The result of :c:func:`PyNumber_Index` now always has exact type :class:"
"`int`. Previously, the result could have been an instance of a subclass of "
"``int``. (Contributed by Serhiy Storchaka in :issue:`40792`.)"
msgstr ""
"El resultado de :c:func:`PyNumber_Index` ahora siempre tiene el tipo exacto :"
"class:`int`. Anteriormente, el resultado podría haber sido una instancia de "
"una subclase de ``int``. (Contribuido por Serhiy Storchaka en :issue:"
"`40792`.)"

#: ../Doc/whatsnew/3.10.rst:2061
msgid ""
"Add a new :c:member:`~PyConfig.orig_argv` member to the :c:type:`PyConfig` "
"structure: the list of the original command line arguments passed to the "
"Python executable. (Contributed by Victor Stinner in :issue:`23427`.)"
msgstr ""
"Agregue un nuevo miembro :c:member:`~PyConfig.orig_argv` a la estructura :c:"
"type:`PyConfig`: la lista de los argumentos originales de la línea de "
"comandos pasados al ejecutable de Python. (Contribuido por Victor Stinner "
"en :issue:`23427`.)"

#: ../Doc/whatsnew/3.10.rst:2066
msgid ""
"The :c:func:`PyDateTime_DATE_GET_TZINFO` and :c:func:"
"`PyDateTime_TIME_GET_TZINFO` macros have been added for accessing the "
"``tzinfo`` attributes of :class:`datetime.datetime` and :class:`datetime."
"time` objects. (Contributed by Zackery Spytz in :issue:`30155`.)"
msgstr ""
"Se han agregado las macros :c:func:`PyDateTime_DATE_GET_TZINFO` y :c:func:"
"`PyDateTime_TIME_GET_TZINFO` para acceder a los atributos ``tzinfo`` de los "
"objetos :class:`datetime.datetime` y :class:`datetime.time`. (Contribuido "
"por Zackery Spytz en :issue:`30155`.)"

#: ../Doc/whatsnew/3.10.rst:2072
msgid ""
"Add a :c:func:`PyCodec_Unregister` function to unregister a codec search "
"function. (Contributed by Hai Shi in :issue:`41842`.)"
msgstr ""
"Agregue una función :c:func:`PyCodec_Unregister` para anular el registro de "
"una función de búsqueda de códec. (Contribuido por Hai Shi en :issue:"
"`41842`.)"

#: ../Doc/whatsnew/3.10.rst:2076
msgid ""
"The :c:func:`PyIter_Send` function was added to allow sending value into "
"iterator without raising ``StopIteration`` exception. (Contributed by "
"Vladimir Matveev in :issue:`41756`.)"
msgstr ""
"Se agregó la función :c:func:`PyIter_Send` para permitir el envío de valor "
"al iterador sin generar la excepción ``StopIteration``. (Contribuido por "
"Vladimir Matveev en :issue:`41756`.)"

#: ../Doc/whatsnew/3.10.rst:2080
msgid ""
"Add :c:func:`PyUnicode_AsUTF8AndSize` to the limited C API. (Contributed by "
"Alex Gaynor in :issue:`41784`.)"
msgstr ""
"Agregue :c:func:`PyUnicode_AsUTF8AndSize` a la API C limitada. (Contribuido "
"por Alex Gaynor en :issue:`41784`.)"

#: ../Doc/whatsnew/3.10.rst:2083
msgid ""
"Add :c:func:`PyModule_AddObjectRef` function: similar to :c:func:"
"`PyModule_AddObject` but don't steal a reference to the value on success. "
"(Contributed by Victor Stinner in :issue:`1635741`.)"
msgstr ""
"Agregue la función :c:func:`PyModule_AddObjectRef`: similar a :c:func:"
"`PyModule_AddObject` pero no robe una referencia al valor en caso de éxito. "
"(Contribuido por Victor Stinner en :issue:`1635741`.)"

#: ../Doc/whatsnew/3.10.rst:2088
msgid ""
"Add :c:func:`Py_NewRef` and :c:func:`Py_XNewRef` functions to increment the "
"reference count of an object and return the object. (Contributed by Victor "
"Stinner in :issue:`42262`.)"
msgstr ""
"Agregue las funciones :c:func:`Py_NewRef` y :c:func:`Py_XNewRef` para "
"incrementar el recuento de referencia de un objeto y devolver el objeto. "
"(Contribuido por Victor Stinner en :issue:`42262`.)"

#: ../Doc/whatsnew/3.10.rst:2092
msgid ""
"The :c:func:`PyType_FromSpecWithBases` and :c:func:"
"`PyType_FromModuleAndSpec` functions now accept a single class as the "
"*bases* argument. (Contributed by Serhiy Storchaka in :issue:`42423`.)"
msgstr ""
"Las funciones :c:func:`PyType_FromSpecWithBases` y :c:func:"
"`PyType_FromModuleAndSpec` ahora aceptan una sola clase como argumento "
"*bases*. (Contribuido por Serhiy Storchaka en :issue:`42423`.)"

#: ../Doc/whatsnew/3.10.rst:2096
msgid ""
"The :c:func:`PyType_FromModuleAndSpec` function now accepts NULL ``tp_doc`` "
"slot. (Contributed by Hai Shi in :issue:`41832`.)"
msgstr ""
"La función :c:func:`PyType_FromModuleAndSpec` ahora acepta la ranura NULL "
"``tp_doc``. (Contribuido por Hai Shi en :issue:`41832`.)"

#: ../Doc/whatsnew/3.10.rst:2100
msgid ""
"The :c:func:`PyType_GetSlot` function can accept :ref:`static types <static-"
"types>`. (Contributed by Hai Shi and Petr Viktorin in :issue:`41073`.)"
msgstr ""
"La función :c:func:`PyType_GetSlot` puede aceptar :ref:`static types <static-"
"types>`. (Contribuido por Hai Shi y Petr Viktorin en :issue:`41073`.)"

#: ../Doc/whatsnew/3.10.rst:2104
msgid ""
"Add a new :c:func:`PySet_CheckExact` function to the C-API to check if an "
"object is an instance of :class:`set` but not an instance of a subtype. "
"(Contributed by Pablo Galindo in :issue:`43277`.)"
msgstr ""
"Agregue una nueva función :c:func:`PySet_CheckExact` a la C-API para "
"verificar si un objeto es una instancia de :class:`set` pero no una "
"instancia de un subtipo. (Contribuido por Pablo Galindo en :issue:`43277`.)"

#: ../Doc/whatsnew/3.10.rst:2108
msgid ""
"Add :c:func:`PyErr_SetInterruptEx` which allows passing a signal number to "
"simulate. (Contributed by Antoine Pitrou in :issue:`43356`.)"
msgstr ""
"Agregue :c:func:`PyErr_SetInterruptEx` que permite pasar un número de señal "
"para simular. (Contribuido por Antoine Pitrou en :issue:`43356`.)"

#: ../Doc/whatsnew/3.10.rst:2112
msgid ""
"The limited C API is now supported if :ref:`Python is built in debug mode "
"<debug-build>` (if the ``Py_DEBUG`` macro is defined). In the limited C API, "
"the :c:func:`Py_INCREF` and :c:func:`Py_DECREF` functions are now "
"implemented as opaque function calls, rather than accessing directly the :c:"
"member:`PyObject.ob_refcnt` member, if Python is built in debug mode and the "
"``Py_LIMITED_API`` macro targets Python 3.10 or newer. It became possible to "
"support the limited C API in debug mode because the :c:type:`PyObject` "
"structure is the same in release and debug mode since Python 3.8 (see :issue:"
"`36465`)."
msgstr ""
"La API C limitada ahora es compatible si :ref:`Python is built in debug mode "
"<debug-build>` (si se define la macro ``Py_DEBUG``). En la API C limitada, "
"las funciones :c:func:`Py_INCREF` y :c:func:`Py_DECREF` ahora se implementan "
"como llamadas de función opacas, en lugar de acceder directamente al "
"miembro :c:member:`PyObject.ob_refcnt`, si Python está construido en modo de "
"depuración y la macro ``Py_LIMITED_API`` apunta a Python 3.10 o más "
"reciente. Se hizo posible admitir la API C limitada en modo de depuración "
"porque la estructura :c:type:`PyObject` es la misma en el modo de liberación "
"y depuración desde Python 3.8 (ver :issue:`36465`)."

#: ../Doc/whatsnew/3.10.rst:2122
msgid ""
"The limited C API is still not supported in the :option:`--with-trace-refs` "
"special build (``Py_TRACE_REFS`` macro). (Contributed by Victor Stinner in :"
"issue:`43688`.)"
msgstr ""
"La API C limitada todavía no es compatible con la compilación especial :"
"option:`--with-trace-refs` (macro ``Py_TRACE_REFS``). (Contribuido por "
"Victor Stinner en :issue:`43688`.)"

#: ../Doc/whatsnew/3.10.rst:2126
msgid ""
"Add the :c:func:`Py_Is(x, y) <Py_Is>` function to test if the *x* object is "
"the *y* object, the same as ``x is y`` in Python. Add also the :c:func:"
"`Py_IsNone`, :c:func:`Py_IsTrue`, :c:func:`Py_IsFalse` functions to test if "
"an object is, respectively, the ``None`` singleton, the ``True`` singleton "
"or the ``False`` singleton. (Contributed by Victor Stinner in :issue:"
"`43753`.)"
msgstr ""
"Agregue la función :c:func:`Py_Is(x, y) <Py_Is>` para probar si el objeto "
"*x* object is the *y*, lo mismo que ``x is y`` en Python. Agregue también "
"las funciones :c:func:`Py_IsNone`, :c:func:`Py_IsTrue`, :c:func:`Py_IsFalse` "
"para probar si un objeto es, respectivamente, el singleton ``None``, el "
"singleton ``True`` o el singleton ``False``. (Contribuido por Victor Stinner "
"en :issue:`43753`.)"

#: ../Doc/whatsnew/3.10.rst:2133
msgid ""
"Add new functions to control the garbage collector from C code: :c:func:"
"`PyGC_Enable()`, :c:func:`PyGC_Disable()`, :c:func:`PyGC_IsEnabled()`. These "
"functions allow to activate, deactivate and query the state of the garbage "
"collector from C code without having to import the :mod:`gc` module."
msgstr ""
"Agregue nuevas funciones para controlar el recolector de basura desde el "
"código C: :c:func:`PyGC_Enable()`, :c:func:`PyGC_Disable()`, :c:func:"
"`PyGC_IsEnabled()`. Estas funciones permiten activar, desactivar y consultar "
"el estado del recolector de basura desde código C sin tener que importar el "
"módulo :mod:`gc`."

#: ../Doc/whatsnew/3.10.rst:2140
msgid ""
"Add a new :c:data:`Py_TPFLAGS_DISALLOW_INSTANTIATION` type flag to disallow "
"creating type instances. (Contributed by Victor Stinner in :issue:`43916`.)"
msgstr ""
"Agregue un nuevo indicador de tipo :c:data:"
"`Py_TPFLAGS_DISALLOW_INSTANTIATION` para no permitir la creación de "
"instancias de tipo. (Contribuido por Victor Stinner en :issue:`43916`.)"

#: ../Doc/whatsnew/3.10.rst:2144
msgid ""
"Add a new :c:data:`Py_TPFLAGS_IMMUTABLETYPE` type flag for creating "
"immutable type objects: type attributes cannot be set nor deleted. "
"(Contributed by Victor Stinner and Erlend E. Aasland in :issue:`43908`.)"
msgstr ""
"Agregue un nuevo indicador de tipo :c:data:`Py_TPFLAGS_IMMUTABLETYPE` para "
"crear objetos de tipo inmutables: los atributos de tipo no se pueden "
"establecer ni eliminar. (Contribuido por Victor Stinner y Erlend E. Aasland "
"en :issue:`43908`.)"

#: ../Doc/whatsnew/3.10.rst:2151
msgid ""
"The ``PY_SSIZE_T_CLEAN`` macro must now be defined to use :c:func:"
"`PyArg_ParseTuple` and :c:func:`Py_BuildValue` formats which use ``#``: "
"``es#``, ``et#``, ``s#``, ``u#``, ``y#``, ``z#``, ``U#`` and ``Z#``. See :"
"ref:`arg-parsing` and :pep:`353`. (Contributed by Victor Stinner in :issue:"
"`40943`.)"
msgstr ""
"La macro ``PY_SSIZE_T_CLEAN`` ahora debe definirse para usar los formatos :c:"
"func:`PyArg_ParseTuple` y :c:func:`Py_BuildValue` que usan ``#``: ``es#``, "
"``et#``, ``s#``, ``u#``, ``y#``, ``z#``, ``U#`` y ``Z#``. Consulte :ref:`arg-"
"parsing` y :pep:`353`. (Aportado por Victor Stinner en :issue:`40943`.)"

#: ../Doc/whatsnew/3.10.rst:2157
msgid ""
"Since :c:func:`Py_REFCNT()` is changed to the inline static function, "
"``Py_REFCNT(obj) = new_refcnt`` must be replaced with ``Py_SET_REFCNT(obj, "
"new_refcnt)``: see :c:func:`Py_SET_REFCNT()` (available since Python 3.9). "
"For backward compatibility, this macro can be used::"
msgstr ""
"Dado que :c:func:`Py_REFCNT()` se cambia a la función estática en línea, "
"``Py_REFCNT(obj) = new_refcnt`` debe reemplazarse con ``Py_SET_REFCNT(obj, "
"new_refcnt)``: consulte :c:func:`Py_SET_REFCNT()` (disponible desde Python "
"3.9). Para compatibilidad con versiones anteriores, esta macro se puede "
"utilizar:"

#: ../Doc/whatsnew/3.10.rst:2166
msgid "(Contributed by Victor Stinner in :issue:`39573`.)"
msgstr "(Contribuido por Victor Stinner en :issue:`39573`.)"

#: ../Doc/whatsnew/3.10.rst:2168
msgid ""
"Calling :c:func:`PyDict_GetItem` without :term:`GIL` held had been allowed "
"for historical reason. It is no longer allowed. (Contributed by Victor "
"Stinner in :issue:`40839`.)"
msgstr ""
"Se había permitido llamar a :c:func:`PyDict_GetItem` sin :term:`GIL` "
"retenido por motivos históricos. Ya no está permitido. (Contribuido por "
"Victor Stinner en :issue:`40839`.)"

#: ../Doc/whatsnew/3.10.rst:2172
msgid ""
"``PyUnicode_FromUnicode(NULL, size)`` and "
"``PyUnicode_FromStringAndSize(NULL, size)`` raise ``DeprecationWarning`` "
"now.  Use :c:func:`PyUnicode_New` to allocate Unicode object without initial "
"data. (Contributed by Inada Naoki in :issue:`36346`.)"
msgstr ""
"``PyUnicode_FromUnicode(NULL, size)`` y ``PyUnicode_FromStringAndSize(NULL, "
"size)`` generan ``DeprecationWarning`` ahora. Utilice :c:func:"
"`PyUnicode_New` para asignar un objeto Unicode sin datos iniciales. "
"(Contribuido por Inada Naoki en :issue:`36346`.)"

#: ../Doc/whatsnew/3.10.rst:2177
msgid ""
"The private ``_PyUnicode_Name_CAPI`` structure of the PyCapsule API "
"``unicodedata.ucnhash_CAPI`` has been moved to the internal C API. "
"(Contributed by Victor Stinner in :issue:`42157`.)"
msgstr ""
"La estructura ``_PyUnicode_Name_CAPI`` privada de la API ``unicodedata."
"ucnhash_CAPI`` de PyCapsule se ha movido a la API C interna. (Contribuido "
"por Victor Stinner en :issue:`42157`.)"

#: ../Doc/whatsnew/3.10.rst:2181
msgid ""
":c:func:`Py_GetPath`, :c:func:`Py_GetPrefix`, :c:func:`Py_GetExecPrefix`, :c:"
"func:`Py_GetProgramFullPath`, :c:func:`Py_GetPythonHome` and :c:func:"
"`Py_GetProgramName` functions now return ``NULL`` if called before :c:func:"
"`Py_Initialize` (before Python is initialized). Use the new :ref:`init-"
"config` API to get the :ref:`init-path-config`. (Contributed by Victor "
"Stinner in :issue:`42260`.)"
msgstr ""
"Las funciones :c:func:`Py_GetPath`, :c:func:`Py_GetPrefix`, :c:func:"
"`Py_GetExecPrefix`, :c:func:`Py_GetProgramFullPath`, :c:func:"
"`Py_GetPythonHome` y :c:func:`Py_GetProgramName` ahora devuelven ``NULL`` si "
"se llama antes de :c:func:`Py_Initialize` (antes de que se inicialice "
"Python). Utilice la nueva API :ref:`init-config` para obtener el :ref:`init-"
"path-config`. (Aportado por Victor Stinner en :issue:`42260`.)"

#: ../Doc/whatsnew/3.10.rst:2188
msgid ""
":c:func:`PyList_SET_ITEM`, :c:func:`PyTuple_SET_ITEM` and :c:func:"
"`PyCell_SET` macros can no longer be used as l-value or r-value. For "
"example, ``x = PyList_SET_ITEM(a, b, c)`` and ``PyList_SET_ITEM(a, b, c) = "
"x`` now fail with a compiler error. It prevents bugs like ``if "
"(PyList_SET_ITEM (a, b, c) < 0) ...`` test. (Contributed by Zackery Spytz "
"and Victor Stinner in :issue:`30459`.)"
msgstr ""
"Las macros :c:func:`PyList_SET_ITEM`, :c:func:`PyTuple_SET_ITEM` y :c:func:"
"`PyCell_SET` ya no se pueden utilizar como valor l o valor r. Por ejemplo, "
"``x = PyList_SET_ITEM(a, b, c)`` y ``PyList_SET_ITEM(a, b, c) = x`` ahora "
"fallan con un error del compilador. Previene errores como la prueba ``if "
"(PyList_SET_ITEM (a, b, c) < 0) ...``. (Contribuido por Zackery Spytz y "
"Victor Stinner en :issue:`30459`.)"

#: ../Doc/whatsnew/3.10.rst:2195
msgid ""
"The non-limited API files ``odictobject.h``, ``parser_interface.h``, "
"``picklebufobject.h``, ``pyarena.h``, ``pyctype.h``, ``pydebug.h``, ``pyfpe."
"h``, and ``pytime.h`` have been moved to the ``Include/cpython`` directory. "
"These files must not be included directly, as they are already included in "
"``Python.h``; see :ref:`api-includes`. If they have been included directly, "
"consider including ``Python.h`` instead. (Contributed by Nicholas Sim in :"
"issue:`35134`.)"
msgstr ""
"Los archivos de API no limitados ``odictobject.h``, ``parser_interface.h``, "
"``picklebufobject.h``, ``pyarena.h``, ``pyctype.h``, ``pydebug.h``, ``pyfpe."
"h`` y ``pytime.h`` se han movido al directorio ``Include/cpython``. Estos "
"archivos no deben incluirse directamente, ya que ya están incluidos en "
"``Python.h``; ver :ref:`api-includes`. Si se han incluido directamente, "
"considere incluir ``Python.h`` en su lugar. (Aportado por Nicholas Sim en :"
"issue:`35134`.)"

#: ../Doc/whatsnew/3.10.rst:2203
msgid ""
"Use the :c:data:`Py_TPFLAGS_IMMUTABLETYPE` type flag to create immutable "
"type objects. Do not rely on :c:data:`Py_TPFLAGS_HEAPTYPE` to decide if a "
"type object is mutable or not; check if :c:data:`Py_TPFLAGS_IMMUTABLETYPE` "
"is set instead. (Contributed by Victor Stinner and Erlend E. Aasland in :"
"issue:`43908`.)"
msgstr ""
"Utilice el indicador de tipo :c:data:`Py_TPFLAGS_IMMUTABLETYPE` para crear "
"objetos de tipo inmutable. No confíe en :c:data:`Py_TPFLAGS_HEAPTYPE` para "
"decidir si un objeto de tipo es mutable o no; compruebe si :c:data:"
"`Py_TPFLAGS_IMMUTABLETYPE` está configurado en su lugar. (Contribuido por "
"Victor Stinner y Erlend E. Aasland en :issue:`43908`.)"

#: ../Doc/whatsnew/3.10.rst:2209
msgid ""
"The undocumented function ``Py_FrozenMain`` has been removed from the "
"limited API. The function is mainly useful for custom builds of Python. "
"(Contributed by Petr Viktorin in :issue:`26241`.)"
msgstr ""
"La función no documentada ``Py_FrozenMain`` se eliminó de la API limitada. "
"La función es principalmente útil para compilaciones personalizadas de "
"Python. (Aportado por Petr Viktorin en :issue:`26241`.)"

#: ../Doc/whatsnew/3.10.rst:2216
msgid ""
"The ``PyUnicode_InternImmortal()`` function is now deprecated and will be "
"removed in Python 3.12: use :c:func:`PyUnicode_InternInPlace` instead. "
"(Contributed by Victor Stinner in :issue:`41692`.)"
msgstr ""
"La función ``PyUnicode_InternImmortal()`` ahora está en desuso y se "
"eliminará en Python 3.12: use :c:func:`PyUnicode_InternInPlace` en su lugar. "
"(Contribuido por Victor Stinner en :issue:`41692`.)"

#: ../Doc/whatsnew/3.10.rst:2224
msgid ""
"Removed ``Py_UNICODE_str*`` functions manipulating ``Py_UNICODE*`` strings. "
"(Contributed by Inada Naoki in :issue:`41123`.)"
msgstr ""
"Se eliminaron las funciones ``Py_UNICODE_str*`` que manipulaban cadenas "
"``Py_UNICODE*``. (Contribuido por Inada Naoki en :issue:`41123`.)"

#: ../Doc/whatsnew/3.10.rst:2227
msgid ""
"``Py_UNICODE_strlen``: use :c:func:`PyUnicode_GetLength` or :c:macro:"
"`PyUnicode_GET_LENGTH`"
msgstr ""
"``Py_UNICODE_strlen``: utilice :c:func:`PyUnicode_GetLength` o :c:macro:"
"`PyUnicode_GET_LENGTH`"

#: ../Doc/whatsnew/3.10.rst:2229
msgid ""
"``Py_UNICODE_strcat``: use :c:func:`PyUnicode_CopyCharacters` or :c:func:"
"`PyUnicode_FromFormat`"
msgstr ""
"``Py_UNICODE_strcat``: utilice :c:func:`PyUnicode_CopyCharacters` o :c:func:"
"`PyUnicode_FromFormat`"

#: ../Doc/whatsnew/3.10.rst:2231
msgid ""
"``Py_UNICODE_strcpy``, ``Py_UNICODE_strncpy``: use :c:func:"
"`PyUnicode_CopyCharacters` or :c:func:`PyUnicode_Substring`"
msgstr ""
"``Py_UNICODE_strcpy``, ``Py_UNICODE_strncpy``: utilice :c:func:"
"`PyUnicode_CopyCharacters` o :c:func:`PyUnicode_Substring`"

#: ../Doc/whatsnew/3.10.rst:2233
msgid "``Py_UNICODE_strcmp``: use :c:func:`PyUnicode_Compare`"
msgstr "``Py_UNICODE_strcmp``: utilice :c:func:`PyUnicode_Compare`"

#: ../Doc/whatsnew/3.10.rst:2234
msgid "``Py_UNICODE_strncmp``: use :c:func:`PyUnicode_Tailmatch`"
msgstr "``Py_UNICODE_strncmp``: utilice :c:func:`PyUnicode_Tailmatch`"

#: ../Doc/whatsnew/3.10.rst:2235
msgid ""
"``Py_UNICODE_strchr``, ``Py_UNICODE_strrchr``: use :c:func:"
"`PyUnicode_FindChar`"
msgstr ""
"``Py_UNICODE_strchr``, ``Py_UNICODE_strrchr``: utilice :c:func:"
"`PyUnicode_FindChar`"

#: ../Doc/whatsnew/3.10.rst:2238
msgid ""
"Removed ``PyUnicode_GetMax()``. Please migrate to new (:pep:`393`) APIs. "
"(Contributed by Inada Naoki in :issue:`41103`.)"
msgstr ""
"Eliminado ``PyUnicode_GetMax()``. Migra a las API nuevas (:pep:`393`). "
"(Contribuido por Inada Naoki en :issue:`41103`.)"

#: ../Doc/whatsnew/3.10.rst:2241
msgid ""
"Removed ``PyLong_FromUnicode()``. Please migrate to :c:func:"
"`PyLong_FromUnicodeObject`. (Contributed by Inada Naoki in :issue:`41103`.)"
msgstr ""
"Eliminado ``PyLong_FromUnicode()``. Migra a :c:func:"
"`PyLong_FromUnicodeObject`. (Contribuido por Inada Naoki en :issue:`41103`.)"

#: ../Doc/whatsnew/3.10.rst:2244
msgid ""
"Removed ``PyUnicode_AsUnicodeCopy()``. Please use :c:func:"
"`PyUnicode_AsUCS4Copy` or :c:func:`PyUnicode_AsWideCharString` (Contributed "
"by Inada Naoki in :issue:`41103`.)"
msgstr ""
"Eliminado ``PyUnicode_AsUnicodeCopy()``. Utilice :c:func:"
"`PyUnicode_AsUCS4Copy` o :c:func:`PyUnicode_AsWideCharString` (contribución "
"de Inada Naoki en :issue:`41103`)."

#: ../Doc/whatsnew/3.10.rst:2248
msgid ""
"Removed ``_Py_CheckRecursionLimit`` variable: it has been replaced by "
"``ceval.recursion_limit`` of the :c:type:`PyInterpreterState` structure. "
"(Contributed by Victor Stinner in :issue:`41834`.)"
msgstr ""
"Variable ``_Py_CheckRecursionLimit`` eliminada: ha sido reemplazada por "
"``ceval.recursion_limit`` de la estructura :c:type:`PyInterpreterState`. "
"(Contribuido por Victor Stinner en :issue:`41834`.)"

#: ../Doc/whatsnew/3.10.rst:2252
msgid ""
"Removed undocumented macros ``Py_ALLOW_RECURSION`` and "
"``Py_END_ALLOW_RECURSION`` and the ``recursion_critical`` field of the :c:"
"type:`PyInterpreterState` structure. (Contributed by Serhiy Storchaka in :"
"issue:`41936`.)"
msgstr ""
"Se eliminaron las macros ``Py_ALLOW_RECURSION`` y ``Py_END_ALLOW_RECURSION`` "
"sin documentar y el campo ``recursion_critical`` de la estructura :c:type:"
"`PyInterpreterState`. (Contribuido por Serhiy Storchaka en :issue:`41936`.)"

#: ../Doc/whatsnew/3.10.rst:2257
msgid ""
"Removed the undocumented ``PyOS_InitInterrupts()`` function. Initializing "
"Python already implicitly installs signal handlers: see :c:member:`PyConfig."
"install_signal_handlers`. (Contributed by Victor Stinner in :issue:`41713`.)"
msgstr ""
"Se eliminó la función ``PyOS_InitInterrupts()`` indocumentada. La "
"inicialización de Python ya instala implícitamente controladores de señales: "
"consulte :c:member:`PyConfig.install_signal_handlers`. (Contribuido por "
"Victor Stinner en :issue:`41713`.)"

#: ../Doc/whatsnew/3.10.rst:2262
msgid ""
"Remove the ``PyAST_Validate()`` function. It is no longer possible to build "
"a AST object (``mod_ty`` type) with the public C API. The function was "
"already excluded from the limited C API (:pep:`384`). (Contributed by Victor "
"Stinner in :issue:`43244`.)"
msgstr ""
"Elimina la función ``PyAST_Validate()``. Ya no es posible construir un "
"objeto AST (tipo ``mod_ty``) con la API C pública. La función ya estaba "
"excluida de la API C limitada (:pep:`384`). (Contribuido por Victor Stinner "
"en :issue:`43244`.)"

#: ../Doc/whatsnew/3.10.rst:2267
msgid "Remove the ``symtable.h`` header file and the undocumented functions:"
msgstr ""
"Elimine el archivo de encabezado ``symtable.h`` y las funciones no "
"documentadas:"

#: ../Doc/whatsnew/3.10.rst:2269
msgid "``PyST_GetScope()``"
msgstr "``PyST_GetScope()``"

#: ../Doc/whatsnew/3.10.rst:2270
msgid "``PySymtable_Build()``"
msgstr "``PySymtable_Build()``"

#: ../Doc/whatsnew/3.10.rst:2271
msgid "``PySymtable_BuildObject()``"
msgstr "``PySymtable_BuildObject()``"

#: ../Doc/whatsnew/3.10.rst:2272
msgid "``PySymtable_Free()``"
msgstr "``PySymtable_Free()``"

#: ../Doc/whatsnew/3.10.rst:2273
msgid "``Py_SymtableString()``"
msgstr "``Py_SymtableString()``"

#: ../Doc/whatsnew/3.10.rst:2274
msgid "``Py_SymtableStringObject()``"
msgstr "``Py_SymtableStringObject()``"

#: ../Doc/whatsnew/3.10.rst:2276
msgid ""
"The ``Py_SymtableString()`` function was part the stable ABI by mistake but "
"it could not be used, because the ``symtable.h`` header file was excluded "
"from the limited C API."
msgstr ""
"La función ``Py_SymtableString()`` fue parte de la ABI estable por error, "
"pero no se pudo usar porque el archivo de encabezado ``symtable.h`` se "
"excluyó de la API C limitada."

#: ../Doc/whatsnew/3.10.rst:2280
msgid ""
"Use Python :mod:`symtable` module instead. (Contributed by Victor Stinner "
"in :issue:`43244`.)"
msgstr ""
"En su lugar, utilice el módulo Python :mod:`symtable`. (Contribuido por "
"Victor Stinner en :issue:`43244`.)"

#: ../Doc/whatsnew/3.10.rst:2283
msgid ""
"Remove :c:func:`PyOS_ReadlineFunctionPointer` from the limited C API headers "
"and from ``python3.dll``, the library that provides the stable ABI on "
"Windows. Since the function takes a ``FILE*`` argument, its ABI stability "
"cannot be guaranteed. (Contributed by Petr Viktorin in :issue:`43868`.)"
msgstr ""
"Elimine :c:func:`PyOS_ReadlineFunctionPointer` de los encabezados limitados "
"de la API C y de ``python3.dll``, la biblioteca que proporciona la ABI "
"estable en Windows. Dado que la función toma un argumento ``FILE*``, no se "
"puede garantizar su estabilidad ABI. (Contribuido por Petr Viktorin en :"
"issue:`43868`.)"

#: ../Doc/whatsnew/3.10.rst:2289
msgid ""
"Remove ``ast.h``, ``asdl.h``, and ``Python-ast.h`` header files. These "
"functions were undocumented and excluded from the limited C API. Most names "
"defined by these header files were not prefixed by ``Py`` and so could "
"create names conflicts. For example, ``Python-ast.h`` defined a ``Yield`` "
"macro which was conflict with the ``Yield`` name used by the Windows "
"``<winbase.h>`` header. Use the Python :mod:`ast` module instead. "
"(Contributed by Victor Stinner in :issue:`43244`.)"
msgstr ""
"Elimine los archivos de encabezado ``ast.h``, ``asdl.h`` y ``Python-ast.h``. "
"Estas funciones no estaban documentadas y se excluyeron de la API C "
"limitada. La mayoría de los nombres definidos por estos archivos de "
"encabezado no tenían el prefijo ``Py`` y, por lo tanto, podrían crear "
"conflictos de nombres. Por ejemplo, ``Python-ast.h`` definió una macro "
"``Yield`` que estaba en conflicto con el nombre ``Yield`` utilizado por el "
"encabezado ``<winbase.h>`` de Windows. En su lugar, utilice el módulo "
"Python :mod:`ast`. (Contribuido por Victor Stinner en :issue:`43244`.)"

#: ../Doc/whatsnew/3.10.rst:2297
msgid ""
"Remove the compiler and parser functions using ``struct _mod`` type, because "
"the public AST C API was removed:"
msgstr ""
"Elimine las funciones de compilador y analizador utilizando el tipo ``struct "
"_mod``, porque se eliminó la API de AST C pública:"

#: ../Doc/whatsnew/3.10.rst:2300
msgid "``PyAST_Compile()``"
msgstr "``PyAST_Compile()``"

#: ../Doc/whatsnew/3.10.rst:2301
msgid "``PyAST_CompileEx()``"
msgstr "``PyAST_CompileEx()``"

#: ../Doc/whatsnew/3.10.rst:2302
msgid "``PyAST_CompileObject()``"
msgstr "``PyAST_CompileObject()``"

#: ../Doc/whatsnew/3.10.rst:2303
msgid "``PyFuture_FromAST()``"
msgstr "``PyFuture_FromAST()``"

#: ../Doc/whatsnew/3.10.rst:2304
msgid "``PyFuture_FromASTObject()``"
msgstr "``PyFuture_FromASTObject()``"

#: ../Doc/whatsnew/3.10.rst:2305
msgid "``PyParser_ASTFromFile()``"
msgstr "``PyParser_ASTFromFile()``"

#: ../Doc/whatsnew/3.10.rst:2306
msgid "``PyParser_ASTFromFileObject()``"
msgstr "``PyParser_ASTFromFileObject()``"

#: ../Doc/whatsnew/3.10.rst:2307
msgid "``PyParser_ASTFromFilename()``"
msgstr "``PyParser_ASTFromFilename()``"

#: ../Doc/whatsnew/3.10.rst:2308
msgid "``PyParser_ASTFromString()``"
msgstr "``PyParser_ASTFromString()``"

#: ../Doc/whatsnew/3.10.rst:2309
msgid "``PyParser_ASTFromStringObject()``"
msgstr "``PyParser_ASTFromStringObject()``"

#: ../Doc/whatsnew/3.10.rst:2311
msgid ""
"These functions were undocumented and excluded from the limited C API. "
"(Contributed by Victor Stinner in :issue:`43244`.)"
msgstr ""
"Estas funciones no estaban documentadas y se excluyeron de la API C "
"limitada. (Contribuido por Victor Stinner en :issue:`43244`.)"

#: ../Doc/whatsnew/3.10.rst:2314
msgid "Remove the ``pyarena.h`` header file with functions:"
msgstr "Elimine el archivo de encabezado ``pyarena.h`` con funciones:"

#: ../Doc/whatsnew/3.10.rst:2316
msgid "``PyArena_New()``"
msgstr "``PyArena_New()``"

#: ../Doc/whatsnew/3.10.rst:2317
msgid "``PyArena_Free()``"
msgstr "``PyArena_Free()``"

#: ../Doc/whatsnew/3.10.rst:2318
msgid "``PyArena_Malloc()``"
msgstr "``PyArena_Malloc()``"

#: ../Doc/whatsnew/3.10.rst:2319
msgid "``PyArena_AddPyObject()``"
msgstr "``PyArena_AddPyObject()``"

#: ../Doc/whatsnew/3.10.rst:2321
msgid ""
"These functions were undocumented, excluded from the limited C API, and were "
"only used internally by the compiler. (Contributed by Victor Stinner in :"
"issue:`43244`.)"
msgstr ""
"Estas funciones no estaban documentadas, estaban excluidas de la API C "
"limitada y el compilador solo las usaba internamente. (Contribuido por "
"Victor Stinner en :issue:`43244`.)"

#: ../Doc/whatsnew/3.10.rst:2325
msgid ""
"The ``PyThreadState.use_tracing`` member has been removed to optimize "
"Python. (Contributed by Mark Shannon in :issue:`43760`.)"
msgstr ""
"El miembro ``PyThreadState.use_tracing`` se ha eliminado para optimizar "
"Python. (Contribuido por Mark Shannon en :issue:`43760`.)"

#~ msgid ""
#~ "This article explains the new features in Python 3.10, compared to 3.9."
#~ msgstr ""
#~ "Este artículo explica las nuevas funciones de Python 3.10, en comparación "
#~ "con 3.9."

#~ msgid "For full details, see the :ref:`changelog <changelog>`."
#~ msgstr ""
#~ "Para obtener detalles completos, consulte el :ref:`changelog <changelog>`."

#~ msgid ""
#~ "We expect to backport these shell changes to a future 3.9 maintenance "
#~ "release."
#~ msgstr ""
#~ "Esperamos respaldar estos cambios de shell a una futura versión de "
#~ "mantenimiento 3.9."

#~ msgid ""
#~ "The presence of newline or tab characters in parts of a URL allows for "
#~ "some forms of attacks. Following the WHATWG specification that updates :"
#~ "rfc:`3986`, ASCII newline ``\\n``, ``\\r`` and tab ``\\t`` characters are "
#~ "stripped from the URL by the parser in :mod:`urllib.parse` preventing "
#~ "such attacks. The removal characters are controlled by a new module level "
#~ "variable ``urllib.parse._UNSAFE_URL_BYTES_TO_REMOVE``. (See :issue:"
#~ "`43882`)"
#~ msgstr ""
#~ "La presencia de caracteres de nueva línea o tabulación en partes de una "
#~ "URL permite algunas formas de ataques. Siguiendo la especificación WHATWG "
#~ "que actualiza: rfc: `3986`, la nueva línea ASCII ``\\n``, ``\\r`` y los "
#~ "caracteres de tabulación ``\\t`` son eliminados de la URL por el "
#~ "analizador en :mod:`urllib.parse` para prevenir tales ataques. Los "
#~ "caracteres de eliminación están controlados por una nueva variable de "
#~ "nivel de módulo ``urllib.parse._UNSAFE_URL_BYTES_TO_REMOVE``. (Ver :issue:"
#~ "`43882`)"

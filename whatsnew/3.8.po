# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python en Español
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Python en Español 3.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: 2020-10-16 21:15+0200\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Last-Translator: Francisco Jesús Sevilla García <fjsevilla.dev@gmail.com>\n"
"Language-Team: \n"
"Language: es_ES\n"
"X-Generator: Poedit 2.4.1\n"

#: ../Doc/whatsnew/3.8.rst:3
msgid "What's New In Python 3.8"
msgstr "Qué hay de nuevo en Python 3.8"

#: ../Doc/whatsnew/3.8.rst
msgid "Editor"
msgstr "Editor"

#: ../Doc/whatsnew/3.8.rst:45
msgid "Raymond Hettinger"
msgstr "Raymond Hettinger"

#: ../Doc/whatsnew/3.8.rst:47
msgid ""
"This article explains the new features in Python 3.8, compared to 3.7. For "
"full details, see the :ref:`changelog <changelog>`."
msgstr ""
"Este artículo explica las nuevas características de Python 3.8, en "
"comparación con 3.7. Para obtener los detalles completos, consultar el :ref:"
"`registro de cambios <changelog>`."

#: ../Doc/whatsnew/3.8.rst:50
msgid "Python 3.8 was released on October 14th, 2019."
msgstr "Python 3.8 fue lanzado el 14 de octubre de 2019."

#: ../Doc/whatsnew/3.8.rst:62
msgid "Summary -- Release highlights"
msgstr "Resumen -- Aspectos destacados de la versión"

#: ../Doc/whatsnew/3.8.rst:73
msgid "New Features"
msgstr "Nuevas características"

#: ../Doc/whatsnew/3.8.rst:76
msgid "Assignment expressions"
msgstr "Expresiones de asignación"

#: ../Doc/whatsnew/3.8.rst:78
msgid ""
"There is new syntax ``:=`` that assigns values to variables as part of a "
"larger expression. It is affectionately known as \"the walrus operator\" due "
"to its resemblance to `the eyes and tusks of a walrus <https://en.wikipedia."
"org/wiki/Walrus#/media/File:Pacific_Walrus_-_Bull_(8247646168).jpg>`_."
msgstr ""
"La nueva sintaxis ``:=`` asigna valores a variables como parte de una "
"expresión más grande. Se le conoce cariñosamente como \"el operador morsa\" "
"debido a su parecido con `los ojos y colmillos de una morsa <https://en."
"wikipedia.org/wiki/Walrus#/media/File:Pacific_Walrus_-_Bull_(8247646168)."
"jpg>`_."

#: ../Doc/whatsnew/3.8.rst:83
msgid ""
"In this example, the assignment expression helps avoid calling :func:`len` "
"twice::"
msgstr ""
"En el siguiente ejemplo, la expresión de asignación ayuda evitando que se "
"tenga que llamar a :func:`len` dos veces::"

#: ../Doc/whatsnew/3.8.rst:89
msgid ""
"A similar benefit arises during regular expression matching where match "
"objects are needed twice, once to test whether a match occurred and another "
"to extract a subgroup::"
msgstr ""
"Un beneficio similar surge durante la búsqueda de coincidencias mediante "
"expresiones regulares donde los objetos de coincidencias se necesitan dos "
"veces, una para comprobar si se produjo una coincidencia y otra para extraer "
"un subgrupo::"

#: ../Doc/whatsnew/3.8.rst:97
msgid ""
"The operator is also useful with while-loops that compute a value to test "
"loop termination and then need that same value again in the body of the "
"loop::"
msgstr ""
"El operador también es útil en bucles while que calculan un valor para "
"comprobar la terminación del bucle y posteriormente necesitan nuevamente ese "
"mismo valor en el cuerpo del bucle::"

#: ../Doc/whatsnew/3.8.rst:105
msgid ""
"Another motivating use case arises in list comprehensions where a value "
"computed in a filtering condition is also needed in the expression body::"
msgstr ""
"Otra motivación de uso surge en las listas por comprensión en las que un "
"valor calculado en una condición de filtrado también se necesita en el "
"cuerpo de la expresión::"

#: ../Doc/whatsnew/3.8.rst:112
msgid ""
"Try to limit use of the walrus operator to clean cases that reduce "
"complexity and improve readability."
msgstr ""
"Intenta limitar el uso del \"operador morsa\" a aquellos casos en los que "
"reduce la complejidad y mejora la legibilidad del código."

#: ../Doc/whatsnew/3.8.rst:115
msgid "See :pep:`572` for a full description."
msgstr "Consultar :pep:`572` para obtener una descripción completa."

#: ../Doc/whatsnew/3.8.rst:117
msgid "(Contributed by Emily Morehouse in :issue:`35224`.)"
msgstr "(Contribución de Emily Morehouse en :issue:`35224`.)"

#: ../Doc/whatsnew/3.8.rst:121
msgid "Positional-only parameters"
msgstr "Parámetros solo posicionales"

#: ../Doc/whatsnew/3.8.rst:123
msgid ""
"There is a new function parameter syntax ``/`` to indicate that some "
"function parameters must be specified positionally and cannot be used as "
"keyword arguments.  This is the same notation shown by ``help()`` for C "
"functions annotated with Larry Hastings' `Argument Clinic <https://docs."
"python.org/3/howto/clinic.html>`_ tool."
msgstr ""
"Hay una nueva sintaxis para establecer parámetro de función, ``/``, para "
"indicar que algunos parámetros de función deben especificarse solo "
"posicionalmente y no pueden usarse como argumentos por palabra clave. Esta "
"es la misma notación que muestra ``help()`` para las funciones de C anotadas "
"con la herramienta `Argument Clinic <https://docs.python.org/3/howto/clinic."
"html>`_ de Larry Hastings."

#: ../Doc/whatsnew/3.8.rst:129
msgid ""
"In the following example, parameters *a* and *b* are positional-only, while "
"*c* or *d* can be positional or keyword, and *e* or *f* are required to be "
"keywords::"
msgstr ""
"En el siguiente ejemplo, los parámetros *a* y *b* son solo posicionales, "
"mientras que *c* o *d* pueden ser posicionales o por palabra clave y *e* o "
"*f* deben proporcionarse por palabra clave exclusivamente::"

#: ../Doc/whatsnew/3.8.rst:136
msgid "The following is a valid call::"
msgstr "La siguiente es una invocación válida::"

#: ../Doc/whatsnew/3.8.rst:140
msgid "However, these are invalid calls::"
msgstr "Sin embargo, estas son invocaciones inválidas::"

#: ../Doc/whatsnew/3.8.rst:145
msgid ""
"One use case for this notation is that it allows pure Python functions to "
"fully emulate behaviors of existing C coded functions.  For example, the "
"built-in :func:`divmod` function does not accept keyword arguments::"
msgstr ""
"Un caso de uso de esta notación es permitir que las funciones puras de "
"Python emulen completamente los comportamientos de las funciones codificadas "
"en C existentes. Por ejemplo, la función incorporada :func:`divmod` no "
"acepta argumentos por palabra clave::"

#: ../Doc/whatsnew/3.8.rst:153
msgid ""
"Another use case is to preclude keyword arguments when the parameter name is "
"not helpful.  For example, the builtin :func:`len` function has the "
"signature ``len(obj, /)``.  This precludes awkward calls such as::"
msgstr ""
"Otro caso de uso es excluir los argumentos por palabra clave cuando el "
"nombre del parámetro no es útil. Por ejemplo, la función incorporada :func:"
"`len` tiene la firma ``len(obj, /)``. Esto excluye llamadas inoportunas "
"como::"

#: ../Doc/whatsnew/3.8.rst:159
msgid ""
"A further benefit of marking a parameter as positional-only is that it "
"allows the parameter name to be changed in the future without risk of "
"breaking client code.  For example, in the :mod:`statistics` module, the "
"parameter name *dist* may be changed in the future.  This was made possible "
"with the following function specification::"
msgstr ""
"Un beneficio adicional de marcar un parámetro como solo posicional es que "
"permite cambiar el nombre del parámetro en el futuro sin riesgo de romper el "
"código del cliente. Por ejemplo, en el módulo :mod:`statistics`, el nombre "
"del parámetro *dist* puede cambiarse en el futuro. Esto es posible gracias a "
"la siguiente especificación de función::"

#: ../Doc/whatsnew/3.8.rst:168
msgid ""
"Since the parameters to the left of ``/`` are not exposed as possible "
"keywords, the parameters names remain available for use in ``**kwargs``::"
msgstr ""
"Dado que los parámetros a la izquierda de ``/`` no se exponen como posibles "
"palabras clave, los nombres de los parámetros permanecen disponibles para su "
"uso en ``**kwargs``::"

#: ../Doc/whatsnew/3.8.rst:177
msgid ""
"This greatly simplifies the implementation of functions and methods that "
"need to accept arbitrary keyword arguments.  For example, here is an excerpt "
"from code in the :mod:`collections` module::"
msgstr ""
"Esto simplifica enormemente la implementación de funciones y métodos que "
"necesitan aceptar argumentos por palabra clave arbitrarios. Por ejemplo, "
"aquí hay un extracto del código del módulo :mod:`collections`::"

#: ../Doc/whatsnew/3.8.rst:186
msgid "See :pep:`570` for a full description."
msgstr "Consultar :pep:`570` para obtener una descripción completa."

#: ../Doc/whatsnew/3.8.rst:188
msgid "(Contributed by Pablo Galindo in :issue:`36540`.)"
msgstr "(Contribución de Pablo Galindo en :issue:`36540`.)"

#: ../Doc/whatsnew/3.8.rst:194
msgid "Parallel filesystem cache for compiled bytecode files"
msgstr ""
"Caché del sistema de archivos paralelo para archivos de bytecode compilados"

#: ../Doc/whatsnew/3.8.rst:196
msgid ""
"The new :envvar:`PYTHONPYCACHEPREFIX` setting (also available as :option:`-"
"X` ``pycache_prefix``) configures the implicit bytecode cache to use a "
"separate parallel filesystem tree, rather than the default ``__pycache__`` "
"subdirectories within each source directory."
msgstr ""
"La nueva configuración :envvar:`PYTHONPYCACHEPREFIX` (también disponible "
"mediante la opción :option:`-X` ``pycache_prefix``) configura la caché "
"implícita de bytecode para que use un árbol del sistema de archivos paralelo "
"separado, en lugar de los subdirectorios ``__pycache__`` predeterminados "
"dentro cada directorio de origen."

#: ../Doc/whatsnew/3.8.rst:202
msgid ""
"The location of the cache is reported in :data:`sys.pycache_prefix` (:const:"
"`None` indicates the default location in ``__pycache__`` subdirectories)."
msgstr ""
"La ubicación de la caché se define en :data:`sys.pycache_prefix` (:const:"
"`None` indica la ubicación predeterminada en los subdirectorios "
"``__pycache__``)."

#: ../Doc/whatsnew/3.8.rst:206
msgid "(Contributed by Carl Meyer in :issue:`33499`.)"
msgstr "(Contribución de Carl Meyer en :issue:`33499`.)"

#: ../Doc/whatsnew/3.8.rst:210
msgid "Debug build uses the same ABI as release build"
msgstr ""
"La compilación de depuración usa la misma ABI que la compilación de "
"lanzamiento"

#: ../Doc/whatsnew/3.8.rst:212
msgid ""
"Python now uses the same ABI whether it's built in release or debug mode. On "
"Unix, when Python is built in debug mode, it is now possible to load C "
"extensions built in release mode and C extensions built using the stable ABI."
msgstr ""
"Python ahora usa la misma ABI, independientemente de que esté compilado en "
"modo de lanzamiento o de depuración. En Unix, cuando Python se compila en "
"modo de depuración, ahora es posible cargar extensiones C compiladas en modo "
"de lanzamiento y extensiones C compiladas usando la ABI estable."

#: ../Doc/whatsnew/3.8.rst:216
msgid ""
"Release builds and debug builds are now ABI compatible: defining the "
"``Py_DEBUG`` macro no longer implies the ``Py_TRACE_REFS`` macro, which "
"introduces the only ABI incompatibility. The ``Py_TRACE_REFS`` macro, which "
"adds the :func:`sys.getobjects` function and the :envvar:`PYTHONDUMPREFS` "
"environment variable, can be set using the new ``./configure --with-trace-"
"refs`` build option. (Contributed by Victor Stinner in :issue:`36465`.)"
msgstr ""
"Las versiones de lanzamiento y las versiones de depuración ahora son ABI "
"compatibles: definir la macro ``Py_DEBUG`` ya no implica la macro "
"``Py_TRACE_REFS``, que introducía la única incompatibilidad de la ABI. La "
"macro ``Py_TRACE_REFS``, que agrega la función :func:`sys.getobjects` y la "
"variable de entorno :envvar:`PYTHONDUMPREFS`, se puede establecer usando la "
"nueva opción de compilación ``./configure --with-trace-refs``. (Contribución "
"de Victor Stinner en :issue:`36465`.)"

#: ../Doc/whatsnew/3.8.rst:224
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin. It is now possible for a statically linked Python to load a C "
"extension built using a shared library Python. (Contributed by Victor "
"Stinner in :issue:`21536`.)"
msgstr ""
"En Unix, las extensiones en C ya no están enlazadas a libpython, excepto en "
"Android y Cygwin. Ahora es posible que un intérprete Python enlazado "
"estáticamente cargue una extensión de C creada con una biblioteca dinámica "
"de Python. (Contribución de Victor Stinner en :issue:`21536`.)"

#: ../Doc/whatsnew/3.8.rst:231
msgid ""
"On Unix, when Python is built in debug mode, import now also looks for C "
"extensions compiled in release mode and for C extensions compiled with the "
"stable ABI. (Contributed by Victor Stinner in :issue:`36722`.)"
msgstr ""
"En Unix, cuando Python se compila en modo de depuración, la importación "
"ahora también busca extensiones C compiladas en modo de lanzamiento y "
"extensiones C compiladas con la ABI estable. (Contribución de Victor Stinner "
"en :issue:`36722`.)"

#: ../Doc/whatsnew/3.8.rst:236
msgid ""
"To embed Python into an application, a new ``--embed`` option must be passed "
"to ``python3-config --libs --embed`` to get ``-lpython3.8`` (link the "
"application to libpython). To support both 3.8 and older, try ``python3-"
"config --libs --embed`` first and fallback to ``python3-config --libs`` "
"(without ``--embed``) if the previous command fails."
msgstr ""
"Para integrar Python en una aplicación, se debe pasar una nueva opción ``--"
"embed`` a ``python3-config --libs --embed`` para obtener ``-lpython3.8`` "
"(enlaza la aplicación a libpython ). Para ser compatible con 3.8 y versiones "
"anteriores, prueba primero con ``python3-config --libs --embed`` y vuelve a "
"usar ``python3-config --libs`` (sin ``--embed``) si falla el comando "
"anterior."

#: ../Doc/whatsnew/3.8.rst:242
msgid ""
"Add a pkg-config ``python-3.8-embed`` module to embed Python into an "
"application: ``pkg-config python-3.8-embed --libs`` includes ``-"
"lpython3.8``. To support both 3.8 and older, try ``pkg-config python-X.Y-"
"embed --libs`` first and fallback to ``pkg-config python-X.Y --libs`` "
"(without ``--embed``) if the previous command fails (replace ``X.Y`` with "
"the Python version)."
msgstr ""
"Agrega un módulo pkg-config ``python-3.8-embed`` para integrar Python en una "
"aplicación: ``pkg-config python-3.8-embed --libs`` incluye ``-lpython3.8``. "
"Para que sea compatible con 3.8 y versiones anteriores, primero intenta usar "
"``pkg-config python-X.Y-embed --libs`` y vuelve a ``pkg-config python-X.Y --"
"libs`` (sin ``--embed``) si el comando anterior falla (reemplaza ``XY`` con "
"la versión de Python)."

#: ../Doc/whatsnew/3.8.rst:248
msgid ""
"On the other hand, ``pkg-config python3.8 --libs`` no longer contains ``-"
"lpython3.8``. C extensions must not be linked to libpython (except on "
"Android and Cygwin, whose cases are handled by the script); this change is "
"backward incompatible on purpose. (Contributed by Victor Stinner in :issue:"
"`36721`.)"
msgstr ""
"Por otro lado, ``pkg-config python3.8 --libs`` ya no contiene ``-"
"lpython3.8``. Las extensiones en C no deben estar enlazadas a libpython "
"(excepto en Android y Cygwin, cuyos casos son manejados por el script); este "
"cambio no es retrocompatible a propósito. (Contribución de Victor Stinner "
"en :issue:`36721`.)"

#: ../Doc/whatsnew/3.8.rst:256
msgid "f-strings support ``=`` for self-documenting expressions and debugging"
msgstr ""
"Los f-strings soportan ``=`` para expresiones autodocumentadas y depuración"

#: ../Doc/whatsnew/3.8.rst:258
msgid ""
"Added an ``=`` specifier to :term:`f-string`\\s. An f-string such as "
"``f'{expr=}'`` will expand to the text of the expression, an equal sign, "
"then the representation of the evaluated expression.  For example:"
msgstr ""
"Se ha agregado un especificador ``=`` a los :term:`f-string`\\s. Un f-string "
"como ``f'{expr=}'`` se expandirá al texto de la expresión, seguido de un "
"signo igual y luego la representación de la expresión evaluada. Por ejemplo:"

#: ../Doc/whatsnew/3.8.rst:267
msgid ""
"The usual :ref:`f-string format specifiers <f-strings>` allow more control "
"over how the result of the expression is displayed::"
msgstr ""
"Los :ref:`especificadores de formato de los f-string <f-strings>` usuales "
"permiten un mayor control sobre como se muestra el resultado de la "
"expresión::"

#: ../Doc/whatsnew/3.8.rst:274
msgid ""
"The ``=`` specifier will display the whole expression so that calculations "
"can be shown::"
msgstr ""
"El especificador ``=`` mostrará la expresión completa para que se puedan "
"mostrar los cálculos:"

#: ../Doc/whatsnew/3.8.rst:280
msgid "(Contributed by Eric V. Smith and Larry Hastings in :issue:`36817`.)"
msgstr "(Contribución de Eric V. Smith y Larry Hastings en :issue:`36817`.)"

#: ../Doc/whatsnew/3.8.rst:284
msgid "PEP 578: Python Runtime Audit Hooks"
msgstr "PEP 578: Ganchos de auditoría en tiempo de ejecución de Python"

#: ../Doc/whatsnew/3.8.rst:286
msgid ""
"The PEP adds an Audit Hook and Verified Open Hook. Both are available from "
"Python and native code, allowing applications and frameworks written in pure "
"Python code to take advantage of extra notifications, while also allowing "
"embedders or system administrators to deploy builds of Python where auditing "
"is always enabled."
msgstr ""
"Este PEP agrega un gancho de auditoría y un gancho abierto verificado. Ambos "
"están disponibles desde Python y desde el código nativo, lo que permite que "
"las aplicaciones y los frameworks escritos en código Python puro aprovechen "
"las notificaciones adicionales, al tiempo que permiten a los integradores o "
"administradores de sistemas implementar compilaciones de Python donde la "
"auditoría siempre está habilitada."

#: ../Doc/whatsnew/3.8.rst:292
msgid "See :pep:`578` for full details."
msgstr "Consultar :pep:`578` para obtener más detalles."

#: ../Doc/whatsnew/3.8.rst:296
msgid "PEP 587: Python Initialization Configuration"
msgstr "PEP 587: Configuración de inicialización de Python"

#: ../Doc/whatsnew/3.8.rst:298
msgid ""
"The :pep:`587` adds a new C API to configure the Python Initialization "
"providing finer control on the whole configuration and better error "
"reporting."
msgstr ""
"El :pep:`587` agrega una nueva API de C para configurar la inicialización de "
"Python, proporcionando un control más preciso de toda la configuración y "
"mejores informes de errores."

#: ../Doc/whatsnew/3.8.rst:301
msgid "New structures:"
msgstr "Nuevas estructuras:"

#: ../Doc/whatsnew/3.8.rst:303
msgid ":c:type:`PyConfig`"
msgstr ":c:type:`PyConfig`"

#: ../Doc/whatsnew/3.8.rst:304
msgid ":c:type:`PyPreConfig`"
msgstr ":c:type:`PyPreConfig`"

#: ../Doc/whatsnew/3.8.rst:305
msgid ":c:type:`PyStatus`"
msgstr ":c:type:`PyStatus`"

#: ../Doc/whatsnew/3.8.rst:306
msgid ":c:type:`PyWideStringList`"
msgstr ":c:type:`PyWideStringList`"

#: ../Doc/whatsnew/3.8.rst:308
msgid "New functions:"
msgstr "Nuevas funciones:"

#: ../Doc/whatsnew/3.8.rst:310
msgid ":c:func:`PyConfig_Clear`"
msgstr ":c:func:`PyConfig_Clear`"

#: ../Doc/whatsnew/3.8.rst:311
msgid ":c:func:`PyConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyConfig_InitIsolatedConfig`"

#: ../Doc/whatsnew/3.8.rst:312
msgid ":c:func:`PyConfig_InitPythonConfig`"
msgstr ":c:func:`PyConfig_InitPythonConfig`"

#: ../Doc/whatsnew/3.8.rst:313
msgid ":c:func:`PyConfig_Read`"
msgstr ":c:func:`PyConfig_Read`"

#: ../Doc/whatsnew/3.8.rst:314
msgid ":c:func:`PyConfig_SetArgv`"
msgstr ":c:func:`PyConfig_SetArgv`"

#: ../Doc/whatsnew/3.8.rst:315
msgid ":c:func:`PyConfig_SetBytesArgv`"
msgstr ":c:func:`PyConfig_SetBytesArgv`"

#: ../Doc/whatsnew/3.8.rst:316
msgid ":c:func:`PyConfig_SetBytesString`"
msgstr ":c:func:`PyConfig_SetBytesString`"

#: ../Doc/whatsnew/3.8.rst:317
msgid ":c:func:`PyConfig_SetString`"
msgstr ":c:func:`PyConfig_SetString`"

#: ../Doc/whatsnew/3.8.rst:318
msgid ":c:func:`PyPreConfig_InitIsolatedConfig`"
msgstr ":c:func:`PyPreConfig_InitIsolatedConfig`"

#: ../Doc/whatsnew/3.8.rst:319
msgid ":c:func:`PyPreConfig_InitPythonConfig`"
msgstr ":c:func:`PyPreConfig_InitPythonConfig`"

#: ../Doc/whatsnew/3.8.rst:320
msgid ":c:func:`PyStatus_Error`"
msgstr ":c:func:`PyStatus_Error`"

#: ../Doc/whatsnew/3.8.rst:321
msgid ":c:func:`PyStatus_Exception`"
msgstr ":c:func:`PyStatus_Exception`"

#: ../Doc/whatsnew/3.8.rst:322
msgid ":c:func:`PyStatus_Exit`"
msgstr ":c:func:`PyStatus_Exit`"

#: ../Doc/whatsnew/3.8.rst:323
msgid ":c:func:`PyStatus_IsError`"
msgstr ":c:func:`PyStatus_IsError`"

#: ../Doc/whatsnew/3.8.rst:324
msgid ":c:func:`PyStatus_IsExit`"
msgstr ":c:func:`PyStatus_IsExit`"

#: ../Doc/whatsnew/3.8.rst:325
msgid ":c:func:`PyStatus_NoMemory`"
msgstr ":c:func:`PyStatus_NoMemory`"

#: ../Doc/whatsnew/3.8.rst:326
msgid ":c:func:`PyStatus_Ok`"
msgstr ":c:func:`PyStatus_Ok`"

#: ../Doc/whatsnew/3.8.rst:327
msgid ":c:func:`PyWideStringList_Append`"
msgstr ":c:func:`PyWideStringList_Append`"

#: ../Doc/whatsnew/3.8.rst:328
msgid ":c:func:`PyWideStringList_Insert`"
msgstr ":c:func:`PyWideStringList_Insert`"

#: ../Doc/whatsnew/3.8.rst:329
msgid ":c:func:`Py_BytesMain`"
msgstr ":c:func:`Py_BytesMain`"

#: ../Doc/whatsnew/3.8.rst:330
msgid ":c:func:`Py_ExitStatusException`"
msgstr ":c:func:`Py_ExitStatusException`"

#: ../Doc/whatsnew/3.8.rst:331
msgid ":c:func:`Py_InitializeFromConfig`"
msgstr ":c:func:`Py_InitializeFromConfig`"

#: ../Doc/whatsnew/3.8.rst:332
msgid ":c:func:`Py_PreInitialize`"
msgstr ":c:func:`Py_PreInitialize`"

#: ../Doc/whatsnew/3.8.rst:333
msgid ":c:func:`Py_PreInitializeFromArgs`"
msgstr ":c:func:`Py_PreInitializeFromArgs`"

#: ../Doc/whatsnew/3.8.rst:334
msgid ":c:func:`Py_PreInitializeFromBytesArgs`"
msgstr ":c:func:`Py_PreInitializeFromBytesArgs`"

#: ../Doc/whatsnew/3.8.rst:335
msgid ":c:func:`Py_RunMain`"
msgstr ":c:func:`Py_RunMain`"

#: ../Doc/whatsnew/3.8.rst:337
msgid ""
"This PEP also adds ``_PyRuntimeState.preconfig`` (:c:type:`PyPreConfig` "
"type) and ``PyInterpreterState.config`` (:c:type:`PyConfig` type) fields to "
"these internal structures. ``PyInterpreterState.config`` becomes the new "
"reference configuration, replacing global configuration variables and other "
"private variables."
msgstr ""
"Este PEP también agrega los campos ``_PyRuntimeState.preconfig`` (tipo :c:"
"type:`PyPreConfig`) y ``PyInterpreterState.config`` (tipo :c:type:"
"`PyConfig`) a estas estructuras internas. ``PyInterpreterState.config`` se "
"convierte en la nueva configuración de referencia, reemplazando las "
"variables de configuración globales y otras variables privadas."

#: ../Doc/whatsnew/3.8.rst:343
msgid ""
"See :ref:`Python Initialization Configuration <init-config>` for the "
"documentation."
msgstr ""
"Consultar :ref:`Configuración de inicialización de Python <init-config>` "
"para la documentación."

#: ../Doc/whatsnew/3.8.rst:346
msgid "See :pep:`587` for a full description."
msgstr "Consultar :pep:`587` para obtener una descripción completa."

#: ../Doc/whatsnew/3.8.rst:348
msgid "(Contributed by Victor Stinner in :issue:`36763`.)"
msgstr "(Contribución de Victor Stinner en :issue:`36763`.)"

#: ../Doc/whatsnew/3.8.rst:352
msgid "Vectorcall: a fast calling protocol for CPython"
msgstr "Vectorcall: un protocolo de invocación rápida para CPython"

#: ../Doc/whatsnew/3.8.rst:354
msgid ""
"The \"vectorcall\" protocol is added to the Python/C API. It is meant to "
"formalize existing optimizations which were already done for various "
"classes. Any extension type implementing a callable can use this protocol."
msgstr ""
"El protocolo \"vectorcall\" se ha agregado a la API de Python/C. Tiene como "
"objetivo formalizar las optimizaciones existentes que ya se realizaron para "
"varias clases. Cualquier tipo de extensión que implemente un invocable puede "
"utilizar este protocolo."

#: ../Doc/whatsnew/3.8.rst:359
msgid ""
"This is currently provisional. The aim is to make it fully public in Python "
"3.9."
msgstr ""
"Actualmente es provisional. El objetivo es hacerlo completamente público en "
"Python 3.9."

#: ../Doc/whatsnew/3.8.rst:362
msgid "See :pep:`590` for a full description."
msgstr "Consultar :pep:`590` para obtener una descripción completa."

#: ../Doc/whatsnew/3.8.rst:364
msgid "(Contributed by Jeroen Demeyer and Mark Shannon in :issue:`36974`.)"
msgstr "(Contribución de Jeroen Demeyer y Mark Shannon en :issue:`36974`.)"

#: ../Doc/whatsnew/3.8.rst:368
msgid "Pickle protocol 5 with out-of-band data buffers"
msgstr "Protocolo 5 de Pickle con búferes de datos fuera de banda"

#: ../Doc/whatsnew/3.8.rst:370
msgid ""
"When :mod:`pickle` is used to transfer large data between Python processes "
"in order to take advantage of multi-core or multi-machine processing, it is "
"important to optimize the transfer by reducing memory copies, and possibly "
"by applying custom techniques such as data-dependent compression."
msgstr ""
"Cuando :mod:`pickle` se usa para transferir grandes cantidades de datos "
"entre procesos de Python, con la finalidad de aprovechar el procesamiento de "
"múltiples núcleos o máquinas, es importante optimizar la transferencia "
"reduciendo las copias en memoria y posiblemente aplicando técnicas "
"personalizadas, como la compresión dependiente de datos."

#: ../Doc/whatsnew/3.8.rst:375
msgid ""
"The :mod:`pickle` protocol 5 introduces support for out-of-band buffers "
"where :pep:`3118`-compatible data can be transmitted separately from the "
"main pickle stream, at the discretion of the communication layer."
msgstr ""
"El protocolo 5 de :mod:`pickle` introduce soporte para búferes fuera de "
"banda, donde los datos compatibles con :pep:`3118` se pueden transmitir "
"separados del flujo principal de pickle, a discreción de la capa de "
"comunicación."

#: ../Doc/whatsnew/3.8.rst:379
msgid "See :pep:`574` for a full description."
msgstr "Consultar :pep:`574` para obtener una descripción completa."

#: ../Doc/whatsnew/3.8.rst:381
msgid "(Contributed by Antoine Pitrou in :issue:`36785`.)"
msgstr "(Contribución de Antoine Pitrou en :issue:`36785`.)"

#: ../Doc/whatsnew/3.8.rst:385
msgid "Other Language Changes"
msgstr "Otros cambios en el lenguaje"

#: ../Doc/whatsnew/3.8.rst:387
msgid ""
"A :keyword:`continue` statement was illegal in the :keyword:`finally` clause "
"due to a problem with the implementation.  In Python 3.8 this restriction "
"was lifted. (Contributed by Serhiy Storchaka in :issue:`32489`.)"
msgstr ""
"La declaración :keyword:`continue` era ilegal en la cláusula :keyword:"
"`finally` debido a un problema con la implementación. En Python 3.8 se ha "
"eliminado esta restricción. (Contribución de Serhiy Storchaka en :issue:"
"`32489`.)"

#: ../Doc/whatsnew/3.8.rst:392
msgid ""
"The :class:`bool`, :class:`int`, and :class:`fractions.Fraction` types now "
"have an :meth:`~int.as_integer_ratio` method like that found in :class:"
"`float` and :class:`decimal.Decimal`.  This minor API extension makes it "
"possible to write ``numerator, denominator = x.as_integer_ratio()`` and have "
"it work across multiple numeric types. (Contributed by Lisa Roach in :issue:"
"`33073` and Raymond Hettinger in :issue:`37819`.)"
msgstr ""
"Los tipos :class:`bool`, :class:`int` y :class:`fractions.Fraction` ahora "
"tienen un método :meth:`~int.as_integer_ratio` como el que se encuentra en :"
"class:`float` y :class:`decimal.Decimal`. Esta extensión menor de la API "
"hace posible escribir ``numerator, denominator = x.as_integer_ratio()`` y "
"hacer que funcione con múltiples tipos numéricos. (Contribución de Lisa "
"Roach en :issue:`33073` y de Raymond Hettinger en :issue:`37819`.)"

#: ../Doc/whatsnew/3.8.rst:400
msgid ""
"Constructors of :class:`int`, :class:`float` and :class:`complex` will now "
"use the :meth:`~object.__index__` special method, if available and the "
"corresponding method :meth:`~object.__int__`, :meth:`~object.__float__` or :"
"meth:`~object.__complex__` is not available. (Contributed by Serhiy "
"Storchaka in :issue:`20092`.)"
msgstr ""
"Los constructores de :class:`int`, :class:`float` y :class:`complex` ahora "
"usarán el método especial :meth:`~object .__index__`, si está disponible y "
"el método correspondiente :meth:`~object.__int__`, :meth:`~object.__float__` "
"o :meth:`~object.__complex__` no está disponible. (Contribución de Serhiy "
"Storchaka en :issue:`20092`.)"

#: ../Doc/whatsnew/3.8.rst:406
msgid ""
"Added support of ``\\N{name}`` escapes in :mod:`regular expressions <re>`::"
msgstr ""
"Agregado soporte para escapes ``\\N{name}`` en :mod:`expresiones regulares "
"<re>`::"

#: ../Doc/whatsnew/3.8.rst:413
msgid ""
"(Contributed by Jonathan Eunice and Serhiy Storchaka in :issue:`30688`.)"
msgstr ""
"(Contribución de Jonathan Eunice y Serhiy Storchaka in :issue:`30688`.)"

#: ../Doc/whatsnew/3.8.rst:415
msgid ""
"Dict and dictviews are now iterable in reversed insertion order using :func:"
"`reversed`. (Contributed by Rémi Lapeyre in :issue:`33462`.)"
msgstr ""
"Los diccionarios y sus vistas ahora se pueden iterar en orden inverso de "
"inserción usando :func:`reversed`. (Contribución de Rémi Lapeyre en :issue:"
"`33462`.)"

#: ../Doc/whatsnew/3.8.rst:418
msgid ""
"The syntax allowed for keyword names in function calls was further "
"restricted. In particular, ``f((keyword)=arg)`` is no longer allowed. It was "
"never intended to permit more than a bare name on the left-hand side of a "
"keyword argument assignment term. (Contributed by Benjamin Peterson in :"
"issue:`34641`.)"
msgstr ""
"La sintaxis permitida para los nombres por palabra clave en las llamadas a "
"funciones se ha restringido aún más. En particular, ``f((keyword)=arg)`` ya "
"no está permitido. Nunca se tuvo intención de permitir algo más que un "
"simple nombre en el lado izquierdo de un término de asignación de argumento "
"por palabra clave. (Contribución de Benjamin Peterson en :issue:`34641`.)"

#: ../Doc/whatsnew/3.8.rst:424
msgid ""
"Generalized iterable unpacking in :keyword:`yield` and :keyword:`return` "
"statements no longer requires enclosing parentheses. This brings the *yield* "
"and *return* syntax into better agreement with normal assignment syntax::"
msgstr ""
"El desempaquetado de iterables generalizado en declaraciones :keyword:"
"`yield` y :keyword:`return` ya no requiere ser encerrado entre paréntesis. "
"Esto hace que la sintaxis de *yield* y *return* se asemeje más a la sintaxis "
"normal de asignación::"

#: ../Doc/whatsnew/3.8.rst:436
msgid "(Contributed by David Cuthbert and Jordan Chapman in :issue:`32117`.)"
msgstr "(Contribución de David Cuthbert y Jordan Chapman en :issue:`32117`.)"

#: ../Doc/whatsnew/3.8.rst:438
msgid ""
"When a comma is missed in code such as ``[(10, 20) (30, 40)]``, the compiler "
"displays a :exc:`SyntaxWarning` with a helpful suggestion. This improves on "
"just having a :exc:`TypeError` indicating that the first tuple was not "
"callable.  (Contributed by Serhiy Storchaka in :issue:`15248`.)"
msgstr ""
"Cuando falta una coma en el código, como en ``[(10, 20) (30, 40)]``, el "
"compilador muestra un :exc:`SyntaxWarning` con una sugerencia útil. Esto "
"representa una mejora con respecto a la implementación previa en la que solo "
"se mostraba un :exc:`TypeError` indicando que la primera tupla no era "
"invocable. (Contribución de Serhiy Storchaka en :issue:`15248`.)"

#: ../Doc/whatsnew/3.8.rst:444
msgid ""
"Arithmetic operations between subclasses of :class:`datetime.date` or :class:"
"`datetime.datetime` and :class:`datetime.timedelta` objects now return an "
"instance of the subclass, rather than the base class. This also affects the "
"return type of operations whose implementation (directly or indirectly) "
"uses :class:`datetime.timedelta` arithmetic, such as :meth:`~datetime."
"datetime.astimezone`. (Contributed by Paul Ganssle in :issue:`32417`.)"
msgstr ""
"Las operaciones aritméticas entre subclases de :class:`datetime.date` o :"
"class:`datetime.datetime` y :class:`datetime.timedelta` ahora retornan una "
"instancia de la subclase, en lugar de la clase base. Esto también afecta al "
"tipo de retorno de las operaciones cuya implementación (directa o "
"indirectamente) usa la aritmética de :class:`datetime.timedelta`, como :meth:"
"`~datetime.datetime.astimezone`. (Contribución de Paul Ganssle en :issue:"
"`32417`.)"

#: ../Doc/whatsnew/3.8.rst:452
msgid ""
"When the Python interpreter is interrupted by Ctrl-C (SIGINT) and the "
"resulting :exc:`KeyboardInterrupt` exception is not caught, the Python "
"process now exits via a SIGINT signal or with the correct exit code such "
"that the calling process can detect that it died due to a Ctrl-C.  Shells on "
"POSIX and Windows use this to properly terminate scripts in interactive "
"sessions. (Contributed by Google via Gregory P. Smith in :issue:`1054041`.)"
msgstr ""
"Cuando el intérprete de Python es interrumpido por Ctrl-C (SIGINT) y la "
"excepción :exc:`KeyboardInterrupt` resultante no se detecta, el proceso de "
"Python ahora termina su ejecución a través de una señal SIGINT o con el "
"código de salida correcto, de modo que el proceso que lo invocó puede "
"detectar que murió debido a Ctrl-C. Los shells en POSIX y Windows usan esto "
"para terminar la ejecución de los scripts en sesiones interactivas de forma "
"correcta. (Contribución de Google a través de Gregory P. Smith en :issue:"
"`1054041`.)"

#: ../Doc/whatsnew/3.8.rst:459
msgid ""
"Some advanced styles of programming require updating the :class:`types."
"CodeType` object for an existing function.  Since code objects are "
"immutable, a new code object needs to be created, one that is modeled on the "
"existing code object.  With 19 parameters, this was somewhat tedious.  Now, "
"the new ``replace()`` method makes it possible to create a clone with a few "
"altered parameters."
msgstr ""
"Algunos estilos de programación avanzados requieren actualizar el objeto :"
"class:`types.CodeType` para una función ya existente. Dado que los objetos "
"de código son inmutables, es necesario crear un nuevo objeto de código, que "
"sea modelado a partir del objeto de código existente. Con 19 parámetros, "
"esto era algo tedioso. Ahora, el nuevo método ``replace()`` hace posible "
"crear un clon con algunos parámetros alterados."

#: ../Doc/whatsnew/3.8.rst:466
msgid ""
"Here's an example that alters the :func:`statistics.mean` function to "
"prevent the *data* parameter from being used as a keyword argument::"
msgstr ""
"Aquí hay un ejemplo que modifica la función :func:`statistics.mean` para "
"evitar que el parámetro *data* se use como un argumento por palabra clave::"

#: ../Doc/whatsnew/3.8.rst:478
msgid "(Contributed by Victor Stinner in :issue:`37032`.)"
msgstr "(Contribución de Victor Stinner en :issue:`37032`.)"

#: ../Doc/whatsnew/3.8.rst:480
msgid ""
"For integers, the three-argument form of the :func:`pow` function now "
"permits the exponent to be negative in the case where the base is relatively "
"prime to the modulus. It then computes a modular inverse to the base when "
"the exponent is ``-1``, and a suitable power of that inverse for other "
"negative exponents.  For example, to compute the `modular multiplicative "
"inverse <https://en.wikipedia.org/wiki/Modular_multiplicative_inverse>`_ of "
"38 modulo 137, write::"
msgstr ""
"Para enteros, la forma de tres argumentos de la función :func:`pow` ahora "
"permite que el exponente sea negativo en el caso de que la base y el módulo "
"sean primos relativos (coprimos). Luego calcula un inverso modular a la base "
"cuando el exponente es ``-1`` y una potencia adecuada de ese inverso en el "
"caso de otros exponentes negativos. Por ejemplo, para calcular el `inverso "
"multiplicativo <https://es.wikipedia.org/wiki/Inverso_multiplicativo_(aritm"
"%C3%A9tica_modular)>`_ de 38 módulo 137, escribe::"

#: ../Doc/whatsnew/3.8.rst:494
msgid ""
"Modular inverses arise in the solution of `linear Diophantine equations "
"<https://en.wikipedia.org/wiki/Diophantine_equation>`_. For example, to find "
"integer solutions for ``4258𝑥 + 147𝑦 = 369``, first rewrite as ``4258𝑥 ≡ 369 "
"(mod 147)`` then solve:"
msgstr ""
"Los inversos modulares surgen de la solución de `ecuaciones diofánticas "
"lineales <https://es.wikipedia.org/wiki/Ecuaci%C3%B3n_diof%C3%A1ntica>`_. "
"Por ejemplo, para encontrar soluciones enteras para ``4258𝑥 + 147𝑦 = 369``, "
"primero debes reescribirla como ``4258𝑥 ≡ 369 (mod 147)`` y luego resolver:"

#: ../Doc/whatsnew/3.8.rst:504
msgid "(Contributed by Mark Dickinson in :issue:`36027`.)"
msgstr "(Contribución de Mark Dickinson en :issue:`36027`.)"

#: ../Doc/whatsnew/3.8.rst:506
msgid ""
"Dict comprehensions have been synced-up with dict literals so that the key "
"is computed first and the value second::"
msgstr ""
"Las compresiones de diccionarios se han sincronizado con los literales de "
"diccionario para que primero se calcule la clave y posteriormente el valor::"

#: ../Doc/whatsnew/3.8.rst:521
msgid ""
"The guaranteed execution order is helpful with assignment expressions "
"because variables assigned in the key expression will be available in the "
"value expression::"
msgstr ""
"Este orden de ejecución garantizado es especialmente útil en las expresiones "
"de asignación porque las variables asignadas en la expresión de la clave "
"estarán disponibles en la expresión del valor::"

#: ../Doc/whatsnew/3.8.rst:531
msgid "(Contributed by Jörn Heissler in :issue:`35224`.)"
msgstr "(Contribución de Jörn Heissler en :issue:`35224`.)"

#: ../Doc/whatsnew/3.8.rst:533
msgid ""
"The :meth:`object.__reduce__` method can now return a tuple from two to six "
"elements long. Formerly, five was the limit.  The new, optional sixth "
"element is a callable with a ``(obj, state)`` signature.  This allows the "
"direct control over the state-updating behavior of a specific object.  If "
"not *None*, this callable will have priority over the object's :meth:"
"`~__setstate__` method. (Contributed by Pierre Glaser and Olivier Grisel in :"
"issue:`35900`.)"
msgstr ""
"El método :meth:`object.__reduce__` ahora puede retornar una tupla con una "
"longitud que va desde los dos a los seis elementos. Anteriormente, el límite "
"era cinco. El nuevo sexto elemento opcional es un invocable con una firma "
"``(obj, state)``. Esto permite el control directo sobre el comportamiento de "
"actualización de estado de un objeto específico. Si no es *None*, este "
"invocable tendrá prioridad sobre el método :meth:`~__setstate__` del objeto. "
"(Contribución de Pierre Glaser y Olivier Grisel en :issue:`35900`.)"

#: ../Doc/whatsnew/3.8.rst:542
msgid "New Modules"
msgstr "Nuevos módulos"

#: ../Doc/whatsnew/3.8.rst:544
msgid ""
"The new :mod:`importlib.metadata` module provides (provisional) support for "
"reading metadata from third-party packages.  For example, it can extract an "
"installed package's version number, list of entry points, and more::"
msgstr ""
"El nuevo módulo :mod:`importlib.metadata` proporciona soporte (provisional) "
"para leer metadatos de paquetes de terceros. Por ejemplo, puede extraer el "
"número de versión de un paquete instalado, la lista de puntos de entrada y "
"más::"

#: ../Doc/whatsnew/3.8.rst:563
msgid "(Contributed by Barry Warsaw and Jason R. Coombs in :issue:`34632`.)"
msgstr "(Contribución de Barry Warsaw y Jason R. Coombs en :issue:`34632`.)"

#: ../Doc/whatsnew/3.8.rst:567
msgid "Improved Modules"
msgstr "Módulos mejorados"

#: ../Doc/whatsnew/3.8.rst:570
msgid "ast"
msgstr "ast"

#: ../Doc/whatsnew/3.8.rst:572
msgid ""
"AST nodes now have ``end_lineno`` and ``end_col_offset`` attributes, which "
"give the precise location of the end of the node.  (This only applies to "
"nodes that have ``lineno`` and ``col_offset`` attributes.)"
msgstr ""
"Los nodos de AST ahora disponen de los atributos ``end_lineno`` y "
"``end_col_offset``, que proporcionan la localización precisa del final del "
"nodo. (Esto solo se aplica a los nodos que tienen los atributos ``lineno`` y "
"``col_offset``.)"

#: ../Doc/whatsnew/3.8.rst:576
msgid ""
"New function :func:`ast.get_source_segment` returns the source code for a "
"specific AST node."
msgstr ""
"La nueva función :func:`ast.get_source_segment` retorna el código fuente de "
"un nodo AST específico."

#: ../Doc/whatsnew/3.8.rst:579
msgid "(Contributed by Ivan Levkivskyi in :issue:`33416`.)"
msgstr "(Contribución de Ivan Levkivskyi en :issue:`33416`.)"

#: ../Doc/whatsnew/3.8.rst:581
msgid "The :func:`ast.parse` function has some new flags:"
msgstr "La función :func:`ast.parse` tiene algunos flags nuevos:"

#: ../Doc/whatsnew/3.8.rst:583
msgid ""
"``type_comments=True`` causes it to return the text of :pep:`484` and :pep:"
"`526` type comments associated with certain AST nodes;"
msgstr ""
"``type_comments=True`` causa que la función retorne el texto de los "
"comentarios de tipo especificados en :pep:`484` y :pep:`526` asociados con "
"ciertos nodos AST;"

#: ../Doc/whatsnew/3.8.rst:586
msgid ""
"``mode='func_type'`` can be used to parse :pep:`484` \"signature type "
"comments\" (returned for function definition AST nodes);"
msgstr ""
"``mode='func_type'`` puede usarse para realizar un análisis sintáctico de "
"los \"comentarios de tipo de firma\" de :pep:`484` (retornados por los nodos "
"AST de definición de funciones);"

#: ../Doc/whatsnew/3.8.rst:589
msgid ""
"``feature_version=(3, N)`` allows specifying an earlier Python 3 version.  "
"For example, ``feature_version=(3, 4)`` will treat :keyword:`async` and :"
"keyword:`await` as non-reserved words."
msgstr ""
"``feature_version=(3, N)`` permite especificar una versión de Python 3 "
"previa. Por ejemplo, ``feature_version=(3, 4)`` hará que se trate a :keyword:"
"`async` y :keyword:`await` como palabras no reservadas."

#: ../Doc/whatsnew/3.8.rst:593
msgid "(Contributed by Guido van Rossum in :issue:`35766`.)"
msgstr "(Contribución de Guido van Rossum en :issue:`35766`.)"

#: ../Doc/whatsnew/3.8.rst:597
msgid "asyncio"
msgstr "asyncio"

#: ../Doc/whatsnew/3.8.rst:599
msgid ""
":func:`asyncio.run` has graduated from the provisional to stable API. This "
"function can be used to execute a :term:`coroutine` and return the result "
"while automatically managing the event loop. For example::"
msgstr ""
":func:`asyncio.run` ha pasado de la API provisional a la estable. Esta "
"función se puede utilizar para ejecutar una :term:`coroutine` y retornar el "
"resultado mientras se gestiona automáticamente el bucle de eventos. Por "
"ejemplo::"

#: ../Doc/whatsnew/3.8.rst:611
msgid "This is *roughly* equivalent to::"
msgstr "Esto es *aproximadamente* equivalente a::"

#: ../Doc/whatsnew/3.8.rst:628
msgid ""
"The actual implementation is significantly more complex. Thus, :func:"
"`asyncio.run` should be the preferred way of running asyncio programs."
msgstr ""
"La implementación real es significativamente más compleja. Por lo tanto, :"
"func:`asyncio.run` debería ser la forma preferida de ejecutar programas "
"asyncio."

#: ../Doc/whatsnew/3.8.rst:631
msgid "(Contributed by Yury Selivanov in :issue:`32314`.)"
msgstr "(Contribución de Yury Selivanov en :issue:`32314`.)"

#: ../Doc/whatsnew/3.8.rst:633
msgid ""
"Running ``python -m asyncio`` launches a natively async REPL.  This allows "
"rapid experimentation with code that has a top-level :keyword:`await`.  "
"There is no longer a need to directly call ``asyncio.run()`` which would "
"spawn a new event loop on every invocation:"
msgstr ""
"La ejecución de ``python -m asyncio`` lanza un REPL asincrónico de forma "
"nativa. Esto permite una rápida experimentación con código que tiene un "
"nivel :keyword:`await` superior. Ya no es necesario llamar directamente a "
"``asyncio.run()``, lo que generaría un nuevo ciclo de eventos en cada "
"invocación:"

#: ../Doc/whatsnew/3.8.rst:648
msgid "(Contributed by Yury Selivanov in :issue:`37028`.)"
msgstr "(Contribución de Yury Selivanov en :issue:`37028`.)"

#: ../Doc/whatsnew/3.8.rst:650 ../Doc/whatsnew/3.8.rst:1955
msgid ""
"The exception :class:`asyncio.CancelledError` now inherits from :class:"
"`BaseException` rather than :class:`Exception`. (Contributed by Yury "
"Selivanov in :issue:`32528`.)"
msgstr ""
"La excepción :class:`asyncio.CancelledError` ahora hereda de :class:"
"`BaseException` en vez de :class:`Exception`. (Contribución de Yury "
"Selivanov en :issue:`32528`.)"

#: ../Doc/whatsnew/3.8.rst:654
msgid ""
"On Windows, the default event loop is now :class:`~asyncio."
"ProactorEventLoop`. (Contributed by Victor Stinner in :issue:`34687`.)"
msgstr ""
"En Windows, el ciclo de eventos predeterminado ahora es :class:`~asyncio."
"ProactorEventLoop`. (Contribución de Victor Stinner en :issue:`34687`.)"

#: ../Doc/whatsnew/3.8.rst:657
msgid ""
":class:`~asyncio.ProactorEventLoop` now also supports UDP. (Contributed by "
"Adam Meily and Andrew Svetlov in :issue:`29883`.)"
msgstr ""
":class:`~asyncio.ProactorEventLoop` ahora también es compatible con UDP. "
"(Contribución de Adam Meily y Andrew Svetlov en :issue:`29883`.)"

#: ../Doc/whatsnew/3.8.rst:660
msgid ""
":class:`~asyncio.ProactorEventLoop` can now be interrupted by :exc:"
"`KeyboardInterrupt` (\"CTRL+C\"). (Contributed by Vladimir Matveev in :issue:"
"`23057`.)"
msgstr ""
":class:`~asyncio.ProactorEventLoop` ahora puede ser interrumpido por :exc:"
"`KeyboardInterrupt` (\"CTRL+C\"). (Contribución de Vladimir Matveev en :"
"issue:`23057`.)"

#: ../Doc/whatsnew/3.8.rst:664
msgid ""
"Added :meth:`asyncio.Task.get_coro` for getting the wrapped coroutine within "
"an :class:`asyncio.Task`. (Contributed by Alex Grönholm in :issue:`36999`.)"
msgstr ""
"Se ha agregado :meth:`asyncio.Task.get_coro` para obtener la corrutina "
"envuelta dentro de :class:`asyncio.Task`. (Contribución de Alex Grönholm en :"
"issue:`36999`.)"

#: ../Doc/whatsnew/3.8.rst:668
msgid ""
"Asyncio tasks can now be named, either by passing the ``name`` keyword "
"argument to :func:`asyncio.create_task` or the :meth:`~asyncio.loop."
"create_task` event loop method, or by calling the :meth:`~asyncio.Task."
"set_name` method on the task object. The task name is visible in the "
"``repr()`` output of :class:`asyncio.Task` and can also be retrieved using "
"the :meth:`~asyncio.Task.get_name` method. (Contributed by Alex Grönholm in :"
"issue:`34270`.)"
msgstr ""
"Las tareas de Asyncio ahora se pueden nombrar, ya sea pasando el argumento "
"por palabra clave ``name`` a :func:`asyncio.create_task` o al método :meth:"
"`~asyncio.loop.create_task` del bucle de eventos, o invocando al método :"
"meth:`~asyncio.Task.set_name` en el objeto de tarea. El nombre de la tarea "
"es visible en la salida de ``repr()`` de :class:`asyncio.Task` y también se "
"puede recuperar usando el método :meth:`~asyncio.Task.get_name`. "
"(Contribución de Alex Grönholm en :issue:`34270`.)"

#: ../Doc/whatsnew/3.8.rst:676
msgid ""
"Added support for `Happy Eyeballs <https://en.wikipedia.org/wiki/"
"Happy_Eyeballs>`_ to :func:`asyncio.loop.create_connection`. To specify the "
"behavior, two new parameters have been added: *happy_eyeballs_delay* and "
"*interleave*. The Happy Eyeballs algorithm improves responsiveness in "
"applications that support IPv4 and IPv6 by attempting to simultaneously "
"connect using both. (Contributed by twisteroid ambassador in :issue:`33530`.)"
msgstr ""
"Se agregó soporte para `Happy Eyeballs <https://en.wikipedia.org/wiki/"
"Happy_Eyeballs>`_ a :func:`asyncio.loop.create_connection`. Para especificar "
"el comportamiento, se han agregado dos nuevos parámetros: "
"*happy_eyeballs_delay* e *interleave*. El algoritmo Happy Eyeballs mejora la "
"capacidad de respuesta en aplicaciones que admiten IPv4 e IPv6 al intentar "
"conectarse simultáneamente utilizando ambos. (Contribución de twisteroid "
"ambassador en :issue:`33530`.)"

#: ../Doc/whatsnew/3.8.rst:686
msgid "builtins"
msgstr "builtins"

#: ../Doc/whatsnew/3.8.rst:688
msgid ""
"The :func:`compile` built-in has been improved to accept the ``ast."
"PyCF_ALLOW_TOP_LEVEL_AWAIT`` flag. With this new flag passed, :func:"
"`compile` will allow top-level ``await``, ``async for`` and ``async with`` "
"constructs that are usually considered invalid syntax. Asynchronous code "
"object marked with the ``CO_COROUTINE`` flag may then be returned. "
"(Contributed by Matthias Bussonnier in :issue:`34616`)"
msgstr ""
"La función incorporada :func:`compile` se ha mejorado para que acepte el "
"flag ``ast.PyCF_ALLOW_TOP_LEVEL_AWAIT``. Si se pasa este nuevo flag, :func:"
"`compile` permitirá construcciones de nivel superior ``await``, ``async "
"for`` y ``async with``, que normalmente se consideran sintaxis inválida. El "
"objeto de código asíncrono marcado con el flag ``CO_COROUTINE`` puede ser "
"retornado. (Contribución de Matthias Bussonnier en :issue:`34616`.)"

#: ../Doc/whatsnew/3.8.rst:697
msgid "collections"
msgstr "collections"

#: ../Doc/whatsnew/3.8.rst:699
msgid ""
"The :meth:`~collections.somenamedtuple._asdict` method for :func:"
"`collections.namedtuple` now returns a :class:`dict` instead of a :class:"
"`collections.OrderedDict`. This works because regular dicts have guaranteed "
"ordering since Python 3.7. If the extra features of :class:`OrderedDict` are "
"required, the suggested remediation is to cast the result to the desired "
"type: ``OrderedDict(nt._asdict())``. (Contributed by Raymond Hettinger in :"
"issue:`35864`.)"
msgstr ""
"El método :meth:`~collections.somenamedtuple._asdict` para :func:"
"`collections.namedtuple` ahora retorna una instancia de :class:`dict` en "
"lugar de una de :class:`collections.OrderedDict`. Esto funciona porque se "
"garantiza que los diccionarios regulares mantienen el orden de inserción "
"desde Python 3.7. Si se requieren las características adicionales de :class:"
"`OrderedDict`, la solución sugerida es realizar una conversión del resultado "
"al tipo deseado: ``OrderedDict(nt._asdict())``. (Contribución de Raymond "
"Hettinger en :issue:`35864`.)"

#: ../Doc/whatsnew/3.8.rst:709
msgid "cProfile"
msgstr "cProfile"

#: ../Doc/whatsnew/3.8.rst:711
msgid ""
"The :class:`cProfile.Profile <profile.Profile>` class can now be used as a "
"context manager. Profile a block of code by running::"
msgstr ""
"La clase :class:`cProfile.Profile <profile.Profile>` ahora puede usarse como "
"gestor de contexto. Ahora se puede perfilar un bloque de código ejecutando::"

#: ../Doc/whatsnew/3.8.rst:720
msgid "(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr "(Contribución de Scott Sanderson en :issue:`29235`.)"

#: ../Doc/whatsnew/3.8.rst:724
msgid "csv"
msgstr "csv"

#: ../Doc/whatsnew/3.8.rst:726
msgid ""
"The :class:`csv.DictReader` now returns instances of :class:`dict` instead "
"of a :class:`collections.OrderedDict`.  The tool is now faster and uses less "
"memory while still preserving the field order. (Contributed by Michael Selik "
"in :issue:`34003`.)"
msgstr ""
":class:`csv.DictReader` ahora retorna instancias de :class:`dict` en lugar "
"de :class:`collections.OrderedDict`. La herramienta ahora es más rápida y "
"usa menos memoria, mientras conserva el orden de los campos. (Contribución "
"de Michael Selik en :issue:`34003`.)"

#: ../Doc/whatsnew/3.8.rst:733
msgid "curses"
msgstr "curses"

#: ../Doc/whatsnew/3.8.rst:735
msgid ""
"Added a new variable holding structured version information for the "
"underlying ncurses library: :data:`~curses.ncurses_version`. (Contributed by "
"Serhiy Storchaka in :issue:`31680`.)"
msgstr ""
"Se agregó una nueva variable que contiene información de versión "
"estructurada para la biblioteca ncurses subyacente: :data:`~curses."
"ncurses_version`. (Contribución de Serhiy Storchaka en :issue:`31680`.)"

#: ../Doc/whatsnew/3.8.rst:741
msgid "ctypes"
msgstr "ctypes"

#: ../Doc/whatsnew/3.8.rst:743
msgid ""
"On Windows, :class:`~ctypes.CDLL` and subclasses now accept a *winmode* "
"parameter to specify flags for the underlying ``LoadLibraryEx`` call. The "
"default flags are set to only load DLL dependencies from trusted locations, "
"including the path where the DLL is stored (if a full or partial path is "
"used to load the initial DLL) and paths added by :func:`~os."
"add_dll_directory`. (Contributed by Steve Dower in :issue:`36085`.)"
msgstr ""
"En Windows, :class:`~ctypes.CDLL` y sus subclases ahora aceptan un parámetro "
"*winmode* para especificar flags para la invocación subyacente de "
"``LoadLibraryEx``. Los flags predeterminados están establecidos para cargar "
"solo las dependencias de DLL desde ubicaciones confiables, incluida la ruta "
"donde se almacena la DLL (si se usa una ruta completa o parcial para cargar "
"la DLL inicial) y las rutas agregadas por :func:`~os.add_dll_directory` . "
"(Contribución de Steve Dower en :issue:`36085`.)"

#: ../Doc/whatsnew/3.8.rst:752
msgid "datetime"
msgstr "datetime"

#: ../Doc/whatsnew/3.8.rst:754
msgid ""
"Added new alternate constructors :meth:`datetime.date.fromisocalendar` and :"
"meth:`datetime.datetime.fromisocalendar`, which construct :class:`date` and :"
"class:`datetime` objects respectively from ISO year, week number, and "
"weekday; these are the inverse of each class's ``isocalendar`` method. "
"(Contributed by Paul Ganssle in :issue:`36004`.)"
msgstr ""
"Se agregaron nuevos constructores alternativos :meth:`datetime.date."
"fromisocalendar` y :meth:`datetime.datetime.fromisocalendar`, que construyen "
"objetos :class:`date` y :class:`datetime` respectivamente con el año, número "
"de semana y día de la semana de la fecha del calendario ISO. Estos son el "
"inverso del método ``isocalendar`` de cada clase. (Contribución de Paul "
"Ganssle en :issue:`36004`.)"

#: ../Doc/whatsnew/3.8.rst:762
msgid "functools"
msgstr "functools"

#: ../Doc/whatsnew/3.8.rst:764
msgid ""
":func:`functools.lru_cache` can now be used as a straight decorator rather "
"than as a function returning a decorator.  So both of these are now "
"supported::"
msgstr ""
":func:`functools.lru_cache` ahora se puede usar como un decorador directo en "
"lugar de como una función que retorna un decorador. De forma que ambos son "
"compatibles ahora::"

#: ../Doc/whatsnew/3.8.rst:775
msgid "(Contributed by Raymond Hettinger in :issue:`36772`.)"
msgstr "(Contribución de Raymond Hettinger en :issue:`36772`.)"

#: ../Doc/whatsnew/3.8.rst:777
msgid ""
"Added a new :func:`functools.cached_property` decorator, for computed "
"properties cached for the life of the instance. ::"
msgstr ""
"Se ha agregado un nuevo decorador :func:`functools.cached_property`, para "
"propiedades calculadas almacenadas en caché durante toda la vida útil de la "
"instancia. ::"

#: ../Doc/whatsnew/3.8.rst:791
msgid "(Contributed by Carl Meyer in :issue:`21145`)"
msgstr "(Contribución de Carl Meyer en :issue:`21145`.)"

#: ../Doc/whatsnew/3.8.rst:794
msgid ""
"Added a new :func:`functools.singledispatchmethod` decorator that converts "
"methods into :term:`generic functions <generic function>` using :term:"
"`single dispatch`::"
msgstr ""
"Se ha agregado un nuevo decorador :func:`functools.singledispatchmethod` que "
"convierte métodos en :term:`funciones genéricas <función genérica>` usando :"
"term:`single dispatch`::"

#: ../Doc/whatsnew/3.8.rst:816
msgid "(Contributed by Ethan Smith in :issue:`32380`)"
msgstr "(Contribución de Ethan Smith en :issue:`32380`)"

#: ../Doc/whatsnew/3.8.rst:819
msgid "gc"
msgstr "gc"

#: ../Doc/whatsnew/3.8.rst:821
msgid ""
":func:`~gc.get_objects` can now receive an optional *generation* parameter "
"indicating a generation to get objects from. (Contributed by Pablo Galindo "
"in :issue:`36016`.)"
msgstr ""
":func:`~gc.get_objects` ahora puede recibir un parámetro opcional "
"*generation* que indica la generación de la que recolectar objetos. "
"(Contribución de Pablo Galindo en :issue:`36016`.)"

#: ../Doc/whatsnew/3.8.rst:827
msgid "gettext"
msgstr "gettext"

#: ../Doc/whatsnew/3.8.rst:829
msgid ""
"Added :func:`~gettext.pgettext` and its variants. (Contributed by Franz "
"Glasner, Éric Araujo, and Cheryl Sabella in :issue:`2504`.)"
msgstr ""
"Agregado :func:`~gettext.pgettext` y sus variantes. (Contribución de Franz "
"Glasner, Éric Araujo y Cheryl Sabella en :issue:`2504`.)"

#: ../Doc/whatsnew/3.8.rst:834
msgid "gzip"
msgstr "gzip"

#: ../Doc/whatsnew/3.8.rst:836
msgid ""
"Added the *mtime* parameter to :func:`gzip.compress` for reproducible "
"output. (Contributed by Guo Ci Teo in :issue:`34898`.)"
msgstr ""
"Se ha agregó el parámetro *mtime* a :func:`gzip.compress` para una salida "
"reproducible. (Contribución de Guo Ci Teo en :issue:`34898`.)"

#: ../Doc/whatsnew/3.8.rst:839
msgid ""
"A :exc:`~gzip.BadGzipFile` exception is now raised instead of :exc:`OSError` "
"for certain types of invalid or corrupt gzip files. (Contributed by Filip "
"Gruszczyński, Michele Orrù, and Zackery Spytz in :issue:`6584`.)"
msgstr ""
"Una excepción :exc:`~gzip.BadGzipFile` es lanzada ahora, en lugar de :exc:"
"`OSError`, para ciertos tipos de archivos gzip no válidos o corruptos. "
"(Contribución de Filip Gruszczyński, Michele Orrù y Zackery Spytz en :issue:"
"`6584`.)"

#: ../Doc/whatsnew/3.8.rst:846
msgid "IDLE and idlelib"
msgstr "IDLE e idlelib"

#: ../Doc/whatsnew/3.8.rst:848
msgid ""
"Output over N lines (50 by default) is squeezed down to a button. N can be "
"changed in the PyShell section of the General page of the Settings dialog.  "
"Fewer, but possibly extra long, lines can be squeezed by right clicking on "
"the output.  Squeezed output can be expanded in place by double-clicking the "
"button or into the clipboard or a separate window by right-clicking the "
"button.  (Contributed by Tal Einat in :issue:`1529353`.)"
msgstr ""
"Las salidas superiores a N líneas (50 por defecto) se pliegan en un botón. N "
"se puede cambiar en la sección PyShell de la página General del cuadro de "
"diálogo Settings. Se pueden plegar menos líneas, pero posiblemente más "
"largas, haciendo clic derecho en la salida. La salida plegada se puede "
"expandir en su lugar haciendo doble clic en el botón o en el portapapeles o "
"en una ventana separada haciendo clic derecho en el botón. (Contribución de "
"Tal Einat en :issue:`1529353`.)"

#: ../Doc/whatsnew/3.8.rst:855
msgid ""
"Add \"Run Customized\" to the Run menu to run a module with customized "
"settings. Any command line arguments entered are added to sys.argv. They "
"also re-appear in the box for the next customized run.  One can also "
"suppress the normal Shell main module restart.  (Contributed by Cheryl "
"Sabella, Terry Jan Reedy, and others in :issue:`5680` and :issue:`37627`.)"
msgstr ""
"Se ha agregado \"Run Customized\" al menú Run para ejecutar un módulo con "
"configuraciones personalizadas. Cualquier argumento de la línea de comandos "
"ingresado se agrega a sys.argv. Además, vuelven a aparecer en el cuadro para "
"la próxima ejecución personalizada. También se puede suprimir el reinicio "
"normal del módulo principal de la Shell. (Contribución de Cheryl Sabella, "
"Terry Jan Reedy y otros en :issue:`5680` y :issue:`37627`.)"

#: ../Doc/whatsnew/3.8.rst:861
msgid ""
"Added optional line numbers for IDLE editor windows. Windows open without "
"line numbers unless set otherwise in the General tab of the configuration "
"dialog.  Line numbers for an existing window are shown and hidden in the "
"Options menu. (Contributed by Tal Einat and Saimadhav Heblikar in :issue:"
"`17535`.)"
msgstr ""
"Se agregaron números de línea opcionales para las ventanas del editor IDLE. "
"Las ventanas se abren sin números de línea, a menos que se establezca lo "
"contrario en la pestaña General del cuadro de diálogo de configuración. Los "
"números de línea de una ventana existente se muestran y ocultan en el menú "
"Options. (Contribución de Tal Einat y Saimadhav Heblikar en :issue:`17535`.)"

#: ../Doc/whatsnew/3.8.rst:867
msgid ""
"OS native encoding is now used for converting between Python strings and Tcl "
"objects. This allows IDLE to work with emoji and other non-BMP characters. "
"These characters can be displayed or copied and pasted to or from the "
"clipboard.  Converting strings from Tcl to Python and back now never fails. "
"(Many people worked on this for eight years but the problem was finally "
"solved by Serhiy Storchaka in :issue:`13153`.)"
msgstr ""
"La codificación nativa del sistema operativo ahora se usa para convertir "
"entre cadenas de Python y objetos Tcl. Esto permite que el IDLE funcione con "
"emoji y otros caracteres que no son BMP. Estos caracteres se pueden mostrar "
"o copiar y pegar en ,o desde, el portapapeles. Convertir cadenas de Tcl a "
"Python y viceversa ahora nunca falla. (Mucha gente trabajó en esto durante "
"ocho años, pero el problema finalmente lo resolvió Serhiy Storchaka en :"
"issue:`13153`.)"

#: ../Doc/whatsnew/3.8.rst:874
msgid "The changes above have been backported to 3.7 maintenance releases."
msgstr ""
"Los cambios anteriores se han portado a las versiones de mantenimiento de "
"Python 3.7."

#: ../Doc/whatsnew/3.8.rst:878
msgid "inspect"
msgstr "inspect"

#: ../Doc/whatsnew/3.8.rst:880
msgid ""
"The :func:`inspect.getdoc` function can now find docstrings for "
"``__slots__`` if that attribute is a :class:`dict` where the values are "
"docstrings. This provides documentation options similar to what we already "
"have for :func:`property`, :func:`classmethod`, and :func:`staticmethod`::"
msgstr ""
"La función :func:`inspect.getdoc` puede ahora encontrar cadenas de "
"documentación para ``__slots__`` si el este atributo es un :class:`dict` "
"cuyos valores son las cadenas de documentación. Esto proporciona opciones de "
"documentación similares a las que ya tenemos para :func:`property`, :func:"
"`classmethod` y :func:`staticmethod`::"

#: ../Doc/whatsnew/3.8.rst:892
msgid "(Contributed by Raymond Hettinger in :issue:`36326`.)"
msgstr "(Contribución de Raymond Hettinger en :issue:`36326`.)"

#: ../Doc/whatsnew/3.8.rst:896
msgid "io"
msgstr "io"

#: ../Doc/whatsnew/3.8.rst:898
msgid ""
"In development mode (:option:`-X` ``env``) and in debug build, the :class:"
"`io.IOBase` finalizer now logs the exception if the ``close()`` method "
"fails. The exception is ignored silently by default in release build. "
"(Contributed by Victor Stinner in :issue:`18748`.)"
msgstr ""
"En el modo de desarrollo (:option:`-X` ``env``) y en la compilación de "
"depuración, el finalizador :class:`io.IOBase` ahora registra la excepción si "
"falla el método ``close()``. La excepción se ignora silenciosamente de forma "
"predeterminada en la compilación de lanzamiento. (Contribución de Victor "
"Stinner en :issue:`18748`.)"

#: ../Doc/whatsnew/3.8.rst:905
msgid "itertools"
msgstr "itertools"

#: ../Doc/whatsnew/3.8.rst:907
msgid ""
"The :func:`itertools.accumulate` function added an option *initial* keyword "
"argument to specify an initial value::"
msgstr ""
"Se ha agregado un argumento por palabra clave opcional *initial* a la "
"función :func:`itertools.accumulate` para permitir especificar un valor "
"inicial::"

#: ../Doc/whatsnew/3.8.rst:914
msgid "(Contributed by Lisa Roach in :issue:`34659`.)"
msgstr "(Contribución de Lisa Roach en :issue:`34659`.)"

#: ../Doc/whatsnew/3.8.rst:918
msgid "json.tool"
msgstr "json.tool"

#: ../Doc/whatsnew/3.8.rst:920
msgid ""
"Add option ``--json-lines`` to parse every input line as a separate JSON "
"object. (Contributed by Weipeng Hong in :issue:`31553`.)"
msgstr ""
"Agregadas las opciones ``--json-lines`` para analizar sintácticamente cada "
"línea de entrada como un objeto JSON separado. (Contribución de Weipeng Hong "
"en :issue:`31553`.)"

#: ../Doc/whatsnew/3.8.rst:925
msgid "logging"
msgstr "logging"

#: ../Doc/whatsnew/3.8.rst:927
msgid ""
"Added a *force* keyword argument to :func:`logging.basicConfig()` When set "
"to true, any existing handlers attached to the root logger are removed and "
"closed before carrying out the configuration specified by the other "
"arguments."
msgstr ""
"Agregado un argumento por palabra clave *force* a la función :func:`logging."
"basicConfig()`. Cuando se establece en verdadero, cualquier controlador "
"existente adjunto al registrador (logger) raíz se elimina y se cierra antes "
"de realizar la configuración especificada por los otros argumentos."

#: ../Doc/whatsnew/3.8.rst:932
msgid ""
"This solves a long-standing problem.  Once a logger or *basicConfig()* had "
"been called, subsequent calls to *basicConfig()* were silently ignored. This "
"made it difficult to update, experiment with, or teach the various logging "
"configuration options using the interactive prompt or a Jupyter notebook."
msgstr ""
"Esto resuelve un problema de larga data. Una vez que se había invocado a un "
"registrador o a *basicConfig()*, las invocaciones posteriores a "
"*basicConfig()* se ignoraban en silencio. Esto dificultaba la actualización, "
"la experimentación o la instrucción de las diversas opciones de "
"configuración de registro mediante el interprete interactivo o el bloc de "
"notas de Jupyter."

#: ../Doc/whatsnew/3.8.rst:938
msgid ""
"(Suggested by Raymond Hettinger, implemented by Dong-hee Na, and reviewed by "
"Vinay Sajip in :issue:`33897`.)"
msgstr ""
"(Sugerencia de Raymond Hettinger, implementación de Dong-hee Na y revisión "
"de Vinay Sajip en :issue:`33897`.)"

#: ../Doc/whatsnew/3.8.rst:943
msgid "math"
msgstr "math"

#: ../Doc/whatsnew/3.8.rst:945
msgid ""
"Added new function :func:`math.dist` for computing Euclidean distance "
"between two points.  (Contributed by Raymond Hettinger in :issue:`33089`.)"
msgstr ""
"Se ha agregado la nueva función :func:`math.dist` para calcular la distancia "
"euclidiana entre dos puntos. (Contribución de Raymond Hettinger en :issue:"
"`33089`.)"

#: ../Doc/whatsnew/3.8.rst:948
msgid ""
"Expanded the :func:`math.hypot` function to handle multiple dimensions. "
"Formerly, it only supported the 2-D case. (Contributed by Raymond Hettinger "
"in :issue:`33089`.)"
msgstr ""
"Se ha expandido la función :func:`math.hypot` para manejar múltiples "
"dimensiones. Anteriormente, solo admitía dos dimensiones. (Contribución de "
"Raymond Hettinger en :issue:`33089`.)"

#: ../Doc/whatsnew/3.8.rst:952
msgid ""
"Added new function, :func:`math.prod`, as analogous function to :func:`sum` "
"that returns the product of a 'start' value (default: 1) times an iterable "
"of numbers::"
msgstr ""
"Agregada una nueva función, :func:`math.prod`, como función análoga a :func:"
"`sum`, que retorna el producto de todos los elementos de un iterable de "
"números partiendo de un valor de inicio (*start*) (por defecto: 1)::"

#: ../Doc/whatsnew/3.8.rst:961
msgid "(Contributed by Pablo Galindo in :issue:`35606`.)"
msgstr "(Contribución de Pablo Galindo en :issue:`35606`.)"

#: ../Doc/whatsnew/3.8.rst:963
msgid ""
"Added two new combinatoric functions :func:`math.perm` and :func:`math."
"comb`::"
msgstr ""
"Agregadas dos nuevas funciones combinatorias, :func:`math.perm` y :func:"
"`math.comb`::"

#: ../Doc/whatsnew/3.8.rst:970
msgid ""
"(Contributed by Yash Aggarwal, Keller Fuchs, Serhiy Storchaka, and Raymond "
"Hettinger in :issue:`37128`, :issue:`37178`, and :issue:`35431`.)"
msgstr ""
"(Contribución de Yash Aggarwal, Keller Fuchs, Serhiy Storchaka y Raymond "
"Hettinger en :issue:`37128`, :issue:`37178` y :issue:`35431`.)"

#: ../Doc/whatsnew/3.8.rst:973
msgid ""
"Added a new function :func:`math.isqrt` for computing accurate integer "
"square roots without conversion to floating point.  The new function "
"supports arbitrarily large integers.  It is faster than ``floor(sqrt(n))`` "
"but slower than :func:`math.sqrt`::"
msgstr ""
"Se ha agregada una nueva función :func:`math.isqrt` para calcular raíces "
"cuadradas enteras precisas sin conversión a coma flotante. La nueva función "
"admite números enteros arbitrariamente grandes. Es más rápida que "
"``floor(sqrt(n))`` pero más lenta que :func:`math.sqrt`::"

#: ../Doc/whatsnew/3.8.rst:985
msgid "(Contributed by Mark Dickinson in :issue:`36887`.)"
msgstr "(Contribución de Mark Dickinson en :issue:`36887`.)"

#: ../Doc/whatsnew/3.8.rst:987
msgid ""
"The function :func:`math.factorial` no longer accepts arguments that are not "
"int-like. (Contributed by Pablo Galindo in :issue:`33083`.)"
msgstr ""
"La función :func:`math.factorial` ya no acepta argumentos que no sean "
"similares a enteros. (Contribución de Pablo Galindo en :issue:`33083`.)"

#: ../Doc/whatsnew/3.8.rst:992
msgid "mmap"
msgstr "mmap"

#: ../Doc/whatsnew/3.8.rst:994
msgid ""
"The :class:`mmap.mmap` class now has an :meth:`~mmap.mmap.madvise` method to "
"access the ``madvise()`` system call. (Contributed by Zackery Spytz in :"
"issue:`32941`.)"
msgstr ""
"La clase :class:`mmap.mmap` ahora tiene un método :meth:`~mmap.mmap.madvise` "
"para acceder a la llamada al sistema ``madvise()``. (Contribución de Zackery "
"Spytz en :issue:`32941`.)"

#: ../Doc/whatsnew/3.8.rst:1000
msgid "multiprocessing"
msgstr "multiprocessing"

#: ../Doc/whatsnew/3.8.rst:1002
msgid ""
"Added new :mod:`multiprocessing.shared_memory` module. (Contributed by Davin "
"Potts in :issue:`35813`.)"
msgstr ""
"Agregado el nuevo módulo :mod:`multiprocessing.shared_memory`. (Contribución "
"de Davin Potts en :issue:`35813`.)"

#: ../Doc/whatsnew/3.8.rst:1005
msgid ""
"On macOS, the *spawn* start method is now used by default. (Contributed by "
"Victor Stinner in :issue:`33725`.)"
msgstr ""
"En macOS, el método de inicio *spawn* se usa ahora por defecto. "
"(Contribución de Victor Stinner en :issue:`33725`.)"

#: ../Doc/whatsnew/3.8.rst:1010
msgid "os"
msgstr "os"

#: ../Doc/whatsnew/3.8.rst:1012
msgid ""
"Added new function :func:`~os.add_dll_directory` on Windows for providing "
"additional search paths for native dependencies when importing extension "
"modules or loading DLLs using :mod:`ctypes`. (Contributed by Steve Dower in :"
"issue:`36085`.)"
msgstr ""
"Se agregó una nueva función :func:`~os.add_dll_directory` en Windows para "
"proporcionar rutas de búsqueda adicionales para las dependencias nativas al "
"importar módulos de extensión o al cargar archivos DLL utilizando :mod:"
"`ctypes`. (Contribución de Steve Dower en :issue:`36085`.)"

#: ../Doc/whatsnew/3.8.rst:1017
msgid ""
"A new :func:`os.memfd_create` function was added to wrap the "
"``memfd_create()`` syscall. (Contributed by Zackery Spytz and Christian "
"Heimes in :issue:`26836`.)"
msgstr ""
"Se agregó una nueva función :func:`os.memfd_create` para envolver la llamada "
"al sistema ``memfd_create()``. (Contribución de Zackery Spytz y Christian "
"Heimes en :issue:`26836`.)"

#: ../Doc/whatsnew/3.8.rst:1021
msgid ""
"On Windows, much of the manual logic for handling reparse points (including "
"symlinks and directory junctions) has been delegated to the operating "
"system. Specifically, :func:`os.stat` will now traverse anything supported "
"by the operating system, while :func:`os.lstat` will only open reparse "
"points that identify as \"name surrogates\" while others are opened as for :"
"func:`os.stat`. In all cases, :attr:`stat_result.st_mode` will only have "
"``S_IFLNK`` set for symbolic links and not other kinds of reparse points. To "
"identify other kinds of reparse point, check the new :attr:`stat_result."
"st_reparse_tag` attribute."
msgstr ""
"En Windows, gran parte de la lógica manual para manejar los puntos de "
"reinterpretación (incluidos los enlaces simbólicos y las uniones de "
"directorios) se ha delegado al sistema operativo. Específicamente, :func:`os."
"stat` ahora se encargará de todo lo que sea compatible con el sistema "
"operativo, mientras que :func:`os.lstat` solo abrirá puntos de "
"reinterpretación que se identifican como \"sustitutos de nombre\" y el resto "
"se abrirán mediante :func:`os.stat`. En todos los casos, :attr:`stat_result."
"st_mode` solo tendrá establecido ``S_IFLNK`` para enlaces simbólicos y no "
"para otros tipos de puntos de reinterpretación. Para identificar otros tipos "
"de puntos de reinterpretación, verifica el nuevo atributo :attr:`stat_result."
"st_reparse_tag`."

#: ../Doc/whatsnew/3.8.rst:1030
msgid ""
"On Windows, :func:`os.readlink` is now able to read directory junctions. "
"Note that :func:`~os.path.islink` will return ``False`` for directory "
"junctions, and so code that checks ``islink`` first will continue to treat "
"junctions as directories, while code that handles errors from :func:`os."
"readlink` may now treat junctions as links."
msgstr ""
"En Windows, :func:`os.readlink` ahora puede leer uniones de directorio. Ten "
"en cuenta que :func:`~os.path.islink` retornará ``False`` para las uniones "
"de directorios, por lo que el código que comprueba en primer lugar "
"``islink`` continuará tratando las uniones como directorios, mientras que el "
"código que maneja los errores de :func:`os.readlink` ahora puede tratar las "
"uniones como enlaces."

#: ../Doc/whatsnew/3.8.rst:1036 ../Doc/whatsnew/3.8.rst:1061
msgid "(Contributed by Steve Dower in :issue:`37834`.)"
msgstr "(Contribución de Steve Dower en :issue:`37834`.)"

#: ../Doc/whatsnew/3.8.rst:1040
msgid "os.path"
msgstr "os.path"

#: ../Doc/whatsnew/3.8.rst:1042
msgid ""
":mod:`os.path` functions that return a boolean result like :func:`~os.path."
"exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, :func:`~os.path."
"isfile`, :func:`~os.path.islink`, and :func:`~os.path.ismount` now return "
"``False`` instead of raising :exc:`ValueError` or its subclasses :exc:"
"`UnicodeEncodeError` and :exc:`UnicodeDecodeError` for paths that contain "
"characters or bytes unrepresentable at the OS level. (Contributed by Serhiy "
"Storchaka in :issue:`33721`.)"
msgstr ""
"Las funciones de :mod:`os.path` que retornan un resultado booleano como :"
"func:`~os.path.exists`, :func:`~os.path.lexists`, :func:`~os.path.isdir`, :"
"func:`~os.path.isfile`, :func:`~os.path.islink` e :func:`~os.path.ismount` "
"ahora retornan ``False`` en lugar de lanzar una excepción :exc:`ValueError`, "
"o sus subclases :exc:`UnicodeEncodeError` y :exc:`UnicodeDecodeError`, para "
"rutas que contienen caracteres o bytes irrepresentables a nivel del sistema "
"operativo. (Contribución de Serhiy Storchaka en :issue:`33721`.)"

#: ../Doc/whatsnew/3.8.rst:1050 ../Doc/whatsnew/3.8.rst:1950
msgid ""
":func:`~os.path.expanduser` on Windows now prefers the :envvar:`USERPROFILE` "
"environment variable and does not use :envvar:`HOME`, which is not normally "
"set for regular user accounts. (Contributed by Anthony Sottile in :issue:"
"`36264`.)"
msgstr ""
":func:`~os.path.expanduser` en Windows ahora usa preferentemente la variable "
"de entorno :envvar:`USERPROFILE` y no usa :envvar:`HOME`, que normalmente no "
"está establecido para cuentas de usuario normales. (Contribución de Anthony "
"Sottile en :issue:`36264`.)"

#: ../Doc/whatsnew/3.8.rst:1055
msgid ""
":func:`~os.path.isdir` on Windows no longer returns ``True`` for a link to a "
"non-existent directory."
msgstr ""
":func:`~os.path.isdir` en Windows ya no retorna ``True`` para un enlace a un "
"directorio no existente."

#: ../Doc/whatsnew/3.8.rst:1058
msgid ""
":func:`~os.path.realpath` on Windows now resolves reparse points, including "
"symlinks and directory junctions."
msgstr ""
":func:`~os.path.realpath` en Windows ahora resuelve puntos de "
"reinterpretación (reparse points), incluidos enlaces simbólicos y uniones de "
"directorio."

#: ../Doc/whatsnew/3.8.rst:1065
msgid "pathlib"
msgstr "pathlib"

#: ../Doc/whatsnew/3.8.rst:1067
msgid ""
":mod:`pathlib.Path` methods that return a boolean result like :meth:"
"`~pathlib.Path.exists()`, :meth:`~pathlib.Path.is_dir()`, :meth:`~pathlib."
"Path.is_file()`, :meth:`~pathlib.Path.is_mount()`, :meth:`~pathlib.Path."
"is_symlink()`, :meth:`~pathlib.Path.is_block_device()`, :meth:`~pathlib.Path."
"is_char_device()`, :meth:`~pathlib.Path.is_fifo()`, :meth:`~pathlib.Path."
"is_socket()` now return ``False`` instead of raising :exc:`ValueError` or "
"its subclass :exc:`UnicodeEncodeError` for paths that contain characters "
"unrepresentable at the OS level. (Contributed by Serhiy Storchaka in :issue:"
"`33721`.)"
msgstr ""
"Los métodos del módulo :mod:`pathlib.Path` que retornan un resultado "
"booleano, como :meth:`~pathlib.Path.exists()`, :meth:`~pathlib.Path."
"is_dir()`, :meth:`~pathlib.Path.is_file()`, :meth:`~pathlib.Path."
"is_mount()`, :meth:`~pathlib.Path.is_symlink()`, :meth:`~pathlib.Path."
"is_block_device()`, :meth:`~pathlib.Path.is_char_device()`, :meth:`~pathlib."
"Path.is_fifo()` o :meth:`~pathlib.Path.is_socket()`, ahora retornan "
"``False`` en vez de lanzar una excepción :exc:`ValueError` o su subclase :"
"exc:`UnicodeEncodeError` para rutas que contienen caracteres no "
"representables a nivel del sistema operativo. (Contribución de Serhiy "
"Storchaka en :issue:`33721`.)"

#: ../Doc/whatsnew/3.8.rst:1077
msgid ""
"Added :meth:`pathlib.Path.link_to()` which creates a hard link pointing to a "
"path. (Contributed by Joannah Nanjekye in :issue:`26978`)"
msgstr ""
"Agregado :meth:`pathlib.Path.link_to()` que crea un enlace duro apuntando a "
"una ruta. (Contribución de Joannah Nanjekye en :issue:`26978`)"

#: ../Doc/whatsnew/3.8.rst:1083
msgid "pickle"
msgstr "pickle"

#: ../Doc/whatsnew/3.8.rst:1085
msgid ""
":mod:`pickle` extensions subclassing the C-optimized :class:`~pickle."
"Pickler` can now override the pickling logic of functions and classes by "
"defining the special :meth:`~pickle.Pickler.reducer_override` method. "
"(Contributed by Pierre Glaser and Olivier Grisel in :issue:`35900`.)"
msgstr ""
"Las extensiones de :mod:`pickle` que subclasifican la clase optimizada de C :"
"class:`~pickle.Pickler` ahora pueden anular la lógica de pickling de "
"funciones y clases definiendo el método especial :meth:`~pickle.Pickler."
"reducer_override`. (Contribución de Pierre Glaser y Olivier Grisel en :issue:"
"`35900`.)"

#: ../Doc/whatsnew/3.8.rst:1092
msgid "plistlib"
msgstr "plistlib"

#: ../Doc/whatsnew/3.8.rst:1094
msgid ""
"Added new :class:`plistlib.UID` and enabled support for reading and writing "
"NSKeyedArchiver-encoded binary plists. (Contributed by Jon Janzen in :issue:"
"`26707`.)"
msgstr ""
"Se ha agregado la nueva clase :class:`plistlib.UID` y se ha habilitado el "
"soporte para leer y escribir plists binarios codificados por "
"NSKeyedArchiver. (Contribución de Jon Janzen en :issue:`26707`.)"

#: ../Doc/whatsnew/3.8.rst:1100
msgid "pprint"
msgstr "pprint"

#: ../Doc/whatsnew/3.8.rst:1102
msgid ""
"The :mod:`pprint` module added a *sort_dicts* parameter to several "
"functions. By default, those functions continue to sort dictionaries before "
"rendering or printing.  However, if *sort_dicts* is set to false, the "
"dictionaries retain the order that keys were inserted.  This can be useful "
"for comparison to JSON inputs during debugging."
msgstr ""
"Se ha agregado el parámetro *sort_dicts* a varias funciones del módulo :mod:"
"`pprint`. De forma predeterminada, esas funciones continúan ordenando los "
"diccionarios antes de procesarlos o imprimirlos. Sin embargo, si "
"*sort_dicts* se establece en falso, los diccionarios conservan el orden en "
"que se insertaron las claves. Esto puede resultar útil para la comparación "
"con entradas JSON durante la depuración."

#: ../Doc/whatsnew/3.8.rst:1108
msgid ""
"In addition, there is a convenience new function, :func:`pprint.pp` that is "
"like :func:`pprint.pprint` but with *sort_dicts* defaulting to ``False``::"
msgstr ""
"Además, hay una nueva función de conveniencia, :func:`pprint.pp`, que es "
"igual que :func:`pprint.pprint` pero con *sort_dicts* establecido en "
"``False`` por defecto::"

#: ../Doc/whatsnew/3.8.rst:1122
msgid "(Contributed by Rémi Lapeyre in :issue:`30670`.)"
msgstr "(Contribución de Rémi Lapeyre en :issue:`30670`.)"

#: ../Doc/whatsnew/3.8.rst:1126
msgid "py_compile"
msgstr "py_compile"

#: ../Doc/whatsnew/3.8.rst:1128
msgid ""
":func:`py_compile.compile` now supports silent mode. (Contributed by Joannah "
"Nanjekye in :issue:`22640`.)"
msgstr ""
":func:`py_compile.compile` ahora admite el modo silencioso. (Contribución de "
"Joannah Nanjekye en :issue:`22640`.)"

#: ../Doc/whatsnew/3.8.rst:1133
msgid "shlex"
msgstr "shlex"

#: ../Doc/whatsnew/3.8.rst:1135
msgid ""
"The new :func:`shlex.join` function acts as the inverse of :func:`shlex."
"split`. (Contributed by Bo Bayles in :issue:`32102`.)"
msgstr ""
"La nueva función :func:`shlex.join` actúa a la inversa de :func:`shlex."
"split`. (Contribución de Bo Bayles en :issue:`32102`.)"

#: ../Doc/whatsnew/3.8.rst:1140
msgid "shutil"
msgstr "shutil"

#: ../Doc/whatsnew/3.8.rst:1142
msgid ""
":func:`shutil.copytree` now accepts a new ``dirs_exist_ok`` keyword "
"argument. (Contributed by Josh Bronson in :issue:`20849`.)"
msgstr ""
":func:`shutil.copytree` ahora acepta el nuevo argumento por palabra clave "
"``dirs_exist_ok``. (Contribución de Josh Bronson en :issue:`20849`.)"

#: ../Doc/whatsnew/3.8.rst:1145
msgid ""
":func:`shutil.make_archive` now defaults to the modern pax (POSIX.1-2001) "
"format for new archives to improve portability and standards conformance, "
"inherited from the corresponding change to the :mod:`tarfile` module. "
"(Contributed by C.A.M. Gerlach in :issue:`30661`.)"
msgstr ""
":func:`shutil.make_archive` ahora usa por defecto el formato pax moderno "
"(POSIX.1-2001) para nuevos archivos para mejorar la portabilidad y la "
"conformidad con los estándares, heredado el cambio correspondiente del "
"módulo :mod:`tarfile`. (Contribución de C.A.M. Gerlach en :issue:`30661`.)"

#: ../Doc/whatsnew/3.8.rst:1150
msgid ""
":func:`shutil.rmtree` on Windows now removes directory junctions without "
"recursively removing their contents first. (Contributed by Steve Dower in :"
"issue:`37834`.)"
msgstr ""
":func:`shutil.rmtree` en Windows ahora elimina las uniones de directorio sin "
"eliminar recursivamente su contenido primero. (Contribución de Steve Dower "
"en :issue:`37834`.)"

#: ../Doc/whatsnew/3.8.rst:1156
msgid "socket"
msgstr "socket"

#: ../Doc/whatsnew/3.8.rst:1158
msgid ""
"Added :meth:`~socket.create_server()` and :meth:`~socket."
"has_dualstack_ipv6()` convenience functions to automate the necessary tasks "
"usually involved when creating a server socket, including accepting both "
"IPv4 and IPv6 connections on the same socket.  (Contributed by Giampaolo "
"Rodolà in :issue:`17561`.)"
msgstr ""
"Se han agregado las funciones de conveniencia :meth:`~ socket."
"create_server()` y :meth:`~socket.has_dualstack_ipv6()` para automatizar las "
"tareas necesarias involucradas al crear un socket servidor, incluida la "
"aceptación de conexiones IPv4 e IPv6 en el mismo socket . (Contribución de "
"Giampaolo Rodolà en :issue:`17561`.)"

#: ../Doc/whatsnew/3.8.rst:1163
msgid ""
"The :func:`socket.if_nameindex()`, :func:`socket.if_nametoindex()`, and :"
"func:`socket.if_indextoname()` functions have been implemented on Windows. "
"(Contributed by Zackery Spytz in :issue:`37007`.)"
msgstr ""
"Las funciones :func:`socket.if_nameindex()`, :func:`socket.if_nametoindex()` "
"y :func:`socket.if_indextoname()` se han implementado en Windows. "
"(Contribución de Zackery Spytz en :issue:`37007`.)"

#: ../Doc/whatsnew/3.8.rst:1169
msgid "ssl"
msgstr "ssl"

#: ../Doc/whatsnew/3.8.rst:1171
msgid ""
"Added :attr:`~ssl.SSLContext.post_handshake_auth` to enable and :meth:`~ssl."
"SSLSocket.verify_client_post_handshake` to initiate TLS 1.3 post-handshake "
"authentication. (Contributed by Christian Heimes in :issue:`34670`.)"
msgstr ""
"Se ha agregado :attr:`~ssl.SSLContext.post_handshake_auth` para habilitar y :"
"meth:`~ssl.SSLSocket.verify_client_post_handshake` para iniciar la "
"autenticación tras el establecimiento de la comunicación en TLS 1.3. "
"(Contribución de Christian Heimes en :issue:`34670`.)"

#: ../Doc/whatsnew/3.8.rst:1178
msgid "statistics"
msgstr "statistics"

#: ../Doc/whatsnew/3.8.rst:1180
msgid ""
"Added :func:`statistics.fmean` as a faster, floating point variant of :func:"
"`statistics.mean()`.  (Contributed by Raymond Hettinger and Steven D'Aprano "
"in :issue:`35904`.)"
msgstr ""
"Se ha agregado :func:`statistics.fmean` como una variante de punto flotante "
"más rápida de :func:`statistics.mean()`. (Contribución de Raymond Hettinger "
"y Steven D'Aprano en :issue:`35904`.)"

#: ../Doc/whatsnew/3.8.rst:1184
msgid ""
"Added :func:`statistics.geometric_mean()` (Contributed by Raymond Hettinger "
"in :issue:`27181`.)"
msgstr ""
"Se ha agregado :func:`statistics.geometric_mean()` (Contribución de Raymond "
"Hettinger en :issue:`27181`.)"

#: ../Doc/whatsnew/3.8.rst:1187
msgid ""
"Added :func:`statistics.multimode` that returns a list of the most common "
"values. (Contributed by Raymond Hettinger in :issue:`35892`.)"
msgstr ""
"Se ha agregado :func:`statistics.multimode` que retorna una lista con los "
"valores más comunes. (Contribución de Raymond Hettinger en :issue:`35892`.)"

#: ../Doc/whatsnew/3.8.rst:1190
msgid ""
"Added :func:`statistics.quantiles` that divides data or a distribution in to "
"equiprobable intervals (e.g. quartiles, deciles, or percentiles). "
"(Contributed by Raymond Hettinger in :issue:`36546`.)"
msgstr ""
"Se ha agregado :func:`statistics.quantiles` que divide datos o una "
"distribución en intervalos equiprobables (por ejemplo, cuartiles, deciles o "
"percentiles). (Contribución de Raymond Hettinger en :issue:`36546`.)"

#: ../Doc/whatsnew/3.8.rst:1194
msgid ""
"Added :class:`statistics.NormalDist`, a tool for creating and manipulating "
"normal distributions of a random variable. (Contributed by Raymond Hettinger "
"in :issue:`36018`.)"
msgstr ""
"Se ha agregado :class:`statistics.NormalDist`, una herramienta para crear y "
"manipular distribuciones normales de una variable aleatoria. (Contribución "
"de Raymond Hettinger en :issue:`36018`.)"

#: ../Doc/whatsnew/3.8.rst:1224
msgid "sys"
msgstr "sys"

#: ../Doc/whatsnew/3.8.rst:1226
msgid ""
"Add new :func:`sys.unraisablehook` function which can be overridden to "
"control how \"unraisable exceptions\" are handled. It is called when an "
"exception has occurred but there is no way for Python to handle it. For "
"example, when a destructor raises an exception or during garbage collection "
"(:func:`gc.collect`). (Contributed by Victor Stinner in :issue:`36829`.)"
msgstr ""
"Se ha agregado la nueva función :func:`sys.unraisablehook` que se puede "
"anular para controlar cómo se manejan las \"excepciones no lanzables\". Se "
"llama cuando se ha producido una excepción, pero Python no tiene forma de "
"manejarla. Por ejemplo, cuando un destructor genera una excepción o durante "
"la recolección de basura (:func:`gc.collect`). (Contribución de Victor "
"Stinner en :issue:`36829`.)"

#: ../Doc/whatsnew/3.8.rst:1235
msgid "tarfile"
msgstr "tarfile"

#: ../Doc/whatsnew/3.8.rst:1237
msgid ""
"The :mod:`tarfile` module now defaults to the modern pax (POSIX.1-2001) "
"format for new archives, instead of the previous GNU-specific one. This "
"improves cross-platform portability with a consistent encoding (UTF-8) in a "
"standardized and extensible format, and offers several other benefits. "
"(Contributed by C.A.M. Gerlach in :issue:`36268`.)"
msgstr ""
"El módulo :mod:`tarfile` ahora tiene por defecto el formato pax moderno "
"(POSIX.1-2001) para nuevos archivos, en lugar del anterior específico de "
"GNU. Esto mejora la portabilidad multiplataforma con una codificación "
"consistente (UTF-8) en un formato estandarizado y extensible, y ofrece otros "
"varios beneficios. (Contribución de C.A.M. Gerlach en :issue:`36268`.)"

#: ../Doc/whatsnew/3.8.rst:1245
msgid "threading"
msgstr "threading"

#: ../Doc/whatsnew/3.8.rst:1247
msgid ""
"Add a new :func:`threading.excepthook` function which handles uncaught :meth:"
"`threading.Thread.run` exception. It can be overridden to control how "
"uncaught :meth:`threading.Thread.run` exceptions are handled. (Contributed "
"by Victor Stinner in :issue:`1230540`.)"
msgstr ""
"Se ha agregado una nueva función :func:`threading.excepthook` que maneja las "
"excepciones :meth:`threading.Thread.run` no capturadas. Se puede anular para "
"controlar cómo se manejan las excepciones :meth:`threading.Thread.run` no "
"capturadas. (Contribución de Victor Stinner en :issue:`1230540`.)"

#: ../Doc/whatsnew/3.8.rst:1252
msgid ""
"Add a new :func:`threading.get_native_id` function and a :data:`~threading."
"Thread.native_id` attribute to the :class:`threading.Thread` class. These "
"return the native integral Thread ID of the current thread assigned by the "
"kernel. This feature is only available on certain platforms, see :func:"
"`get_native_id <threading.get_native_id>` for more information. (Contributed "
"by Jake Tesler in :issue:`36084`.)"
msgstr ""
"Se han agregado una nueva función :func:`threading.get_native_id` y un "
"atributo :data:`~threading.Thread.native_id` a la clase :class:`threading."
"Thread`. Estos retornan el Thread ID nativo integral del hilo actual "
"asignado por el kernel. Esta función solo está disponible en determinadas "
"plataformas, consulta :func:`get_native_id <threading.get_native_id>` para "
"obtener más información. (Contribución de Jake Tesler en :issue:`36084`.)"

#: ../Doc/whatsnew/3.8.rst:1262
msgid "tokenize"
msgstr "tokenize"

#: ../Doc/whatsnew/3.8.rst:1264
msgid ""
"The :mod:`tokenize` module now implicitly emits a ``NEWLINE`` token when "
"provided with input that does not have a trailing new line.  This behavior "
"now matches what the C tokenizer does internally. (Contributed by Ammar "
"Askar in :issue:`33899`.)"
msgstr ""
"El módulo :mod:`tokenize` ahora emite implícitamente un token ``NEWLINE`` "
"cuando se le proporciona una entrada sin una nueva línea al final. Este "
"comportamiento ahora coincide con lo que hace internamente el tokenizador de "
"C. (Contribución de Ammar Askar en :issue:`33899`.)"

#: ../Doc/whatsnew/3.8.rst:1271
msgid "tkinter"
msgstr "tkinter"

#: ../Doc/whatsnew/3.8.rst:1273
msgid ""
"Added methods :meth:`~tkinter.Spinbox.selection_from`, :meth:`~tkinter."
"Spinbox.selection_present`, :meth:`~tkinter.Spinbox.selection_range` and :"
"meth:`~tkinter.Spinbox.selection_to` in the :class:`tkinter.Spinbox` class. "
"(Contributed by Juliette Monsel in :issue:`34829`.)"
msgstr ""
"Se han agregado los métodos :meth:`~tkinter.Spinbox.selection_from`, :meth:"
"`~tkinter.Spinbox.selection_present`, :meth:`~tkinter.Spinbox."
"selection_range` y :meth:`~tkinter.Spinbox.selection_to` a la clase :class:"
"`tkinter.Spinbox`. (Contribución de Juliette Monsel en :issue:`34829`.)"

#: ../Doc/whatsnew/3.8.rst:1280
msgid ""
"Added method :meth:`~tkinter.Canvas.moveto` in the :class:`tkinter.Canvas` "
"class. (Contributed by Juliette Monsel in :issue:`23831`.)"
msgstr ""
"Se ha agregado el método :meth:`~tkinter.Canvas.moveto` a la clase :class:"
"`tkinter.Canvas`. (Contribución de Juliette Monsel en :issue:`23831`.)"

#: ../Doc/whatsnew/3.8.rst:1284
msgid ""
"The :class:`tkinter.PhotoImage` class now has :meth:`~tkinter.PhotoImage."
"transparency_get` and :meth:`~tkinter.PhotoImage.transparency_set` methods.  "
"(Contributed by Zackery Spytz in :issue:`25451`.)"
msgstr ""
"La clase :class:`tkinter.PhotoImage` ahora dispone de los métodos :meth:"
"`~tkinter.PhotoImage.transparency_get` y :meth:`~tkinter.PhotoImage."
"transparency_set`. (Contribución de Zackery Spytz en :issue:`25451`.)"

#: ../Doc/whatsnew/3.8.rst:1291
msgid "time"
msgstr "time"

#: ../Doc/whatsnew/3.8.rst:1293
msgid ""
"Added new clock :data:`~time.CLOCK_UPTIME_RAW` for macOS 10.12. (Contributed "
"by Joannah Nanjekye in :issue:`35702`.)"
msgstr ""
"Se ha agregado el nuevo reloj :data:`~time.CLOCK_UPTIME_RAW` para macOS "
"10.12. (Contribución de Joannah Nanjekye en :issue:`35702`.)"

#: ../Doc/whatsnew/3.8.rst:1298
msgid "typing"
msgstr "typing"

#: ../Doc/whatsnew/3.8.rst:1300
msgid "The :mod:`typing` module incorporates several new features:"
msgstr "Se han incorporado varias características al módulo :mod:`typing`:"

#: ../Doc/whatsnew/3.8.rst:1302
msgid ""
"A dictionary type with per-key types.  See :pep:`589` and :class:`typing."
"TypedDict`. TypedDict uses only string keys.  By default, every key is "
"required to be present. Specify \"total=False\" to allow keys to be "
"optional::"
msgstr ""
"Un tipo de diccionario con tipos para cada clave. Consultar :pep:`589` y :"
"class:`typing.TypedDict`. TypedDict usa solo claves de cadenas de "
"caracteres. De forma predeterminada, se requiere que todas las claves estén "
"presentes. Especifica \"total=False\" para permitir que las claves sean "
"opcionales::"

#: ../Doc/whatsnew/3.8.rst:1312
msgid ""
"Literal types.  See :pep:`586` and :class:`typing.Literal`. Literal types "
"indicate that a parameter or return value is constrained to one or more "
"specific literal values::"
msgstr ""
"Tipos literales. Consultar :pep:`586` y :class:`typing.Literal`. Los tipos "
"literales indican que un parámetro o valor de retorno está restringido a uno "
"o más valores literales específicos::"

#: ../Doc/whatsnew/3.8.rst:1319
msgid ""
"\"Final\" variables, functions, methods and classes.  See :pep:`591`, :class:"
"`typing.Final` and :func:`typing.final`. The final qualifier instructs a "
"static type checker to restrict subclassing, overriding, or reassignment::"
msgstr ""
"Variables, funciones, métodos y clases \"finales\". Consultar :pep:`591`, :"
"class:`typing.Final` y :func:`typing.final`. El clasificador final instruye "
"a un validador estático de tipos para restringir la subclasificación, "
"anulación o reasignación::"

#: ../Doc/whatsnew/3.8.rst:1326
msgid ""
"Protocol definitions.  See :pep:`544`, :class:`typing.Protocol` and :func:"
"`typing.runtime_checkable`.  Simple ABCs like :class:`typing.SupportsInt` "
"are now ``Protocol`` subclasses."
msgstr ""
"Definiciones de protocolo. Consultar :pep:`544`, :class:`typing.Protocol` y :"
"func:`typing.runtime_checkable`. ABCs simples como :class:`typing."
"SupportsInt` ahora son subclases de ``Protocol`` ."

#: ../Doc/whatsnew/3.8.rst:1330
msgid "New protocol class :class:`typing.SupportsIndex`."
msgstr "Nueva clase protocolo :class:`typing.SupportsIndex`."

#: ../Doc/whatsnew/3.8.rst:1332
msgid "New functions :func:`typing.get_origin` and :func:`typing.get_args`."
msgstr "Nuevas funciones :func:`typing.get_origin` y :func:`typing.get_args`."

#: ../Doc/whatsnew/3.8.rst:1336
msgid "unicodedata"
msgstr "unicodedata"

#: ../Doc/whatsnew/3.8.rst:1338
msgid ""
"The :mod:`unicodedata` module has been upgraded to use the `Unicode 12.1.0 "
"<http://blog.unicode.org/2019/05/unicode-12-1-en.html>`_ release."
msgstr ""
"El módulo :mod:`unicodedata` ha sido actualizado para usar `Unicode 12.1.0 "
"<http://blog.unicode.org/2019/05/unicode-12-1-en.html>`_."

#: ../Doc/whatsnew/3.8.rst:1341
msgid ""
"New function :func:`~unicodedata.is_normalized` can be used to verify a "
"string is in a specific normal form, often much faster than by actually "
"normalizing the string.  (Contributed by Max Belanger, David Euresti, and "
"Greg Price in :issue:`32285` and :issue:`37966`)."
msgstr ""
"La nueva función :func:`~unicodedata.is_normalized` puede usarse para "
"verificar que una cadena está en una forma normal específica, lo que es a "
"menudo mucho más rápido que normalizar la cadena. (Contribución de Max "
"Belanger, David Euresti y Greg Price en :issue:`32285` y :issue:`37966`)."

#: ../Doc/whatsnew/3.8.rst:1348
msgid "unittest"
msgstr "unittest"

#: ../Doc/whatsnew/3.8.rst:1350
msgid ""
"Added :class:`~unittest.mock.AsyncMock` to support an asynchronous version "
"of :class:`~unittest.mock.Mock`.  Appropriate new assert functions for "
"testing have been added as well. (Contributed by Lisa Roach in :issue:"
"`26467`)."
msgstr ""
"Se ha agregado :class:`~unittest.mock.AsyncMock` para admitir una versión "
"asincrónica de :class:`~unittest.mock.Mock`. También se han agregado nuevas "
"funciones de aserción apropiadas para las pruebas. (Contribución de Lisa "
"Roach en :issue:`26467`)."

#: ../Doc/whatsnew/3.8.rst:1355
msgid ""
"Added :func:`~unittest.addModuleCleanup()` and :meth:`~unittest.TestCase."
"addClassCleanup()` to unittest to support cleanups for :func:`~unittest."
"setUpModule()` and :meth:`~unittest.TestCase.setUpClass()`. (Contributed by "
"Lisa Roach in :issue:`24412`.)"
msgstr ""
"Se ha agregado :func:`~unittest.addModuleCleanup()` y :meth:`~unittest."
"TestCase.addClassCleanup()` a unittest para admitir limpiezas para :func:"
"`~unittest.setUpModule()` y :meth:`~unittest .TestCase.setUpClass()`. "
"(Contribución de Lisa Roach en :issue:`24412`.)"

#: ../Doc/whatsnew/3.8.rst:1361
msgid ""
"Several mock assert functions now also print a list of actual calls upon "
"failure. (Contributed by Petter Strandmark in :issue:`35047`.)"
msgstr ""
"Varias funciones de aserción simulada ahora también imprimen una lista de "
"llamadas reales en caso de fallo. (Contribución de Petter Strandmark en :"
"issue:`35047`.)"

#: ../Doc/whatsnew/3.8.rst:1364
msgid ""
":mod:`unittest` module gained support for coroutines to be used as test "
"cases with :class:`unittest.IsolatedAsyncioTestCase`. (Contributed by Andrew "
"Svetlov in :issue:`32972`.)"
msgstr ""
"El módulo :mod:`unittest` ha obtenido soporte para corrutinas que se "
"utilizarán como casos de prueba con :class:`unittest."
"IsolatedAsyncioTestCase`. (Contribución de Andrew Svetlov en :issue:`32972`.)"

#: ../Doc/whatsnew/3.8.rst:1368
msgid "Example::"
msgstr "Ejemplo::"

#: ../Doc/whatsnew/3.8.rst:1391
msgid "venv"
msgstr "venv"

#: ../Doc/whatsnew/3.8.rst:1393
msgid ""
":mod:`venv` now includes an ``Activate.ps1`` script on all platforms for "
"activating virtual environments under PowerShell Core 6.1. (Contributed by "
"Brett Cannon in :issue:`32718`.)"
msgstr ""
":mod:`venv` ahora incluye un script ``Activate.ps1`` en todas las "
"plataformas para activar entornos virtuales en PowerShell Core 6.1. "
"(Contribución de Brett Cannon en :issue:`32718`.)"

#: ../Doc/whatsnew/3.8.rst:1399
msgid "weakref"
msgstr "weakref"

#: ../Doc/whatsnew/3.8.rst:1401
msgid ""
"The proxy objects returned by :func:`weakref.proxy` now support the matrix "
"multiplication operators ``@`` and ``@=`` in addition to the other numeric "
"operators. (Contributed by Mark Dickinson in :issue:`36669`.)"
msgstr ""
"Los objetos proxy retornados por :func:`debilref.proxy` ahora admiten los "
"operadores de multiplicación de matrices ``@`` y ``@=``, además de los otros "
"operadores numéricos. (Contribución de Mark Dickinson en :issue:`36669`.)"

#: ../Doc/whatsnew/3.8.rst:1407
msgid "xml"
msgstr "xml"

#: ../Doc/whatsnew/3.8.rst:1409
msgid ""
"As mitigation against DTD and external entity retrieval, the :mod:`xml.dom."
"minidom` and :mod:`xml.sax` modules no longer process external entities by "
"default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""
"Como mitigación contra DTD y recuperación de entidades externas, los "
"módulos :mod:`xml.dom.minidom` y :mod:`xml.sax` ya no procesan entidades "
"externas de forma predeterminada. (Contribución de Christian Heimes en :"
"issue:`17239`.)"

#: ../Doc/whatsnew/3.8.rst:1414
msgid ""
"The ``.find*()`` methods in the :mod:`xml.etree.ElementTree` module support "
"wildcard searches like ``{*}tag`` which ignores the namespace and "
"``{namespace}*`` which returns all tags in the given namespace. (Contributed "
"by Stefan Behnel in :issue:`28238`.)"
msgstr ""
"Los métodos ``.find*()`` del módulo :mod:`xml.etree.ElementTree` admiten "
"búsquedas con comodines, como ``{*}tag``, que ignora el espacio de nombres, "
"y ``{namespace}*``, que retorna todas las etiquetas en el espacio de nombres "
"dado. (Contribución de Stefan Behnel en :issue:`28238`.)"

#: ../Doc/whatsnew/3.8.rst:1419
msgid ""
"The :mod:`xml.etree.ElementTree` module provides a new function :func:`–xml."
"etree.ElementTree.canonicalize()` that implements C14N 2.0. (Contributed by "
"Stefan Behnel in :issue:`13611`.)"
msgstr ""
"El módulo :mod:`xml.etree.ElementTree` proporciona una nueva función :func:`–"
"xml.etree.ElementTree.canonicalize()` que implementa C14N 2.0. (Contribución "
"de Stefan Behnel en :issue:`13611`.)"

#: ../Doc/whatsnew/3.8.rst:1423
msgid ""
"The target object of :class:`xml.etree.ElementTree.XMLParser` can receive "
"namespace declaration events through the new callback methods ``start_ns()`` "
"and ``end_ns()``.  Additionally, the :class:`xml.etree.ElementTree."
"TreeBuilder` target can be configured to process events about comments and "
"processing instructions to include them in the generated tree. (Contributed "
"by Stefan Behnel in :issue:`36676` and :issue:`36673`.)"
msgstr ""
"El objeto de destino de :class:`xml.etree.ElementTree.XMLParser` puede "
"recibir eventos de declaración de espacio de nombres a través de los nuevos "
"métodos de retrollamada ``start_ns()`` y ``end_ns()``. Además, el destino :"
"class:`xml.etree.ElementTree.TreeBuilder` se puede configurar para procesar "
"eventos sobre comentarios e instrucciones de procesamiento para incluirlos "
"en el árbol generado. (Contribución de Stefan Behnel en :issue:`36676` y :"
"issue:`36673`.)"

#: ../Doc/whatsnew/3.8.rst:1433
msgid "xmlrpc"
msgstr "xmlrpc"

#: ../Doc/whatsnew/3.8.rst:1435
msgid ""
":class:`xmlrpc.client.ServerProxy` now supports an optional *headers* "
"keyword argument for a sequence of HTTP headers to be sent with each "
"request.  Among other things, this makes it possible to upgrade from default "
"basic authentication to faster session authentication. (Contributed by "
"Cédric Krier in :issue:`35153`.)"
msgstr ""
":class:`xmlrpc.client.ServerProxy` ahora admite un argumento por palabra "
"clave *headers* opcional para una secuencia de encabezados HTTP que se "
"enviarán con cada solicitud. Entre otras cosas, esto permite actualizar "
"desde la autenticación básica predeterminada a una autenticación de sesión "
"más rápida. (Contribución de Cédric Krier en :issue:`35153`.)"

#: ../Doc/whatsnew/3.8.rst:1443
msgid "Optimizations"
msgstr "Optimizaciones"

#: ../Doc/whatsnew/3.8.rst:1445
msgid ""
"The :mod:`subprocess` module can now use the :func:`os.posix_spawn` function "
"in some cases for better performance. Currently, it is only used on macOS "
"and Linux (using glibc 2.24 or newer) if all these conditions are met:"
msgstr ""
"El módulo :mod:`subprocess` ahora puede usar en ciertos casos la función :"
"func:`os.posix_spawn` para mejorar el rendimiento. Actualmente, solo se usa "
"en macOS y Linux (usando glibc 2.24 o una versión más reciente) y siempre "
"que se cumplan todas estas condiciones:"

#: ../Doc/whatsnew/3.8.rst:1449
msgid "*close_fds* is false;"
msgstr "*close_fds* es falso;"

#: ../Doc/whatsnew/3.8.rst:1450
msgid ""
"*preexec_fn*, *pass_fds*, *cwd* and *start_new_session* parameters are not "
"set;"
msgstr ""
"los parámetros *preexec_fn*, *pass_fds*, *cwd* y *start_new_session* no "
"están establecidos;"

#: ../Doc/whatsnew/3.8.rst:1452
msgid "the *executable* path contains a directory."
msgstr "la ruta *executable* contiene un directorio."

#: ../Doc/whatsnew/3.8.rst:1454
msgid "(Contributed by Joannah Nanjekye and Victor Stinner in :issue:`35537`.)"
msgstr "(Contribución de Joannah Nanjekye y Victor Stinner en :issue:`35537`.)"

#: ../Doc/whatsnew/3.8.rst:1456
#, python-format
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` and :func:`shutil.move` use platform-specific \"fast-copy"
"\" syscalls on Linux and macOS in order to copy the file more efficiently. "
"\"fast-copy\" means that the copying operation occurs within the kernel, "
"avoiding the use of userspace buffers in Python as in \"``outfd.write(infd."
"read())``\". On Windows :func:`shutil.copyfile` uses a bigger default buffer "
"size (1 MiB instead of 16 KiB) and a :func:`memoryview`-based variant of :"
"func:`shutil.copyfileobj` is used. The speedup for copying a 512 MiB file "
"within the same partition is about +26% on Linux, +50% on macOS and +40% on "
"Windows. Also, much less CPU cycles are consumed. See :ref:`shutil-platform-"
"dependent-efficient-copy-operations` section. (Contributed by Giampaolo "
"Rodolà in :issue:`33671`.)"
msgstr ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` y :func:`shutil.move` usan llamadas al sistema de \"copia-"
"rápida\" específicas de la plataforma en Linux y macOS, con la finalidad de "
"copiar ficheros más eficientemente. \"copia-rápida\" significa que la "
"operación de copiado tiene lugar en el propio kernel, evitando que Python "
"haga uso de búferes en el espacio de usuario como \"``outfd.write(infd."
"read())``\". En Windows, :func:`shutil.copyfile` usa un tamaño de búfer "
"predeterminado más grande (1 MiB en lugar de 16 KiB) y se usa una variante "
"de :func:`shutil.copyfileobj` basada en :func:`memoryview`. La aceleración "
"al copiar un archivo de 512 MiB dentro de la misma partición es de "
"aproximadamente +26% en Linux, +50% en macOS y +40% en Windows. Además, se "
"consumen muchos menos ciclos de CPU. Consultar la sección :ref:`shutil-"
"platform-dependent-efficient-copy-operations`. (Contribución de Giampaolo "
"Rodolà en :issue:`33671`.)"

#: ../Doc/whatsnew/3.8.rst:1472
#, python-format
msgid ""
":func:`shutil.copytree` uses :func:`os.scandir` function and all copy "
"functions depending from it use cached :func:`os.stat` values. The speedup "
"for copying a directory with 8000 files is around +9% on Linux, +20% on "
"Windows and +30% on a Windows SMB share. Also the number of :func:`os.stat` "
"syscalls is reduced by 38% making :func:`shutil.copytree` especially faster "
"on network filesystems. (Contributed by Giampaolo Rodolà in :issue:`33695`.)"
msgstr ""
"Ahora :func:`shutil.copytree` usa la función :func:`os.scandir` y todas las "
"funciones de copia que dependen de ella usan el valor en caché de :func:`os."
"stat`. Al copiar un directorio con 8000 archivos, la mejora de velocidad es "
"de +9% en Linux, +20% en Windows y +30% en recursos compartidos de Windows "
"SMB. Además, el número de llamadas al sistema de :func:`os.stat` se reduce "
"en un 38%, lo que hace que :func:`shutil.copytree` sea más rápida "
"especialmente en sistemas de archivos de red. (Contribución de Giampaolo "
"Rodolà en :issue:`33695`.)"

#: ../Doc/whatsnew/3.8.rst:1479
msgid ""
"The default protocol in the :mod:`pickle` module is now Protocol 4, first "
"introduced in Python 3.4.  It offers better performance and smaller size "
"compared to Protocol 3 available since Python 3.0."
msgstr ""
"El protocolo por defecto del módulo :mod:`pickle` es ahora el Protocolo 4, "
"introducido por primera vez en Python 3.4. Ofrece un mejor desempeño y un "
"menor tamaño, en comparación con el Protocolo 3 disponible desde Python 3.0."

#: ../Doc/whatsnew/3.8.rst:1483
msgid ""
"Removed one ``Py_ssize_t`` member from ``PyGC_Head``.  All GC tracked "
"objects (e.g. tuple, list, dict) size is reduced 4 or 8 bytes. (Contributed "
"by Inada Naoki in :issue:`33597`.)"
msgstr ""
"Eliminado un miembro ``Py_ssize_t`` de ``PyGC_Head``. El tamaño de todos los "
"objetos seguidos por el GC (por ejemplo tuple, list y dict) se ha reducido 4 "
"u 8 bytes. (Contribución de Inada Naoki en :issue:`33597`.)"

#: ../Doc/whatsnew/3.8.rst:1487
msgid ""
":class:`uuid.UUID` now uses ``__slots__`` to reduce its memory footprint. "
"(Contributed by Wouter Bolsterlee and Tal Einat in :issue:`30977`)"
msgstr ""
"La clase :class:`uuid.UUID` ahora usa ``__slots__`` para reducir su impacto "
"en la memoria. (Contribución de Wouter Bolsterlee y Tal Einat en :issue:"
"`30977`.)"

#: ../Doc/whatsnew/3.8.rst:1490
msgid ""
"Improved performance of :func:`operator.itemgetter` by 33%.  Optimized "
"argument handling and added a fast path for the common case of a single non-"
"negative integer index into a tuple (which is the typical use case in the "
"standard library).  (Contributed by Raymond Hettinger in :issue:`35664`.)"
msgstr ""
"Mejorado el rendimiento de :func:`operator.itemgetter` en un 33%. Se ha "
"optimizado el manejo de argumentos y se ha agregado una ruta rápida al caso "
"común de índices enteros no negativos únicos en tuplas (que constituye un "
"caso de uso común en la biblioteca estándar). (Contribución de Raymond "
"Hettinger en :issue:`35664`.)"

#: ../Doc/whatsnew/3.8.rst:1496
msgid ""
"Sped-up field lookups in :func:`collections.namedtuple`.  They are now more "
"than two times faster, making them the fastest form of instance variable "
"lookup in Python. (Contributed by Raymond Hettinger, Pablo Galindo, and Joe "
"Jevnik, Serhiy Storchaka in :issue:`32492`.)"
msgstr ""
"Se han acelerado las búsquedas de campos en :func:`collections.namedtuple`. "
"Ahora son más del doble de rápidas, lo que las convierte en la forma más "
"rápida de búsqueda de variables de instancia en Python. (Contribución de "
"Raymond Hettinger, Pablo Galindo, Joe Jevnik y Serhiy Storchaka en :issue:"
"`32492`.)"

#: ../Doc/whatsnew/3.8.rst:1501
#, python-format
msgid ""
"The :class:`list` constructor does not overallocate the internal item buffer "
"if the input iterable has a known length (the input implements ``__len__``). "
"This makes the created list 12% smaller on average. (Contributed by Raymond "
"Hettinger and Pablo Galindo in :issue:`33234`.)"
msgstr ""
"El constructor de :class:`list` no sobre-asignará el búfer del elemento "
"interno si se conoce la longitud de la entrada iterable (es decir, si la "
"entrada implementa ``__len__``). Esto hace que la lista generada sea, en "
"promedio, un 12% más pequeña. (Contribución de Raymond Hettinger y Pablo "
"Galindo en :issue:`33234`.)"

#: ../Doc/whatsnew/3.8.rst:1506
msgid ""
"Doubled the speed of class variable writes.  When a non-dunder attribute was "
"updated, there was an unnecessary call to update slots. (Contributed by "
"Stefan Behnel, Pablo Galindo Salgado, Raymond Hettinger, Neil Schemenauer, "
"and Serhiy Storchaka in :issue:`36012`.)"
msgstr ""
"De ha duplicado la velocidad de escritura de variables de clase. Antes, "
"cuando se actualizaba un atributo non-dunder, había una llamada innecesaria "
"para actualizar slots. (Contribución de Stefan Behnel, Pablo Galindo "
"Salgado, Raymond Hettinger, Neil Schemenauer y Serhiy Storchaka en :issue:"
"`36012`.)"

#: ../Doc/whatsnew/3.8.rst:1511
msgid ""
"Reduced an overhead of converting arguments passed to many builtin functions "
"and methods.  This sped up calling some simple builtin functions and methods "
"up to 20--50%.  (Contributed by Serhiy Storchaka in :issue:`23867`, :issue:"
"`35582` and :issue:`36127`.)"
msgstr ""
"Se ha reducido la sobrecarga de conversión de argumentos pasados a muchas "
"funciones y métodos integrados. Esto acelera la llamada a algunas funciones "
"y métodos incorporados simples hasta un 20-50%. (Contribución de Serhiy "
"Storchaka en :issue:`23867`, :issue:`35582` y :issue:`36127`.)"

#: ../Doc/whatsnew/3.8.rst:1516
#, python-format
msgid ""
"``LOAD_GLOBAL`` instruction now uses new \"per opcode cache\" mechanism. It "
"is about 40% faster now.  (Contributed by Yury Selivanov and Inada Naoki in :"
"issue:`26219`.)"
msgstr ""
"La instrucción ``LOAD_GLOBAL`` ahora utiliza el nuevo mecanismo \"per opcode "
"cache\". Ahora es aproximadamente un 40% más rápida. (Contribución de Yury "
"Selivanov e Inada Naoki en :issue:`26219`.)"

#: ../Doc/whatsnew/3.8.rst:1522
msgid "Build and C API Changes"
msgstr "Cambios en la compilación y la API de C"

#: ../Doc/whatsnew/3.8.rst:1524
msgid ""
"Default :data:`sys.abiflags` became an empty string: the ``m`` flag for "
"pymalloc became useless (builds with and without pymalloc are ABI "
"compatible) and so has been removed. (Contributed by Victor Stinner in :"
"issue:`36707`.)"
msgstr ""
"El valor predeterminado para :data:`sys.abiflags` es ahora una cadena vacía: "
"el flag ``m`` para pymalloc se ha vuelto innecesario (las compilaciones con "
"y sin pymalloc son ABI compatibles) y por lo tanto se ha eliminado. "
"(Contribución de Victor Stinner en :issue:`36707`.)"

#: ../Doc/whatsnew/3.8.rst:1528
msgid "Example of changes:"
msgstr "Ejemplos del cambio:"

#: ../Doc/whatsnew/3.8.rst:1530
msgid ""
"Only ``python3.8`` program is installed, ``python3.8m`` program is gone."
msgstr ""
"Solo el programa ``python3.8`` es instalado, el programa ``python3.8m`` se "
"ha eliminado."

#: ../Doc/whatsnew/3.8.rst:1531
msgid ""
"Only ``python3.8-config`` script is installed, ``python3.8m-config`` script "
"is gone."
msgstr ""
"Solo el script ``python3.8-config`` es instalado, el script ``python3.8m-"
"config`` se ha eliminado."

#: ../Doc/whatsnew/3.8.rst:1533
msgid ""
"The ``m`` flag has been removed from the suffix of dynamic library "
"filenames: extension modules in the standard library as well as those "
"produced and installed by third-party packages, like those downloaded from "
"PyPI. On Linux, for example, the Python 3.7 suffix ``.cpython-37m-x86_64-"
"linux-gnu.so`` became ``.cpython-38-x86_64-linux-gnu.so`` in Python 3.8."
msgstr ""
"El flag ``m`` se ha eliminado del sufijo de los nombres de archivo de las "
"bibliotecas dinámicas: los módulos de extensión de la biblioteca estándar, "
"así como los producidos e instalados por paquetes de terceros, como los "
"descargados desde PyPI. En Linux, por ejemplo, el sufijo ``.cpython-37m-"
"x86_64-linux-gnu.so`` en Python 3.7 se ha convertido en ``.cpython-38-x86_64-"
"linux-gnu.so`` en Python 3.8."

#: ../Doc/whatsnew/3.8.rst:1540
msgid ""
"The header files have been reorganized to better separate the different "
"kinds of APIs:"
msgstr ""
"Los archivos de cabeceras se han reorganizado para separar mejor los "
"diferentes tipos de APIs:"

#: ../Doc/whatsnew/3.8.rst:1543
msgid "``Include/*.h`` should be the portable public stable C API."
msgstr "``Include/*.h`` debe ser la API de C portable, pública y estable."

#: ../Doc/whatsnew/3.8.rst:1544
msgid ""
"``Include/cpython/*.h`` should be the unstable C API specific to CPython; "
"public API, with some private API prefixed by ``_Py`` or ``_PY``."
msgstr ""
"``Include/cpython/*.h`` debe ser la API de C inestable específica de "
"CPython. Una API pública, con alguna API privada marcada con los prefijos "
"``_Py`` o ``_PY``."

#: ../Doc/whatsnew/3.8.rst:1546
msgid ""
"``Include/internal/*.h`` is the private internal C API very specific to "
"CPython. This API comes with no backward compatibility warranty and should "
"not be used outside CPython. It is only exposed for very specific needs like "
"debuggers and profiles which has to access to CPython internals without "
"calling functions. This API is now installed by ``make install``."
msgstr ""
"``Include/internal/*.h`` es la API de C interna privada, muy específica de "
"CPython. Esta API no tiene retro-compatibilidad garantizada con versiones "
"anteriores y no debe ser usada fuera de CPython. Solo está expuesta para "
"cubrir necesidades muy específicas, como es el caso de depuradores y "
"perfiladores, que necesitan acceder a los componentes internos de CPython "
"sin llamar directamente a las funciones. Esta API es ahora instalada por "
"``make install``."

#: ../Doc/whatsnew/3.8.rst:1552
msgid ""
"(Contributed by Victor Stinner in :issue:`35134` and :issue:`35081`, work "
"initiated by Eric Snow in Python 3.7.)"
msgstr ""
"(Contribución de Victor Stinner en :issue:`35134` y :issue:`35081`, trabajo "
"iniciado por Eric Snow en Python 3.7.)"

#: ../Doc/whatsnew/3.8.rst:1555
msgid ""
"Some macros have been converted to static inline functions: parameter types "
"and return type are well defined, they don't have issues specific to macros, "
"variables have a local scopes. Examples:"
msgstr ""
"Algunas macros se han convertido a funciones inline estáticas: los tipos de "
"los parámetros y el tipo de retorno están bien definidos, no entrañan "
"cuestiones que precisen el uso específico de macros y las variables tienen "
"ámbito local. Algunos ejemplos:"

#: ../Doc/whatsnew/3.8.rst:1559
msgid ":c:func:`Py_INCREF`, :c:func:`Py_DECREF`"
msgstr ":c:func:`Py_INCREF`, :c:func:`Py_DECREF`"

#: ../Doc/whatsnew/3.8.rst:1560
msgid ":c:func:`Py_XINCREF`, :c:func:`Py_XDECREF`"
msgstr ":c:func:`Py_XINCREF`, :c:func:`Py_XDECREF`"

#: ../Doc/whatsnew/3.8.rst:1561
msgid ":c:func:`PyObject_INIT`, :c:func:`PyObject_INIT_VAR`"
msgstr ":c:func:`PyObject_INIT`, :c:func:`PyObject_INIT_VAR`"

#: ../Doc/whatsnew/3.8.rst:1562
msgid ""
"Private functions: :c:func:`_PyObject_GC_TRACK`, :c:func:"
"`_PyObject_GC_UNTRACK`, :c:func:`_Py_Dealloc`"
msgstr ""
"Funciones privadas: :c:func:`_PyObject_GC_TRACK`, :c:func:"
"`_PyObject_GC_UNTRACK`, :c:func:`_Py_Dealloc`"

#: ../Doc/whatsnew/3.8.rst:1565
msgid "(Contributed by Victor Stinner in :issue:`35059`.)"
msgstr "(Contribución de Victor Stinner en :issue:`35059`.)"

#: ../Doc/whatsnew/3.8.rst:1567
msgid ""
"The :c:func:`PyByteArray_Init` and :c:func:`PyByteArray_Fini` functions have "
"been removed. They did nothing since Python 2.7.4 and Python 3.2.0, were "
"excluded from the limited API (stable ABI), and were not documented. "
"(Contributed by Victor Stinner in :issue:`35713`.)"
msgstr ""
"Las funciones :c:func:`PyByteArray_Init` y :c:func:`PyByteArray_Fini` se han "
"eliminado. No eran de utilidad desde Python 2.7.4 y Python 3.2.0, cuando "
"fueron excluidas de la API limitada (ABI estable) y dejaron de estar "
"documentadas. (Contribución de Victor Stinner en :issue:`35713`.)"

#: ../Doc/whatsnew/3.8.rst:1572
msgid ""
"The result of :c:func:`PyExceptionClass_Name` is now of type ``const char "
"*`` rather of ``char *``. (Contributed by Serhiy Storchaka in :issue:"
"`33818`.)"
msgstr ""
"El resultado de :c:func:`PyExceptionClass_Name` es ahora de tipo ``const "
"char *`` en vez de ``char *``. (Contribución de Serhiy Storchaka en :issue:"
"`33818`.)"

#: ../Doc/whatsnew/3.8.rst:1576
msgid ""
"The duality of ``Modules/Setup.dist`` and ``Modules/Setup`` has been "
"removed.  Previously, when updating the CPython source tree, one had to "
"manually copy ``Modules/Setup.dist`` (inside the source tree) to ``Modules/"
"Setup`` (inside the build tree) in order to reflect any changes upstream.  "
"This was of a small benefit to packagers at the expense of a frequent "
"annoyance to developers following CPython development, as forgetting to copy "
"the file could produce build failures."
msgstr ""
"La dualidad conformada por ``Modules/Setup.dist`` y ``Modules/Setup`` ha "
"sido eliminada. Anteriormente, al actualizar el árbol de fuentes de CPython, "
"se tenía que copiar manualmente ``Modules/Setup.dist`` (dentro del árbol de "
"fuentes) a ``Modules/Setup`` (dentro del árbol de compilación) para reflejar "
"cualquier cambio en sentido ascendente. Esto suponía un pequeño beneficio "
"para los empaquetadores, a expensas de una frecuente molestia para los "
"desarrolladores de CPython, ya que olvidarse de copiar el archivo podía "
"ocasionar fallos de compilación."

#: ../Doc/whatsnew/3.8.rst:1584
msgid ""
"Now the build system always reads from ``Modules/Setup`` inside the source "
"tree.  People who want to customize that file are encouraged to maintain "
"their changes in a git fork of CPython or as patch files, as they would do "
"for any other change to the source tree."
msgstr ""
"Ahora el sistema de compilación siempre lee desde ``Modules/Setup`` dentro "
"del árbol de fuentes. Se recomienda a las personas que deseen personalizar "
"este archivo que mantengan sus cambios en un fork de git de CPython o como "
"archivos de parche, como harían con cualquier otro cambio en el árbol de "
"fuentes."

#: ../Doc/whatsnew/3.8.rst:1589
msgid "(Contributed by Antoine Pitrou in :issue:`32430`.)"
msgstr "(Contribución de Antoine Pitrou en :issue:`32430`.)"

#: ../Doc/whatsnew/3.8.rst:1591
msgid ""
"Functions that convert Python number to C integer like :c:func:"
"`PyLong_AsLong` and argument parsing functions like :c:func:"
"`PyArg_ParseTuple` with integer converting format units like ``'i'`` will "
"now use the :meth:`~object.__index__` special method instead of :meth:"
"`~object.__int__`, if available.  The deprecation warning will be emitted "
"for objects with the ``__int__()`` method but without the ``__index__()`` "
"method (like :class:`~decimal.Decimal` and :class:`~fractions.Fraction`).  :"
"c:func:`PyNumber_Check` will now return ``1`` for objects implementing "
"``__index__()``. :c:func:`PyNumber_Long`, :c:func:`PyNumber_Float` and :c:"
"func:`PyFloat_AsDouble` also now use the ``__index__()`` method if "
"available. (Contributed by Serhiy Storchaka in :issue:`36048` and :issue:"
"`20092`.)"
msgstr ""
"Las funciones que convierten un número de Python a un entero de C, como :c:"
"func:`PyLong_AsLong`, y las funciones de análisis de argumentos como :c:func:"
"`PyArg_ParseTuple` con unidades de formato de conversión de enteros como "
"``'i'``, ahora usarán el método especial :meth:`~object.__index__` si está "
"disponible, en lugar de :meth:`~object.__int__`. Una advertencia de "
"deprecación se emitirá para aquellos objetos que tengan el método "
"``__int__()`` pero no el método ``__index__()`` (como :class:`~decimal."
"Decimal` y :class:`~fractions.Fraction`). :c:func:`PyNumber_Check` ahora "
"retornará ``1`` para los objetos que implementen ``__index__()``. :c:func:"
"`PyNumber_Long`, :c:func:`PyNumber_Float` y :c:func:`PyFloat_AsDouble` ahora "
"también usan el método ``__index__()`` si está disponible. (Contribución de "
"Serhiy Storchaka en :issue:`36048` y :issue:`20092`.)"

#: ../Doc/whatsnew/3.8.rst:1605
msgid ""
"Heap-allocated type objects will now increase their reference count in :c:"
"func:`PyObject_Init` (and its parallel macro ``PyObject_INIT``) instead of "
"in :c:func:`PyType_GenericAlloc`. Types that modify instance allocation or "
"deallocation may need to be adjusted. (Contributed by Eddie Elizondo in :"
"issue:`35810`.)"
msgstr ""
"Los objetos de tipo asignados al montículo ahora aumentarán su recuento de "
"referencias en :c:func:`PyObject_Init` (y en su macro paralela "
"``PyObject_INIT``) en lugar de en :c:func:`PyType_GenericAlloc`. Es posible "
"que deban ajustarse los tipos que modifican la asignación o desasignación de "
"instancias. (Contribución de Eddie Elizondo en :issue:`35810`.)"

#: ../Doc/whatsnew/3.8.rst:1611
msgid ""
"The new function :c:func:`PyCode_NewWithPosOnlyArgs` allows to create code "
"objects like :c:func:`PyCode_New`, but with an extra *posonlyargcount* "
"parameter for indicating the number of positional-only arguments. "
"(Contributed by Pablo Galindo in :issue:`37221`.)"
msgstr ""
"La nueva función :c:func:`PyCode_NewWithPosOnlyArgs` permite crear objetos "
"de código, al igual que :c:func:`PyCode_New`, pero con un parámetro "
"*posonlyargcount* extra, que permite indicar el número de argumentos solo "
"posicionales."

#: ../Doc/whatsnew/3.8.rst:1616
msgid ""
":c:func:`Py_SetPath` now sets :data:`sys.executable` to the program full "
"path (:c:func:`Py_GetProgramFullPath`) rather than to the program name (:c:"
"func:`Py_GetProgramName`). (Contributed by Victor Stinner in :issue:`38234`.)"
msgstr ""
":c:func:`Py_SetPath` ahora establece :data:`sys.executable` en la ruta "
"completa del programa (:c:func:`Py_GetProgramFullPath`), en vez de en el "
"nombre del programa (:c:func:`Py_GetProgramName`). (Contribución de Victor "
"Stinner en :issue:`38234`.)"

#: ../Doc/whatsnew/3.8.rst:1623
msgid "Deprecated"
msgstr "Obsoleto"

#: ../Doc/whatsnew/3.8.rst:1625
msgid ""
"The distutils ``bdist_wininst`` command is now deprecated, use "
"``bdist_wheel`` (wheel packages) instead. (Contributed by Victor Stinner in :"
"issue:`37481`.)"
msgstr ""
"El comando ``bdist_wininst`` de distutils está ahora obsoleto, usar "
"``bdist_wheel`` (paquetes wheel) en su lugar. (Contribución de Victor "
"Stinner en :issue:`37481`.)"

#: ../Doc/whatsnew/3.8.rst:1629
msgid ""
"Deprecated methods ``getchildren()`` and ``getiterator()`` in the :mod:`~xml."
"etree.ElementTree` module now emit a :exc:`DeprecationWarning` instead of :"
"exc:`PendingDeprecationWarning`. They will be removed in Python 3.9. "
"(Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
"Los métodos ``getchildren()`` y ``getiterator()`` del módulo :mod:`~xml."
"etree.ElementTree` ahora emiten una advertencia :exc:`DeprecationWarning`, "
"en lugar de :exc:`PendingDeprecationWarning`. Serán eliminados en Python "
"3.9. (Contribución de Serhiy Storchaka en :issue:`29209`.)"

#: ../Doc/whatsnew/3.8.rst:1635
msgid ""
"Passing an object that is not an instance of :class:`concurrent.futures."
"ThreadPoolExecutor` to :meth:`loop.set_default_executor() <asyncio.loop."
"set_default_executor>` is deprecated and will be prohibited in Python 3.9. "
"(Contributed by Elvis Pranskevichus in :issue:`34075`.)"
msgstr ""
"Pasar un objeto a :meth:`loop.set_default_executor() <asyncio.loop."
"set_default_executor>` que no sea una instancia de :class:`concurrent."
"futures.ThreadPoolExecutor` está obsoleto y será prohibido en Python 3.9. "
"(Contribución de Elvis Pranskevichus en :issue:`34075`.)"

#: ../Doc/whatsnew/3.8.rst:1641
msgid ""
"The :meth:`__getitem__` methods of :class:`xml.dom.pulldom.DOMEventStream`, :"
"class:`wsgiref.util.FileWrapper` and :class:`fileinput.FileInput` have been "
"deprecated."
msgstr ""
"Los métodos :meth:`__getitem__` pertenecientes a las clases :class:`xml.dom."
"pulldom.DOMEventStream`, :class:`wsgiref.util.FileWrapper` y :class:"
"`fileinput.FileInput` están obsoletos a partir de ahora."

#: ../Doc/whatsnew/3.8.rst:1645
msgid ""
"Implementations of these methods have been ignoring their *index* parameter, "
"and returning the next item instead. (Contributed by Berker Peksag in :issue:"
"`9372`.)"
msgstr ""
"Las implementaciones de estos métodos han estado ignorando su parámetro "
"*index* y retornando el siguiente item en su lugar. (Contribución de Berker "
"Peksag en :issue:`9372`.)"

#: ../Doc/whatsnew/3.8.rst:1649
msgid ""
"The :class:`typing.NamedTuple` class has deprecated the ``_field_types`` "
"attribute in favor of the ``__annotations__`` attribute which has the same "
"information. (Contributed by Raymond Hettinger in :issue:`36320`.)"
msgstr ""
"El atributo ``_field_types`` de la clase :class:`typing.NamedTuple` está "
"ahora obsoleto en favor del atributo ``__annotations__``, que contiene la "
"misma información. (Contribución de Raymond Hettinger en :issue:`36320`.)"

#: ../Doc/whatsnew/3.8.rst:1653
msgid ""
":mod:`ast` classes ``Num``, ``Str``, ``Bytes``, ``NameConstant`` and "
"``Ellipsis`` are considered deprecated and will be removed in future Python "
"versions. :class:`~ast.Constant` should be used instead. (Contributed by "
"Serhiy Storchaka in :issue:`32892`.)"
msgstr ""
"Las clases ``Num``, ``Str``, ``Bytes``, ``NameConstant`` y ``Ellipsis`` del "
"módulo :mod:`ast` están consideradas obsoletas y serán eliminadas en "
"versiones futuras de Python. La clase :class:`~ast.Constant` debe ser usada "
"en su lugar. (Contribución de Serhiy Storchaka en :issue:`32892`.)"

#: ../Doc/whatsnew/3.8.rst:1658
msgid ""
":class:`ast.NodeVisitor` methods ``visit_Num()``, ``visit_Str()``, "
"``visit_Bytes()``, ``visit_NameConstant()`` and ``visit_Ellipsis()`` are "
"deprecated now and will not be called in future Python versions. Add the :"
"meth:`~ast.NodeVisitor.visit_Constant` method to handle all constant nodes. "
"(Contributed by Serhiy Storchaka in :issue:`36917`.)"
msgstr ""
"Los métodos ``visit_Num()``, ``visit_Str()``, ``visit_Bytes()``, "
"``visit_NameConstant()`` y ``visit_Ellipsis()`` de la clase :class:`ast."
"NodeVisitor` están obsoletos ahora y serán invocados en versiones futuras de "
"Python. Agregar el método :meth:`~ast.NodeVisitor.visit_Constant` para "
"manejar todos los nodos constantes. (Contribución de Serhiy Storchaka en :"
"issue:`36917`.)"

#: ../Doc/whatsnew/3.8.rst:1665
msgid ""
"The :func:`asyncio.coroutine` :term:`decorator` is deprecated and will be "
"removed in version 3.10.  Instead of ``@asyncio.coroutine``, use :keyword:"
"`async def` instead. (Contributed by Andrew Svetlov in :issue:`36921`.)"
msgstr ""
"El :term:`decorator` :func:`asyncio.coroutine` está obsoleto y será "
"eliminado en Python 3.10. En lugar de ``@asyncio.coroutine``, se debe usar :"
"keyword:`async def`. (Contribución de Andrew Svetlov en :issue:`36921`.)"

#: ../Doc/whatsnew/3.8.rst:1670
msgid ""
"In :mod:`asyncio`, the explicit passing of a *loop* argument has been "
"deprecated and will be removed in version 3.10 for the following: :func:"
"`asyncio.sleep`, :func:`asyncio.gather`, :func:`asyncio.shield`, :func:"
"`asyncio.wait_for`, :func:`asyncio.wait`, :func:`asyncio.as_completed`, :"
"class:`asyncio.Task`, :class:`asyncio.Lock`, :class:`asyncio.Event`, :class:"
"`asyncio.Condition`, :class:`asyncio.Semaphore`, :class:`asyncio."
"BoundedSemaphore`, :class:`asyncio.Queue`, :func:`asyncio."
"create_subprocess_exec`, and :func:`asyncio.create_subprocess_shell`."
msgstr ""
"En :mod:`asyncio`, pasar un argumento *loop* de forma explícita está ahora "
"obsoleto y será eliminado en Python 3.10 para las siguientes funciones y "
"constructores: :func:`asyncio.sleep`, :func:`asyncio.gather`, :func:`asyncio."
"shield`, :func:`asyncio.wait_for`, :func:`asyncio.wait`, :func:`asyncio."
"as_completed`, :class:`asyncio.Task`, :class:`asyncio.Lock`, :class:`asyncio."
"Event`, :class:`asyncio.Condition`, :class:`asyncio.Semaphore`, :class:"
"`asyncio.BoundedSemaphore`, :class:`asyncio.Queue`, :func:`asyncio."
"create_subprocess_exec` y :func:`asyncio.create_subprocess_shell`."

#: ../Doc/whatsnew/3.8.rst:1680
msgid ""
"The explicit passing of coroutine objects to :func:`asyncio.wait` has been "
"deprecated and will be removed in version 3.11. (Contributed by Yury "
"Selivanov in :issue:`34790`.)"
msgstr ""
"El paso explícito de objetos corrutina a :func:`asyncio.wait` está ahora "
"obsoleto y será eliminado en Python 3.11. (Contribución de Yury Selivanov "
"en :issue:`34790`.)"

#: ../Doc/whatsnew/3.8.rst:1684
msgid ""
"The following functions and methods are deprecated in the :mod:`gettext` "
"module: :func:`~gettext.lgettext`, :func:`~gettext.ldgettext`, :func:"
"`~gettext.lngettext` and :func:`~gettext.ldngettext`. They return encoded "
"bytes, and it's possible that you will get unexpected Unicode-related "
"exceptions if there are encoding problems with the translated strings. It's "
"much better to use alternatives which return Unicode strings in Python 3. "
"These functions have been broken for a long time."
msgstr ""
"Las siguientes funciones y métodos del módulo :mod:`gettext` están obsoletos "
"para: :func:`~gettext.lgettext`, :func:`~gettext.ldgettext`, :func:`~gettext."
"lngettext` y :func:`~gettext.ldngettext`. Retornan bytes codificados y es "
"posible obtener excepciones inesperadas relacionadas con Unicode si hay "
"problemas de codificación con las cadenas traducidas. En Python 3 es mucho "
"mejor usar alternativas que retornen cadenas Unicode. Estas funciones han "
"estado rotas durante mucho tiempo."

#: ../Doc/whatsnew/3.8.rst:1692
msgid ""
"Function :func:`~gettext.bind_textdomain_codeset`, methods :meth:`~gettext."
"NullTranslations.output_charset` and :meth:`~gettext.NullTranslations."
"set_output_charset`, and the *codeset* parameter of functions :func:"
"`~gettext.translation` and :func:`~gettext.install` are also deprecated, "
"since they are only used for for the ``l*gettext()`` functions. (Contributed "
"by Serhiy Storchaka in :issue:`33710`.)"
msgstr ""
"La función :func:`~gettext.bind_textdomain_codeset`, los métodos :meth:"
"`~gettext.NullTranslations.output_charset` y :meth:`~gettext."
"NullTranslations.set_output_charset` y el parámetro *codeset* de las "
"funciones :func:`~gettext.translation` y :func:`~gettext.install` están "
"también obsoletos, dado que solo son usados para las funciones "
"``l*gettext()``. (Contribución de Serhiy Storchaka en :issue:`33710`.)"

#: ../Doc/whatsnew/3.8.rst:1700
msgid ""
"The :meth:`~threading.Thread.isAlive()` method of :class:`threading.Thread` "
"has been deprecated. (Contributed by Dong-hee Na in :issue:`35283`.)"
msgstr ""
"El método :meth:`~threading.Thread.isAlive()` de la clase :class:`threading."
"Thread` está ahora obsoleto. (Contribución de Dong-hee Na en :issue:`35283`.)"

#: ../Doc/whatsnew/3.8.rst:1704
msgid ""
"Many builtin and extension functions that take integer arguments will now "
"emit a deprecation warning for :class:`~decimal.Decimal`\\ s, :class:"
"`~fractions.Fraction`\\ s and any other objects that can be converted to "
"integers only with a loss (e.g. that have the :meth:`~object.__int__` method "
"but do not have the :meth:`~object.__index__` method).  In future version "
"they will be errors. (Contributed by Serhiy Storchaka in :issue:`36048`.)"
msgstr ""
"Muchas funciones incorporadas y de extensión que toman argumentos enteros "
"ahora emitirán una advertencia de deprecación para :class:`~decimal.Decimal`"
"\\ s, :class:`~fractions.Fraction`\\ s y cualquier otro objeto que se pueda "
"convertir a enteros solamente con pérdida (por ejemplo, aquellos que tienen "
"el método :meth:`~object .__int__` pero no el método :meth:`~object ."
"__index__`). En una versión futura, esto constituirá un error. (Contribución "
"de Serhiy Storchaka en :issue:`36048`.)"

#: ../Doc/whatsnew/3.8.rst:1712
msgid "Deprecated passing the following arguments as keyword arguments:"
msgstr ""
"El paso de los siguientes argumentos como argumentos por palabra clave está "
"ahora obsoleto:"

#: ../Doc/whatsnew/3.8.rst:1714
msgid ""
"*func* in :func:`functools.partialmethod`, :func:`weakref.finalize`, :meth:"
"`profile.Profile.runcall`, :meth:`cProfile.Profile.runcall`, :meth:`bdb.Bdb."
"runcall`, :meth:`trace.Trace.runfunc` and :func:`curses.wrapper`."
msgstr ""
"*func* en :func:`functools.partialmethod`, :func:`weakref.finalize`, :meth:"
"`profile.Profile.runcall`, :meth:`cProfile.Profile.runcall`, :meth:`bdb.Bdb."
"runcall`, :meth:`trace.Trace.runfunc` y :func:`curses.wrapper`."

#: ../Doc/whatsnew/3.8.rst:1718
msgid "*function* in :meth:`unittest.TestCase.addCleanup`."
msgstr "*function* en :meth:`unittest.TestCase.addCleanup`."

#: ../Doc/whatsnew/3.8.rst:1719
msgid ""
"*fn* in the :meth:`~concurrent.futures.Executor.submit` method of :class:"
"`concurrent.futures.ThreadPoolExecutor` and :class:`concurrent.futures."
"ProcessPoolExecutor`."
msgstr ""
"*fn* en el método :meth:`~concurrent.futures.Executor.submit` de las clases :"
"class:`concurrent.futures.ThreadPoolExecutor` y :class:`concurrent.futures."
"ProcessPoolExecutor`."

#: ../Doc/whatsnew/3.8.rst:1722
msgid ""
"*callback* in :meth:`contextlib.ExitStack.callback`, :meth:`contextlib."
"AsyncExitStack.callback` and :meth:`contextlib.AsyncExitStack."
"push_async_callback`."
msgstr ""
"*callback* en :meth:`contextlib.ExitStack.callback`, :meth:`contextlib."
"AsyncExitStack.callback` y :meth:`contextlib.AsyncExitStack."
"push_async_callback`."

#: ../Doc/whatsnew/3.8.rst:1725
msgid ""
"*c* and *typeid* in the :meth:`~multiprocessing.managers.Server.create` "
"method of :class:`multiprocessing.managers.Server` and :class:"
"`multiprocessing.managers.SharedMemoryServer`."
msgstr ""
"*c* y *typeid* en el método :meth:`~multiprocessing.managers.Server.create` "
"de las clases :class:`multiprocessing.managers.Server` y :class:"
"`multiprocessing.managers.SharedMemoryServer`."

#: ../Doc/whatsnew/3.8.rst:1728
msgid "*obj* in :func:`weakref.finalize`."
msgstr "*obj* en :func:`weakref.finalize`."

#: ../Doc/whatsnew/3.8.rst:1730
msgid ""
"In future releases of Python, they will be :ref:`positional-only <positional-"
"only_parameter>`. (Contributed by Serhiy Storchaka in :issue:`36492`.)"
msgstr ""
"En futuros lanzamientos de Python, todos ellos serán :ref:`argumentos solo "
"posicionales <positional-only_parameter>`. (Contribución de Serhiy Storchaka "
"en :issue:`36492`.)"

#: ../Doc/whatsnew/3.8.rst:1736
msgid "API and Feature Removals"
msgstr "APIs y características eliminadas"

#: ../Doc/whatsnew/3.8.rst:1738
msgid "The following features and APIs have been removed from Python 3.8:"
msgstr "Las siguientes características y APIs se han eliminado de Python 3.8:"

#: ../Doc/whatsnew/3.8.rst:1740
msgid ""
"Starting with Python 3.3, importing ABCs from :mod:`collections` was "
"deprecated, and importing should be done from :mod:`collections.abc`. Being "
"able to import from collections was marked for removal in 3.8, but has been "
"delayed to 3.9. (See :issue:`36952`.)"
msgstr ""
"A partir de Python 3.3, la importación de ABC desde el módulo :mod:"
"`collections` quedó obsoleta y la importación debe realizarse desde el "
"módulo :mod:`collections.abc`. La posibilidad de importar desde collections "
"se marcó para su eliminación en Python 3.8, pero se ha retrasado a Python "
"3.9. (Consultar :issue:`36952`.)"

#: ../Doc/whatsnew/3.8.rst:1745
msgid ""
"The :mod:`macpath` module, deprecated in Python 3.7, has been removed. "
"(Contributed by Victor Stinner in :issue:`35471`.)"
msgstr ""
"El módulo :mod:`macpath`, obsoleto desde Python 3.7, ha sido eliminado. "
"(Contribución de Victor Stinner en :issue:`35471`.)"

#: ../Doc/whatsnew/3.8.rst:1748 ../Doc/whatsnew/3.8.rst:1867
msgid ""
"The function :func:`platform.popen` has been removed, after having been "
"deprecated since Python 3.3: use :func:`os.popen` instead. (Contributed by "
"Victor Stinner in :issue:`35345`.)"
msgstr ""
"La función :func:`platform.popen` ha sido eliminada, después de haber estado "
"obsoleta desde Python 3.3: usa :func:`os.popen` en su lugar. (Contribución "
"de Victor Stinner en :issue:`35345`.)"

#: ../Doc/whatsnew/3.8.rst:1752
msgid ""
"The function :func:`time.clock` has been removed, after having been "
"deprecated since Python 3.3: use :func:`time.perf_counter` or :func:`time."
"process_time` instead, depending on your requirements, to have well-defined "
"behavior. (Contributed by Matthias Bussonnier in :issue:`36895`.)"
msgstr ""
"La función :func:`time.clock` ha sido eliminada, después de haber quedado "
"obsoleta desde Python 3.3: usa :func:`time.perf_counter` o :func:`time."
"process_time` en su lugar, dependiendo de tus requisitos, para tener un "
"comportamiento bien definido. (Contribución de Matthias Bussonnier en :issue:"
"`36895`.)"

#: ../Doc/whatsnew/3.8.rst:1758
msgid ""
"The ``pyvenv`` script has been removed in favor of ``python3.8 -m venv`` to "
"help eliminate confusion as to what Python interpreter the ``pyvenv`` script "
"is tied to. (Contributed by Brett Cannon in :issue:`25427`.)"
msgstr ""
"El script ``pyvenv`` se ha eliminado, en favor de ``python3.8 -m venv``, "
"para ayudar a eliminar la confusión sobre a qué intérprete de Python está "
"vinculado el script ``pyvenv``. (Contribución de Brett Cannon en :issue:"
"`25427`.)"

#: ../Doc/whatsnew/3.8.rst:1762
msgid ""
"``parse_qs``, ``parse_qsl``, and ``escape`` are removed from the :mod:`cgi` "
"module.  They are deprecated in Python 3.2 or older. They should be imported "
"from the ``urllib.parse`` and ``html`` modules instead."
msgstr ""
"Las funciones ``parse_qs``, ``parse_qsl`` y ``escape`` se han eliminado del "
"módulo :mod:`cgi`. Estaban obsoletas desde Python 3.2 o versiones "
"anteriores. En su lugar, deberían ser importadas desde los módulos ``urllib."
"parse`` y ``html``."

#: ../Doc/whatsnew/3.8.rst:1766
msgid ""
"``filemode`` function is removed from the :mod:`tarfile` module. It is not "
"documented and deprecated since Python 3.3."
msgstr ""
"La función ``filemode`` se ha eliminado del módulo :mod:`tarfile`. Estaba "
"indocumentada y obsoleta desde Python 3.3."

#: ../Doc/whatsnew/3.8.rst:1769
msgid ""
"The :class:`~xml.etree.ElementTree.XMLParser` constructor no longer accepts "
"the *html* argument.  It never had an effect and was deprecated in Python "
"3.4. All other parameters are now :ref:`keyword-only <keyword-"
"only_parameter>`. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
"El constructor de :class:`~xml.etree.ElementTree.XMLParser` ya no acepta el "
"argumento *html*. Nunca tuvo efecto y quedó obsoleto en Python 3.4. Todos "
"los demás parámetros son ahora :ref:`parámetros solo nombrados <keyword-"
"only_parameter>`. (Contribución de Serhiy Storchaka en :issue:`29209`.)"

#: ../Doc/whatsnew/3.8.rst:1774
msgid ""
"Removed the ``doctype()`` method of :class:`~xml.etree.ElementTree."
"XMLParser`. (Contributed by Serhiy Storchaka in :issue:`29209`.)"
msgstr ""
"Se ha eliminado el método ``doctype()`` de :class:`~xml.etree.ElementTree."
"XMLParser`. (Contribución de Serhiy Storchaka en :issue:`29209`.)"

#: ../Doc/whatsnew/3.8.rst:1777
msgid ""
"\"unicode_internal\" codec is removed. (Contributed by Inada Naoki in :issue:"
"`36297`.)"
msgstr ""
"Se ha elimina el códec \"unicode_internal\". (Contribución de Inada Naoki "
"en :issue:`36297`.)"

#: ../Doc/whatsnew/3.8.rst:1780
msgid ""
"The ``Cache`` and ``Statement`` objects of the :mod:`sqlite3` module are not "
"exposed to the user. (Contributed by Aviv Palivoda in :issue:`30262`.)"
msgstr ""
"Los objetos ``Cache`` y ``Statement`` del módulo :mod:`sqlite3` no estarán "
"expuestos al usuario a partir de ahora. (Contribución de Aviv Palivoda en :"
"issue:`30262`.)"

#: ../Doc/whatsnew/3.8.rst:1784
msgid ""
"The ``bufsize`` keyword argument of :func:`fileinput.input` and :func:"
"`fileinput.FileInput` which was ignored and deprecated since Python 3.6 has "
"been removed. :issue:`36952` (Contributed by Matthias Bussonnier.)"
msgstr ""
"El argumento por palabra clave ``bufsize`` de :func:`fileinput.input` y :"
"func:`fileinput.FileInput`, marcado como obsoleto e ignorado desde Python "
"3.6, ha sido eliminado. :issue:`36952` (Contribución de Matthias Bussonnier.)"

#: ../Doc/whatsnew/3.8.rst:1788
msgid ""
"The functions :func:`sys.set_coroutine_wrapper` and :func:`sys."
"get_coroutine_wrapper` deprecated in Python 3.7 have been removed; :issue:"
"`36933` (Contributed by Matthias Bussonnier.)"
msgstr ""
"Las funciones :func:`sys.set_coroutine_wrapper` y :func:`sys."
"get_coroutine_wrapper`, obsoletas desde Python 3.7, han sido eliminadas; :"
"issue:`36933` (Contribución de Matthias Bussonnier.)"

#: ../Doc/whatsnew/3.8.rst:1794
msgid "Porting to Python 3.8"
msgstr "Portando a Python 3.8"

#: ../Doc/whatsnew/3.8.rst:1796
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code."
msgstr ""
"Esta sección enumera los cambios descritos anteriormente y otras "
"correcciones de errores que pueden requerir cambios en tu código."

#: ../Doc/whatsnew/3.8.rst:1801
msgid "Changes in Python behavior"
msgstr "Cambios en el comportamiento de Python"

#: ../Doc/whatsnew/3.8.rst:1803
msgid ""
"Yield expressions (both ``yield`` and ``yield from`` clauses) are now "
"disallowed in comprehensions and generator expressions (aside from the "
"iterable expression in the leftmost :keyword:`!for` clause). (Contributed by "
"Serhiy Storchaka in :issue:`10544`.)"
msgstr ""
"Las expresiones yield (tanto la cláusula ``yield`` como la cláusula ``yield "
"from``) ahora no están permitidas en comprensiones y expresiones generadoras "
"(excepto en la expresión iterable en la cláusula :keyword:`!for` situada más "
"a la izquierda). (Contribución de Serhiy Storchaka en :issue:`10544`.)"

#: ../Doc/whatsnew/3.8.rst:1808
msgid ""
"The compiler now produces a :exc:`SyntaxWarning` when identity checks "
"(``is`` and ``is not``) are used with certain types of literals (e.g. "
"strings, numbers).  These can often work by accident in CPython, but are not "
"guaranteed by the language spec.  The warning advises users to use equality "
"tests (``==`` and ``!=``) instead. (Contributed by Serhiy Storchaka in :"
"issue:`34850`.)"
msgstr ""
"El compilador ahora produce una advertencia :exc:`SyntaxWarning` cuando se "
"utilizan comprobaciones de identidad (``is`` e ``is not``) con ciertos tipos "
"de literales (por ejemplo, cadenas, números). A menudo, estas pueden "
"funcionar accidentalmente en CPython, pero no está garantizado por las "
"especificaciones del lenguaje. La advertencia advierte a los usuarios que "
"utilicen pruebas de igualdad (``==`` y ``!=``) en su lugar. (Contribución de "
"Serhiy Storchaka en :issue:`34850`.)"

#: ../Doc/whatsnew/3.8.rst:1815
msgid ""
"The CPython interpreter can swallow exceptions in some circumstances. In "
"Python 3.8 this happens in fewer cases.  In particular, exceptions raised "
"when getting the attribute from the type dictionary are no longer ignored. "
"(Contributed by Serhiy Storchaka in :issue:`35459`.)"
msgstr ""
"El intérprete de CPython puede tolerar excepciones en algunas "
"circunstancias. En Python 3.8 esto sucederá con menos frecuencia. En "
"particular, las excepciones que se generan al obtener atributos del "
"diccionario de tipos ya no son ignoradas. (Contribución de Serhiy Storchaka "
"en :issue:`35459`.)"

#: ../Doc/whatsnew/3.8.rst:1820
msgid ""
"Removed ``__str__`` implementations from builtin types :class:`bool`, :class:"
"`int`, :class:`float`, :class:`complex` and few classes from the standard "
"library.  They now inherit ``__str__()`` from :class:`object`. As result, "
"defining the ``__repr__()`` method in the subclass of these classes will "
"affect their string representation. (Contributed by Serhiy Storchaka in :"
"issue:`36793`.)"
msgstr ""
"Se ha eliminado las implementaciones de ``__str__`` para los tipos "
"incorporados :class:`bool`, :class:`int`, :class:`float`, :class:`complex` y "
"algunas clases de la biblioteca estándar. Ahora heredan el método "
"``__str__()`` de :class:`object`. Como resultado, definir el método "
"``__repr__()`` en una subclase de estas clases afectará a su representación "
"como cadena de caracteres. (Contribución de Serhiy Storchaka en :issue:"
"`36793`.)"

#: ../Doc/whatsnew/3.8.rst:1827
msgid ""
"On AIX, :attr:`sys.platform` doesn't contain the major version anymore. It "
"is always ``'aix'``, instead of ``'aix3'`` .. ``'aix7'``.  Since older "
"Python versions include the version number, so it is recommended to always "
"use ``sys.platform.startswith('aix')``. (Contributed by M. Felt in :issue:"
"`36588`.)"
msgstr ""
"En AIX, el atributo :attr:`sys.platform` ya no contiene la versión "
"principal. Es decir, siempre es ``'aix'``, en lugar de ``'aix3'`` .. "
"``'aix7'``. Dado que las versiones anteriores de Python incluyen el número "
"de versión, se recomienda usar siempre ``sys.platform.startswith('aix')``. "
"(Contribución de M. Felt en :issue:`36588`.)"

#: ../Doc/whatsnew/3.8.rst:1833
msgid ""
":c:func:`PyEval_AcquireLock` and :c:func:`PyEval_AcquireThread` now "
"terminate the current thread if called while the interpreter is finalizing, "
"making them consistent with :c:func:`PyEval_RestoreThread`, :c:func:"
"`Py_END_ALLOW_THREADS`, and :c:func:`PyGILState_Ensure`. If this behavior is "
"not desired, guard the call by checking :c:func:`_Py_IsFinalizing` or :c:"
"func:`sys.is_finalizing`. (Contributed by Joannah Nanjekye in :issue:"
"`36475`.)"
msgstr ""
":c:func:`PyEval_AcquireLock` y :c:func:`PyEval_AcquireThread` ahora terminan "
"el hilo actual si se llaman mientras el intérprete está finalizando, "
"haciéndolos consistentes con :c:func:`PyEval_RestoreThread`, :c:func:"
"`Py_END_ALLOW_THREADS` y :c:func:`PyGILState_Ensure`. Si no se desea este "
"comportamiento, se tiene que proteger la invocación comprobando :c:func:"
"`_Py_IsFinalizing` o :c:func:`sys.is_finalizing`. (Contribución de Joannah "
"Nanjekye en :issue:`36475`.)"

#: ../Doc/whatsnew/3.8.rst:1843
msgid "Changes in the Python API"
msgstr "Cambios en la API de Python"

#: ../Doc/whatsnew/3.8.rst:1845
msgid ""
"The :func:`os.getcwdb` function now uses the UTF-8 encoding on Windows, "
"rather than the ANSI code page: see :pep:`529` for the rationale. The "
"function is no longer deprecated on Windows. (Contributed by Victor Stinner "
"in :issue:`37412`.)"
msgstr ""
"La función :func:`os.getcwdb` ahora usa la codificación UTF-8 en Windows, en "
"lugar de la página de códigos ANSI: consultar :pep:`529` para el fundamento. "
"La función ya no está obsoleta en Windows. (Contribución de Victor Stinner "
"en :issue:`37412`.)"

#: ../Doc/whatsnew/3.8.rst:1850
msgid ""
":class:`subprocess.Popen` can now use :func:`os.posix_spawn` in some cases "
"for better performance. On Windows Subsystem for Linux and QEMU User "
"Emulation, the :class:`Popen` constructor using :func:`os.posix_spawn` no "
"longer raises an exception on errors like \"missing program\".  Instead the "
"child process fails with a non-zero :attr:`~Popen.returncode`. (Contributed "
"by Joannah Nanjekye and Victor Stinner in :issue:`35537`.)"
msgstr ""
":class:`subprocess.Popen` ahora puede usar :func:`os.posix_spawn` en algunos "
"casos para un mejor rendimiento. En el Subsistema de Windows para Linux y en "
"la Emulación de usuario QEMU, el constructor :class:`Popen` que usa :func:"
"`os.posix_spawn` ya no genera una excepción como \"missing program\" ante "
"errores. En cambio, el proceso hijo falla con un valor :attr:`~Popen."
"returncode` distinto de cero. (Contribución de Joannah Nanjekye y Victor "
"Stinner en :issue:`35537`.)"

#: ../Doc/whatsnew/3.8.rst:1857
msgid ""
"The *preexec_fn* argument of * :class:`subprocess.Popen` is no longer "
"compatible with subinterpreters. The use of the parameter in a "
"subinterpreter now raises :exc:`RuntimeError`. (Contributed by Eric Snow in :"
"issue:`34651`, modified by Christian Heimes in :issue:`37951`.)"
msgstr ""
"El argumento *preexec_fn* de :class:`subprocess.Popen` ya no es compatible "
"con subintérpretes. El uso del parámetro en un subintérprete ahora lanza una "
"excepción :exc:`RuntimeError`. (Contribución de Eric Snow en :issue:`34651`, "
"modificado por Christian Heimes en :issue:`37951`.)"

#: ../Doc/whatsnew/3.8.rst:1863
msgid ""
"The :meth:`imap.IMAP4.logout` method no longer silently ignores arbitrary "
"exceptions. (Contributed by Victor Stinner in :issue:`36348`.)"
msgstr ""
"El método :meth:`imap.IMAP4.logout` ya no ignora silenciosamente excepciones "
"arbitrarias. (Contribución de Victor Stinner en :issue:`36348`.)"

#: ../Doc/whatsnew/3.8.rst:1871
msgid ""
"The :func:`statistics.mode` function no longer raises an exception when "
"given multimodal data.  Instead, it returns the first mode encountered in "
"the input data.  (Contributed by Raymond Hettinger in :issue:`35892`.)"
msgstr ""
"La función :func:`statistics.mode` ya no lanza una excepción cuando se "
"proporcionan datos multimodales. Ahora, en cambio, retorna la primera moda "
"encontrada en los datos de entrada. (Contribución de Raymond Hettinger en :"
"issue:`35892`.)"

#: ../Doc/whatsnew/3.8.rst:1876
msgid ""
"The :meth:`~tkinter.ttk.Treeview.selection` method of the :class:`tkinter."
"ttk.Treeview` class no longer takes arguments.  Using it with arguments for "
"changing the selection was deprecated in Python 3.6.  Use specialized "
"methods like :meth:`~tkinter.ttk.Treeview.selection_set` for changing the "
"selection.  (Contributed by Serhiy Storchaka in :issue:`31508`.)"
msgstr ""
"El método :meth:`~tkinter.ttk.Treeview.selection` de la clase :class:"
"`tkinter.ttk.Treeview` ya no acepta argumentos. Usarlo con argumentos para "
"cambiar la selección quedó obsoleto en Python 3.6. Utiliza métodos "
"especializados, como :meth:`~tkinter.ttk.Treeview.selection_set`, para "
"cambiar la selección. (Contribución de Serhiy Storchaka en :issue:`31508`.)"

#: ../Doc/whatsnew/3.8.rst:1882
msgid ""
"The :meth:`writexml`, :meth:`toxml` and :meth:`toprettyxml` methods of :mod:"
"`xml.dom.minidom`, and the :meth:`write` method of :mod:`xml.etree`, now "
"preserve the attribute order specified by the user. (Contributed by Diego "
"Rojas and Raymond Hettinger in :issue:`34160`.)"
msgstr ""
"Los métodos :meth:`writexml`, :meth:`toxml` y :meth:`toprettyxml` de :mod:"
"`xml.dom.minidom` y el método :meth:`write` de :mod:`xml.etree`, ahora "
"conservan el orden de los atributos especificado por el usuario. "
"(Contribución de Diego Rojas y Raymond Hettinger en :issue:`34160`.)"

#: ../Doc/whatsnew/3.8.rst:1887
msgid ""
"A :mod:`dbm.dumb` database opened with flags ``'r'`` is now read-only. :func:"
"`dbm.dumb.open` with flags ``'r'`` and ``'w'`` no longer creates a database "
"if it does not exist. (Contributed by Serhiy Storchaka in :issue:`32749`.)"
msgstr ""
"Una base de datos :mod:`dbm.dumb` abierta con el flag ``'r'`` ahora es de "
"solo lectura. :func:`dbm.dumb.open` con los flags ``'r'`` y ``'w'`` ya no "
"crea una base de datos si no existe. (Contribución de Serhiy Storchaka en :"
"issue:`32749`.)"

#: ../Doc/whatsnew/3.8.rst:1892
msgid ""
"The ``doctype()`` method defined in a subclass of :class:`~xml.etree."
"ElementTree.XMLParser` will no longer be called and will emit a :exc:"
"`RuntimeWarning` instead of a :exc:`DeprecationWarning`. Define the :meth:"
"`doctype() <xml.etree.ElementTree.TreeBuilder.doctype>` method on a target "
"for handling an XML doctype declaration. (Contributed by Serhiy Storchaka "
"in :issue:`29209`.)"
msgstr ""
"El método ``doctype()`` definido en una subclase de :class:`~xml.etree."
"ElementTree.XMLParser` ya no será invocado y emitirá una advertencia :exc:"
"`RuntimeWarning` en lugar de :exc:`DeprecationWarning`. Define el método :"
"meth:`doctype() <xml.etree.ElementTree.TreeBuilder.doctype>` en un objetivo "
"para manejar una declaración doctype de XML. (Contribución de Serhiy "
"Storchaka en :issue:`29209`.)"

#: ../Doc/whatsnew/3.8.rst:1899
msgid ""
"A :exc:`RuntimeError` is now raised when the custom metaclass doesn't "
"provide the ``__classcell__`` entry in the namespace passed to ``type."
"__new__``.  A :exc:`DeprecationWarning` was emitted in Python 3.6--3.7.  "
"(Contributed by Serhiy Storchaka in :issue:`23722`.)"
msgstr ""
"Ahora se lanza una excepción :exc:`RuntimeError` cuando la metaclase "
"personalizada no proporciona la entrada ``__classcell__`` en el espacio de "
"nombres pasado a ``type.__new__``. En Python 3.6--3.7. se emitía una "
"advertencia :exc:`DeprecationWarning` (Contribución de Serhiy Storchaka en :"
"issue:`23722`.)"

#: ../Doc/whatsnew/3.8.rst:1904
msgid ""
"The :class:`cProfile.Profile` class can now be used as a context manager. "
"(Contributed by Scott Sanderson in :issue:`29235`.)"
msgstr ""
"La clase :class:`cProfile.Profile` ahora se puede usar como gestor de "
"contexto. (Contribución de Scott Sanderson en :issue:`29235`.)"

#: ../Doc/whatsnew/3.8.rst:1907
msgid ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` and :func:`shutil.move` use platform-specific \"fast-copy"
"\" syscalls (see :ref:`shutil-platform-dependent-efficient-copy-operations` "
"section)."
msgstr ""
":func:`shutil.copyfile`, :func:`shutil.copy`, :func:`shutil.copy2`, :func:"
"`shutil.copytree` y :func:`shutil.move` usan llamadas al sistema de \"copia-"
"rápida\" específicas de la plataforma. (Consultar la sección :ref:`shutil-"
"platform-dependent-efficient-copy-operations`)."

#: ../Doc/whatsnew/3.8.rst:1912
msgid ""
":func:`shutil.copyfile` default buffer size on Windows was changed from 16 "
"KiB to 1 MiB."
msgstr ""
"El tamaño predeterminado del búfer de :func:`shutil.copyfile` en Windows se "
"ha cambiado de 16 KiB a 1 MiB."

#: ../Doc/whatsnew/3.8.rst:1915
msgid ""
"The ``PyGC_Head`` struct has changed completely.  All code that touched the "
"struct member should be rewritten.  (See :issue:`33597`.)"
msgstr ""
"La estructura ``PyGC_Head`` ha cambiado por completo. Todo código que haga "
"uso de algún miembro de la estructura debe reescribirse. (Consultar :issue:"
"`33597`.)"

#: ../Doc/whatsnew/3.8.rst:1918
msgid ""
"The :c:type:`PyInterpreterState` struct has been moved into the \"internal\" "
"header files (specifically Include/internal/pycore_pystate.h).  An opaque "
"``PyInterpreterState`` is still available as part of the public API (and "
"stable ABI).  The docs indicate that none of the struct's fields are public, "
"so we hope no one has been using them.  However, if you do rely on one or "
"more of those private fields and have no alternative then please open a BPO "
"issue.  We'll work on helping you adjust (possibly including adding accessor "
"functions to the public API).  (See :issue:`35886`.)"
msgstr ""
"La estructura :c:type:`PyInterpreterState` se ha movido a los archivos de "
"cabeceras \"internos\" (específicamente a Include/internal/pycore_pystate."
"h). Un ``PyInterpreterState`` opaco todavía está disponible como parte de la "
"API pública (y ABI estable). La documentación indica que ninguno de los "
"campos de la estructura es público, por lo que esperamos que nadie los haya "
"estado usando. Sin embargo, si utilizas uno o más de esos campos privados y "
"no tienes otra alternativa, abre una issue BPO. Trabajaremos para ayudarte a "
"adaptarlo (posiblemente incluyendo funciones de acceso a la API pública). "
"(Consultar :issue:`35886`.)"

#: ../Doc/whatsnew/3.8.rst:1928
msgid ""
"The :meth:`mmap.flush() <mmap.mmap.flush>` method now returns ``None`` on "
"success and raises an exception on error under all platforms.  Previously, "
"its behavior was platform-dependent: a nonzero value was returned on "
"success; zero was returned on error under Windows.  A zero value was "
"returned on success; an exception was raised on error under Unix. "
"(Contributed by Berker Peksag in :issue:`2122`.)"
msgstr ""
"El método :meth:`mmap.flush() <mmap.mmap.flush>` ahora retorna ``None`` en "
"caso de éxito y lanza una excepción en caso de error, en todas las "
"plataformas. Anteriormente, su comportamiento dependía de la plataforma: en "
"Windows retornaba un valor distinto de cero en caso de éxito y cero ante un "
"error. En Unix se retornaba un valor de cero en caso de éxito y se lanzaba "
"una excepción ante un error. (Contribución de Berker Peksag en :issue:"
"`2122`.)"

#: ../Doc/whatsnew/3.8.rst:1935
msgid ""
":mod:`xml.dom.minidom` and :mod:`xml.sax` modules no longer process external "
"entities by default. (Contributed by Christian Heimes in :issue:`17239`.)"
msgstr ""
"Los módulos :mod:`xml.dom.minidom` y :mod:`xml.sax` ya no procesan entidades "
"externas de forma predeterminada. (Contribución de Christian Heimes en :"
"issue:`17239`.)"

#: ../Doc/whatsnew/3.8.rst:1939
msgid ""
"Deleting a key from a read-only :mod:`dbm` database (:mod:`dbm.dumb`, :mod:"
"`dbm.gnu` or :mod:`dbm.ndbm`) raises :attr:`error` (:exc:`dbm.dumb.error`, :"
"exc:`dbm.gnu.error` or :exc:`dbm.ndbm.error`) instead of :exc:`KeyError`. "
"(Contributed by Xiang Zhang in :issue:`33106`.)"
msgstr ""
"Eliminar una clave de una base de datos :mod:`dbm` de solo lectura (:mod:"
"`dbm.dumb`, :mod:`dbm.gnu` o :mod:`dbm.ndbm`) lanza una excepción :attr:"
"`error` (:exc:`dbm.dumb.error`, :exc:`dbm.gnu.error` o :exc:`dbm.ndbm."
"error`) en lugar de :exc:`KeyError`. (Contribución de Xiang Zhang en :issue:"
"`33106`.)"

#: ../Doc/whatsnew/3.8.rst:1944
msgid ""
"Simplified AST for literals.  All constants will be represented as :class:"
"`ast.Constant` instances.  Instantiating old classes ``Num``, ``Str``, "
"``Bytes``, ``NameConstant`` and ``Ellipsis`` will return an instance of "
"``Constant``. (Contributed by Serhiy Storchaka in :issue:`32892`.)"
msgstr ""
"AST simplificado para literales. Todas las constantes se representarán como "
"instancias de :class:`ast.Constant`. La instanciación de las antiguas clases "
"``Num``, ``Str``, ``Bytes``, ``NameConstant`` y ``Ellipsis`` retornará ahora "
"una instancia de ``Constant``. (Contribución de Serhiy Storchaka en :issue:"
"`32892`.)"

#: ../Doc/whatsnew/3.8.rst:1959
msgid ""
"The function :func:`asyncio.wait_for` now correctly waits for cancellation "
"when using an instance of :class:`asyncio.Task`. Previously, upon reaching "
"*timeout*, it was cancelled and immediately returned. (Contributed by Elvis "
"Pranskevichus in :issue:`32751`.)"
msgstr ""
"La función :func:`asyncio.wait_for` ahora espera correctamente la "
"cancelación cuando se usa una instancia de :class:`asyncio.Task`. "
"Anteriormente, al alcanzar *timeout*, se cancelaba y retornaba de inmediato. "
"(Contribución de Elvis Pranskevichus en :issue:`32751`.)"

#: ../Doc/whatsnew/3.8.rst:1964
msgid ""
"The function :func:`asyncio.BaseTransport.get_extra_info` now returns a safe "
"to use socket object when 'socket' is passed to the *name* parameter. "
"(Contributed by Yury Selivanov in :issue:`37027`.)"
msgstr ""
"La función :func:`asyncio.BaseTransport.get_extra_info` ahora retorna un "
"objeto socket seguro cuando se pasa 'socket' al parámetro *name*. "
"(Contribución de Yury Selivanov en :issue:`37027`.)"

#: ../Doc/whatsnew/3.8.rst:1968
msgid ":class:`asyncio.BufferedProtocol` has graduated to the stable API."
msgstr ""
":class:`asyncio.BufferedProtocol` ha pasado a formar parte de la API estable."

#: ../Doc/whatsnew/3.8.rst:1972
msgid ""
"DLL dependencies for extension modules and DLLs loaded with :mod:`ctypes` on "
"Windows are now resolved more securely. Only the system paths, the directory "
"containing the DLL or PYD file, and directories added with :func:`~os."
"add_dll_directory` are searched for load-time dependencies. Specifically, :"
"envvar:`PATH` and the current working directory are no longer used, and "
"modifications to these will no longer have any effect on normal DLL "
"resolution. If your application relies on these mechanisms, you should check "
"for :func:`~os.add_dll_directory` and if it exists, use it to add your DLLs "
"directory while loading your library. Note that Windows 7 users will need to "
"ensure that Windows Update KB2533623 has been installed (this is also "
"verified by the installer). (Contributed by Steve Dower in :issue:`36085`.)"
msgstr ""
"Las dependencias de DLLs para módulos de extensión y DLLs cargadas con :mod:"
"`ctypes` en Windows ahora se resuelven de forma más segura. Solo las rutas "
"del sistema, el directorio que contiene el archivo DLL o PYD y los "
"directorios agregados mediante :func:`~os.add_dll_directory` se buscan para "
"las dependencias en tiempo de carga. Específicamente, :envvar:`PATH` y el "
"directorio de trabajo actual ya no se utilizan, y las modificaciones de "
"estos ya no tendrán ningún efecto en la resolución normal de la DLL. Si tu "
"aplicación se basa en estos mecanismos, debes buscar :func:`~os."
"add_dll_directory` y, si existe, utilizarlo para agregar tu directorio DLL "
"mientras carga tu biblioteca. Ten en cuenta que los usuarios de Windows 7 "
"deberán asegurarse de que se haya instalado Windows Update KB2533623 (esto "
"también lo verifica el instalador). (Contribución de Steve Dower en :issue:"
"`36085`.)"

#: ../Doc/whatsnew/3.8.rst:1985
msgid ""
"The header files and functions related to pgen have been removed after its "
"replacement by a pure Python implementation. (Contributed by Pablo Galindo "
"in :issue:`36623`.)"
msgstr ""
"Los archivos de cabeceras y las funciones relacionadas con pgen se han "
"eliminado después de su reemplazo por una implementación pura de Python. "
"(Contribución de Pablo Galindo en :issue:`36623`.)"

#: ../Doc/whatsnew/3.8.rst:1989
msgid ""
":class:`types.CodeType` has a new parameter in the second position of the "
"constructor (*posonlyargcount*) to support positional-only arguments defined "
"in :pep:`570`. The first argument (*argcount*) now represents the total "
"number of positional arguments (including positional-only arguments). The "
"new ``replace()`` method of :class:`types.CodeType` can be used to make the "
"code future-proof."
msgstr ""
":class:`types.CodeType` tiene un nuevo parámetro en la segunda posición del "
"constructor (*posonlyargcount*) para admitir argumentos solo posicionales, "
"definidos en :pep:`570`. El primer argumento (*argcount*) ahora representa "
"el número total de argumentos posicionales (incluidos los argumentos solo "
"posicionales). El nuevo método ``replace()`` de :class:`types.CodeType` se "
"puede utilizar para hacer que el código esté preparado para el futuro."

#: ../Doc/whatsnew/3.8.rst:1998
msgid "Changes in the C API"
msgstr "Cambios en la API de C"

#: ../Doc/whatsnew/3.8.rst:2000
msgid ""
"The :c:type:`PyCompilerFlags` structure got a new *cf_feature_version* "
"field. It should be initialized to ``PY_MINOR_VERSION``. The field is "
"ignored by default, and is used if and only if ``PyCF_ONLY_AST`` flag is set "
"in *cf_flags*. (Contributed by Guido van Rossum in :issue:`35766`.)"
msgstr ""
"La estructura :c:type:`PyCompilerFlags` tiene un nuevo campo "
"*cf_feature_version*. Debe inicializarse en ``PY_MINOR_VERSION``. El campo "
"se ignora de forma predeterminada y se usa, si y solo si, el flag "
"``PyCF_ONLY_AST`` está establecido en *cf_flags*. (Contribución de Guido van "
"Rossum en :issue:`35766`.)"

#: ../Doc/whatsnew/3.8.rst:2006
msgid ""
"The :c:func:`PyEval_ReInitThreads` function has been removed from the C API. "
"It should not be called explicitly: use :c:func:`PyOS_AfterFork_Child` "
"instead. (Contributed by Victor Stinner in :issue:`36728`.)"
msgstr ""
"La función :c:func:`PyEval_ReInitThreads` se ha eliminado de la API de C. No "
"debe llamarse explícitamente: usa :c:func:`PyOS_AfterFork_Child` en su "
"lugar. (Contribución de Victor Stinner en :issue:`36728`.)"

#: ../Doc/whatsnew/3.8.rst:2011
msgid ""
"On Unix, C extensions are no longer linked to libpython except on Android "
"and Cygwin. When Python is embedded, ``libpython`` must not be loaded with "
"``RTLD_LOCAL``, but ``RTLD_GLOBAL`` instead. Previously, using "
"``RTLD_LOCAL``, it was already not possible to load C extensions which were "
"not linked to ``libpython``, like C extensions of the standard library built "
"by the ``*shared*`` section of ``Modules/Setup``. (Contributed by Victor "
"Stinner in :issue:`21536`.)"
msgstr ""
"En Unix, las extensiones de C ya no están vinculadas a libpython, excepto en "
"Android y Cygwin. Cuando Python está integrado, ``libpython`` no debe "
"cargarse con ``RTLD_LOCAL``, sino con ``RTLD_GLOBAL`` en su lugar. "
"Anteriormente, no era posible usar ``RTLD_LOCAL`` para cargar extensiones de "
"C que no estuvieran vinculadas a ``libpython``, como las extensiones de C de "
"la biblioteca estándar construida por la sección ``*shared*`` de ``Modules/"
"Setup``. (Contribución de Victor Stinner en :issue:`21536`.)"

#: ../Doc/whatsnew/3.8.rst:2019
msgid ""
"Use of ``#`` variants of formats in parsing or building value (e.g. :c:func:"
"`PyArg_ParseTuple`, :c:func:`Py_BuildValue`, :c:func:"
"`PyObject_CallFunction`, etc.) without ``PY_SSIZE_T_CLEAN`` defined raises "
"``DeprecationWarning`` now. It will be removed in 3.10 or 4.0.  Read :ref:"
"`arg-parsing` for detail. (Contributed by Inada Naoki in :issue:`36381`.)"
msgstr ""
"El uso de variantes de formato ``#`` en el análisis o la construcción de "
"valores (por ejemplo: :c:func:`PyArg_ParseTuple`, :c:func:`Py_BuildValue`, :"
"c:func:`PyObject_CallFunction`, etc.) sin ``PY_SSIZE_T_CLEAN`` definido "
"ahora lanza una advertencia ``DeprecationWarning``. Se eliminará en Python "
"3.10 ó 4.0. Consultar :ref:`arg-parsing` para más detalles. (Contribución de "
"Inada Naoki en :issue:`36381`.)"

#: ../Doc/whatsnew/3.8.rst:2025
msgid ""
"Instances of heap-allocated types (such as those created with :c:func:"
"`PyType_FromSpec`) hold a reference to their type object. Increasing the "
"reference count of these type objects has been moved from :c:func:"
"`PyType_GenericAlloc` to the more low-level functions, :c:func:"
"`PyObject_Init` and :c:func:`PyObject_INIT`. This makes types created "
"through :c:func:`PyType_FromSpec` behave like other classes in managed code."
msgstr ""
"Las instancias de tipos asignados al montón (como los creados con :c:func:"
"`PyType_FromSpec`) contienen una referencia a su objeto de tipo. El aumento "
"del recuento de referencias de estos objetos de tipo se ha movido de :c:func:"
"`PyType_GenericAlloc` a las funciones de más bajo nivel, :c:func:"
"`PyObject_Init` y :c:func:`PyObject_INIT`. Esto hace que los tipos creados "
"mediante :c:func:`PyType_FromSpec` se comporten como otras clases en el "
"código gestionado."

#: ../Doc/whatsnew/3.8.rst:2033
msgid "Statically allocated types are not affected."
msgstr "Los tipos asignados estáticamente no se ven afectados."

#: ../Doc/whatsnew/3.8.rst:2035
msgid ""
"For the vast majority of cases, there should be no side effect. However, "
"types that manually increase the reference count after allocating an "
"instance (perhaps to work around the bug) may now become immortal. To avoid "
"this, these classes need to call Py_DECREF on the type object during "
"instance deallocation."
msgstr ""
"Para la gran mayoría de casos, no debería haber efectos secundarios. Sin "
"embargo, los tipos que aumentan manualmente el recuento de referencias "
"después de asignar una instancia (quizás para evitar el error) ahora pueden "
"volverse inmortales. Para evitar esto, estas clases deben llamar a Py_DECREF "
"en el objeto de tipo durante la desasignación de la instancia."

#: ../Doc/whatsnew/3.8.rst:2041
msgid ""
"To correctly port these types into 3.8, please apply the following changes:"
msgstr ""
"Para portar correctamente estos tipos a Python 3.8, aplica los siguientes "
"cambios:"

#: ../Doc/whatsnew/3.8.rst:2044
msgid ""
"Remove :c:macro:`Py_INCREF` on the type object after allocating an instance "
"- if any. This may happen after calling :c:func:`PyObject_New`, :c:func:"
"`PyObject_NewVar`, :c:func:`PyObject_GC_New`, :c:func:`PyObject_GC_NewVar`, "
"or any other custom allocator that uses :c:func:`PyObject_Init` or :c:func:"
"`PyObject_INIT`."
msgstr ""
"Elimina :c:macro:`Py_INCREF` en el objeto de tipo después de asignar una "
"instancia, si la hubiera. Esto puede suceder después de invocar a :c:func:"
"`PyObject_New`, :c:func:`PyObject_NewVar`, :c:func:`PyObject_GC_New`, :c:"
"func:`PyObject_GC_NewVar`, o cualquier otro asignador personalizado que use :"
"c:func:`PyObject_Init` o :c:func:`PyObject_INIT`."

#: ../Doc/whatsnew/3.8.rst:2051 ../Doc/whatsnew/3.8.rst:2070
#: ../Doc/whatsnew/3.8.rst:2089
msgid "Example:"
msgstr "Ejemplo:"

#: ../Doc/whatsnew/3.8.rst:2067
msgid ""
"Ensure that all custom ``tp_dealloc`` functions of heap-allocated types "
"decrease the type's reference count."
msgstr ""
"Asegúrate de que todas las funciones personalizadas ``tp_dealloc`` de los "
"tipos asignados al montón disminuyan el recuento de referencias del tipo."

#: ../Doc/whatsnew/3.8.rst:2084
msgid "(Contributed by Eddie Elizondo in :issue:`35810`.)"
msgstr "(Contribución de Eddie Elizondo en :issue:`35810`.)"

#: ../Doc/whatsnew/3.8.rst:2086
msgid ""
"The :c:macro:`Py_DEPRECATED()` macro has been implemented for MSVC. The "
"macro now must be placed before the symbol name."
msgstr ""
"La macro :c:macro:`Py_DEPRECATED()` ha sido implementada para MSVC. La macro "
"ahora debe ser colocada antes del nombre del símbolo."

#: ../Doc/whatsnew/3.8.rst:2095
msgid "(Contributed by Zackery Spytz in :issue:`33407`.)"
msgstr "(Contribución de Zackery Spytz en :issue:`33407`.)"

#: ../Doc/whatsnew/3.8.rst:2097
msgid ""
"The interpreter does not pretend to support binary compatibility of "
"extension types across feature releases, anymore.  A :c:type:`PyTypeObject` "
"exported by a third-party extension module is supposed to have all the slots "
"expected in the current Python version, including :c:member:`~PyTypeObject."
"tp_finalize` (:const:`Py_TPFLAGS_HAVE_FINALIZE` is not checked anymore "
"before reading :c:member:`~PyTypeObject.tp_finalize`)."
msgstr ""
"El intérprete ya no pretende dar suporte nunca más a la compatibilidad "
"binaria de tipos de extensión entre versiones de características. Un :c:type:"
"`PyTypeObject` exportado por un módulo de extensión de terceros se supone "
"que tiene todas las ranuras esperadas por la versión actual de Python, "
"incluyendo :c:member:`~PyTypeObject.tp_finalize` (:const:"
"`Py_TPFLAGS_HAVE_FINALIZE` ya no se verifica antes de leer :c:member:"
"`~PyTypeObject.tp_finalize`)."

#: ../Doc/whatsnew/3.8.rst:2104
msgid "(Contributed by Antoine Pitrou in :issue:`32388`.)"
msgstr "(Contribución de Antoine Pitrou en :issue:`32388`.)"

#: ../Doc/whatsnew/3.8.rst:2106
msgid ""
"The :c:func:`PyCode_New` has a new parameter in the second position "
"(*posonlyargcount*) to support :pep:`570`, indicating the number of "
"positional-only arguments."
msgstr ""
":c:func:`PyCode_New` tiene un nuevo parámetro en la segunda posición "
"(*posonlyargcount*) para dar soporte a :pep:`570`, que indica el número de "
"argumentos solo posicionales."

#: ../Doc/whatsnew/3.8.rst:2109
msgid ""
"The functions :c:func:`PyNode_AddChild` and :c:func:`PyParser_AddToken` now "
"accept two additional ``int`` arguments *end_lineno* and *end_col_offset*."
msgstr ""
"Las funciones :c:func:`PyNode_AddChild` y :c:func:`PyParser_AddToken` ahora "
"aceptan dos argumentos ``int`` adicionales, *end_lineno* y *end_col_offset*."

#: ../Doc/whatsnew/3.8.rst:2112
msgid ""
"The :file:`libpython38.a` file to allow MinGW tools to link directly "
"against :file:`python38.dll` is no longer included in the regular Windows "
"distribution. If you require this file, it may be generated with the "
"``gendef`` and ``dlltool`` tools, which are part of the MinGW binutils "
"package:"
msgstr ""
"El archivo :file:`libpython38.a` ya no se incluye en la distribución normal "
"de Windows. Si se necesita este archivo, se puede generar con las "
"herramientas ``gendef`` y ``dlltool``, que son parte del paquete binutils de "
"MinGW:"

#: ../Doc/whatsnew/3.8.rst:2122
msgid ""
"The location of an installed :file:`pythonXY.dll` will depend on the "
"installation options and the version and language of Windows. See :ref:"
"`using-on-windows` for more information. The resulting library should be "
"placed in the same directory as :file:`pythonXY.lib`, which is generally "
"the :file:`libs` directory under your Python installation."
msgstr ""
"La ubicación de un archivo :file:`pythonXY.dll` instalado dependerá de las "
"opciones de instalación y de la versión y el idioma de Windows. Consultar :"
"ref:`using-on-windows` para obtener más información. La biblioteca "
"resultante debe colocarse en el mismo directorio que :file:`pythonXY.lib`, "
"que generalmente es el directorio :file:`libs` en tu instalación de Python."

#: ../Doc/whatsnew/3.8.rst:2128
msgid "(Contributed by Steve Dower in :issue:`37351`.)"
msgstr "(Contribución de Steve Dower en :issue:`37351`.)"

#: ../Doc/whatsnew/3.8.rst:2132
msgid "CPython bytecode changes"
msgstr "Cambios en el bytecode de CPython"

#: ../Doc/whatsnew/3.8.rst:2134
msgid ""
"The interpreter loop  has been simplified by moving the logic of unrolling "
"the stack of blocks into the compiler.  The compiler emits now explicit "
"instructions for adjusting the stack of values and calling the cleaning-up "
"code for :keyword:`break`, :keyword:`continue` and :keyword:`return`."
msgstr ""
"El bucle del intérprete se ha simplificado moviendo al compilador la lógica "
"para el desenredo de la pila de bloques. El compilador ahora emite "
"instrucciones explícitas para ajustar la pila de valores y llamar al código "
"de limpieza para :keyword:`break`, :keyword:`continue` y :keyword:`return`."

#: ../Doc/whatsnew/3.8.rst:2140
msgid ""
"Removed opcodes :opcode:`BREAK_LOOP`, :opcode:`CONTINUE_LOOP`, :opcode:"
"`SETUP_LOOP` and :opcode:`SETUP_EXCEPT`.  Added new opcodes :opcode:"
"`ROT_FOUR`, :opcode:`BEGIN_FINALLY`, :opcode:`CALL_FINALLY` and :opcode:"
"`POP_FINALLY`.  Changed the behavior of :opcode:`END_FINALLY` and :opcode:"
"`WITH_CLEANUP_START`."
msgstr ""
"Eliminados los códigos de operación :opcode:`BREAK_LOOP`, :opcode:"
"`CONTINUE_LOOP`, :opcode:`SETUP_LOOP` y :opcode:`SETUP_EXCEPT`. Agregados "
"los nuevos códigos de operación :opcode:`ROT_FOUR`, :opcode:"
"`BEGIN_FINALLY`, :opcode:`CALL_FINALLY` y :opcode:`POP_FINALLY`. Modificados "
"los códigos de operación :opcode:`END_FINALLY` y :opcode:"
"`WITH_CLEANUP_START`."

#: ../Doc/whatsnew/3.8.rst:2146
msgid ""
"(Contributed by Mark Shannon, Antoine Pitrou and Serhiy Storchaka in :issue:"
"`17611`.)"
msgstr ""
"(Contribución de Mark Shannon, Antoine Pitrou y Serhiy Storchaka en :issue:"
"`17611`.)"

#: ../Doc/whatsnew/3.8.rst:2149
msgid ""
"Added new opcode :opcode:`END_ASYNC_FOR` for handling exceptions raised when "
"awaiting a next item in an :keyword:`async for` loop. (Contributed by Serhiy "
"Storchaka in :issue:`33041`.)"
msgstr ""
"Agregado el código de operación :opcode:`END_ASYNC_FOR` para manejar "
"excepciones lanzadas mientras se espera al siguiente elemento en un ciclo :"
"keyword:`async for`. (Contribución de Serhiy Storchaka en :issue:`33041`.)"

#: ../Doc/whatsnew/3.8.rst:2153
msgid ""
"The :opcode:`MAP_ADD` now expects the value as the first element in the "
"stack and the key as the second element. This change was made so the key is "
"always evaluated before the value in dictionary comprehensions, as proposed "
"by :pep:`572`. (Contributed by Jörn Heissler in :issue:`35224`.)"
msgstr ""
"El código de operación :opcode:`MAP_ADD` ahora espera el valor como primer "
"elemento de la pila y la clave como segundo elemento. Este cambio se realizó "
"para que la clave siempre se evalúe antes que el valor en los diccionarios "
"por compresión, como se propone en :pep:`572`. (Contribución de Jörn "
"Heissler en :issue:`35224`.)"

#: ../Doc/whatsnew/3.8.rst:2160
msgid "Demos and Tools"
msgstr "Demos y herramientas"

#: ../Doc/whatsnew/3.8.rst:2162
msgid ""
"Added a benchmark script for timing various ways to access variables: "
"``Tools/scripts/var_access_benchmark.py``. (Contributed by Raymond Hettinger "
"in :issue:`35884`.)"
msgstr ""
"Se ha añadido un script de evaluación de rendimiento para cronometrar varias "
"formas de acceder a variables: ``Tools/scripts/var_access_benchmark.py``. "
"(Contribución de Raymond Hettinger en :issue:`35884`.)"

#: ../Doc/whatsnew/3.8.rst:2166
msgid "Here's a summary of performance improvements since Python 3.3:"
msgstr ""
"A continuación, se muestra un resumen de las mejoras de rendimiento desde "
"Python 3.3:"

#: ../Doc/whatsnew/3.8.rst:2213
msgid ""
"The benchmarks were measured on an `Intel® Core™ i7-4960HQ processor "
"<https://ark.intel.com/content/www/us/en/ark/products/76088/intel-core-"
"i7-4960hq-processor-6m-cache-up-to-3-80-ghz.html>`_ running the macOS 64-bit "
"builds found at `python.org <https://www.python.org/downloads/mac-osx/>`_. "
"The benchmark script displays timings in nanoseconds."
msgstr ""
"Las evaluaciones de rendimiento se realizaron en un `procesador Intel® Core™ "
"i7-4960HQ <https://ark.intel.com/content/www/us/en/ark/products/76088/intel-"
"core-i7-4960hq-processor-6m-cache-up-to-3-80-ghz.html>`_ ejecutando las "
"compilaciones de 64-bits para macOS disponibles en `python.org <https://www."
"python.org/downloads/mac-osx/>`_. El script de evaluación de rendimiento "
"muestra los tiempos en nanosegundos."

#: ../Doc/whatsnew/3.8.rst:2222
msgid "Notable changes in Python 3.8.1"
msgstr "Cambios notables en Python 3.8.1"

#: ../Doc/whatsnew/3.8.rst:2224
msgid ""
"Due to significant security concerns, the *reuse_address* parameter of :meth:"
"`asyncio.loop.create_datagram_endpoint` is no longer supported. This is "
"because of the behavior of the socket option ``SO_REUSEADDR`` in UDP. For "
"more details, see the documentation for ``loop.create_datagram_endpoint()``. "
"(Contributed by Kyle Stanley, Antoine Pitrou, and Yury Selivanov in :issue:"
"`37228`.)"
msgstr ""
"Debido a importantes preocupaciones de seguridad, el parámetro "
"*reuse_address* de :meth:`asyncio.loop.create_datagram_endpoint` ya no está "
"soportado. Esto se debe al comportamiento de la opción ``SO_REUSEADDR`` del "
"socket en UDP. Para obtener más detalles, consulta la documentación de "
"``loop.create_datagram_endpoint()``. (Contribución de Kyle Stanley, Antoine "
"Pitrou y Yury Selivanov en :issue:`37228`.)"

#: ../Doc/whatsnew/3.8.rst:2232
msgid "Notable changes in Python 3.8.2"
msgstr "Cambios notables en Python 3.8.2"

#: ../Doc/whatsnew/3.8.rst:2234
msgid ""
"Fixed a regression with the ``ignore`` callback of :func:`shutil.copytree`. "
"The argument types are now str and List[str] again. (Contributed by Manuel "
"Barkhau and Giampaolo Rodola in :issue:`39390`.)"
msgstr ""
"Se ha corregido una regresión con la retrollamada ``ignore`` de :func:"
"`shutil.copytree`. Los tipos de los argumentos ahora son str y List[str] "
"nuevamente. (Contribución de Manuel Barkhau y Giampaolo Rodola en :issue:"
"`39390`.)"

#: ../Doc/whatsnew/3.8.rst:2239
msgid "Notable changes in Python 3.8.3"
msgstr "Cambios notables en Python 3.8.3"

#: ../Doc/whatsnew/3.8.rst:2241
msgid ""
"The constant values of future flags in the :mod:`__future__` module are "
"updated in order to prevent collision with compiler flags. Previously "
"``PyCF_ALLOW_TOP_LEVEL_AWAIT`` was clashing with ``CO_FUTURE_DIVISION``. "
"(Contributed by Batuhan Taskaya in :issue:`39562`)"
msgstr ""
"Se han actualizado los valores constantes de los flags futuros del módulo :"
"mod:`__future__` para evitar colisiones con los flags del compilador. "
"Anteriormente, ``PyCF_ALLOW_TOP_LEVEL_AWAIT`` estaba en conflicto con "
"``CO_FUTURE_DIVISION``. (Contribución de Batuhan Taskaya en :issue:`39562`.)"

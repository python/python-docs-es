# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-05 12:54+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: python-doc-es\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../Doc/using/unix.rst:7
msgid "Using Python on Unix platforms"
msgstr ""

#: ../Doc/using/unix.rst:13
msgid "Getting and installing the latest version of Python"
msgstr ""

#: ../Doc/using/unix.rst:16
msgid "On Linux"
msgstr ""

#: ../Doc/using/unix.rst:18
msgid ""
"Python comes preinstalled on most Linux distributions, and is available as a "
"package on all others.  However there are certain features you might want to "
"use that are not available on your distro's package.  You can easily compile "
"the latest version of Python from source."
msgstr ""

#: ../Doc/using/unix.rst:23
msgid ""
"In the event that Python doesn't come preinstalled and isn't in the "
"repositories as well, you can easily make packages for your own distro.  "
"Have a look at the following links:"
msgstr ""

#: ../Doc/using/unix.rst:29
msgid "https://www.debian.org/doc/manuals/maint-guide/first.en.html"
msgstr ""

#: ../Doc/using/unix.rst:30
msgid "for Debian users"
msgstr ""

#: ../Doc/using/unix.rst:31
msgid "https://en.opensuse.org/Portal:Packaging"
msgstr ""

#: ../Doc/using/unix.rst:32
msgid "for OpenSuse users"
msgstr ""

#: ../Doc/using/unix.rst:33
msgid ""
"https://docs-old.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/"
"RPM_Guide/ch-creating-rpms.html"
msgstr ""

#: ../Doc/using/unix.rst:34
msgid "for Fedora users"
msgstr ""

#: ../Doc/using/unix.rst:35
msgid "http://www.slackbook.org/html/package-management-making-packages.html"
msgstr ""

#: ../Doc/using/unix.rst:36
msgid "for Slackware users"
msgstr ""

#: ../Doc/using/unix.rst:40
msgid "On FreeBSD and OpenBSD"
msgstr ""

#: ../Doc/using/unix.rst:42
msgid "FreeBSD users, to add the package use::"
msgstr ""

#: ../Doc/using/unix.rst:46
msgid "OpenBSD users, to add the package use::"
msgstr ""

#: ../Doc/using/unix.rst:52
msgid "For example i386 users get the 2.5.1 version of Python using::"
msgstr ""

#: ../Doc/using/unix.rst:58
msgid "On OpenSolaris"
msgstr ""

#: ../Doc/using/unix.rst:60
msgid ""
"You can get Python from `OpenCSW <https://www.opencsw.org/>`_.  Various "
"versions of Python are available and can be installed with e.g. ``pkgutil -i "
"python27``."
msgstr ""

#: ../Doc/using/unix.rst:67
msgid "Building Python"
msgstr ""

#: ../Doc/using/unix.rst:69
msgid ""
"If you want to compile CPython yourself, first thing you should do is get "
"the `source <https://www.python.org/downloads/source/>`_. You can download "
"either the latest release's source or just grab a fresh `clone <https://"
"devguide.python.org/setup/#getting-the-source-code>`_.  (If you want to "
"contribute patches, you will need a clone.)"
msgstr ""

#: ../Doc/using/unix.rst:75
msgid "The build process consists of the usual commands::"
msgstr ""

#: ../Doc/using/unix.rst:81
msgid ""
"Configuration options and caveats for specific Unix platforms are "
"extensively documented in the :source:`README.rst` file in the root of the "
"Python source tree."
msgstr ""

#: ../Doc/using/unix.rst:87
msgid ""
"``make install`` can overwrite or masquerade the :file:`python3` binary. "
"``make altinstall`` is therefore recommended instead of ``make install`` "
"since it only installs :file:`{exec_prefix}/bin/python{version}`."
msgstr ""

#: ../Doc/using/unix.rst:93
msgid "Python-related paths and files"
msgstr ""

#: ../Doc/using/unix.rst:95
msgid ""
"These are subject to difference depending on local installation "
"conventions; :envvar:`prefix` (``${prefix}``) and :envvar:`exec_prefix` (``"
"${exec_prefix}``) are installation-dependent and should be interpreted as "
"for GNU software; they may be the same."
msgstr ""

#: ../Doc/using/unix.rst:100
msgid ""
"For example, on most Linux systems, the default for both is :file:`/usr`."
msgstr ""

#: ../Doc/using/unix.rst:103
msgid "File/directory"
msgstr ""

#: ../Doc/using/unix.rst:103
msgid "Meaning"
msgstr ""

#: ../Doc/using/unix.rst:105
msgid ":file:`{exec_prefix}/bin/python3`"
msgstr ""

#: ../Doc/using/unix.rst:105
msgid "Recommended location of the interpreter."
msgstr ""

#: ../Doc/using/unix.rst:107
msgid ""
":file:`{prefix}/lib/python{version}`, :file:`{exec_prefix}/lib/"
"python{version}`"
msgstr ""

#: ../Doc/using/unix.rst:107
msgid ""
"Recommended locations of the directories containing the standard modules."
msgstr ""

#: ../Doc/using/unix.rst:110
msgid ""
":file:`{prefix}/include/python{version}`, :file:`{exec_prefix}/include/"
"python{version}`"
msgstr ""

#: ../Doc/using/unix.rst:110
msgid ""
"Recommended locations of the directories containing the include files needed "
"for developing Python extensions and embedding the interpreter."
msgstr ""

#: ../Doc/using/unix.rst:118
msgid "Miscellaneous"
msgstr ""

#: ../Doc/using/unix.rst:120
msgid ""
"To easily use Python scripts on Unix, you need to make them executable, e.g. "
"with"
msgstr ""

#: ../Doc/using/unix.rst:127
msgid ""
"and put an appropriate Shebang line at the top of the script.  A good choice "
"is usually ::"
msgstr ""

#: ../Doc/using/unix.rst:132
msgid ""
"which searches for the Python interpreter in the whole :envvar:`PATH`.  "
"However, some Unices may not have the :program:`env` command, so you may "
"need to hardcode ``/usr/bin/python3`` as the interpreter path."
msgstr ""

#: ../Doc/using/unix.rst:136
msgid ""
"To use shell commands in your Python scripts, look at the :mod:`subprocess` "
"module."
msgstr ""
